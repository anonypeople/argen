<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\daniel.rodriguez\IdeaProjects\biorimp\resources\systems\JF_DATASET-22\src\XYDatasetTableModel.java"><comment type="block">/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * ------------------------
 * XYDatasetTableModel.java
 * ------------------------
 * (C)opyright 2003-2007, by Bryan Scott and Contributors.
 *
 * Original Author:  Bryan Scott ;
 * Contributor(s):   David Gilbert (for Object Refinery Limited);
 *
 * Changes
 * -------
 * 01-Jul-2003 : Version 1 contributed by Bryan Scott (DG);
 * 27-Apr-2005 : Change XYDataset --&gt; TableXYDataset because the table model
 *               assumes all series share the same x-values, and this is not
 *               enforced by XYDataset.  Also fixed bug 1191046, a problem
 *               in the getValueAt() method (DG);
 * 
 */</comment>

<package>package <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>xy</name></name>;</package>

<import>import <name><name>javax</name>.<name>swing</name>.<name>table</name>.<name>AbstractTableModel</name></name>;</import>
<import>import <name><name>javax</name>.<name>swing</name>.<name>table</name>.<name>TableModel</name></name>;</import>

<import>import <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>general</name>.<name>DatasetChangeEvent</name></name>;</import>
<import>import <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>general</name>.<name>DatasetChangeListener</name></name>;</import>

<comment type="javadoc">/**
 * A READ-ONLY wrapper around a {@link TableXYDataset} to convert it to a
 * table model for use in a JTable.  The first column of the table shows the
 * x-values, the remaining columns show the y-values for each series (series 0
 * appears in column 1, series 1 appears in column 2, etc).
 * &lt;P&gt;
 * TO DO:
 * &lt;ul&gt;
 * &lt;li&gt;implement proper naming for x axis (getColumnName)&lt;/li&gt;
 * &lt;li&gt;implement setValueAt to remove READ-ONLY constraint (not sure how)&lt;/li&gt;
 * &lt;/ul&gt;
 */</comment>
<class><specifier>public</specifier> class <name>XYDatasetTableModel</name> <super><extends>extends <name>AbstractTableModel</name></extends>
                                 <implements>implements <name>TableModel</name>, <name>DatasetChangeListener</name></implements></super>  <block>{

    <comment type="javadoc">/** The dataset. */</comment>
    <decl_stmt><decl><type><name>TableXYDataset</name></type> <name>model</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Default constructor.
     */</comment>
    <constructor><specifier>public</specifier> <name>XYDatasetTableModel</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Creates a new table model based on the specified dataset.
     *
     * @param dataset  the dataset.
     */</comment>
    <constructor><specifier>public</specifier> <name>XYDatasetTableModel</name><parameter_list>(<param><decl><type><name>TableXYDataset</name></type> <name>dataset</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>this</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>model</name></name> = <name>dataset</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>this</name>.<name>model</name>.<name>addChangeListener</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Sets the model (dataset).
     *
     * @param dataset  the dataset.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setModel</name><parameter_list>(<param><decl><type><name>TableXYDataset</name></type> <name>dataset</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>model</name></name> = <name>dataset</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>this</name>.<name>model</name>.<name>addChangeListener</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>fireTableDataChanged</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Returns the number of rows.
     *
     * @return The row count.
     */</comment>
    <function><type><specifier>public</specifier> <name>int</name></type> <name>getRowCount</name><parameter_list>()</parameter_list> <block>{
        <if>if <condition>(<expr><name><name>this</name>.<name>model</name></name> == <name>null</name></expr>)</condition><then> <block>{
            <return>return <expr>0</expr>;</return>
        }</block></then></if>
        <return>return <expr><call><name><name>this</name>.<name>model</name>.<name>getItemCount</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Gets the number of columns in the model.
     *
     * @return The number of columns in the model.
     */</comment>
    <function><type><specifier>public</specifier> <name>int</name></type> <name>getColumnCount</name><parameter_list>()</parameter_list> <block>{
        <if>if <condition>(<expr><name><name>this</name>.<name>model</name></name> == <name>null</name></expr>)</condition><then> <block>{
            <return>return <expr>0</expr>;</return>
        }</block></then></if>
        <return>return <expr><call><name><name>this</name>.<name>model</name>.<name>getSeriesCount</name></name><argument_list>()</argument_list></call> + 1</expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Returns the column name.
     *
     * @param column  the column index.
     *
     * @return The column name.
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name></type> <name>getColumnName</name><parameter_list>(<param><decl><type><name>int</name></type> <name>column</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name><name>this</name>.<name>model</name></name> == <name>null</name></expr>)</condition><then> <block>{
            <return>return <expr><call><name><name>super</name>.<name>getColumnName</name></name><argument_list>(<argument><expr><name>column</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></then></if>
        <if>if <condition>(<expr><name>column</name> &lt; 1</expr>)</condition><then> <block>{
            <return>return <expr>"X Value"</expr>;</return>
        }</block></then>
        <else>else <block>{
            <return>return <expr><call><name><name>this</name>.<name>model</name>.<name>getSeriesKey</name></name><argument_list>(<argument><expr><name>column</name> - 1</expr></argument>)</argument_list></call>.<call><name>toString</name><argument_list>()</argument_list></call></expr>;</return>
        }</block></else></if>
    }</block></function>

    <comment type="javadoc">/**
     * Returns a value of the specified cell.
     * Column 0 is the X axis, Columns 1 and over are the Y axis
     *
     * @param row  the row number.
     * @param column  the column number.
     *
     * @return The value of the specified cell.
     */</comment>
    <function><type><specifier>public</specifier> <name>Object</name></type> <name>getValueAt</name><parameter_list>(<param><decl><type><name>int</name></type> <name>row</name></decl></param>, <param><decl><type><name>int</name></type> <name>column</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name><name>this</name>.<name>model</name></name> == <name>null</name></expr>)</condition><then> <block>{
            <return>return <expr><name>null</name></expr>;</return>
        }</block></then></if>
        <if>if <condition>(<expr><name>column</name> &lt; 1</expr>)</condition><then> <block>{
            <return>return <expr><call><name><name>this</name>.<name>model</name>.<name>getX</name></name><argument_list>(<argument><expr>0</expr></argument>, <argument><expr><name>row</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></then>
        <else>else <block>{
            <return>return <expr><call><name><name>this</name>.<name>model</name>.<name>getY</name></name><argument_list>(<argument><expr><name>column</name> - 1</expr></argument>, <argument><expr><name>row</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></else></if>
    }</block></function>

    <comment type="javadoc">/**
     * Receives notification that the underlying dataset has changed.
    *
     * @param event  the event
     *
     * @see DatasetChangeListener
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>datasetChanged</name><parameter_list>(<param><decl><type><name>DatasetChangeEvent</name></type> <name>event</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>fireTableDataChanged</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Returns a flag indicating whether or not the specified cell is editable.
     *
     * @param row  the row number.
     * @param column  the column number.
     *
     * @return &lt;code&gt;true&lt;/code&gt; if the specified cell is editable.
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isCellEditable</name><parameter_list>(<param><decl><type><name>int</name></type> <name>row</name></decl></param>, <param><decl><type><name>int</name></type> <name>column</name></decl></param>)</parameter_list> <block>{
        <return>return <expr>false</expr>;</return>
   }</block></function>

    <comment type="javadoc">/**
     * Updates the {@link XYDataset} if allowed.
     *
     * @param value  the new value.
     * @param row  the row.
     * @param column  the column.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setValueAt</name><parameter_list>(<param><decl><type><name>Object</name></type> <name>value</name></decl></param>, <param><decl><type><name>int</name></type> <name>row</name></decl></param>, <param><decl><type><name>int</name></type> <name>column</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><call><name>isCellEditable</name><argument_list>(<argument><expr><name>row</name></expr></argument>, <argument><expr><name>column</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <comment type="line">// XYDataset only provides methods for reading a dataset...</comment>
        }</block></then></if>
    }</block></function>

<comment type="line">//    /**</comment>
<comment type="line">//     * Run a demonstration of the table model interface.</comment>
<comment type="line">//     *</comment>
<comment type="line">//     * @param args  ignored.</comment>
<comment type="line">//     *</comment>
<comment type="line">//     * @throws Exception when an error occurs.</comment>
<comment type="line">//     */</comment>
<comment type="line">//    public static void main(String args[]) throws Exception {</comment>
<comment type="line">//        JFrame frame = new JFrame();</comment>
<comment type="line">//        JPanel panel = new JPanel();</comment>
<comment type="line">//        panel.setLayout(new BorderLayout());</comment>
<comment type="line">//</comment>
<comment type="line">//        XYSeries s1 = new XYSeries("Series 1", true, false);</comment>
<comment type="line">//        for (int i = 0; i &lt; 10; i++) {</comment>
<comment type="line">//            s1.add(i, Math.random());   </comment>
<comment type="line">//        }</comment>
<comment type="line">//        XYSeries s2 = new XYSeries("Series 2", true, false);</comment>
<comment type="line">//        for (int i = 0; i &lt; 15; i++) {</comment>
<comment type="line">//            s2.add(i, Math.random());   </comment>
<comment type="line">//        }</comment>
<comment type="line">//        DefaultTableXYDataset dataset = new DefaultTableXYDataset();</comment>
<comment type="line">//        dataset.addSeries(s1);</comment>
<comment type="line">//        dataset.addSeries(s2);</comment>
<comment type="line">//        XYDatasetTableModel tablemodel = new XYDatasetTableModel();</comment>
<comment type="line">//</comment>
<comment type="line">//        tablemodel.setModel(dataset);</comment>
<comment type="line">//</comment>
<comment type="line">//        JTable dataTable = new JTable(tablemodel);</comment>
<comment type="line">//        JScrollPane scroll = new JScrollPane(dataTable);</comment>
<comment type="line">//        scroll.setPreferredSize(new Dimension(600, 150));</comment>
<comment type="line">//</comment>
<comment type="line">//        JFreeChart chart = ChartFactory.createXYLineChart(</comment>
<comment type="line">//            "XY Series Demo",</comment>
<comment type="line">//            "X", "Y", dataset, PlotOrientation.VERTICAL,</comment>
<comment type="line">//            true,</comment>
<comment type="line">//            true,</comment>
<comment type="line">//            false</comment>
<comment type="line">//        );</comment>
<comment type="line">//</comment>
<comment type="line">//        ChartPanel chartPanel = new ChartPanel(chart);</comment>
<comment type="line">//</comment>
<comment type="line">//        panel.add(chartPanel, BorderLayout.CENTER);</comment>
<comment type="line">//        panel.add(scroll, BorderLayout.SOUTH);</comment>
<comment type="line">//</comment>
<comment type="line">//        frame.setContentPane(panel);</comment>
<comment type="line">//        frame.setSize(600, 500);</comment>
<comment type="line">//        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</comment>
<comment type="line">//        frame.show();</comment>
<comment type="line">//        RefineryUtilities.centerFrameOnScreen(frame);</comment>
<comment type="line">//    }</comment>

}</block></class>
</unit>
