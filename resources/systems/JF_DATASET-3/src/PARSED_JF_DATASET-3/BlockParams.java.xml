<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\daniel.rodriguez\IdeaProjects\biorimp\resources\systems\JF_DATASET-3\src\BlockParams.java"><comment type="block">/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * ----------------
 * BlockParams.java
 * ----------------
 * (C) Copyright 2005, 2007, by Object Refinery Limited.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   -;
 *
 * Changes:
 * --------
 * 19-Apr-2005 : Version 1 (DG);
 *
 */</comment>

<package>package <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>block</name></name>;</package>

<comment type="javadoc">/**
 * A standard parameter object that can be passed to the draw() method defined
 * by the {@link Block} class.
 */</comment>
<class><specifier>public</specifier> class <name>BlockParams</name> <super><implements>implements <name>EntityBlockParams</name></implements></super> <block>{
    
    <comment type="javadoc">/** 
     * A flag that controls whether or not the block should generate and 
     * return chart entities for the items it draws.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>generateEntities</name></decl>;</decl_stmt>
    
    <comment type="javadoc">/** 
     * The x-translation (used to enable chart entities to use global 
     * coordinates rather than coordinates that are local to the container
     * they are within).
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>double</name></type> <name>translateX</name></decl>;</decl_stmt>
    
    <comment type="javadoc">/** 
     * The y-translation (used to enable chart entities to use global 
     * coordinates rather than coordinates that are local to the container
     * they are within).
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>double</name></type> <name>translateY</name></decl>;</decl_stmt>
    
    <comment type="javadoc">/**
     * Creates a new instance.
     */</comment>
    <constructor><specifier>public</specifier> <name>BlockParams</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>translateX</name></name> = 0.0</expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>translateY</name></name> = 0.0</expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>generateEntities</name></name> = false</expr>;</expr_stmt>    
    }</block></constructor>
    
    <comment type="javadoc">/**
     * Returns the flag that controls whether or not chart entities are 
     * generated.
     * 
     * @return A boolean.
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>getGenerateEntities</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>generateEntities</name></name></expr>;</return>   
    }</block></function>
    
    <comment type="javadoc">/**
     * Sets the flag that controls whether or not chart entities are generated.
     * 
     * @param generate  the flag.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setGenerateEntities</name><parameter_list>(<param><decl><type><name>boolean</name></type> <name>generate</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>generateEntities</name></name> = <name>generate</name></expr>;</expr_stmt>   
    }</block></function>
    
    <comment type="javadoc">/**
     * Returns the translation required to convert local x-coordinates back to
     * the coordinate space of the container.
     * 
     * @return The x-translation amount.
     */</comment>
    <function><type><specifier>public</specifier> <name>double</name></type> <name>getTranslateX</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>translateX</name></name></expr>;</return>   
    }</block></function>
    
    <comment type="javadoc">/**
     * Sets the translation required to convert local x-coordinates into the
     * coordinate space of the container.
     * 
     * @param x  the x-translation amount.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setTranslateX</name><parameter_list>(<param><decl><type><name>double</name></type> <name>x</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>translateX</name></name> = <name>x</name></expr>;</expr_stmt>   
    }</block></function>
    
    <comment type="javadoc">/**
     * Returns the translation required to convert local y-coordinates back to
     * the coordinate space of the container.
     * 
     * @return The y-translation amount.
     */</comment>
    <function><type><specifier>public</specifier> <name>double</name></type> <name>getTranslateY</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>translateY</name></name></expr>;</return>   
    }</block></function>
    
    <comment type="javadoc">/**
     * Sets the translation required to convert local y-coordinates into the
     * coordinate space of the container.
     * 
     * @param y  the y-translation amount.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setTranslateY</name><parameter_list>(<param><decl><type><name>double</name></type> <name>y</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>translateY</name></name> = <name>y</name></expr>;</expr_stmt>   
    }</block></function>

}</block></class>
</unit>
