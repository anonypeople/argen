<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\daniel.rodriguez\IdeaProjects\biorimp\resources\systems\JF_H_DATASET-12\src\CategoryItemRendererState.java"><comment type="block">/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2005, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * ------------------------------
 * CategoryItemRendererState.java
 * ------------------------------
 * (C) Copyright 2003-2006, by Object Refinery Limited.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   -;
 *
 * Changes (since 20-Oct-2003):
 * ----------------------------
 * 20-Oct-2003 : Added series running total (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 01-Dec-2006 : Updated API docs (DG);
 *
 */</comment>

<package>package <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>renderer</name>.<name>category</name></name>;</package>

<import>import <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.<name>PlotRenderingInfo</name></name>;</import>
<import>import <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>renderer</name>.<name>RendererState</name></name>;</import>

<comment type="javadoc">/**
 * An object that retains temporary state information for a 
 * {@link CategoryItemRenderer}.
 */</comment>
<class><specifier>public</specifier> class <name>CategoryItemRendererState</name> <super><extends>extends <name>RendererState</name></extends></super> <block>{

    <comment type="javadoc">/** The bar width. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>double</name></type> <name>barWidth</name></decl>;</decl_stmt>
    
    <comment type="javadoc">/** The series running total. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>double</name></type> <name>seriesRunningTotal</name></decl>;</decl_stmt>
    
    <comment type="javadoc">/**
     * Creates a new object for recording temporary state information for a
     * renderer.
     * 
     * @param info  the plot rendering info (&lt;code&gt;null&lt;/code&gt; permitted).
     */</comment>
    <constructor><specifier>public</specifier> <name>CategoryItemRendererState</name><parameter_list>(<param><decl><type><name>PlotRenderingInfo</name></type> <name>info</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>barWidth</name></name> = 0.0</expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>seriesRunningTotal</name></name> = 0.0</expr>;</expr_stmt>
    }</block></constructor>
    
    <comment type="javadoc">/**
     * Returns the bar width.
     * 
     * @return The bar width.
     * 
     * @see #setBarWidth(double)
     */</comment>
    <function><type><specifier>public</specifier> <name>double</name></type> <name>getBarWidth</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>barWidth</name></name></expr>;</return>
    }</block></function>
    
    <comment type="javadoc">/**
     * Sets the bar width.  The renderer calculates this value and stores it 
     * here - it is not intended that users can manually set the bar width.
     * 
     * @param width  the width.
     * 
     * @see #getBarWidth()
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setBarWidth</name><parameter_list>(<param><decl><type><name>double</name></type> <name>width</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>barWidth</name></name> = <name>width</name></expr>;</expr_stmt>
    }</block></function>
    
    <comment type="javadoc">/**
     * Returns the series running total.
     * 
     * @return The running total.
     * 
     * @see #setSeriesRunningTotal(double)
     */</comment>
    <function><type><specifier>public</specifier> <name>double</name></type> <name>getSeriesRunningTotal</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>seriesRunningTotal</name></name></expr>;</return>    
    }</block></function>
    
    <comment type="javadoc">/**
     * Sets the series running total (this method is intended for the use of 
     * the renderer only).
     * 
     * @param total  the new total.
     * 
     * @see #getSeriesRunningTotal()
     */</comment>
    <function><type><name>void</name></type> <name>setSeriesRunningTotal</name><parameter_list>(<param><decl><type><name>double</name></type> <name>total</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>seriesRunningTotal</name></name> = <name>total</name></expr>;</expr_stmt>
    }</block></function>
    
}</block></class>
</unit>
