<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\daniel.rodriguez\IdeaProjects\biorimp\resources\systems\JF_H_DATASET-2\src\AxisCollection.java"><comment type="block">/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -------------------
 * AxisCollection.java
 * -------------------
 * (C) Copyright 2003-2007, by Object Refinery Limited.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   -;
 *
 * Changes
 * -------
 * 03-Nov-2003 : Added standard header (DG);
 *
 */</comment>

<package>package <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>axis</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>List</name></name>;</import>

<import>import <name><name>org</name>.<name>jfree</name>.<name>ui</name>.<name>RectangleEdge</name></name>;</import>

<comment type="javadoc">/**
 * A collection of axes that have been assigned to the TOP, BOTTOM, LEFT or 
 * RIGHT of a chart.  This class is used internally by JFreeChart, you won't
 * normally need to use it yourself.
 */</comment>
<class><specifier>public</specifier> class <name>AxisCollection</name> <block>{
    
    <comment type="javadoc">/** The axes that need to be drawn at the top of the plot area. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>List</name></type> <name>axesAtTop</name></decl>;</decl_stmt>
    
    <comment type="javadoc">/** The axes that need to be drawn at the bottom of the plot area. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>List</name></type> <name>axesAtBottom</name></decl>;</decl_stmt>
    
    <comment type="javadoc">/** The axes that need to be drawn at the left of the plot area. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>List</name></type> <name>axesAtLeft</name></decl>;</decl_stmt>
    
    <comment type="javadoc">/** The axes that need to be drawn at the right of the plot area. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>List</name></type> <name>axesAtRight</name></decl>;</decl_stmt>
   
    <comment type="javadoc">/**
     * Creates a new empty collection.
     */</comment> 
    <constructor><specifier>public</specifier> <name>AxisCollection</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>axesAtTop</name></name> = new <call><name><name>java</name>.<name>util</name>.<name>ArrayList</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>axesAtBottom</name></name> = new <call><name><name>java</name>.<name>util</name>.<name>ArrayList</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>axesAtLeft</name></name> = new <call><name><name>java</name>.<name>util</name>.<name>ArrayList</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>axesAtRight</name></name> = new <call><name><name>java</name>.<name>util</name>.<name>ArrayList</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    
    <comment type="javadoc">/**
     * Returns a list of the axes (if any) that need to be drawn at the top of 
     * the plot area.
     * 
     * @return A list of axes.
     */</comment>
    <function><type><specifier>public</specifier> <name>List</name></type> <name>getAxesAtTop</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>axesAtTop</name></name></expr>;</return>
    }</block></function>
    
   <comment type="javadoc">/**
    * Returns a list of the axes (if any) that need to be drawn at the bottom 
    * of the plot area.
    * 
    * @return A list of axes.
    */</comment>
   <function><type><specifier>public</specifier> <name>List</name></type> <name>getAxesAtBottom</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>axesAtBottom</name></name></expr>;</return>
    }</block></function>
    
    <comment type="javadoc">/**
     * Returns a list of the axes (if any) that need to be drawn at the left 
     * of the plot area.
     * 
     * @return A list of axes.
     */</comment>
    <function><type><specifier>public</specifier> <name>List</name></type> <name>getAxesAtLeft</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>axesAtLeft</name></name></expr>;</return>
    }</block></function>
    
    <comment type="javadoc">/**
    * Returns a list of the axes (if any) that need to be drawn at the right 
    * of the plot area.
    * 
    * @return A list of axes.
    */</comment>
    <function><type><specifier>public</specifier> <name>List</name></type> <name>getAxesAtRight</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>axesAtRight</name></name></expr>;</return>    
    }</block></function>
    
    <comment type="javadoc">/**
     * Adds an axis to the collection.
     * 
     * @param axis  the axis (&lt;code&gt;null&lt;/code&gt; not permitted).
     * @param edge  the edge of the plot that the axis should be drawn on 
     *              (&lt;code&gt;null&lt;/code&gt; not permitted).
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>add</name><parameter_list>(<param><decl><type><name>Axis</name></type> <name>axis</name></decl></param>, <param><decl><type><name>RectangleEdge</name></type> <name>edge</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>axis</name> == <name>null</name></expr>)</condition><then> <block>{
            <throw>throw <expr>new <call><name>IllegalArgumentException</name><argument_list>(<argument><expr>"Null 'axis' argument."</expr></argument>)</argument_list></call></expr>;</throw>   
        }</block></then></if>
        <if>if <condition>(<expr><name>edge</name> == <name>null</name></expr>)</condition><then> <block>{
            <throw>throw <expr>new <call><name>IllegalArgumentException</name><argument_list>(<argument><expr>"Null 'edge' argument."</expr></argument>)</argument_list></call></expr>;</throw>   
        }</block></then></if>
        <if>if <condition>(<expr><name>edge</name> == <name><name>RectangleEdge</name>.<name>TOP</name></name></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name><name>this</name>.<name>axesAtTop</name>.<name>add</name></name><argument_list>(<argument><expr><name>axis</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then>
        <else>else <if>if <condition>(<expr><name>edge</name> == <name><name>RectangleEdge</name>.<name>BOTTOM</name></name></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name><name>this</name>.<name>axesAtBottom</name>.<name>add</name></name><argument_list>(<argument><expr><name>axis</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then>
        <else>else <if>if <condition>(<expr><name>edge</name> == <name><name>RectangleEdge</name>.<name>LEFT</name></name></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name><name>this</name>.<name>axesAtLeft</name>.<name>add</name></name><argument_list>(<argument><expr><name>axis</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then>
        <else>else <if>if <condition>(<expr><name>edge</name> == <name><name>RectangleEdge</name>.<name>RIGHT</name></name></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name><name>this</name>.<name>axesAtRight</name>.<name>add</name></name><argument_list>(<argument><expr><name>axis</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if></else></if></else></if></else></if>
    }</block></function>

}</block></class>
</unit>
