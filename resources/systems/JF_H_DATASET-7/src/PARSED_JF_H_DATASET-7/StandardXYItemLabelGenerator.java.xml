<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\daniel.rodriguez\IdeaProjects\biorimp\resources\systems\JF_H_DATASET-7\src\StandardXYItemLabelGenerator.java"><comment type="block">/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * ---------------------------------
 * StandardXYItemLabelGenerator.java
 * ---------------------------------
 * (C) Copyright 2001-2007, by Object Refinery Limited.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   -;
 *
 * Changes
 * -------
 * 13-Dec-2001 : Version 1 (DG);
 * 16-Jan-2002 : Completed Javadocs (DG);
 * 02-Apr-2002 : Modified to handle null y-values (DG);
 * 09-Apr-2002 : Added formatting objects for the x and y values (DG);
 * 30-May-2002 : Added series name to standard tool tip (DG);
 * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG);
 * 23-Mar-2003 : Implemented Serializable (DG);
 * 13-Aug-2003 : Implemented Cloneable (DG);
 * 17-Nov-2003 : Implemented PublicCloneable (DG);
 * 25-Feb-2004 : Renamed XYToolTipGenerator --&gt; XYItemLabelGenerator and
 *               StandardXYToolTipGenerator --&gt; 
 *               StandardXYItemLabelGenerator (DG);
 * 26-Feb-2004 : Modified to use MessageFormat (DG);
 * 27-Feb-2004 : Added abstract superclass (DG);
 * 11-May-2004 : Split into StandardXYToolTipGenerator and 
 *               StandardXYLabelGenerator (DG);
 * 20-Apr-2005 : Renamed StandardXYLabelGenerator 
 *               --&gt; StandardXYItemLabelGenerator (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 25-Jan-2007 : Added new constructor - see bug 1624067 (DG);
 * 
 */</comment>

<package>package <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>Serializable</name></name>;</import>
<import>import <name><name>java</name>.<name>text</name>.<name>DateFormat</name></name>;</import>
<import>import <name><name>java</name>.<name>text</name>.<name>NumberFormat</name></name>;</import>

<import>import <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>xy</name>.<name>XYDataset</name></name>;</import>
<import>import <name><name>org</name>.<name>jfree</name>.<name>util</name>.<name>PublicCloneable</name></name>;</import>

<comment type="javadoc">/**
 * A standard item label generator for plots that use data from an 
 * {@link org.jfree.data.xy.XYDataset}.
 */</comment>
<class><specifier>public</specifier> class <name>StandardXYItemLabelGenerator</name> <super><extends>extends <name>AbstractXYItemLabelGenerator</name></extends>  
                                          <implements>implements <name>XYItemLabelGenerator</name>, 
                                                     <name>Cloneable</name>, 
                                                     <name>PublicCloneable</name>,
                                                     <name>Serializable</name></implements></super> <block>{

    <comment type="javadoc">/** For serialization. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>serialVersionUID</name> =<init> <expr>7807668053171837925L</expr></init></decl>;</decl_stmt>
    
    <comment type="javadoc">/** The default item label format. */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>DEFAULT_ITEM_LABEL_FORMAT</name> =<init> <expr>"{2}"</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Creates an item label generator using default number formatters.
     */</comment>
    <constructor><specifier>public</specifier> <name>StandardXYItemLabelGenerator</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>DEFAULT_ITEM_LABEL_FORMAT</name></expr></argument>, <argument><expr><call><name><name>NumberFormat</name>.<name>getNumberInstance</name></name><argument_list>()</argument_list></call></expr></argument>, 
                <argument><expr><call><name><name>NumberFormat</name>.<name>getNumberInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>


    <comment type="javadoc">/**
     * Creates an item label generator using the specified number formatters.
     *
     * @param formatString  the item label format string (&lt;code&gt;null&lt;/code&gt; not 
     *                      permitted).
     * @param xFormat  the format object for the x values (&lt;code&gt;null&lt;/code&gt; 
     *                 not permitted).
     * @param yFormat  the format object for the y values (&lt;code&gt;null&lt;/code&gt; 
     *                 not permitted).
     */</comment>
    <constructor><specifier>public</specifier> <name>StandardXYItemLabelGenerator</name><parameter_list>(<param><decl><type><name>String</name></type> <name>formatString</name></decl></param>,
            <param><decl><type><name>NumberFormat</name></type> <name>xFormat</name></decl></param>, <param><decl><type><name>NumberFormat</name></type> <name>yFormat</name></decl></param>)</parameter_list> <block>{
        
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>formatString</name></expr></argument>, <argument><expr><name>xFormat</name></expr></argument>, <argument><expr><name>yFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Creates an item label generator using the specified formatters.
     *
     * @param formatString  the item label format string (&lt;code&gt;null&lt;/code&gt; 
     *                      not permitted).
     * @param xFormat  the format object for the x values (&lt;code&gt;null&lt;/code&gt; 
     *                 not permitted).
     * @param yFormat  the format object for the y values (&lt;code&gt;null&lt;/code&gt; 
     *                 not permitted).
     */</comment>
    <constructor><specifier>public</specifier> <name>StandardXYItemLabelGenerator</name><parameter_list>(<param><decl><type><name>String</name></type> <name>formatString</name></decl></param>,
            <param><decl><type><name>DateFormat</name></type> <name>xFormat</name></decl></param>, <param><decl><type><name>NumberFormat</name></type> <name>yFormat</name></decl></param>)</parameter_list> <block>{
        
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>formatString</name></expr></argument>, <argument><expr><name>xFormat</name></expr></argument>, <argument><expr><name>yFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Creates an item label generator using the specified formatters (a 
     * number formatter for the x-values and a date formatter for the 
     * y-values).
     *
     * @param formatString  the item label format string (&lt;code&gt;null&lt;/code&gt; 
     *                      not permitted).
     * @param xFormat  the format object for the x values (&lt;code&gt;null&lt;/code&gt; 
     *                 permitted).
     * @param yFormat  the format object for the y values (&lt;code&gt;null&lt;/code&gt; 
     *                 not permitted).
     *                 
     * @since 1.0.4
     */</comment>
    <constructor><specifier>public</specifier> <name>StandardXYItemLabelGenerator</name><parameter_list>(<param><decl><type><name>String</name></type> <name>formatString</name></decl></param>, 
            <param><decl><type><name>NumberFormat</name></type> <name>xFormat</name></decl></param>, <param><decl><type><name>DateFormat</name></type> <name>yFormat</name></decl></param>)</parameter_list> <block>{
        
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>formatString</name></expr></argument>, <argument><expr><name>xFormat</name></expr></argument>, <argument><expr><name>yFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Creates a label generator using the specified date formatters.
     *
     * @param formatString  the label format string (&lt;code&gt;null&lt;/code&gt; not 
     *                      permitted).
     * @param xFormat  the format object for the x values (&lt;code&gt;null&lt;/code&gt; 
     *                 not permitted).
     * @param yFormat  the format object for the y values (&lt;code&gt;null&lt;/code&gt; 
     *                 not permitted).
     */</comment>
    <constructor><specifier>public</specifier> <name>StandardXYItemLabelGenerator</name><parameter_list>(<param><decl><type><name>String</name></type> <name>formatString</name></decl></param>,
            <param><decl><type><name>DateFormat</name></type> <name>xFormat</name></decl></param>, <param><decl><type><name>DateFormat</name></type> <name>yFormat</name></decl></param>)</parameter_list> <block>{
        
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>formatString</name></expr></argument>, <argument><expr><name>xFormat</name></expr></argument>, <argument><expr><name>yFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Generates the item label text for an item in a dataset.
     *
     * @param dataset  the dataset (&lt;code&gt;null&lt;/code&gt; not permitted).
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return The label text (possibly &lt;code&gt;null&lt;/code&gt;).
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name></type> <name>generateLabel</name><parameter_list>(<param><decl><type><name>XYDataset</name></type> <name>dataset</name></decl></param>, <param><decl><type><name>int</name></type> <name>series</name></decl></param>, <param><decl><type><name>int</name></type> <name>item</name></decl></param>)</parameter_list> <block>{
        <return>return <expr><call><name>generateLabelString</name><argument_list>(<argument><expr><name>dataset</name></expr></argument>, <argument><expr><name>series</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Returns an independent copy of the generator.
     * 
     * @return A clone.
     * 
     * @throws CloneNotSupportedException if cloning is not supported.
     */</comment>
    <function><type><specifier>public</specifier> <name>Object</name></type> <name>clone</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CloneNotSupportedException</name></expr></argument></throws> <block>{ 
        <return>return <expr><call><name><name>super</name>.<name>clone</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>
    
    <comment type="javadoc">/**
     * Tests this object for equality with an arbitrary object.
     *
     * @param obj  the other object (&lt;code&gt;null&lt;/code&gt; permitted).
     *
     * @return A boolean.
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>equals</name><parameter_list>(<param><decl><type><name>Object</name></type> <name>obj</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>obj</name> == <name>this</name></expr>)</condition><then> <block>{
            <return>return <expr>true</expr>;</return>
        }</block></then></if>
        <if>if <condition>(<expr>!(<name>obj</name> <name>instanceof</name> <name>StandardXYItemLabelGenerator</name>)</expr>)</condition><then> <block>{
            <return>return <expr>false</expr>;</return>
        }</block></then></if>
        <return>return <expr><call><name><name>super</name>.<name>equals</name></name><argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

}</block></class>
</unit>
