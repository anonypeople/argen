<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\Abdera.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.
            <name>abdera</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>factory</name>.
            <name>Factory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>iri</name>.
            <name>IRI</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Categories</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Entry</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Feed</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Service</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>parser</name>.
            <name>Parser</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>parser</name>.
            <name>ParserFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>util</name>.
            <name>AbderaConfiguration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>util</name>.
            <name>Configuration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
            <name>StreamWriter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
            <name>Writer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
            <name>WriterFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>xpath</name>.
            <name>XPath</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The top level entry point for Abdera that provides access to various subcomponents. Upon creation, this class
        will
        * attempt to create singleton instances of each of the various subcomponents components. These instances may be
        * retrieved using the appropriate get___ methods. Alternatively, new instances may be created using the
        appropriate
        * new___ methods. Instances of the Abdera object, and it's direct children (Parser, Factory, XPath, etc) are
        * Threadsafe. Because of the dynamic configuration model Abdera uses, creating a new instance of the Abdera
        object can
        * be time consuming. It is, therefore, a good idea for applications to create only a single static instance of
        the
        * Abdera object (see the Abdera.getInstance() method). Abdera's configuration model depends heavily on the
        context
        * classloader. Extension Factories, custom writers, custom parsers, etc are all discovered automatically by
        searching
        * the classpath. This means that care needs to be taken when using Abdera in environments that utilize multiple
        * classloaders (such as Web application servers).
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>Abdera</name>
        <block>{

            <comment type="javadoc">/** A static instance of Abdera **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>Abdera</name>
                    </type>
                    <name>instance</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Get a static instance of the Abdera object.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <specifier>synchronized</specifier>
                    <name>Abdera</name>
                </type>
                <name>getInstance</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>instance</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>instance</name>
                                    = new
                                    <call>
                                        <name>Abdera</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>instance</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>Configuration</name>
                    </type>
                    <name>config</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Factory</name>
                    </type>
                    <name>factory</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Parser</name>
                    </type>
                    <name>parser</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XPath</name>
                    </type>
                    <name>xpath</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ParserFactory</name>
                    </type>
                    <name>parserFactory</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>WriterFactory</name>
                    </type>
                    <name>writerFactory</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Writer</name>
                    </type>
                    <name>writer</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Initialize using the default Abdera Configuration
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>Abdera</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>AbderaConfiguration</name>.
                                                    <name>getDefault</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Initialize using the specified Abdera Configuration
                *
                * @param config The Abdera Configuration to use
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>Abdera</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Configuration</name>
                            </type>
                            <name>config</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>config</name>
                            </name>
                            =
                            <name>config</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>IRI</name>.
                                    <name>preinit</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// initializes the IRI stuff to improve performance later</comment>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Create a new Feed instance. This is a convenience shortcut for &lt;code&gt;abdera.getFactory().newFeed()&lt;/code&gt;
                *
                * @return A newly created feed element
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Feed</name>
                </type>
                <name>newFeed</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFactory</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>newFeed</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Create a new Entry instance. This is a convenience shortcut for &lt;code&gt;abdera.getFactory().newEntry()&lt;/code&gt;
                *
                * @return A newly created entry element
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Entry</name>
                </type>
                <name>newEntry</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFactory</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>newEntry</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Create a new Service instance. This is a convenience shortcut for &lt;code&gt;abdera.getFactory().newService()&lt;/code&gt;
                *
                * @return A newly created service element
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Service</name>
                </type>
                <name>newService</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFactory</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>newService</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Create a new Categories instance. This is a convenience shortcut for
                * &lt;code&gt;abdera.getFactory().newCategories()&lt;/code&gt;
                *
                * @return A newly created categories element
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Categories</name>
                </type>
                <name>newCategories</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFactory</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>newCategories</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return the Abdera Configuration used to initialize this instance
                *
                * @return The Abdera configuration
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Configuration</name>
                </type>
                <name>getConfiguration</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>config</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return the singleton instance of org.apache.abdera.factory.Factory
                *
                * @return The factory instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>Factory</name>
                </type>
                <name>getFactory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>factory</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>factory</name>
                                    =
                                    <call>
                                        <name>newFactory</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>factory</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return the singleton instance of org.apache.abdera.parser.Parser
                *
                * @return The parser instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>Parser</name>
                </type>
                <name>getParser</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>parser</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>parser</name>
                                    =
                                    <call>
                                        <name>newParser</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>parser</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return the singleton instance of org.apache.abdera.xpath.XPath
                *
                * @return The XPath instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>XPath</name>
                </type>
                <name>getXPath</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>xpath</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>xpath</name>
                                    =
                                    <call>
                                        <name>newXPath</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>xpath</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return the singleton instance of org.apache.abdera.parser.ParserFactory. The Parser Factory is used to
                acquire
                * alternative parser implementation instances.
                *
                * @return The ParserFactory instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>ParserFactory</name>
                </type>
                <name>getParserFactory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>parserFactory</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>parserFactory</name>
                                    =
                                    <call>
                                        <name>newParserFactory</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>parserFactory</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return the singleton instance of org.apache.abdera.writer.WriterFactory. The Writer Factory is used to
                acquire
                * alternative writer implementation instances.
                *
                * @return The WriterFactory instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>WriterFactory</name>
                </type>
                <name>getWriterFactory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>writerFactory</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>writerFactory</name>
                                    =
                                    <call>
                                        <name>newWriterFactory</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>writerFactory</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return the singleton instance of the default org.apache.abdera.writer.Writer implementation.
                *
                * @return The default writer implementation
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>Writer</name>
                </type>
                <name>getWriter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>writer</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>writer</name>
                                    =
                                    <call>
                                        <name>newWriter</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>writer</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new instance of org.apache.abdera.factory.Factory
                *
                * @return A new factory instance
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Factory</name>
                </type>
                <name>newFactory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>newFactoryInstance</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new instance of org.apache.abdera.parser.Parser
                *
                * @return A new parser instance
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Parser</name>
                </type>
                <name>newParser</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>newParserInstance</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new instance of org.apache.abdera.xpath.XPath
                *
                * @return A new XPath instance
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>XPath</name>
                </type>
                <name>newXPath</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>newXPathInstance</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new instance of org.apache.abdera.parser.ParserFactory
                *
                * @return A new ParserFactory instance
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ParserFactory</name>
                </type>
                <name>newParserFactory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>newParserFactoryInstance</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new instance of org.apache.abdera.writer.WriterFactory
                *
                * @return A new WriterFactory instance
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>WriterFactory</name>
                </type>
                <name>newWriterFactory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>newWriterFactoryInstance</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new instance of the default org.apache.abdera.writer.Writer
                *
                * @return A new default writer implementation instance
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Writer</name>
                </type>
                <name>newWriter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>newWriterInstance</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new instance of the default org.apache.abdera.writer.Writer
                *
                * @return A new default writer implementation instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>StreamWriter</name>
                </type>
                <name>newStreamWriter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>newStreamWriterInstance</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// Static convenience methods //</comment>

            <comment type="javadoc">/**
                * Return a new Factory instance using a non-shared Abdera object
                *
                * @return A new factory instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Factory</name>
                </type>
                <name>getNewFactory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(new
                            <call>
                                <name>Abdera</name>
                                <argument_list>()</argument_list>
                            </call>
                            ).
                            <call>
                                <name>newFactory</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new Parser instance using a non-shared Abdera object
                *
                * @return A new parser instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Parser</name>
                </type>
                <name>getNewParser</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(new
                            <call>
                                <name>Abdera</name>
                                <argument_list>()</argument_list>
                            </call>
                            ).
                            <call>
                                <name>newParser</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new XPath instance using a non-shared Abdera object
                *
                * @return A new XPath instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>XPath</name>
                </type>
                <name>getNewXPath</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(new
                            <call>
                                <name>Abdera</name>
                                <argument_list>()</argument_list>
                            </call>
                            ).
                            <call>
                                <name>newXPath</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new ParserFactory instance using a non-shared Abdera object
                *
                * @return A new ParserFactory instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>ParserFactory</name>
                </type>
                <name>getNewParserFactory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(new
                            <call>
                                <name>Abdera</name>
                                <argument_list>()</argument_list>
                            </call>
                            ).
                            <call>
                                <name>newParserFactory</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new WriterFactory instance using a non-shared Abdera object
                *
                * @return A new WriterFactory instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>WriterFactory</name>
                </type>
                <name>getNewWriterFactory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(new
                            <call>
                                <name>Abdera</name>
                                <argument_list>()</argument_list>
                            </call>
                            ).
                            <call>
                                <name>newWriterFactory</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new instance of the default Writer using a non-shared Abdera object
                *
                * @return A new default writer implementation instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Writer</name>
                </type>
                <name>getNewWriter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(new
                            <call>
                                <name>Abdera</name>
                                <argument_list>()</argument_list>
                            </call>
                            ).
                            <call>
                                <name>newWriter</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a new instance of the default StreamWriter using a non-shared Abdera object
                *
                * @return A new default stream writer implementation instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>StreamWriter</name>
                </type>
                <name>getNewStreamWriter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(new
                            <call>
                                <name>Abdera</name>
                                <argument_list>()</argument_list>
                            </call>
                            ).
                            <call>
                                <name>newStreamWriter</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
