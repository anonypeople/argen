<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\protocol\util\AbstractRequest.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>protocol</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Date</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>protocol</name>.
            <name>Request</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>util</name>.
            <name>EntityTag</name>
        </name>
        ;
    </import>

    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>AbstractRequest</name>
        <super>
            <extends>extends
                <name>AbstractMessage</name>
            </extends>
            <implements>implements
                <name>Request</name>
            </implements>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>long</name>
                    </type>
                    <name>max_stale</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>long</name>
                    </type>
                    <name>min_fresh</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getAccept</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getHeader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Accept"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getAcceptCharset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getHeader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Accept-Charset"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getAcceptEncoding</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getHeader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Accept-Encoding"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getAcceptLanguage</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getHeader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Accept-Language"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getAuthorization</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getHeader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Authorization"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>EntityTag</name>
                    <index>[]</index>
                </type>
                <name>getIfMatch</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>EntityTag</name>.
                                    <name>parseTags</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getHeader</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"If-Match"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Date</name>
                </type>
                <name>getIfModifiedSince</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getDateHeader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"If-Modified-Since"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>EntityTag</name>
                    <index>[]</index>
                </type>
                <name>getIfNoneMatch</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>EntityTag</name>.
                                    <name>parseTags</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getHeader</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"If-None-Match"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Date</name>
                </type>
                <name>getIfUnmodifiedSince</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getDateHeader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"If-Unmodified-Since"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>long</name>
                </type>
                <name>getMaxStale</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>max_stale</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>long</name>
                </type>
                <name>getMinFresh</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>min_fresh</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isOnlyIfCached</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>check</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ONLYIFCACHED</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>AbstractRequest</name>
                </type>
                <name>setMaxAge</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>max_age</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>max_age</name>
                            </name>
                            =
                            <name>max_age</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>AbstractRequest</name>
                </type>
                <name>setMaxStale</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>max_stale</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>max_stale</name>
                            </name>
                            =
                            <name>max_stale</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>AbstractRequest</name>
                </type>
                <name>setMinFresh</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>min_fresh</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>min_fresh</name>
                            </name>
                            =
                            <name>min_fresh</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>AbstractRequest</name>
                </type>
                <name>setNoCache</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>val</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>toggle</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>val</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>NOCACHE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>AbstractRequest</name>
                </type>
                <name>setNoStore</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>val</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>toggle</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>val</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>NOSTORE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>AbstractRequest</name>
                </type>
                <name>setNoTransform</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>val</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>toggle</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>val</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>NOTRANSFORM</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>AbstractRequest</name>
                </type>
                <name>setOnlyIfCached</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>val</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>toggle</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>val</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>ONLYIFCACHED</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
