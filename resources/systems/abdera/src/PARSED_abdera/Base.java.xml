<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\model\Base.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>model</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>OutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Writer</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>factory</name>.
            <name>Factory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
            <name>WriterOptions</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The Base interface provides the basis for the Feed Object Model API and defines the operations common to both
        the
        * Element and Document interfaces. Classes implementing Base MUST NOT be assumed to be thread safe. Developers
        wishing
        * to allow multiple threads to perform concurrent modifications to a Base MUST provide their own
        synchronization.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Base</name>
        <super>
            <extends>extends
                <name>Cloneable</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Get the default WriterOptions for this object
                */
            </comment>
            <function_decl>
                <type>
                    <name>WriterOptions</name>
                </type>
                <name>getDefaultWriterOptions</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified stream
                *
                * @param out The target output stream
                * @param options The WriterOptions to use
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>OutputStream</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>WriterOptions</name>
                            </type>
                            <name>options</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified java.io.Writer
                *
                * @param out The target output writer
                * @param options The WriterOptions to use
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Writer</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>WriterOptions</name>
                            </type>
                            <name>options</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified stream using the given Abdera writer
                *
                * @param writer The Abdera writer to use
                * @param out The target output stream
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
                                    <name>Writer</name>
                                </name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>OutputStream</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified java.io.Writer using the given Abdera writer
                *
                * @param writer The Abdera writer to use
                * @param out The target output writer
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
                                    <name>Writer</name>
                                </name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Writer</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified stream using the given Abdera writer
                *
                * @param writer The Abdera writer to use
                * @param out The target output stream
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>OutputStream</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified java.io.Writer using the given Abdera writer
                *
                * @param writer The Abdera writer to use
                * @param out The target output writer
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Writer</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified stream using the given abdera writer
                *
                * @param writer The Abdera writer to use
                * @param out The target output stream
                * @param options The WriterOptions to use
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
                                    <name>Writer</name>
                                </name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>OutputStream</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>WriterOptions</name>
                            </type>
                            <name>options</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified java.io.Writer using the given abdera writer
                *
                * @param writer The Abdera writer to use
                * @param out The target output writer
                * @param options The WriterOptions to use
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
                                    <name>Writer</name>
                                </name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Writer</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>WriterOptions</name>
                            </type>
                            <name>options</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified stream using the given abdera writer
                *
                * @param writer The name of the Abdera writer to use
                * @param out The target output stream
                * @param options The WriterOptions to use
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>OutputStream</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>WriterOptions</name>
                            </type>
                            <name>options</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified java.io.Writer using the given abdera writer
                *
                * @param writer The name of the Abdera writer to use
                * @param out The target output writer
                * @param options The WriterOptions to use
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Writer</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>WriterOptions</name>
                            </type>
                            <name>options</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified stream
                *
                * @param out The java.io.OutputStream to use when serializing the Base. The charset encoding specified
                for the
                * document will be used
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>OutputStream</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Serializes the model component out to the specified writer
                *
                * @param writer The java.io.Writer to use when serializing the Base
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>writeTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Writer</name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Clone this Base
                */
            </comment>
            <function_decl>
                <type>
                    <name>Object</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Get the Factory used to create this Base
                *
                * @return The Factory used to create this object
                */
            </comment>
            <function_decl>
                <type>
                    <name>Factory</name>
                </type>
                <name>getFactory</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Add an XML comment to this Base
                *
                * @param value The text value of the comment
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Base</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>addComment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Ensure that the underlying streams are fully parsed. Calling complete on an Element does not
                necessarily mean
                * that the underlying stream is fully consumed, only that that particular element has been completely
                parsed.
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Base</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>complete</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            }
        </block>
    </class>
</unit>
