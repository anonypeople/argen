<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\protocol\util\CacheControlUtil.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>protocol</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>HashMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>regex</name>.
            <name>Matcher</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>regex</name>.
            <name>Pattern</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>text</name>.<name>
            io</name>.
            <name>CompressionUtil</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Provides parsing and properly handling of the HTTP Cache-Control header.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>CacheControlUtil</name>
        <block>{

            <enum>
                <specifier>private</specifier>
                <specifier>static</specifier> enum <name>Idempotent</name>
                <block>{
                    <expr>
                        <name>GET</name>
                    </expr>
                    ,
                    <expr>
                        <name>HEAD</name>
                    </expr>
                    ,
                    <expr>
                        <name>OPTIONS</name>
                    </expr>
                    }
                </block>

                <comment type="javadoc">/**
                    * Idempotent methods are handled differently in caches than other methods
                    */
                </comment>
                public static <name>boolean</name>
                <name>isIdempotent</name>(<name>String</name>
                <name>method</name>
            </enum>
            )
        </block>
        <block>{
            <try>try
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Idempotent</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>method</name>.
                                                    <name>toUpperCase</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
                <catch>catch (
                    <param>
                        <decl>
                            <type>
                                <name>Exception</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                    <block>{
                        <return>return <expr>false</expr>;
                        </return>
                        }
                    </block>
                </catch>
            </try>
            }
        </block>
    </class>

    <function>
        <type>
            <specifier>private</specifier>
            <specifier>static</specifier>
            <name>long</name>
        </type>
        <name>value</name>
        <parameter_list>(
            <param>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>val</name>
                </decl>
            </param>
            )
        </parameter_list>
        <block>{
            <return>return
                <expr>(<name>val</name> != <name>null</name>) ?
                    <call>
                        <name><name>Long</name>.
                            <name>parseLong</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>
                                    <name>val</name>
                                </expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                    : -1
                </expr>
                ;
            </return>
            }
        </block>
    </function>

    <function>
        <type>
            <specifier>private</specifier>
            <specifier>static</specifier>
            <name>void</name>
        </type>
        <name>append</name>
        <parameter_list>(
            <param>
                <decl>
                    <type>
                        <name>StringBuilder</name>
                    </type>
                    <name>buf</name>
                </decl>
            </param>
            ,
            <param>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>value</name>
                </decl>
            </param>
            )
        </parameter_list>
        <block>{
            <if>if
                <condition>(
                    <expr>
                        <call>
                            <name><name>buf</name>.
                                <name>length</name>
                            </name>
                            <argument_list>()</argument_list>
                        </call>
                        &gt; 0
                    </expr>
                    )
                </condition>
                <then>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>buf</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>", "</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                </then>
            </if>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>buf</name>.
                            <name>append</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>
                                    <name>value</name>
                                </expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            }
        </block>
    </function>

    <comment type="javadoc">/**
        * Construct the Cache-Control header from info in the request object
        */
    </comment>
    <function>
        <type>
            <specifier>public</specifier>
            <specifier>static</specifier>
            <name>String</name>
        </type>
        <name>buildCacheControl</name>
        <parameter_list>(
            <param>
                <decl>
                    <type>
                        <name>AbstractRequest</name>
                    </type>
                    <name>request</name>
                </decl>
            </param>
            )
        </parameter_list>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <name>StringBuilder</name>
                    </type>
                    <name>buf</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>StringBuilder</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <if>if
                <condition>(
                    <expr>
                        <call>
                            <name><name>request</name>.
                                <name>isNoCache</name>
                            </name>
                            <argument_list>()</argument_list>
                        </call>
                    </expr>
                    )
                </condition>
                <then>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buf</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-cache"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                </then>
            </if>
            <if>if
                <condition>(
                    <expr>
                        <call>
                            <name><name>request</name>.
                                <name>isNoStore</name>
                            </name>
                            <argument_list>()</argument_list>
                        </call>
                    </expr>
                    )
                </condition>
                <then>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buf</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-store"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                </then>
            </if>
            <if>if
                <condition>(
                    <expr>
                        <call>
                            <name><name>request</name>.
                                <name>isNoTransform</name>
                            </name>
                            <argument_list>()</argument_list>
                        </call>
                    </expr>
                    )
                </condition>
                <then>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buf</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-transform"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                </then>
            </if>
            <if>if
                <condition>(
                    <expr>
                        <call>
                            <name><name>request</name>.
                                <name>isOnlyIfCached</name>
                            </name>
                            <argument_list>()</argument_list>
                        </call>
                    </expr>
                    )
                </condition>
                <then>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buf</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"only-if-cached"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                </then>
            </if>
            <if>if
                <condition>(
                    <expr>
                        <call>
                            <name><name>request</name>.
                                <name>getMaxAge</name>
                            </name>
                            <argument_list>()</argument_list>
                        </call>
                        != -1
                    </expr>
                    )
                </condition>
                <then>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buf</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"max-age=" +
                                            <call>
                                                <name><name>request</name>.
                                                    <name>getMaxAge</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                </then>
            </if>
            <if>if
                <condition>(
                    <expr>
                        <call>
                            <name><name>request</name>.
                                <name>getMaxStale</name>
                            </name>
                            <argument_list>()</argument_list>
                        </call>
                        != -1
                    </expr>
                    )
                </condition>
                <then>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buf</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"max-stale=" +
                                            <call>
                                                <name><name>request</name>.
                                                    <name>getMaxStale</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                </then>
            </if>
            <if>if
                <condition>(
                    <expr>
                        <call>
                            <name><name>request</name>.
                                <name>getMinFresh</name>
                            </name>
                            <argument_list>()</argument_list>
                        </call>
                        != -1
                    </expr>
                    )
                </condition>
                <then>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buf</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"min-fresh=" +
                                            <call>
                                                <name><name>request</name>.
                                                    <name>getMinFresh</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                </then>
            </if>
            <return>return
                <expr>
                    <call>
                        <name><name>buf</name>.
                            <name>toString</name>
                        </name>
                        <argument_list>()</argument_list>
                    </call>
                </expr>
                ;
            </return>
            }
        </block>
    </function>

    <comment type="javadoc">/**
        * Parse the Cache-Control header
        */
    </comment>
    <function>
        <type>
            <specifier>public</specifier>
            <specifier>static</specifier>
            <name>void</name>
        </type>
        <name>parseCacheControl</name>
        <parameter_list>(
            <param>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>cc</name>
                </decl>
            </param>
            ,
            <param>
                <decl>
                    <type>
                        <name>AbstractRequest</name>
                    </type>
                    <name>request</name>
                </decl>
            </param>
            )
        </parameter_list>
        <block>{
            <if>if
                <condition>(
                    <expr>
                        <name>cc</name>
                        == <name>null</name> ||
                        <call>
                            <name><name>cc</name>.
                                <name>length</name>
                            </name>
                            <argument_list>()</argument_list>
                        </call>
                        == 0
                    </expr>
                    )
                </condition>
                <then>
                    <return>return;</return>
                </then>
            </if>
            <decl_stmt>
                <decl>
                    <type>
                        <name>CacheControlParser</name>
                    </type>
                    <name>parser</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>CacheControlParser</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>request</name>.
                            <name>setNoCache</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>false</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>request</name>.
                            <name>setNoStore</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>false</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>request</name>.
                            <name>setNoTransform</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>false</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>request</name>.
                            <name>setOnlyIfCached</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>false</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>request</name>.
                            <name>setMaxAge</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>-1</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>request</name>.
                            <name>setMaxStale</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>-1</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>request</name>.
                            <name>setMinFresh</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>-1</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <for>for (
                <init>
                    <decl>
                        <type>
                            <name>Directive</name>
                        </type>
                        <name>directive</name> :
                        <range>
                            <expr>
                                <name>parser</name>
                            </expr>
                        </range>
                    </decl>
                </init>
                )
                <block>{
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>directive</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>NOCACHE</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>request</name>.
                                                <name>setNoCache</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>NOSTORE</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>request</name>.
                                                <name>setNoStore</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>NOTRANSFORM</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>request</name>.
                                                <name>setNoTransform</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>ONLYIFCACHED</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>request</name>.
                                                <name>setOnlyIfCached</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>MAXAGE</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>request</name>.
                                                <name>setMaxAge</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>value</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>parser</name>.
                                                                                <name>getValue</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>directive</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>MAXSTALE</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>request</name>.
                                                <name>setMaxStale</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>value</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>parser</name>.
                                                                                <name>getValue</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>directive</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>MINFRESH</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>request</name>.
                                                <name>setMinFresh</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>value</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>parser</name>.
                                                                                <name>getValue</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>directive</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>
                    }
                </block>
            </for>
            }
        </block>
    </function>

    <comment type="javadoc">/**
        * Parse the Cache-Control header
        */
    </comment>
    <function>
        <type>
            <specifier>public</specifier>
            <specifier>static</specifier>
            <name>void</name>
        </type>
        <name>parseCacheControl</name>
        <parameter_list>(
            <param>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>cc</name>
                </decl>
            </param>
            ,
            <param>
                <decl>
                    <type>
                        <name>AbstractResponse</name>
                    </type>
                    <name>response</name>
                </decl>
            </param>
            )
        </parameter_list>
        <block>{
            <if>if
                <condition>(
                    <expr>
                        <name>cc</name>
                        ==
                        <name>null</name>
                    </expr>
                    )
                </condition>
                <then>
                    <return>return;</return>
                </then>
            </if>
            <decl_stmt>
                <decl>
                    <type>
                        <name>CacheControlParser</name>
                    </type>
                    <name>parser</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>CacheControlParser</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>response</name>.
                            <name>setNoCache</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>false</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>response</name>.
                            <name>setNoStore</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>false</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>response</name>.
                            <name>setNoTransform</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>false</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>response</name>.
                            <name>setMustRevalidate</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>false</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>response</name>.
                            <name>setPrivate</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>false</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>response</name>.
                            <name>setPublic</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>false</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <call>
                        <name><name>response</name>.
                            <name>setMaxAge</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>-1</expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <for>for (
                <init>
                    <decl>
                        <type>
                            <name>Directive</name>
                        </type>
                        <name>directive</name> :
                        <range>
                            <expr>
                                <name>parser</name>
                            </expr>
                        </range>
                    </decl>
                </init>
                )
                <block>{
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>directive</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>NOCACHE</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>response</name>.
                                                <name>setNoCache</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>response</name>.
                                                <name>setNoCacheHeaders</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>parser</name>.
                                                                <name>getValues</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>directive</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>NOSTORE</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>response</name>.
                                                <name>setNoStore</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>NOTRANSFORM</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>response</name>.
                                                <name>setNoTransform</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>MUSTREVALIDATE</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>response</name>.
                                                <name>setMustRevalidate</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>PUBLIC</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>response</name>.
                                                <name>setPublic</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>PRIVATE</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>response</name>.
                                                <name>setPrivate</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>response</name>.
                                                <name>setPrivateHeaders</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>parser</name>.
                                                                <name>getValues</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>directive</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>MAXAGE</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>response</name>.
                                                <name>setMaxAge</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>value</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>parser</name>.
                                                                                <name>getValue</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>directive</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>
                    }
                </block>
            </for>
            }
        </block>
    </function>

    <comment type="javadoc">/**
        * Cache Control Directives
        */
    </comment>
    <enum>
        <specifier>public</specifier>
        enum <name>Directive</name>
        <block>{
            <expr_stmt>
                <expr>
                    <name>MAXAGE</name>
                </expr>
                ,
                <expr>
                    <name>MAXSTALE</name>
                </expr>
                ,
                <expr>
                    <name>MINFRESH</name>
                </expr>
                ,
                <expr>
                    <name>NOCACHE</name>
                </expr>
                ,
                <expr>
                    <name>NOSTORE</name>
                </expr>
                ,
                <expr>
                    <name>NOTRANSFORM</name>
                </expr>
                ,
                <expr>
                    <name>ONLYIFCACHED</name>
                </expr>
                ,
                <expr>
                    <name>MUSTREVALIDATE</name>
                </expr>
                ,
                <expr>
                    <name>PRIVATE</name>
                </expr>
                ,
                <expr>
                    <name>PROXYREVALIDATE</name>
                </expr>
                ,
                <expr>
                    <name>PUBLIC</name>
                </expr>
                ,
                <expr>
                    <name>SMAXAGE</name>
                </expr>
                ,
                <expr>
                    <name>UNKNOWN</name>
                </expr>
                ;
            </expr_stmt>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Directive</name>
                </type>
                <name>select</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>d</name>
                                    =
                                    <call>
                                        <name><name>d</name>.
                                            <name>toUpperCase</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>replaceAll</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"-"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>""</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Directive</name>.
                                            <name>valueOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>d</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                }
                            </block>
                        </catch>
                    </try>
                    <return>return
                        <expr>
                            <name>UNKNOWN</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </enum>

    <comment type="javadoc">/**
        * Parser for the Cache-Control header
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>static</specifier> class <name>CacheControlParser</name>
        <super>
            <implements>implements
                <name>
                    <name>Iterable</name>
                    <argument_list>&lt;
                        <argument>
                            <name>Directive</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </implements>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REGEX</name> =
                    <init>
                        <expr>"\\s*([\\w\\-]+)\\s*(=)?\\s*(\\d+|\\\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)+\\\")?\\s*"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Pattern</name>
                    </type>
                    <name>pattern</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>Pattern</name>.
                                    <name>compile</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>REGEX</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>
                            <name>HashMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>Directive</name>
                                </argument>
                                ,
                                <argument>
                                    <name>String</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>values</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>HashMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Directive</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>String</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>CacheControlParser</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Matcher</name>
                            </type>
                            <name>matcher</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>pattern</name>.
                                            <name>matcher</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>matcher</name>.
                                        <name>find</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>d</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>matcher</name>.
                                                    <name>group</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>1</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Directive</name>
                                    </type>
                                    <name>directive</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Directive</name>.
                                                    <name>select</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>d</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>directive</name>
                                        !=
                                        <name><name>Directive</name>.
                                            <name>UNKNOWN</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>values</name>.
                                                        <name>put</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>directive</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>matcher</name>.
                                                                        <name>group</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>3</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Directive</name>
                            </argument>
                            ,
                            <argument>
                                <name>String</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getValues</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>values</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Directive</name>
                            </type>
                            <name>directive</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>values</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>directive</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>Iterator</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Directive</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>iterator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>values</name>.
                                    <name>keySet</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>iterator</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getValues</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Directive</name>
                            </type>
                            <name>directive</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getValue</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>directive</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>value</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>CompressionUtil</name>.
                                                <name>splitAndTrim</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>","</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    }
</unit>
