<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\model\Collection.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>model</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>activation</name>.
            <name>MimeType</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>iri</name>.
            <name>IRI</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * Represents an collection element in an Atom Publishing Protocol introspection document.
        * &lt;/p&gt;
        *
        * &lt;pre&gt;
        * The "app:collection" describes an Atom Protocol collection. One
        * child element is defined here for app:collection: "app:member-type".
        *
        * appCollection =
        * element app:collection {
        * appCommonAttributes,
        * attribute href { text },
        * ( atomTitle
        * &amp;amp; appAccept
        * &amp;amp; extensionElement* )
        * }
        * &lt;/pre&gt;
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Collection</name>
        <super>
            <extends>extends
                <name>ExtensibleElement</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * The text value of the collections atom:title element
                *
                * @return The atom:title value
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getTitle</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the value of the collections atom:title element using type="text"
                *
                * @param title The value of the atom:title
                * @return The newly created title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Set the value of the collections atom:title element using type="html". Special characters in the value
                will be
                * automatically escaped (e.g. &amp; will become &amp;amp;
                *
                * @param title The value of the atom:title
                * @return The newly created title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitleAsHtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Set the value of the collections atom:title element using type="xhtml". The title text will be wrapped
                in a
                * xhtml:div and parsed to ensure that it is welformed XML. A ParseException (RuntimeException) could be
                thrown
                *
                * @param title The value of the atom:title
                * @return The newly created title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitleAsXHtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return the title element
                *
                * @return The title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>getTitleElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return the value of the app:collection elements href attribute
                *
                * @return The href attribute IRI value
                * @throws IRISyntaxException if the value of the href attribute is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getHref</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return the href attribute resolved against the in-scope Base URI
                *
                * @return The href attribute IRI value
                * @throws IRISyntaxException if the value of the href attribute is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getResolvedHref</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the value of the href attribute
                *
                * @param href The value of href attribute
                * @throws IRISyntaxException if the href attribute is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>setHref</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the listing of media-ranges allowed for this collection
                *
                * @return An array listing the media-ranges allowed for this collection
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getAccept</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the listing of media-ranges allowed for this collection. The special value "entry" is used to
                indicate Atom
                * Entry Documents.
                *
                * @param mediaRanges a listing of media-ranges
                * @throws MimeTypeParseException
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>setAccept</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type><name>String</name>...
                            </type>
                            <name>mediaRanges</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns true if the collection accepts the given media-type
                *
                * @param mediaType The media-type to check
                * @return True if the media-type is acceptable
                */
            </comment>
            <function_decl>
                <type>
                    <name>boolean</name>
                </type>
                <name>accepts</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>mediaType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns true if the collection accepts Atom entry documents (equivalent to calling
                * accepts("application/atom+xml;type=entry");)
                */
            </comment>
            <function_decl>
                <type>
                    <name>boolean</name>
                </type>
                <name>acceptsEntry</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns true if the collection accepts nothing (i.e. there is an empty accept element)
                */
            </comment>
            <function_decl>
                <type>
                    <name>boolean</name>
                </type>
                <name>acceptsNothing</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the appropriate accept element to indicate that entries are accepted (equivalent to calling
                * setAccept("application/atom+xml;type=entry");)
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>setAcceptsEntry</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the collection so that nothing is accepted (equivalent to calling setAccept(""); )
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>setAcceptsNothing</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a new accept element to the collection
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>addAccepts</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>mediaRange</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds new accept elements to the collection
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>addAccepts</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type><name>String</name>...
                            </type>
                            <name>mediaRanges</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Same as setAcceptsEntry except the existing accepts are not discarded
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>addAcceptsEntry</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns true if the collection accepts the given media-type
                *
                * @param mediaType The media-type to check
                * @return True if the media-type is acceptable
                */
            </comment>
            <function_decl>
                <type>
                    <name>boolean</name>
                </type>
                <name>accepts</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>MimeType</name>
                            </type>
                            <name>mediaType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the app:categories element
                *
                * @return The app:categories element
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Categories</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getCategories</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Add an app:categories element
                *
                * @return The newly created app:categories element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Categories</name>
                </type>
                <name>addCategories</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Add an app:categories element that links to an external Category Document
                *
                * @param href The IRI of the external Category Document
                * @return The newly created app:categories element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Categories</name>
                </type>
                <name>addCategories</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Add the app:categories element to the collection
                *
                * @param categories The app:categories element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>addCategories</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Categories</name>
                            </type>
                            <name>categories</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Add a listing of categories to the collection
                *
                * @param categories The listing of categories to add
                * @param fixed True if the listing of categories should be fixed
                * @param scheme The default IRI scheme for the categories listing
                * @return The newly created app:categories element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Categories</name>
                </type>
                <name>addCategories</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>List</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Category</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>categories</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>fixed</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>scheme</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>
