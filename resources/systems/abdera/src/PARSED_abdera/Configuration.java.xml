<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\util\Configuration.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>Abdera</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>factory</name>.
            <name>ExtensionFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>factory</name>.
            <name>Factory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>parser</name>.
            <name>NamedParser</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>parser</name>.
            <name>Parser</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>parser</name>.
            <name>ParserFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
            <name>NamedWriter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
            <name>StreamWriter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
            <name>Writer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>writer</name>.
            <name>WriterFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>xpath</name>.
            <name>XPath</name>
        </name>
        ;
    </import>

    <class type="interface">
        <specifier>public</specifier>
        interface <name>Configuration</name>
        <super>
            <extends>extends <name>Cloneable</name>,
                <name>Serializable</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Retrieve the value of the specified configuration option
                *
                * @return The configuration option value or null
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>String</name>
                </type>
                <name>getConfigurationOption</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>id</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Retrieve the value of the specified configuration option or _default if the value is null
                *
                * @return The configuration option value of _default
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>String</name>
                </type>
                <name>getConfigurationOption</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>id</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>_default</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get a new instance of the default Factory impl
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Factory</name>
                </type>
                <name>newFactoryInstance</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Abdera</name>
                            </type>
                            <name>abdera</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get a new instance of the default Parser impl
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Parser</name>
                </type>
                <name>newParserInstance</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Abdera</name>
                            </type>
                            <name>abdera</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get a new instance of the default XPath impl
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XPath</name>
                </type>
                <name>newXPathInstance</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Abdera</name>
                            </type>
                            <name>abdera</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get a new instance of the default ParserFactory impl
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ParserFactory</name>
                </type>
                <name>newParserFactoryInstance</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Abdera</name>
                            </type>
                            <name>abdera</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get a new instance of the default WriterFactory impl
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>WriterFactory</name>
                </type>
                <name>newWriterFactoryInstance</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Abdera</name>
                            </type>
                            <name>abdera</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get a new instance of the default Writer impl
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Writer</name>
                </type>
                <name>newWriterInstance</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Abdera</name>
                            </type>
                            <name>abdera</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get a new instance of the default StreamWriter impl
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>StreamWriter</name>
                </type>
                <name>newStreamWriterInstance</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Abdera</name>
                            </type>
                            <name>abdera</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get the collection of NamedParsers;
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>String</name>
                            </argument>
                            ,
                            <argument>
                                <name>NamedParser</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getNamedParsers</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Get the collection of NamedWriters
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>String</name>
                            </argument>
                            ,
                            <argument>
                                <name>NamedWriter</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getNamedWriters</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Get the collection of Named StreamWriters
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>String</name>
                            </argument>
                            ,
                            <argument>
                                <name>
                                    <name>Class</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                            <extends>extends
                                                <name>StreamWriter</name>
                                            </extends>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getStreamWriters</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Get the collection of ExtensionFactory impls
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>ExtensionFactory</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getExtensionFactories</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>Object</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Registers a new NamedParser, this method doesn't override a parser if already exists.
                *
                * @param parser is the new NamedParser to add
                * @return the instance of the configuration class
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Configuration</name>
                </type>
                <name>addNamedParser</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NamedParser</name>
                            </type>
                            <name>parser</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Registers a new NamedWriter, this method doesn't override a writer if already exists.
                *
                * @param writer is the new NamedWriter to add
                * @return the instance of the configuration class
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Configuration</name>
                </type>
                <name>addNamedWriter</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NamedWriter</name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Registers a new ExtensionFactory, this method doesn't override an extensionFactory if already exists.
                *
                * @param factory is the new ExtensionFactory to add
                * @return the instance of the configuration class
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Configuration</name>
                </type>
                <name>addExtensionFactory</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ExtensionFactory</name>
                            </type>
                            <name>factory</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Registers a new StreamWriter, this method doesn't override a streamWriter if already exists.
                *
                * @param sw is the new StreamWriter to add
                * @return the instance of the configuration class
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Configuration</name>
                </type>
                <name>addStreamWriter</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Class</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                            <extends>extends
                                                <name>StreamWriter</name>
                                            </extends>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>sw</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            }
        </block>
    </class>
</unit>
