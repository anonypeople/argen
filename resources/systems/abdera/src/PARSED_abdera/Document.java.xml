<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\model\Document.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>model</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Date</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>activation</name>.
            <name>MimeType</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>iri</name>.
            <name>IRI</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>rfc4646</name>.
            <name>Lang</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>util</name>.
            <name>EntityTag</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>util</name>.<name>XmlUtil</name>.
            <name>XMLVersion</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * The top level artifact of the Feed Object Model. The Parser component processes data from an InputStream and
        returns
        * a Document instance. The type of Document returned depends on the XML format being parsed. The Feed Object
        Model
        * supports four basic types of documents: FeedDocument, EntryDocument, ServiceDocument (Atom Publishing Protocol
        * Introspection Documents) and XmlDocument (any arbitrary XML).
        * &lt;/p&gt;
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface
        <name>
            <name>Document</name>
            <argument_list>&lt;
                <argument>
                    <name>T</name>
                    <extends>extends
                        <name>Element</name>
                    </extends>
                </argument>
                &gt;
            </argument_list>
        </name>
        <super>
            <extends>extends <name>Base</name>,
                <name>Serializable</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Returns the root element of the document (equivalent to DOM's getDocumentElement)
                *
                * @return The root element of the document
                */
            </comment>
            <function_decl>
                <type>
                    <name>T</name>
                </type>
                <name>getRoot</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the root element of the document
                *
                * @param root Set the root element of the document
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>setRoot</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>T</name>
                            </type>
                            <name>root</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the Base URI of the document. All relative URI's contained in the document will be resolved
                according to
                * this base.
                *
                * @return The Base IRI
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getBaseUri</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the Base URI of the document. All relative URI's contained in the document will be resolved
                according to
                * this base.
                *
                * @param base The Base URI
                * @throws IRISyntaxException if the IRI is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>setBaseUri</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the content type of this document
                *
                * @return The content type of this document
                */
            </comment>
            <function_decl>
                <type>
                    <name>MimeType</name>
                </type>
                <name>getContentType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content type for this document
                *
                * @param contentType The content type of document
                * @throws MimeTypeParseException if the content type is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>setContentType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>contentType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the last modified date for this document
                *
                * @return The last-modified date
                */
            </comment>
            <function_decl>
                <type>
                    <name>Date</name>
                </type>
                <name>getLastModified</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the last modified date for this document
                *
                * @param lastModified the last-modified date
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>setLastModified</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>lastModified</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Gets the charset used for this document
                *
                * @return The character encoding used for this document
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getCharset</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the charset used for this document
                *
                * @param charset The character encoding to use
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>setCharset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>charset</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Add a processing instruction to the document
                *
                * @param target The processing instruction target
                * @param value The processing instruction value
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>addProcessingInstruction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get the values for the given processing instruction
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getProcessingInstruction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Add a xml-stylesheet processing instruction to the document
                *
                * @param href The href of the stylesheet
                * @param media The media target for this stylesheet or null if none
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>addStylesheet</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>media</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return the entity tag for this document
                */
            </comment>
            <function_decl>
                <type>
                    <name>EntityTag</name>
                </type>
                <name>getEntityTag</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the entity tag for this document
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>setEntityTag</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>EntityTag</name>
                            </type>
                            <name>tag</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Set the entity tag for this document
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>setEntityTag</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tag</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get the language
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getLanguage</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the value of the xml:lang attribute as a Lang object
                */
            </comment>
            <function_decl>
                <type>
                    <name>Lang</name>
                </type>
                <name>getLanguageTag</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * set the base language
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>setLanguage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>lang</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get the slug for this document
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getSlug</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the slug for this document
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>setSlug</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>slug</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return true if insignificant whitespace must be preserved
                */
            </comment>
            <function_decl>
                <type>
                    <name>boolean</name>
                </type>
                <name>getMustPreserveWhitespace</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set to true to preserve insignificant whitespace
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>setMustPreserveWhitespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>preserve</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get the XMLVersion used by this document
                */
            </comment>
            <function_decl>
                <type>
                    <name>XMLVersion</name>
                </type>
                <name>getXmlVersion</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            }
        </block>
    </class>
</unit>
