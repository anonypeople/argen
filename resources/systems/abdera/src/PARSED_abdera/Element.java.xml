<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\model\Element.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>model</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>activation</name>.
            <name>DataHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>namespace</name>.
            <name>QName</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>iri</name>.
            <name>IRI</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>iri</name>.
            <name>IRISyntaxException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>rfc4646</name>.
            <name>Lang</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Root interface for all elements in the Feed Object Model
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Element</name>
        <super>
            <extends>extends <name>Base</name>,
                <name>
                    <name>Iterable</name>
                    <argument_list>&lt;
                        <argument>
                            <name>Element</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Return this Element's parent element or document
                *
                * @return The parent
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Base</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>getParentElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set this Element's parent element
                *
                * @param parent The parent element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setParentElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get the element preceding this one
                *
                * @return The preceding sibling
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>getPreviousSibling</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Get the element following this one
                *
                * @return The following sibling
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>getNextSibling</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Get the first child element
                *
                * @return The first child
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>getFirstChild</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Get the first previous sibling with the specified QName
                *
                * @param qname The XML QName of the sibling to find
                * @return The matching element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>getPreviousSibling</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get the first following sibling with the specified QName
                *
                * @param qname The XML QName of the sibling to find
                * @return The matching element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>getNextSibling</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Get the first child element with the given QName
                *
                * @param qname The XML QName of the sibling to find
                * @return The matching element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>getFirstChild</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return the XML QName of this element
                *
                * @return The QName of the element
                */
            </comment>
            <function_decl>
                <type>
                    <name>QName</name>
                </type>
                <name>getQName</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the value of this elements &lt;code&gt;xml:lang&lt;/code&gt; attribute or null if &lt;code&gt;xml:lang&lt;/code&gt;
                is undefined.
                *
                * @return The xml:lang value
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getLanguage</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the value of the xml:lang attribute as a Lang object
                */
            </comment>
            <function_decl>
                <type>
                    <name>Lang</name>
                </type>
                <name>getLanguageTag</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a Locale object created from the &lt;code&gt;xml:lang&lt;/code&gt; attribute
                *
                * @return A Locale appropriate for the Language (xml:lang)
                */
            </comment>
            <function_decl>
                <type>
                    <name>Locale</name>
                </type>
                <name>getLocale</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of this elements &lt;code&gt;xml:lang&lt;/code&gt; attribute.
                *
                * @param language the value of the xml:lang element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setLanguage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>language</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the value of this element's &lt;code&gt;xml:base&lt;/code&gt; attribute or null if &lt;code&gt;xml:base&lt;/code&gt;
                is
                * undefined.
                *
                * @return The Base URI
                * @throws IRISyntaxException if the Base URI is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getBaseUri</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the current in-scope, fully qualified Base URI for this element.
                *
                * @throws IRISyntaxException if the Base URI is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getResolvedBaseUri</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of this element's &lt;code&gt;xml:base&lt;/code&gt; attribute.
                *
                * @param base The IRI base value
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setBaseUri</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IRI</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of this element's &lt;code&gt;xml:base&lt;/code&gt; attribute.
                *
                * @param base The Base IRI
                * @throws IRISyntaxException if the base URI is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setBaseUri</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the document to which this element belongs
                *
                * @return The Document to which this element belongs
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getDocument</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the value of the named attribute
                *
                * @param name The name of the attribute
                * @return The value of the attribute
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getAttributeValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the value of the named attribute
                *
                * @param qname The XML QName of the attribute
                * @return The value of the attribute
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getAttributeValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a listing of all attributes on this element
                *
                * @return The listing of attributes for this element
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>QName</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getAttributes</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a listing of extension attributes on this element (extension attributes are attributes whose
                namespace
                * URI is different than the elements)
                *
                * @return The listing non-Atom attributes
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>QName</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getExtensionAttributes</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Remove the named Attribute
                *
                * @param qname The XML QName of the attribute to remove
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>removeAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Remove the named attribute
                *
                * @param name The name of the attribute to remove
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>removeAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the named attribute
                *
                * @param name The name of the attribute
                * @param value The value of the attribute
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setAttributeValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the named attribute
                *
                * @param qname The XML QName of the attribute
                * @param value The value of the attribute
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setAttributeValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Removes this element from its current document
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>discard</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the Text value of this element
                *
                * @return The text value
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getText</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the Text value of this element
                *
                * @param text The text value
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>setText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Set the Text value of this element using the data handler
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DataHandler</name>
                            </type>
                            <name>dataHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Declare a namespace
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>declareNS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return a map listing the xml namespaces declared for this element
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>String</name>
                            </argument>
                            ,
                            <argument>
                                <name>String</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getNamespaces</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return a listing of this elements child elements
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getElements</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return true if insignificant whitespace must be preserved
                */
            </comment>
            <function_decl>
                <type>
                    <name>boolean</name>
                </type>
                <name>getMustPreserveWhitespace</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set to true to preserve insignificant whitespace
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setMustPreserveWhitespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>preserve</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            }
        </block>
    </class>
</unit>
