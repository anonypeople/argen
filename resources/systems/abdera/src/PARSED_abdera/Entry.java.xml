<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\model\Entry.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>model</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Date</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>activation</name>.
            <name>DataHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>activation</name>.
            <name>MimeType</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>iri</name>.
            <name>IRI</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * Represents an Atom Entry element.
        * &lt;/p&gt;
        * &lt;p&gt;
        * Per RFC4287:
        * &lt;/p&gt;
        *
        * &lt;pre&gt;
        * The "atom:entry" element represents an individual entry, acting as a
        * container for metadata and data associated with the entry. This
        * element can appear as a child of the atom:feed element, or it can
        * appear as the document (i.e., top-level) element of a stand-alone
        * Atom Entry Document.
        *
        * atomEntry =
        * element atom:entry {
        * atomCommonAttributes,
        * (atomAuthor*
        * &amp;amp; atomCategory*
        * &amp;amp; atomContent?
        * &amp;amp; atomContributor*
        * &amp;amp; atomId
        * &amp;amp; atomLink*
        * &amp;amp; atomPublished?
        * &amp;amp; atomRights?
        * &amp;amp; atomSource?
        * &amp;amp; atomSummary?
        * &amp;amp; atomTitle
        * &amp;amp; atomUpdated
        * &amp;amp; extensionElement*)
        * }
        *
        * This specification assigns no significance to the order of appearance
        * of the child elements of atom:entry.
        *
        * The following child elements are defined by this specification (note
        * that it requires the presence of some of these elements):
        *
        * o atom:entry elements MUST contain one or more atom:author elements,
        * unless the atom:entry contains an atom:source element that
        * contains an atom:author element or, in an Atom Feed Document, the
        * atom:feed element contains an atom:author element itself.
        * o atom:entry elements MAY contain any number of atom:category
        * elements.
        * o atom:entry elements MUST NOT contain more than one atom:content
        * element.
        * o atom:entry elements MAY contain any number of atom:contributor
        * elements.
        * o atom:entry elements MUST contain exactly one atom:id element.
        * o atom:entry elements that contain no child atom:content element
        * MUST contain at least one atom:link element with a rel attribute
        * value of "alternate".
        * o atom:entry elements MUST NOT contain more than one atom:link
        * element with a rel attribute value of "alternate" that has the
        * same combination of type and hreflang attribute values.
        * o atom:entry elements MAY contain additional atom:link elements
        * beyond those described above.
        * o atom:entry elements MUST NOT contain more than one atom:published
        * element.
        * o atom:entry elements MUST NOT contain more than one atom:rights
        * element.
        * o atom:entry elements MUST NOT contain more than one atom:source
        * element.
        * o atom:entry elements MUST contain an atom:summary element in either
        * of the following cases:
        * * the atom:entry contains an atom:content that has a "src"
        * attribute (and is thus empty).
        * * the atom:entry contains content that is encoded in Base64;
        * i.e., the "type" attribute of atom:content is a MIME media type
        * [MIMEREG], but is not an XML media type [RFC3023], does not
        * begin with "text/", and does not end with "/xml" or "+xml".
        * o atom:entry elements MUST NOT contain more than one atom:summary
        * element.
        * o atom:entry elements MUST contain exactly one atom:title element.
        * o atom:entry elements MUST contain exactly one atom:updated element.
        * &lt;/pre&gt;
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Entry</name>
        <super>
            <extends>extends
                <name>ExtensibleElement</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Returns the first author listed for the entry
                *
                * @return The atom:author
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>getAuthor</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the complete set of authors listed for the entry
                *
                * @return The listing of atom:author elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Person</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getAuthors</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual author to the entry
                *
                * @param person The person to add
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>addAuthor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Person</name>
                            </type>
                            <name>person</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an author
                *
                * @param name The name of the author
                * @return The newly created atom:author element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>addAuthor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an author
                *
                * @param name The name of the author
                * @param email The author's email address
                * @param uri A URI belonging to the author
                * @return The newly created atom:author element
                * @throws IRISyntaxException if the URI is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>addAuthor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>email</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of categories listed for the entry
                *
                * @return The listing of atom:category elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Category</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getCategories</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of categories using the specified scheme A listing of atom:category elements
                using the
                * specified scheme
                *
                * @throws IRISyntaxException if the scheme is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Category</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getCategories</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>scheme</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual category to the entry
                *
                * @param category The atom:category element to add
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>addCategory</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Category</name>
                            </type>
                            <name>category</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a category to the entry
                *
                * @param term The category term to add
                * @return The newly created atom:category
                */
            </comment>
            <function_decl>
                <type>
                    <name>Category</name>
                </type>
                <name>addCategory</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>term</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a category to the entry
                *
                * @param scheme The category scheme
                * @param term The category term
                * @param label The human readable label
                * @return The newly create atom:category
                * @throws IRISyntaxException if the scheme is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Category</name>
                </type>
                <name>addCategory</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>scheme</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>term</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>label</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the content for this entry
                *
                * @return The atom:content element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>getContentElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry
                *
                * @param content The atom:content element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>setContentElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Content</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry as @type="text"
                *
                * @param value The text value of the content
                * @return The newly created atom:content
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry as @type="html"
                *
                * @param value The text value of the content. Special characters will be escaped (e.g. &amp;amp; will
                become &amp;amp;amp;)
                * @return The newly created atom:content
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContentAsHtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry as @type="xhtml"
                *
                * @param value The text value of the content. The text will be parsed as XHTML
                * @return The newly created atom:content
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContentAsXhtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry
                *
                * @param value The text value of the content
                * @param type The Content Type of the text
                * @return The newly created atom:content
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Content</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry
                *
                * @param value The content element value. If the value is a Div, the the type attribute will be set to
                * type="xhtml", otherwise type="application/xml"
                * @return The newly create atom:content
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry
                *
                * @param element The element value
                * @param mediaType The media type of the element
                * @throws MimeTypeParseException if the mediaType is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>mediaType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry
                *
                * @param dataHandler The Data Handler containing the binary content needing Base64 encoding.
                * @throws MimeTypeParseException if the media Type specified by the dataHandler is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DataHandler</name>
                            </type>
                            <name>dataHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry
                *
                * @param dataHandler The Data Handler containing the binary content needing Base64 encoding.
                * @param mediaType The mediatype of the binary content
                * @return The created content element
                * @throws MimeTypeParseException if the media type specified is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DataHandler</name>
                            </type>
                            <name>dataHandler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>mediatype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry
                *
                * @param inputStream An inputstream providing binary content
                * @return The created content element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>inputStream</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry
                *
                * @param inputStream An inputstream providing binary content
                * @param mediaType The mediatype of the binary content
                * @return The created content element
                * @throws MimeTypeParseException if the media type specified is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>inputStream</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>mediatype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry
                *
                * @param value the string value of the content
                * @param mediatype the media type for the content
                * @return The newly created atom:content
                * @throws MimeTypeParseException if the media type is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>mediatype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the content for this entry as out of line.
                *
                * @param uri URI of the content (value of the "src" attribute).
                * @param mediatype Type of the content.
                * @return The new content element.
                * @throws MimeTypeParseException if the mime type is invalid.
                * @throws IRISyntaxException if the URI is invalid.
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>setContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IRI</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>mediatype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the text of the content element
                *
                * @return text content
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getContent</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns an input stream from the content element value. This is particularly useful when dealing with
                Base64
                * binary content.
                *
                * @throws IOException
                */
            </comment>
            <function_decl>
                <type>
                    <name>InputStream</name>
                </type>
                <name>getContentStream</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the content/@src attribute, if any
                *
                * @return The src IRI
                * @throws IRISyntaxException if the src attribute is invalid
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getContentSrc</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the content type
                *
                * @return The content type
                */
            </comment>
            <function_decl>
                <type>
                    <name><name>Content</name>.
                        <name>Type</name>
                    </name>
                </type>
                <name>getContentType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the media type of the content type or null if type equals 'text', 'html' or 'xhtml'
                *
                * @return The content media type
                */
            </comment>
            <function_decl>
                <type>
                    <name>MimeType</name>
                </type>
                <name>getContentMimeType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of contributors for this entry
                *
                * @return The listing of atom:contributor elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Person</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getContributors</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual contributor to this entry
                *
                * @param person The atom:contributor element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>addContributor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Person</name>
                            </type>
                            <name>person</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a contributor
                *
                * @param name The contributor name
                * @return The newly created atom:contributor
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>addContributor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an author
                *
                * @param name The contributor name
                * @param email The contributor's email address
                * @param uri The contributor's URI
                * @return The newly created atom:contributor
                * @throws IRISyntaxException if the uri is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>addContributor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>email</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the universally unique identifier for this entry
                *
                * @return The atom:id element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>getIdElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the universally unique identifier for this entry
                *
                * @param id The atom:id element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>setIdElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IRIElement</name>
                            </type>
                            <name>id</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the universally unique identifier for this entry
                *
                * @throws IRISyntaxException if the atom:id value is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getId</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the universally unique identifier for this entry
                *
                * @param id The atom:id value
                * @return The newly created atom:id element
                * @throws IRISyntaxException if the atom:id value is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>setId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>id</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Creates a new randomized atom:id for the entry
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>newId</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the universally unique identifier for this entry
                *
                * @param id The atom:id value
                * @param normalize true if the atom:id value should be normalized as called for by RFC4287
                * @return The newly created atom:id element
                * @throws IRISyntaxException if the atom:id value is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>setId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>id</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>normalize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of links for this entry
                *
                * @return The listing of atom:link elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Link</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getLinks</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of links using the specified rel attribute value
                *
                * @param rel The rel attribute value to look for
                * @return The listing of atom:link element's with the rel attribute
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Link</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getLinks</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of links using the specified rel attributes values
                *
                * @param rels A listing of link relations
                * @return A listof atom:link elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Link</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getLinks</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type><name>String</name>...
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual link to the entry
                *
                * @param link the atom:link to add
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>addLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Link</name>
                            </type>
                            <name>link</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Add a link to the entry
                *
                * @param href The IRI of the link
                * @return The newly created atom:link
                * @throws IRISyntaxException if the href is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>addLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Add a link to the entry
                *
                * @param href The IRI of the link
                * @param rel The link rel attribute
                * @return The newly created atom:link
                * @throws IRISyntaxException if the href is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>addLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Add a link to the entry
                *
                * @param href The IRI of the link
                * @param rel The link rel attribute
                * @param type The media type of the link
                * @param hreflang The language of the target
                * @param length The length of the resource
                * @return The newly created atom:link
                * @throws IRISyntaxException if the href is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>addLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>hreflang</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:published" element is a Date construct indicating an instant in time associated
                with an event
                * early in the life cycle of the entry... Typically, atom:published will be associated with the initial
                creation or
                * first availability of the resource.
                *
                * @return The atom:published element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>getPublishedElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:published" element is a Date construct indicating an instant in time associated
                with an event
                * early in the life cycle of the entry... Typically, atom:published will be associated with the initial
                creation or
                * first availability of the resource.
                *
                * @param dateTime the atom:published element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>setPublishedElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTime</name>
                            </type>
                            <name>dateTime</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return the value of the atom:published element
                *
                * @return a java.util.Date for the atom:published value
                */
            </comment>
            <function_decl>
                <type>
                    <name>Date</name>
                </type>
                <name>getPublished</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the value of the atom:published element
                *
                * @param value The java.util.Date
                * @return The newly created atom:published element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>setPublished</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Set the value of the atom:published element using the serialized string value
                *
                * @param value The serialized date
                * @return The newly created atom:published element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>setPublished</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * &lt;p&gt;
                * The rights element is typically used to convey a human readable copyright (e.g. "&amp;lt;atom:rights&gt;Copyright
                (c),
                * 2006&amp;lt;/atom:rights&gt;).
                * &lt;/p&gt;
                * &lt;p&gt;
                * RFC4287: The "atom:rights" element is a Text construct that conveys information about rights held in
                and over an
                * entry or feed.
                * &lt;/p&gt;
                *
                * @return The atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>getRightsElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * &lt;p&gt;
                * The rights element is typically used to convey a human readable copyright (e.g. "&amp;lt;atom:rights&gt;Copyright
                (c),
                * 2006&amp;lt;/atom:rights&gt;).
                * &lt;/p&gt;
                * &lt;p&gt;
                * RFC4287: The "atom:rights" element is a Text construct that conveys information about rights held in
                and over an
                * entry or feed.
                * &lt;/p&gt;
                *
                * @param text The atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>setRightsElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Text</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the rights as @type="text"
                *
                * @param value The text value of the atom:rights element
                * @return The newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setRights</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the rights as @type="html". Special characters like &amp; will be automatically
                escaped
                *
                * @param value The text value of the atom:rights element.
                * @return The newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setRightsAsHtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the rights as @type="xhtml"
                *
                * @param value The text value of the atom:rights element
                * @return The newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setRightsAsXhtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the rights
                *
                * @param value The text value of the atom:rights element
                * @param type The text type
                * @return The newly create atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setRights</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the right as @type="xhtml"
                *
                * @param value The XHTML div for the atom:rights element
                * @return The newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setRights</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Div</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return the String value of the atom:rights element
                *
                * @return The text value of the atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getRights</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return the @type of the atom:rights element
                *
                * @return The Text.Type of the atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name><name>Text</name>.
                        <name>Type</name>
                    </name>
                </type>
                <name>getRightsType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * &lt;p&gt;
                * Returns the source element for this entry.
                * &lt;/p&gt;
                * &lt;p&gt;
                * RFC4287: If an atom:entry is copied from one feed into another feed, then the source atom:feed's
                metadata (all
                * child elements of atom:feed other than the atom:entry elements) MAY be preserved within the copied
                entry by
                * adding an atom:source child element, if it is not already present in the entry, and including some or
                all of the
                * source feed's Metadata elements as the atom:source element's children. Such metadata SHOULD be
                preserved if the
                * source atom:feed contains any of the child elements atom:author, atom:contributor, atom:rights, or
                atom:category
                * and those child elements are not present in the source atom:entry.
                * &lt;/p&gt;
                *
                * @return The atom:source element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Source</name>
                </type>
                <name>getSource</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * &lt;p&gt;
                * Returns the source element for this entry.
                * &lt;/p&gt;
                * &lt;p&gt;
                * RFC4287: If an atom:entry is copied from one feed into another feed, then the source atom:feed's
                metadata (all
                * child elements of atom:feed other than the atom:entry elements) MAY be preserved within the copied
                entry by
                * adding an atom:source child element, if it is not already present in the entry, and including some or
                all of the
                * source feed's Metadata elements as the atom:source element's children. Such metadata SHOULD be
                preserved if the
                * source atom:feed contains any of the child elements atom:author, atom:contributor, atom:rights, or
                atom:category
                * and those child elements are not present in the source atom:entry.
                * &lt;/p&gt;
                *
                * @param source The atom:source element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>setSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Source</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:summary" element is a Text construct that conveys a short summary, abstract, or
                excerpt of an
                * entry... It is not advisable for the atom:summary element to duplicate atom:title or atom:content
                because Atom
                * Processors might assume there is a useful summary when there is none.
                *
                * @return The atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>getSummaryElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:summary" element is a Text construct that conveys a short summary, abstract, or
                excerpt of an
                * entry... It is not advisable for the atom:summary element to duplicate atom:title or atom:content
                because Atom
                * Processors might assume there is a useful summary when there is none.
                *
                * @param text The atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>setSummaryElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Text</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the summary as @type="text"
                *
                * @param value The text value of the atom:summary element
                * @return the newly created atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setSummary</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the summary as @type="html"
                *
                * @param value The text value of the atom:summary element
                * @return the newly created atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setSummaryAsHtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the summary as @type="xhtml"
                *
                * @param value The text value of the atom:summary element
                * @return the newly created atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setSummaryAsXhtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the summary
                *
                * @param value The text value of the atom:summary element
                * @param type The Text.Type of the atom:summary element
                * @return The newly created atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setSummary</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the summary as @type="xhtml"
                *
                * @param value The XHTML div
                * @return the newly created atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setSummary</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Div</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the text string value of this summary
                *
                * @return the text value of the atom:summary
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getSummary</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the summary type
                *
                * @return the Text.Type of the atom:summary
                */
            </comment>
            <function_decl>
                <type>
                    <name><name>Text</name>.
                        <name>Type</name>
                    </name>
                </type>
                <name>getSummaryType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:title" element is a Text construct that conveys a human-readable title for an entry
                or feed.
                *
                * @return the atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>getTitleElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:title" element is a Text construct that conveys a human-readable title for an entry
                or feed.
                *
                * @param title the atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>setTitleElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Text</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the title as @type="text"
                *
                * @param value The title value
                * @return The newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the title as @type="html"
                *
                * @param value The title value
                * @return The newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitleAsHtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the title as @type="xhtml"
                *
                * @param value The title value
                * @return The newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitleAsXhtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the title
                *
                * @param value The title value
                * @param type The Text.Type of the title
                * @return the newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the title as @type="xhtml"
                *
                * @param value The XHTML div
                * @return the newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Div</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the text string value of the title element
                *
                * @return text value of the atom:title
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getTitle</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the @type of this entries title
                *
                * @return the Text.Type of the atom:title
                */
            </comment>
            <function_decl>
                <type>
                    <name><name>Text</name>.
                        <name>Type</name>
                    </name>
                </type>
                <name>getTitleType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:updated" element is a Date construct indicating the most recent instant in time
                when an entry
                * or feed was modified in a way the publisher considers significant. Therefore, not all modifications
                necessarily
                * result in a changed atom:updated value.
                *
                * @return the atom:updated element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>getUpdatedElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:updated" element is a Date construct indicating the most recent instant in time
                when an entry
                * or feed was modified in a way the publisher considers significant. Therefore, not all modifications
                necessarily
                * result in a changed atom:updated value.
                *
                * @param updated the atom:updated element.
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>setUpdatedElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTime</name>
                            </type>
                            <name>updated</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return atom:updated
                *
                * @return A java.util.Date value
                */
            </comment>
            <function_decl>
                <type>
                    <name>Date</name>
                </type>
                <name>getUpdated</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the atom:updated value
                *
                * @param value The new value
                * @return The newly created atom:updated element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>setUpdated</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Set the atom:updated value
                *
                * @param value The new value
                * @return The newly created atom:updated element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>setUpdated</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * APP Introduces a new app:edited element whose value changes every time the entry is updated
                *
                * @return the app:edited element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>getEditedElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the app:edited element
                *
                * @param modified The app:edited element
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>setEditedElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTime</name>
                            </type>
                            <name>modified</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return the value of app:edited
                *
                * @return app:edited
                */
            </comment>
            <function_decl>
                <type>
                    <name>Date</name>
                </type>
                <name>getEdited</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the value of app:edited
                *
                * @param value The java.util.Date value
                * @return The newly created app:edited element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>setEdited</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Set the value of app:edited
                *
                * @param value the serialized string value for app:edited
                * @return The newly created app:edited element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>setEdited</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns this entries Atom Publishing Protocol control element. A new control element will be created
                if one
                * currently does not exist
                *
                * @return The app:control element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Control</name>
                </type>
                <name>getControl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>create</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns this entries Atom Publishing Protocol control element
                *
                * @return The app:control element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Control</name>
                </type>
                <name>getControl</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets this entries Atom Publishing Protocol control element
                *
                * @param control The app:contorl element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>setControl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Control</name>
                            </type>
                            <name>control</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets whether or not this entry is a draft
                *
                * @param draft true if this entry should be marked as a draft
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>setDraft</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>draft</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns true if this entry is a draft
                *
                * @return True if this entry is a date
                */
            </comment>
            <function_decl>
                <type>
                    <name>boolean</name>
                </type>
                <name>isDraft</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the first link with the specified rel attribute value
                *
                * @param rel The link rel
                * @return a Link with the specified rel attribute
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns this entries first alternate link
                *
                * @return the Alternate link
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getAlternateLink</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the first alternate link matching the specified type and hreflang
                *
                * @throws MimeTypeParseException
                * @param type The link media type
                * @param hreflang The link target language
                * @return The matching atom:link
                * @throws MimeTypeParseException if the type is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getAlternateLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>hreflang</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns this entries first enclosure link
                *
                * @return the Enclosure link
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getEnclosureLink</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns this entries first edit link
                *
                * @return the Edit Link
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getEditLink</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns this entries first edit-media link (if any)
                *
                * @return the Edit Media Link
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getEditMediaLink</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the first edit-media link matching the specified type and hreflang
                *
                * @param type a media type
                * @param hreflang a target language
                * @return A matching atom:link element
                * @throws MimeTypeParseException
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getEditMediaLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>hreflang</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns this entries first self link
                *
                * @return the Self Link
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getSelfLink</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return a link href resolved against the in-scope Base URI
                *
                * @param rel The rel attribute value
                * @return The resolved IRI
                * @throws IRISyntaxException if the href attribute is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getLinkResolvedHref</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return a link href resolved against the in-scope Base URI
                *
                * @return The resolved IRI
                * @throws IRISyntaxException if the href attribute is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getAlternateLinkResolvedHref</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return a link href resolved against the in-scope Base URI
                *
                * @param type A target type
                * @param hreflang A target language
                * @return The resolved IRI
                * @throws IRISyntaxException if the href attribute is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getAlternateLinkResolvedHref</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>hreflang</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return a link href resolved against the in-scope Base URI
                *
                * @return The resolved IRI
                * @throws IRISyntaxException if the href attribute is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getEnclosureLinkResolvedHref</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return a link href resolved against the in-scope Base URI
                *
                * @return The resolved IRI
                * @throws IRISyntaxException if the href attribute is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getEditLinkResolvedHref</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return a link href resolved against the in-scope Base URI
                *
                * @return The resolved IRI
                * @throws IRISyntaxException if the href attribute is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getEditMediaLinkResolvedHref</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return a link href resolved against the in-scope Base URI
                *
                * @param type A target type
                * @param hreflang A target language
                * @return The resolved IRI
                * @throws IRISyntaxException if the href attribute is malformed
                * @throws MimeTypeParseException if the type is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getEditMediaLinkResolvedHref</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>hreflang</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return a link href resolved against the in-scope Base URI
                *
                * @return The resolved IRI
                * @throws IRISyntaxException if the href attribute is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getSelfLinkResolvedHref</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <function_decl>
                <type>
                    <name>Control</name>
                </type>
                <name>addControl</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            }
        </block>
    </class>
</unit>
