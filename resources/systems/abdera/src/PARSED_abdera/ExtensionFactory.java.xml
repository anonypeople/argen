<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\factory\ExtensionFactory.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>factory</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Base</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Element</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * Extension Factories are used to provide a means of dynamically resolving builders for namespaced extension
        elements
        * &lt;/p&gt;
        * &lt;p&gt;
        * There are four ways of supporting extension elements.
        * &lt;/p&gt;
        * &lt;ol&gt;
        * &lt;li&gt;Implement your own Factory (hard)&lt;/li&gt;
        * &lt;li&gt;Subclass the default Axiom-based Factory (also somewhat difficult)&lt;/li&gt;
        * &lt;li&gt;Implement and register an ExtensionFactory (wonderfully simple)&lt;/li&gt;
        * &lt;li&gt;Use the Feed Object Model's dynamic support for extensions (also very simple)&lt;/li&gt;
        * &lt;/ol&gt;
        * &lt;p&gt;
        * Registering an Extension Factory requires generally nothing more than implementing ExtensionFactory and then
        creating
        * a file called META-INF/services/org.apache.abdera.factory.ExtensionFactory and listing the class names of each
        * ExtensionFactory you wish to register.
        * &lt;/p&gt;
        * &lt;p&gt;
        * ExtensionFactory implementations are assumed to be threadsafe
        * &lt;/p&gt;
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>ExtensionFactory</name>
        <block>{

            <comment type="javadoc">/**
                * Returns true if this extension factory handles the specified namespace
                *
                * @param namespace The XML namespace of the extension
                * @return True if the namespace is supported by the ExtensionFactory
                */
            </comment>
            <function_decl>
                <type>
                    <name>boolean</name>
                </type>
                <name>handlesNamespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the Namespace URIs handled by this Extension Factory
                *
                * @return A List of Namespace URIs Supported by this Extension
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getNamespaces</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Abdera's support for static extensions is based on a simple delegation model. Static extension
                interfaces wrap
                * the dynamic extension API. ExtensionFactory's are handed the internal dynamic element instance and are
                expected
                * to hand back an object wrapper.
                *
                * @param internal The Abdera element that needs to be wrapped
                * @return The wrapper element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>getElementWrapper</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>internal</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Retrieve the mime type for the element
                *
                * @param base An Abdera object
                * @return A MIME media type for the object
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Base</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>String</name>
                </type>
                <name>getMimeType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>T</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            }
        </block>
    </class>
</unit>
