<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\factory\Factory.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>factory</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>javax</name>.<name>activation</name>.
            <name>MimeType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>namespace</name>.
            <name>QName</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>Abdera</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Base</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Categories</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Category</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Collection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Content</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Control</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>DateTime</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Div</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Document</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Element</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Entry</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Feed</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Generator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>IRIElement</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Link</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Person</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Service</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Source</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Text</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>model</name>.
            <name>Workspace</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>parser</name>.
            <name>Parser</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The Factory interface is the primary means by which Feed Object Model instances are built. Factories are
        specific to
        * parser implementations. Users will generally not have to know anything about the Factory implementation, which
        will
        * be automatically selected based on the Abdera configuration options.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Factory</name>
        <block>{

            <comment type="javadoc">/**
                * Create a new Parser instance.
                *
                * @return A new instance of the Parser associated with this Factory
                */
            </comment>
            <function_decl>
                <type>
                    <name>Parser</name>
                </type>
                <name>newParser</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Document instance with a root Element of type T.
                *
                * @return A new instance of a Document
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>Document</name>
                        <argument_list>&lt;
                            <argument>
                                <name>T</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>newDocument</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Service element.
                *
                * @return A newly created Service element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Service</name>
                </type>
                <name>newService</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Service element as a child of the given Base.
                *
                * @param parent The element or document to which the new Service should be added as a child
                * @return A newly created Service element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Service</name>
                </type>
                <name>newService</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Base</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Workspace element.
                *
                * @return A newly created Workspace element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Workspace</name>
                </type>
                <name>newWorkspace</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Workspace element as a child of the given Element.
                *
                * @param parent The element to which the new Workspace should be added as a child
                * @return A newly created Workspace element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Workspace</name>
                </type>
                <name>newWorkspace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Collection element.
                *
                * @return A newly created Collection element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>newCollection</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Collection element as a child of the given Element.
                *
                * @param parent The element to which the new Collection should be added as a child
                * @return A newly created Collection element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>newCollection</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Feed element. A new Document containing the Feed will be created automatically
                *
                * @return A newly created Feed element.
                */
            </comment>
            <function_decl>
                <type>
                    <name>Feed</name>
                </type>
                <name>newFeed</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Feed element as a child of the given Base.
                *
                * @param parent The element or document to which the new Feed should be added as a child
                * @return A newly created Feed element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Feed</name>
                </type>
                <name>newFeed</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Base</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Entry element. A new Document containing the Entry will be created automatically
                *
                * @return A newly created Entry element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>newEntry</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Entry element as a child of the given Base.
                *
                * @param parent The element or document to which the new Entry should be added as a child
                * @return A newly created Entry element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Entry</name>
                </type>
                <name>newEntry</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Base</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Category element.
                *
                * @return A newly created Category element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Category</name>
                </type>
                <name>newCategory</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Category element as a child of the given Element.
                *
                * @param parent The element to which the new Category should be added as a child
                * @return A newly created Category element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Category</name>
                </type>
                <name>newCategory</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Content element.
                *
                * @return A newly created Content element with type="text"
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>newContent</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Content element of the given Content.Type.
                *
                * @param type The Content.Type for the newly created Content element.
                * @return A newly created Content element using the specified type
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>newContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Content</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Content element of the given Content.Type as a child of the given Element.
                *
                * @param type The Content.Type for the newly created Content element.
                * @param parent The element to which the new Content should be added as a child
                * @return A newly created Content element using the specified type
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>newContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Content</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Content element of the given MediaType.
                *
                * @param mediaType The MIME media type to be specified by the type attribute
                * @return A newly created Content element using the specified MIME type
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>newContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>MimeType</name>
                            </type>
                            <name>mediaType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Content element of the given MediaType as a child of the given Element.
                *
                * @param mediaType The MIME media type to be specified by the type attribute
                * @param parent The element to which the new Content should be added as a child
                * @return A newly created Content element using the specified mediatype.
                */
            </comment>
            <function_decl>
                <type>
                    <name>Content</name>
                </type>
                <name>newContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>MimeType</name>
                            </type>
                            <name>mediaType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new published element.
                *
                * @return A newly created atom:published element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>newPublished</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new published element as a child of the given Element.
                *
                * @param parent The element to which the new Published element should be added as a child
                * @return A newly created atom:published element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>newPublished</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new updated element.
                *
                * @return A newly created atom:updated element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>newUpdated</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * create a new updated element as a child of the given Element.
                *
                * @param parent The element to which the new Updated element should be added as a child
                * @return A newly created atom:updated element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>newUpdated</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new app:edited element. The app:edited element is defined by the Atom Publishing Protocol
                specification
                * for use in atom:entry elements created and edited using that protocol. The element should only ever
                appear as a
                * child of atom:entry.
                *
                * @return A newly created app:edited element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>newEdited</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new app:edited element. The app:edited element is defined by the Atom Publishing Protocol
                specification
                * for use in atom:entry elements created and edited using that protocol. The element should only ever
                appear as a
                * child of atom:entry.
                *
                * @param parent The element to which the new Edited element should be added as a child
                * @return A newly created app:edited element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>newEdited</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new DateTime element with the given QName as a child of the given Element. RFC4287 provides
                the abstract
                * Atom Date Construct as a reusable component. Any extension element whose value is a Date/Time SHOULD
                reuse this
                * construct to maintain consistency with the base specification.
                *
                * @param qname The XML QName of the Atom Date element to create
                * @param parent The element to which the new Atom Date element should be added as a child
                * @return The newly created Atom Date Construct element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>newDateTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Generator with Abdera's default name and version.
                *
                * @return A newly created and pre-populated atom:generator element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Generator</name>
                </type>
                <name>newDefaultGenerator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Generator using Abdera's default name and version as a child of the given Element.
                *
                * @param parent The element to which the new Generator element should be added as a child
                * @return A newly created and pre-populated atom:generator element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Generator</name>
                </type>
                <name>newDefaultGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Generator element.
                *
                * @return A newly created atom:generator element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Generator</name>
                </type>
                <name>newGenerator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Generator element as a child of the given Element.
                *
                * @param parent The element to which the new Generator element should be added as a child
                * @return A newly creatd atom:generator element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Generator</name>
                </type>
                <name>newGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new id element.
                *
                * @return A newly created atom:id element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>newID</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new id element as a child of the given Element.
                *
                * @param parent The element to which the new ID element should be added as a child
                * @return A newly created atom:id element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>newID</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new icon element.
                *
                * @return A newly created atom:icon element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>newIcon</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new icon element as a child of the given Element.
                *
                * @param parent The element to which the new Icon element should be added as a child
                * @return A newly created atom:icon element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>newIcon</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new logo element.
                *
                * @return A newly created atom:logo element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>newLogo</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new logo element as a child of the given Element.
                *
                * @param parent The element to which the new Logo element should be added as a child
                * @return A newly created atom:logo element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>newLogo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new uri element.
                *
                * @return A newly created atom:uri element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>newUri</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new uri element as a child of the given Element.
                *
                * @param parent The element to which the new URI element should be added as a child
                * @return A newly created atom:uri element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>newUri</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new IRI element with the given QName as a child of the given Element.
                *
                * @param qname The XML QName of the new IRI element
                * @param parent The element to which the new generic IRI element should be added as a child
                * @return A newly created element whose text value can be an IRI
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>newIRIElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Link element.
                *
                * @return A newly created atom:link element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>newLink</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Link element as a child of the given Element.
                *
                * @param parent The element to which the new Link element should be added as a child
                * @return A newly created atom:uri element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>newLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new author element.
                *
                * @return A newly created atom:author element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>newAuthor</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new author element as a child of the given Element.
                *
                * @param parent The element to which the new Author element should be added as a child
                * @return A newly created atom:author element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>newAuthor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new contributor element.
                *
                * @return A newly created atom:contributor element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>newContributor</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new contributor element as a child of the given Element.
                *
                * @param parent The element to which the new Contributor element should be added as a child
                * @return A newly created atom:contributor element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>newContributor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Person element with the given QName as a child of the given Element. RFC4287 provides the
                abstract
                * Atom Person Construct to represent people and other entities within an Atom Document. Extensions that
                wish to
                * represent people SHOULD reuse this construct.
                *
                * @param qname The XML QName of the newly created Person element
                * @param parent The element to which the new Person element should be added as a child
                * @return A newly created Atom Person Construct element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>newPerson</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Source element.
                *
                * @return A newly created atom:source element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Source</name>
                </type>
                <name>newSource</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Source element as a child of the given Element.
                *
                * @param parent The element to which the new Source element should be added as a child
                * @return A newly created atom:source element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Source</name>
                </type>
                <name>newSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Text element with the given QName and Text.Type. RFC4287 provides the abstract Text
                Construct to
                * represent simple Text, HTML or XHTML within a document. This construct is used by Atom core elements
                like
                * atom:title, atom:summary, atom:rights, atom:subtitle, etc and SHOULD be reused by extensions that need
                a way of
                * embedding text in a document.
                *
                * @param qname The XML QName of the Text element to create
                * @param type The type of text (plain text, HTML or XHTML)
                * @return A newly created Atom Text Construct element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Text element with the given QName and Text.Type as a child of the given Element.
                *
                * @param qname The XML QName of the Text element to create
                * @param type The type of text (plain text, HTML or XHTML)
                * @param parent The element to which the new Updated element should be added as a child
                * @return A newly created Atom Text Construct element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new title element.
                *
                * @return A newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newTitle</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new title element as a child of the given Element.
                *
                * @param parent The element to which the new Title element should be added as a child
                * @return A newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new title element with the given Text.Type.
                *
                * @param type The type of text used in the title (plain text, HTML, XHTML)
                * @return A newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new title element with the given Text.Type as a child of the given Element.
                *
                * @param type The type of text used in the title (plain text, HTML, XHTML)
                * @param parent The element to which the new Updated element should be added as a child
                * @return A newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new subtitle element.
                *
                * @return A newly created atom:subtitle element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newSubtitle</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new subtitle element as a child of the given Element.
                *
                * @param parent The element to which the new Subtitle element should be added as a child
                * @return A newly created atom:subtitle element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newSubtitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new subtitle element with the given Text.Type.
                *
                * @param type The type of text used in the subtitle (plain text, HTML, XHTML)
                * @return A newly created atom:subtitle element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newSubtitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new subtitle element with the given Text.Type as a child of the given Element.
                *
                * @param type The type of text used i the subtitle (plain text, HTML, XHTML)
                * @param parent The element to which the new Subtitle element should be added as a child
                * @return A newly created atom:subtitle element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newSubtitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new summary element.
                *
                * @return A newly created atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newSummary</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new summary element as a child of the given Element.
                *
                * @param parent The element to which the new Summary element should be added as a child
                * @return A newly created atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newSummary</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new summary element with the given Text.Type.
                *
                * @param type The type of text used in the summary (plain text, HTML, XHTML)
                * @return A newly created atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newSummary</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new summary element with the given Text.Type as a child of the given Element.
                *
                * @param type The type of text used in the summary (plain text, HTML, XHTML)
                * @param parent The element to which the new Summary element should be added as a child
                * @return A newly created atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newSummary</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new rights element.
                *
                * @return A newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newRights</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new rights element as a child of the given Element.
                *
                * @param parent The element to which the new Rights element should be added as a child
                * @return A newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newRights</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new rights element with the given Text.Type.
                *
                * @param type The type of text used in the Rights (plain text, HTML, XHTML)
                * @return A newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newRights</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new rights element with the given Text.Type as a child of the given Element.
                *
                * @param type The type of text used in the Rights (plain text, HTML, XHTML)
                * @param parent The element to which the new Rights element should be added as a child
                * @return A newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>newRights</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new name element.
                *
                * @return A newly created atom:name element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Element</name>
                </type>
                <name>newName</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new name element as a child of the given Element.
                *
                * @param parent The element to which the new Name element should be added as a child
                * @return A newly created atom:summary element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Element</name>
                </type>
                <name>newName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new email element.
                *
                * @return A newly created atom:email element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Element</name>
                </type>
                <name>newEmail</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new email element as a child of the given Element.
                *
                * @param parent The element to which the new Email element should be added as a child
                * @return A newly created atom:email element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Element</name>
                </type>
                <name>newEmail</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Element with the given QName.
                *
                * @return A newly created element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>newElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Element with the given QName as a child of the given Base.
                *
                * @param qname The XML QName of the element to create
                * @param parent The element or document to which the new element should be added as a child
                * @return A newly created element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>newElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Base</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new extension element with the given QName.
                *
                * @param qname The XML QName of the element to create
                * @return A newly created element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>newExtensionElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new extension element with the given QName as a child of the given Base.
                *
                * @param qname The XML QName of the element to create
                * @param parent The element or document to which the new element should be added as a child
                * @return A newly created element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Element</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>newExtensionElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Base</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Control element. The app:control element is introduced by the Atom Publishing Protocol as
                a means of
                * allowing publishing clients to provide metadata to a server affecting the way an entry is published.
                The control
                * element SHOULD only ever appear as a child of the atom:entry and MUST only ever appear once.
                *
                * @return A newly app:control element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Control</name>
                </type>
                <name>newControl</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Control element as a child of the given Element.
                *
                * @param parent The element to which the new Control element should be added as a child
                * @return A newly app:control element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Control</name>
                </type>
                <name>newControl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Div element.
                *
                * @return A newly xhtml:div element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Div</name>
                </type>
                <name>newDiv</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Div element as a child of the given Base.
                *
                * @param parent The element or document to which the new XHTML div element should be added as a child
                * @return A newly xhtml:div element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Div</name>
                </type>
                <name>newDiv</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Base</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Registers an extension factory for this Factory instance only
                *
                * @param extensionFactory An ExtensionFactory instance
                */
            </comment>
            <function_decl>
                <type>
                    <name>Factory</name>
                </type>
                <name>registerExtension</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ExtensionFactory</name>
                            </type>
                            <name>extensionFactory</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Categories element. The app:categories element is introduced by the Atom Publishing
                Protocol as a
                * means of providing a listing of atom:category's that can be used by entries in a collection.
                *
                * @return A newly app:categories element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Categories</name>
                </type>
                <name>newCategories</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Create a new Categories element. The app:categories element is introduced by the Atom Publishing
                Protocol as a
                * means of providing a listing of atom:category's that can be used by entries in a collection.
                *
                * @param parent The element or document to which the new Categories element should be added as a child
                * @return A newly app:categories element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Categories</name>
                </type>
                <name>newCategories</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Base</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Generate a new random UUID URI
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>newUuidUri</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Get the Abdera instance for this factory
                */
            </comment>
            <function_decl>
                <type>
                    <name>Abdera</name>
                </type>
                <name>getAbdera</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Get the mime type for the specified extension element / document
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Base</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>String</name>
                </type>
                <name>getMimeType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>T</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a listing of extension factories registered
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>listExtensionFactories</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            }
        </block>
    </class>
</unit>
