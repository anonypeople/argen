<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\model\Generator.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>model</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>iri</name>.
            <name>IRI</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>iri</name>.
            <name>IRISyntaxException</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * Identifies the software implementation that produced the Atom feed.
        * &lt;/p&gt;
        * &lt;p&gt;
        * Per RFC4287:
        * &lt;/p&gt;
        *
        * &lt;pre&gt;
        * The "atom:generator" element's content identifies the agent used to
        * generate a feed, for debugging and other purposes.
        * The content of this element, when present, MUST be a string that is a
        * human-readable name for the generating agent. Entities such as
        * "&amp;amp;amp;" and "&amp;amp;lt;" represent their corresponding characters
        * ("&amp;amp;" and "&amp;lt;" respectively), not markup.
        *
        * The atom:generator element MAY have a "uri" attribute whose value
        * MUST be an IRI reference [RFC3987]. When dereferenced, the resulting
        * URI (mapped from an IRI, if necessary) SHOULD produce a
        * representation that is relevant to that agent.
        *
        * The atom:generator element MAY have a "version" attribute that
        * indicates the version of the generating agent.
        * &lt;/pre&gt;
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Generator</name>
        <super>
            <extends>extends
                <name>Element</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * The atom:generator element MAY have a "uri" attribute whose value MUST be an IRI reference [RFC3987].
                When
                * dereferenced, the resulting URI (mapped from an IRI, if necessary) SHOULD produce a representation
                that is
                * relevant to that agent.
                *
                * @throws IRISyntaxException if the uri is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getUri</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the fully qualified form of the generator element's uri attribute (resolved against the
                in-scope Base
                * URI)
                *
                * @return the resolved uri value
                * @throws IRISyntaxException if the uri is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getResolvedUri</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * The atom:generator element MAY have a "uri" attribute whose value MUST be an IRI reference [RFC3987].
                When
                * dereferenced, the resulting URI (mapped from an IRI, if necessary) SHOULD produce a representation
                that is
                * relevant to that agent.
                *
                * @param uri The URI attribute value
                * @throws IRISyntaxException if the uri is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Generator</name>
                </type>
                <name>setUri</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * The atom:generator element MAY have a "version" attribute that indicates the version of the generating
                agent.
                *
                * @return The version attribute value
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getVersion</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * The atom:generator element MAY have a "version" attribute that indicates the version of the generating
                agent.
                *
                * @param version The version attribute
                */
            </comment>
            <function_decl>
                <type>
                    <name>Generator</name>
                </type>
                <name>setVersion</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>
