<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\model\Link.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>model</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>javax</name>.<name>activation</name>.
            <name>MimeType</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>iri</name>.
            <name>IRI</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * Represents an Atom Link element.
        * &lt;/p&gt;
        * &lt;p&gt;
        * Per RFC4287:
        * &lt;/p&gt;
        *
        * &lt;pre&gt;
        * The "atom:link" element defines a reference from an entry or feed to
        * a Web resource. This specification assigns no meaning to the content
        * (if any) of this element.
        *
        * atomLink =
        * element atom:link {
        * atomCommonAttributes,
        * attribute href { atomUri },
        * attribute rel { atomNCName | atomUri }?,
        * attribute type { atomMediaType }?,
        * attribute hreflang { atomLanguageTag }?,
        * attribute title { text }?,
        * attribute length { text }?,
        * undefinedContent
        * }
        * &lt;/pre&gt;
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Link</name>
        <super>
            <extends>extends
                <name>ExtensibleElement</name>
            </extends>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_ALTERNATE</name> =
                    <init>
                        <expr>"alternate"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_CURRENT</name> =
                    <init>
                        <expr>"current"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_ENCLOSURE</name> =
                    <init>
                        <expr>"enclosure"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_FIRST</name> =
                    <init>
                        <expr>"first"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_LAST</name> =
                    <init>
                        <expr>"last"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_NEXT</name> =
                    <init>
                        <expr>"next"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_PAYMENT</name> =
                    <init>
                        <expr>"payment"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_PREVIOUS</name> =
                    <init>
                        <expr>"previous"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_RELATED</name> =
                    <init>
                        <expr>"related"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_SELF</name> =
                    <init>
                        <expr>"self"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_VIA</name> =
                    <init>
                        <expr>"via"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_REPLIES</name> =
                    <init>
                        <expr>"replies"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_LICENSE</name> =
                    <init>
                        <expr>"license"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_EDIT</name> =
                    <init>
                        <expr>"edit"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_EDIT_MEDIA</name> =
                    <init>
                        <expr>"edit-media"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_SERVICE</name> =
                    <init>
                        <expr>"service"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>IANA_BASE</name> =
                    <init>
                        <expr>"http://www.iana.org/assignments/relation/"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_ALTERNATE_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_ALTERNATE</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_CURRENT_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_CURRENT</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_ENCLOSURE_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_ENCLOSURE</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_FIRST_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_FIRST</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_LAST_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_LAST</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_NEXT_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_NEXT</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_PAYMENT_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_PAYMENT</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_PREVIOUS_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_PREVIOUS</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_RELATED_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_RELATED</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_SELF_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_SELF</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_VIA_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_VIA</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_REPLIES_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_REPLIES</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_LICENSE_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_LICENSE</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_EDIT_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_EDIT</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_EDIT_MEDIA_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_EDIT_MEDIA</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>REL_SERVICE_IANA</name> =
                    <init>
                        <expr>
                            <name>IANA_BASE</name>
                            +
                            <name>REL_SERVICE</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * RFC4287: The "href" attribute contains the link's IRI. atom:link elements MUST have an href attribute,
                whose
                * value MUST be a IRI reference [RFC3987].
                *
                * @return The href IRI value
                * @throws IRISyntaxException if the href is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getHref</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the value of the link's href attribute resolved against the in-scope Base IRI
                *
                * @return The href IRI value
                * @throws IRISyntaxException if the href is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getResolvedHref</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "href" attribute contains the link's IRI. atom:link elements MUST have an href attribute,
                whose
                * value MUST be a IRI reference [RFC3987].
                *
                * @param href The href IRI
                * @throws IRISyntaxException if the href is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>setHref</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * &lt;p&gt;
                * RFC4287: atom:link elements MAY have a "rel" attribute that indicates the link relation type. If the
                "rel"
                * attribute is not present, the link element MUST be interpreted as if the link relation type is
                "alternate"... The
                * value of "rel" MUST be a string that is non-empty and matches either the "isegment-nz-nc" or the "IRI"
                production
                * in [RFC3987]. Note that use of a relative reference other than a simple name is not allowed. If a name
                is given,
                * implementations MUST consider the link relation type equivalent to the same name registered within the
                IANA
                * Registry of Link Relations (Section 7), and thus to the IRI that would be obtained by appending the
                value of the
                * rel attribute to the string "http://www.iana.org/assignments/relation/". The value of "rel" describes
                the meaning
                * of the link, but does not impose any behavioral requirements on Atom Processors.
                * &lt;/p&gt;
                *
                * @return The rel attribute value
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getRel</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * &lt;p&gt;
                * RFC4287: atom:link elements MAY have a "rel" attribute that indicates the link relation type. If the
                "rel"
                * attribute is not present, the link element MUST be interpreted as if the link relation type is
                "alternate"... The
                * value of "rel" MUST be a string that is non-empty and matches either the "isegment-nz-nc" or the "IRI"
                production
                * in [RFC3987]. Note that use of a relative reference other than a simple name is not allowed. If a name
                is given,
                * implementations MUST consider the link relation type equivalent to the same name registered within the
                IANA
                * Registry of Link Relations (Section 7), and thus to the IRI that would be obtained by appending the
                value of the
                * rel attribute to the string "http://www.iana.org/assignments/relation/". The value of "rel" describes
                the meaning
                * of the link, but does not impose any behavioral requirements on Atom Processors.
                * &lt;/p&gt;
                *
                * @param rel The rel attribute value
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>setRel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: On the link element, the "type" attribute's value is an advisory media type: it is a hint
                about the type
                * of the representation that is expected to be returned when the value of the href attribute is
                dereferenced. Note
                * that the type attribute does not override the actual media type returned with the representation. Link
                elements
                * MAY have a type attribute, whose value MUST conform to the syntax of a MIME media type [MIMEREG].
                *
                * @return The value of the type attribute
                * @throws MimeTypeParseException if the type is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>MimeType</name>
                </type>
                <name>getMimeType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: On the link element, the "type" attribute's value is an advisory media type: it is a hint
                about the type
                * of the representation that is expected to be returned when the value of the href attribute is
                dereferenced. Note
                * that the type attribute does not override the actual media type returned with the representation. Link
                elements
                * MAY have a type attribute, whose value MUST conform to the syntax of a MIME media type [MIMEREG].
                *
                * @param type The link type
                * @throws MimeTypeParseException if the type is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>setMimeType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "hreflang" attribute's content describes the language of the resource pointed to by the
                href
                * attribute. When used together with the rel="alternate", it implies a translated version of the entry.
                Link
                * elements MAY have an hreflang attribute, whose value MUST be a language tag [RFC3066].
                *
                * @return The hreflang value
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getHrefLang</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "hreflang" attribute's content describes the language of the resource pointed to by the
                href
                * attribute. When used together with the rel="alternate", it implies a translated version of the entry.
                Link
                * elements MAY have an hreflang attribute, whose value MUST be a language tag [RFC3066].
                *
                * @param lang The hreflang value
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>setHrefLang</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>lang</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "title" attribute conveys human-readable information about the link. The content of the
                "title"
                * attribute is Language-Sensitive. Entities such as "&amp;amp;amp;" and "&amp;amp;lt;" represent their
                corresponding
                * characters ("&amp;amp;" and "&amp;lt;", respectively), not markup. Link elements MAY have a title
                attribute.
                *
                * @return The title attribute
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getTitle</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "title" attribute conveys human-readable information about the link. The content of the
                "title"
                * attribute is Language-Sensitive. Entities such as "&amp;amp;amp;" and "&amp;amp;lt;" represent their
                corresponding
                * characters ("&amp;amp;" and "&amp;lt;", respectively), not markup. Link elements MAY have a title
                attribute.
                *
                * @param title The title attribute
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>setTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "length" attribute indicates an advisory length of the linked content in octets; it is a
                hint about
                * the content length of the representation returned when the URI in the href attribute is mapped to a
                IRI and
                * dereferenced. Note that the length attribute does not override the actual content length of the
                representation as
                * reported by the underlying protocol. Link elements MAY have a length attribute.
                *
                * @return The length attribute value
                */
            </comment>
            <function_decl>
                <type>
                    <name>long</name>
                </type>
                <name>getLength</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "length" attribute indicates an advisory length of the linked content in octets; it is a
                hint about
                * the content length of the representation returned when the IRI in the href attribute is mapped to a
                URI and
                * dereferenced. Note that the length attribute does not override the actual content length of the
                representation as
                * reported by the underlying protocol. Link elements MAY have a length attribute.
                *
                * @param length The length attribute value
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>setLength</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>
