<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\parser\NamedParser.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>parser</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>util</name>.
            <name>NamedItem</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Abdera's abstract parsing model allows developers to implement parsers capable of translating non-Atom formats
        into
        * Abdera objects. For instance, a developer could create an RDF, RSS, JSON or hAtom microformat parser that
        * automatically converted to Atom. Alternative parsers are made available via the ParserFactory interface.
        *
        * &lt;pre&gt;
        * Parser parser = abdera.getParserFactory().getParser("json");
        * Document&amp;lt;Feed&gt; doc = parser.parse(...);
        *
        * Parser parser = abdera.getParserFactory().getParser("hatom");
        * Document&amp;lt;Feed&gt; doc = parser.parse(...);
        * &lt;/pre&gt;
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>NamedParser</name>
        <super>
            <extends>extends <name>Parser</name>,
                <name>NamedItem</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Returns a listing of media type of the format consumed by this parser
                *
                * @return An array of MIME Media Types
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getInputFormats</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns true if this parser is capable of consuming the specified media type
                *
                * @param mediatype The MIME media type to check
                * @return True if the media type is supported
                */
            </comment>
            <function_decl>
                <type>
                    <name>boolean</name>
                </type>
                <name>parsesFormat</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>mediatype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            }
        </block>
    </class>
</unit>
