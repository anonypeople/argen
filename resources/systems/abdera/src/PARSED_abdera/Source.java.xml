<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\model\Source.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>model</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Date</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>iri</name>.
            <name>IRI</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * Per RFC4287:
        * &lt;/p&gt;
        *
        * &lt;pre&gt;
        * If an atom:entry is copied from one feed into another feed, then the
        * source atom:feed's metadata (all child elements of atom:feed other
        * than the atom:entry elements) MAY be preserved within the copied
        * entry by adding an atom:source child element, if it is not already
        * present in the entry, and including some or all of the source feed's
        * Metadata elements as the atom:source element's children. Such
        * metadata SHOULD be preserved if the source atom:feed contains any of
        * the child elements atom:author, atom:contributor, atom:rights, or
        * atom:category and those child elements are not present in the source
        * atom:entry.
        *
        * atomSource =
        * element atom:source {
        * atomCommonAttributes,
        * (atomAuthor*
        * &amp;amp; atomCategory*
        * &amp;amp; atomContributor*
        * &amp;amp; atomGenerator?
        * &amp;amp; atomIcon?
        * &amp;amp; atomId?
        * &amp;amp; atomLink*
        * &amp;amp; atomLogo?
        * &amp;amp; atomRights?
        * &amp;amp; atomSubtitle?
        * &amp;amp; atomTitle?
        * &amp;amp; atomUpdated?
        * &amp;amp; extensionElement*)
        * }
        *
        * The atom:source element is designed to allow the aggregation of
        * entries from different feeds while retaining information about an
        * entry's source feed. For this reason, Atom Processors that are
        * performing such aggregation SHOULD include at least the required
        * feed-level Metadata elements (atom:id, atom:title, and atom:updated)
        * in the atom:source element.
        * &lt;/pre&gt;
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Source</name>
        <super>
            <extends>extends
                <name>ExtensibleElement</name>
            </extends>
        </super>
        <block>{
            <comment type="javadoc">/**
                * Returns the first author listed for the entry
                *
                * @return This feed's author
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>getAuthor</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the complete set of authors listed for the entry
                *
                * @return This feeds list of authors
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Person</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getAuthors</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual author to the entry
                *
                * @param person an atom:author element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>addAuthor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Person</name>
                            </type>
                            <name>person</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an author
                *
                * @param name The author name
                * @return The newly created atom:author element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>addAuthor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an author
                *
                * @param name The author name
                * @param email The author email
                * @param iri The author iri
                * @return The newly created atom:author element
                * @throws IRISyntaxException if the iri is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>addAuthor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>email</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>iri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of categories listed for the entry
                *
                * @return A listing of app:category elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Category</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getCategories</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of categories using the specified scheme
                *
                * @param scheme A Scheme IRI
                * @return The listing of app:category elements
                * @throws IRISyntaxException if the scheme is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Category</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getCategories</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>scheme</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual category to the entry
                *
                * @param category A atom:category element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>addCategory</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Category</name>
                            </type>
                            <name>category</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a category to the feed
                *
                * @param term A category term
                * @return The newly created atom:category element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Category</name>
                </type>
                <name>addCategory</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>term</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a category to the feed
                *
                * @param scheme A category scheme
                * @param term A category term
                * @param label The human readable label
                * @return the newly created atom:category element
                * @throws IRISyntaxException if the scheme is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Category</name>
                </type>
                <name>addCategory</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>scheme</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>term</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>label</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of contributors for this entry
                *
                * @return A listing of atom:contributor elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Person</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getContributors</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual contributor to this entry
                *
                * @param person a atom:contributor element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>addContributor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Person</name>
                            </type>
                            <name>person</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a contributor
                *
                * @param name The name of a contributor
                * @return The newly created atom:contributor element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>addContributor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a contributor
                *
                * @param name The contributor name
                * @param email The contributor email
                * @param iri The contributor uri
                * @return The atom:contributor element
                * @throws IRISyntaxException if the iri is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Person</name>
                </type>
                <name>addContributor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>email</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>iri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:generator" element's content identifies the agent used to generate a feed, for
                debugging and
                * other purposes.
                *
                * @return The atom:generator
                */
            </comment>
            <function_decl>
                <type>
                    <name>Generator</name>
                </type>
                <name>getGenerator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:generator" element's content identifies the agent used to generate a feed, for
                debugging and
                * other purposes.
                *
                * @param generator A atom:generator element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Generator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:generator" element's content identifies the agent used to generate a feed, for
                debugging and
                * other purposes.
                *
                * @param iri The iri attribute
                * @param version The version attribute
                * @param value The value attribute
                * @return A newly created atom:generator element
                * @throws IRISyntaxException if the iri is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Generator</name>
                </type>
                <name>setGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>iri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:icon" element's content is an IRI reference [RFC3987] that identifies an image that
                provides
                * iconic visual identification for a feed... The image SHOULD have an aspect ratio of one (horizontal)
                to one
                * (vertical) and SHOULD be suitable for presentation at a small size.
                *
                * @return the atom:icon element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>getIconElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:icon" element's content is an IRI reference [RFC3987] that identifies an image that
                provides
                * iconic visual identification for a feed... The image SHOULD have an aspect ratio of one (horizontal)
                to one
                * (vertical) and SHOULD be suitable for presentation at a small size.
                *
                * @param iri The atom:icon element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setIconElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IRIElement</name>
                            </type>
                            <name>iri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:icon" element's content is an IRI reference [RFC3987] that identifies an image that
                provides
                * iconic visual identification for a feed... The image SHOULD have an aspect ratio of one (horizontal)
                to one
                * (vertical) and SHOULD be suitable for presentation at a small size.
                *
                * @param iri The atom:icon IRI value
                * @throws IRISyntaxException if the iri is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>setIcon</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>iri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:icon" element's content is an IRI reference [RFC3987] that identifies an image that
                provides
                * iconic visual identification for a feed... The image SHOULD have an aspect ratio of one (horizontal)
                to one
                * (vertical) and SHOULD be suitable for presentation at a small size.
                *
                * @return The atom:icon value
                * @throws IRISyntaxException if the atom:icon value is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getIcon</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:id" element conveys a permanent, universally unique identifier for an entry or
                feed.
                *
                * @return The atom:id element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>getIdElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:id" element conveys a permanent, universally unique identifier for an entry or
                feed.
                *
                * @param id A atom:id element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setIdElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IRIElement</name>
                            </type>
                            <name>id</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the universally unique identifier for this feed
                *
                * @return The atom:id value
                * @throws IRISyntaxException if the atom:id is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getId</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the universally unique identifier for this feed
                *
                * @param id The atom:id value
                * @return The newly created atom:id element
                * @throws IRISyntaxException if the id is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>setId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>id</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Creates a new randomized atom:id for the entry
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>newId</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the universally unique identifier for this feed
                *
                * @param id The atom:id value
                * @param normalize True if the atom:id value should be normalized
                * @return The newly created atom:id element
                * @throws IRISyntaxException if the id is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>setId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>id</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>normalize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of links for this entry
                *
                * @return returns a listing of atom:link elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Link</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getLinks</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of links using the specified rel attribute value
                *
                * @param rel A link relation
                * @return A listing of atom:link elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Link</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getLinks</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Lists the complete set of links using the specified rel attributes values
                *
                * @param rels A listing of link relations
                * @return A listof atom:link elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Link</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getLinks</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type><name>String</name>...
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual link to the entry
                *
                * @param link A atom:link element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>addLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Link</name>
                            </type>
                            <name>link</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual link element
                *
                * @param href The href IRI of the link
                * @return The newly created atom:link
                * @throws IRISyntaxException if the href is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>addLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual link element
                *
                * @param href The href IRI of the link
                * @param rel The link rel attribute
                * @return The newly created atom:link
                * @throws IRISyntaxException if the href is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>addLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual link element
                *
                * @param href The href IRI of the link
                * @param rel The link rel attribute
                * @param type The link type attribute
                * @param hreflang The link hreflang attribute
                * @param length The length attribute
                * @return The newly created atom:link
                * @throws IRISyntaxException if the href is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>addLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>hreflang</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:logo" element's content is an IRI reference [RFC3987] that identifies an image that
                provides
                * visual identification for a feed. The image SHOULD have an aspect ratio of 2 (horizontal) to 1
                (vertical).
                *
                * @return the atom:logo element
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>getLogoElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:logo" element's content is an IRI reference [RFC3987] that identifies an image that
                provides
                * visual identification for a feed. The image SHOULD have an aspect ratio of 2 (horizontal) to 1
                (vertical).
                *
                * @param iri The atom:logo element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setLogoElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IRIElement</name>
                            </type>
                            <name>iri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:logo" element's content is an IRI reference [RFC3987] that identifies an image that
                provides
                * visual identification for a feed. The image SHOULD have an aspect ratio of 2 (horizontal) to 1
                (vertical).
                *
                * @param iri The atom:logo value
                * @return The newly created atom:logo element
                * @throws IRISyntaxException if the iri is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRIElement</name>
                </type>
                <name>setLogo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>iri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:logo" element's content is an IRI reference [RFC3987] that identifies an image that
                provides
                * visual identification for a feed. The image SHOULD have an aspect ratio of 2 (horizontal) to 1
                (vertical).
                *
                * @return The atom:logo element value
                * @throws IRISyntaxException if the atom:logo value is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getLogo</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * &lt;p&gt;
                * The rights element is typically used to convey a human readable copyright (e.g. "&amp;lt;atom:rights&gt;Copyright
                (c),
                * 2006&amp;lt;/atom:rights&gt;).
                * &lt;/p&gt;
                * &lt;p&gt;
                * RFC4287: The "atom:rights" element is a Text construct that conveys information about rights held in
                and over an
                * entry or feed.
                * &lt;/p&gt;
                *
                * @return The atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>getRightsElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * &lt;p&gt;
                * The rights element is typically used to convey a human readable copyright (e.g. "&amp;lt;atom:rights&gt;Copyright
                (c),
                * 2006&amp;lt;/atom:rights&gt;).
                * &lt;/p&gt;
                * &lt;p&gt;
                * RFC4287: The "atom:rights" element is a Text construct that conveys information about rights held in
                and over an
                * entry or feed.
                * &lt;/p&gt;
                *
                * @param text The atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setRightsElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Text</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the rights as @type="text"
                *
                * @param value The atom:rights text value
                * @return The newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setRights</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the rights as @type="html"
                *
                * @param value The atom:rights text value
                * @return The newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setRightsAsHtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the rights as @type="xhtml"
                *
                * @param value The atom:rights text value
                * @return The newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setRightsAsXhtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the rights
                *
                * @param value The atom:rights text value
                * @param type The atom:rights text type
                * @return The newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setRights</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the rights as @type="xhtml"
                *
                * @param value The XHTML div element
                * @return The newly created atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setRights</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Div</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the text of atom:rights
                *
                * @return The value of the atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getRights</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the type of atom:rights
                *
                * @return The Text.Type of the atom:rights element
                */
            </comment>
            <function_decl>
                <type>
                    <name><name>Text</name>.
                        <name>Type</name>
                    </name>
                </type>
                <name>getRightsType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:subtitle" element is a Text construct that conveys a human-readable description or
                subtitle
                * for a feed.
                *
                * @return The atom:subtitle element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>getSubtitleElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:subtitle" element is a Text construct that conveys a human-readable description or
                subtitle
                * for a feed.
                *
                * @param text A atom:subtitle element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setSubtitleElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Text</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the subtitle as @type="text"
                *
                * @param value the value of the atom:subtitle element
                * @return The atom:subtitle element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setSubtitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the subtitle as @type="html"
                *
                * @param value The value of the atom:subtitle element
                * @return The newly created atom:subtitle element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setSubtitleAsHtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the subtitle as @type="xhtml"
                *
                * @param value The value of the atom:subtitle element
                * @return The newly created atom:subtitle element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setSubtitleAsXhtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the subtitle
                *
                * @param value The value of the atom:subtitle element
                * @param type The atom:subtitle Text.Type
                * @return The newly created atom:subtitle element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setSubtitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the subtitle as @type="xhtml"
                *
                * @param value The atom:subtitle element
                * @return The newly created atom:subtitle element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setSubtitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Div</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the text value of atom:subtitle
                *
                * @return The atom:subtitle text value
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getSubtitle</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the atom:subtitle type
                *
                * @return The atom:subtitle Text.Type
                */
            </comment>
            <function_decl>
                <type>
                    <name><name>Text</name>.
                        <name>Type</name>
                    </name>
                </type>
                <name>getSubtitleType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:title" element is a Text construct that conveys a human-readable title for an entry
                or feed.
                *
                * @return The atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>getTitleElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:title" element is a Text construct that conveys a human-readable title for an entry
                or feed.
                *
                * @param text The atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setTitleElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Text</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the title as @type="text"
                *
                * @param value The atom:title value
                * @return The newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the title as @type="html"
                *
                * @param value The atom:title value
                * @return The newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitleAsHtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the title as @type="xhtml"
                *
                * @param value The atom:title value
                * @return The newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitleAsXhtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the title
                *
                * @param value The atom:title value
                * @param type The atom:title Text.Type
                * @return The newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Text</name>.
                                    <name>Type</name>
                                </name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the value of the title as @type="xhtml"
                *
                * @param value The XHTML div
                * @return The newly created atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Div</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the text of atom:title
                *
                * @return The text value of the atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getTitle</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the type of atom:title
                *
                * @return The atom:title Text.Type value
                */
            </comment>
            <function_decl>
                <type>
                    <name><name>Text</name>.
                        <name>Type</name>
                    </name>
                </type>
                <name>getTitleType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:updated" element is a Date construct indicating the most recent instant in time
                when an entry
                * or feed was modified in a way the publisher considers significant. Therefore, not all modifications
                necessarily
                * result in a changed atom:updated value.
                *
                * @return the atom:updated element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>getUpdatedElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * RFC4287: The "atom:updated" element is a Date construct indicating the most recent instant in time
                when an entry
                * or feed was modified in a way the publisher considers significant. Therefore, not all modifications
                necessarily
                * result in a changed atom:updated value.
                *
                * @param dateTime A atom:updated element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setUpdatedElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTime</name>
                            </type>
                            <name>dateTime</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return the atom:updated value
                *
                * @return The serialized string form value of atom:updated
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getUpdatedString</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return the atom:updated value
                *
                * @return The atom:updated as a java.util.Date
                */
            </comment>
            <function_decl>
                <type>
                    <name>Date</name>
                </type>
                <name>getUpdated</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the atom:updated value
                *
                * @param value The java.util.Date
                * @return The newly created atom:updated element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>setUpdated</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Set the atom:updated value
                *
                * @param value The serialized string date
                * @return The newly created atom:updated element
                */
            </comment>
            <function_decl>
                <type>
                    <name>DateTime</name>
                </type>
                <name>setUpdated</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the first link with the specified rel attribute value
                *
                * @param rel A link relation
                * @return The newly created atom:link element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the first link using the rel attribute value "self"
                *
                * @return An atom:link
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getSelfLink</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns this entries first alternate link
                *
                * @return An atom:link
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getAlternateLink</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @param type A media type
                * @param hreflang A target language
                * @return A matching atom:link
                * @throws MimeTypeParseException if the type if malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Link</name>
                </type>
                <name>getAlternateLink</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>hreflang</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * @param rel A link relation
                * @return An atom:link
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getLinkResolvedHref</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * @return An atom:link
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getSelfLinkResolvedHref</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return An atom:link
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getAlternateLinkResolvedHref</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @param type A media type
                * @param hreflang A target language
                * @return A matching atom:link
                * @throws MimeTypeParseException if the type if malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>IRI</name>
                </type>
                <name>getAlternateLinkResolvedHref</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>hreflang</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return an app:collection element associatd with this atom:source. The Atom Publishing Protocol allows
                an
                * app:collection to be contained by atom:feed to specify the collection to which the feed is associated.
                *
                * @return An app:collection element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>getCollection</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the app:collection element
                *
                * @param collection An app:collection element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Source</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>setCollection</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Collection</name>
                            </type>
                            <name>collection</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Convert the Source element into an empty Feed element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Feed</name>
                </type>
                <name>getAsFeed</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            }
        </block>
    </class>
</unit>
