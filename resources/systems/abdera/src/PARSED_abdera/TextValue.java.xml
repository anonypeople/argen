<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\model\TextValue.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>model</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>activation</name>.
            <name>DataHandler</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A text value. Returned by the Abdera XPath implementation when querying for text nodes (e.g.
        * xpath.selectNodes("//text()"); ...). There should be very little reason why an application would use this. It
        is
        * provided to keep applications from having to deal directly with the underlying parser impl
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>TextValue</name>
        <block>{

            <comment type="javadoc">/**
                * A DataHandler for Base64 encoded binary data
                */
            </comment>
            <function_decl>
                <type>
                    <name>DataHandler</name>
                </type>
                <name>getDataHandler</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * An InputStream used to read the text content
                */
            </comment>
            <function_decl>
                <type>
                    <name>InputStream</name>
                </type>
                <name>getInputStream</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Return the text value
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getText</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * The parent element
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                            <extends>extends
                                <name>Base</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>getParentElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Delete this node
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>discard</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            }
        </block>
    </class>
</unit>
