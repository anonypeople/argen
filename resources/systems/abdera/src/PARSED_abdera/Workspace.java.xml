<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\abdera\src\main\java\org\apache\abdera\model\Workspace.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. The ASF licenses this file to You
        * under the Apache License, Version 2.0 (the "License"); you may not
        * use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License. For additional information regarding
        * copyright in this work, please see the NOTICE file in the top level
        * directory of this distribution.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.
            <name>model</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>activation</name>.
            <name>MimeType</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>abdera</name>.<name>i18n</name>.<name>iri</name>.
            <name>IRISyntaxException</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * An Atom Publishing Protocol Introspection Document workspace element.
        * &lt;/p&gt;
        * &lt;p&gt;
        * Per APP Draft-08
        * &lt;/p&gt;
        *
        * &lt;pre&gt;
        * The "app:workspace" element contains information elements about the
        * collections of resources available for editing. The app:workspace
        * element MUST contain one or more app:collection elements.
        *
        * appWorkspace =
        * element app:workspace {
        * appCommonAttributes,
        * ( atomTitle
        * &amp;amp; appCollection*
        * &amp;amp; extensionElement* )
        * }
        *
        * &lt;/pre&gt;
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Workspace</name>
        <super>
            <extends>extends
                <name>ExtensibleElement</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Return the workspace title
                *
                * @return The atom:title value
                */
            </comment>
            <function_decl>
                <type>
                    <name>String</name>
                </type>
                <name>getTitle</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Set the workspace title
                *
                * @param title The atom:title value
                * @return The newly created atom:title
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Set the workspace title as escaped HTML
                *
                * @param title The atom:title value
                * @return The newly created atom:title
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitleAsHtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Set the workspace title as XHTML
                *
                * @param title The atom:title value
                * @return the newly created atom:title
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>setTitleAsXHtml</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Return the atom:title
                *
                * @return The atom:title element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Text</name>
                </type>
                <name>getTitleElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the full set of collections in this workspace
                *
                * @return A listing of app:collection elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Collection</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getCollections</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the named collection
                *
                * @param title A collection title
                * @return A matching app:collection
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>getCollection</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual collection to this workspace
                *
                * @param collection The collection to add
                */
            </comment>
            <function_decl>
                <type>
                    <name>Workspace</name>
                </type>
                <name>addCollection</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Collection</name>
                            </type>
                            <name>collection</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an individual collection to this workspace
                *
                * @param title The collection title
                * @param href The collection HREF
                * @return The newly created app:collection
                * @throws IRISyntaxException if the href is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>addCollection</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a multipart collection to this workspace
                *
                * @param title The collection title
                * @param href The collection HREF
                * @return The newly created app:collection
                * @throws IRISyntaxException if the href is malformed
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Collection</name>
                </type>
                <name>addMultipartCollection</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>title</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a collection that accepts the specified media types
                *
                * @param a listing of media types the collection must accept
                * @return A matching app:collection element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>getCollectionThatAccepts</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type><name>MimeType</name>...
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a collection that accepts the specified media types
                *
                * @param a listing of media types the collection must accept
                * @return A matching app:collection element
                */
            </comment>
            <function_decl>
                <type>
                    <name>Collection</name>
                </type>
                <name>getCollectionThatAccepts</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type><name>String</name>...
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns collections that accept the specified media types
                *
                * @param a listing of media types the collection must accept
                * @return A listing matching app:collection elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Collection</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getCollectionsThatAccept</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type><name>MimeType</name>...
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns collections that accept the specified media types
                *
                * @param a listing of media types the collection must accept
                * @return A listing of matching app:collection elements
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Collection</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getCollectionsThatAccept</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type><name>String</name>...
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>
