<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\acra\src\main\java\org\acra\jraf\android\util\activitylifecyclecallbackscompat\ActivityLifecycleCallbacksWrapper.java">
    <comment type="block">/*
        * This source is part of the
        * _____ ___ ____
        * __ / / _ \/ _ | / __/___ _______ _
        * / // / , _/ __ |/ _/_/ _ \/ __/ _ `/
        * \___/_/|_/_/ |_/_/ (_)___/_/ \_, /
        * /___/
        * repository.
        *
        * Copyright (C) 2013 Benoit 'BoD' Lubek (BoD@JRAF.org)
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>acra</name>.<name>jraf</name>.<name>android</name>.<name>util</name>.
            <name>activitylifecyclecallbackscompat</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>android</name>.<name>app</name>.
            <name>Activity</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>android</name>.<name>app</name>.<name>Application</name>.
            <name>ActivityLifecycleCallbacks</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>android</name>.<name>os</name>.
            <name>Bundle</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>util</name>.<name>concurrent</name>.
            <name>Callable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Wraps an {@link ActivityLifecycleCallbacksCompat} into an {@link ActivityLifecycleCallbacks}.
        */
    </comment>
    <comment type="block">/* package */</comment>
    <class>class <name>ActivityLifecycleCallbacksWrapper</name>
        <super>
            <implements>implements
                <name>ActivityLifecycleCallbacks</name>
            </implements>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name><name>org</name>.<name>acra</name>.<name>jraf</name>.<name>android</name>.<name>
                            util</name>.<name>activitylifecyclecallbackscompat</name>.
                            <name>ActivityLifecycleCallbacksCompat</name>
                        </name>
                    </type>
                    <name>mCallback</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>ActivityLifecycleCallbacksWrapper</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>org</name>.<name>acra</name>.<name>jraf</name>.<name>android</name>.<name>
                                    util</name>.<name>activitylifecyclecallbackscompat</name>.
                                    <name>ActivityLifecycleCallbacksCompat</name>
                                </name>
                            </type>
                            <name>callback</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>mCallback</name>
                            =
                            <name>callback</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>onActivityCreated</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Activity</name>
                            </type>
                            <name>activity</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Bundle</name>
                            </type>
                            <name>savedInstanceState</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>mCallback</name>.
                                    <name>onActivityCreated</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>activity</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>savedInstanceState</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>onActivityStarted</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Activity</name>
                            </type>
                            <name>activity</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>mCallback</name>.
                                    <name>onActivityStarted</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>activity</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>onActivityResumed</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Activity</name>
                            </type>
                            <name>activity</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>mCallback</name>.
                                    <name>onActivityResumed</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>activity</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>onActivityPaused</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Activity</name>
                            </type>
                            <name>activity</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>mCallback</name>.
                                    <name>onActivityPaused</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>activity</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>onActivityStopped</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Activity</name>
                            </type>
                            <name>activity</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>mCallback</name>.
                                    <name>onActivityStopped</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>activity</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>onActivitySaveInstanceState</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Activity</name>
                            </type>
                            <name>activity</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Bundle</name>
                            </type>
                            <name>outState</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>mCallback</name>.
                                    <name>onActivitySaveInstanceState</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>activity</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>outState</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>onActivityDestroyed</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Activity</name>
                            </type>
                            <name>activity</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>mCallback</name>.
                                    <name>onActivityDestroyed</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>activity</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Compare the current wrapped callback with another object wrapped callback
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>object</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!(<name>object</name>
                                <name>instanceof</name>
                                <name>ActivityLifecycleCallbacksWrapper</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ActivityLifecycleCallbacksWrapper</name>
                            </type>
                            <name>that</name> =
                            <init>
                                <expr>( <name>ActivityLifecycleCallbacksWrapper</name> )
                                    <name>object</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>null</name>
                            == <name>mCallback</name> ? <name>null</name> ==
                            <name><name>that</name>.
                                <name>mCallback</name>
                            </name>
                            :
                            <call>
                                <name><name>mCallback</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>that</name>.
                                                <name>mCallback</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                *
                * return wrapped callback object hashCode
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                            != <name>mCallback</name> ?
                            <call>
                                <name><name>mCallback</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            : 0
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
