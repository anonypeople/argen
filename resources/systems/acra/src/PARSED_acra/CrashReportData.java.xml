<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\acra\src\main\java\org\acra\collector\CrashReportData.java">
    <comment type="block">/*
        * Copyright 2012 Kevin Gaudin
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>acra</name>.
            <name>collector</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>EnumMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Properties</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>acra</name>.
            <name>ReportField</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.<name>util</name>.
            <name>JSONReportBuilder</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.<name>util</name>.<name>JSONReportBuilder</name>.
            <name>JSONReportException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>json</name>.
            <name>JSONObject</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Stores a crash reports data with {@link org.acra.ReportField} enum values as keys.
        * This is basically the source of {@link Properties} adapted to extend an
        * EnumMap instead of Hashtable and with a few tweaks to avoid losing crazy
        * amounts of android time in the generation of a date comment when storing to
        * file.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>CrashReportData</name>
        <super>
            <extends>extends
                <name>
                    <name>EnumMap</name>
                    <argument_list>&lt;
                        <argument>
                            <name>ReportField</name>
                        </argument>
                        ,
                        <argument>
                            <name>String</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>4112578634029874840L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Constructs a new {@code Properties} object.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>CrashReportData</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>ReportField</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the property with the specified name.
                *
                * @param key the name of the property to find.
                * @return the named property value, or {@code null} if it can't be found.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ReportField</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JSONObject</name>
                </type>
                <name>toJSON</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>JSONReportException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>JSONReportBuilder</name>.
                                    <name>buildJSONReport</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
