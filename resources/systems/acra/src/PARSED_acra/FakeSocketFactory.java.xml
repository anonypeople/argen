<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\acra\src\main\java\org\acra\util\FakeSocketFactory.java">
    <comment type="block">/*
        * Utility class copied from http://transdroid.googlecode.com with the authorization from Eric Kok to
        redistribute it under Apache Software License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>acra</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>http</name>.<name>conn</name>.<name>scheme</name>.
            <name>LayeredSocketFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>http</name>.<name>conn</name>.<name>scheme</name>.
            <name>SocketFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>http</name>.<name>params</name>.
            <name>HttpConnectionParams</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>http</name>.<name>params</name>.
            <name>HttpParams</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>net</name>.<name>ssl</name>.
            <name>SSLContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>net</name>.<name>ssl</name>.
            <name>SSLSocket</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>net</name>.<name>ssl</name>.
            <name>TrustManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>InetAddress</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>InetSocketAddress</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>Socket</name>
        </name>
        ;
    </import>

    <class>
        <specifier>public</specifier>
        class <name>FakeSocketFactory</name>
        <super>
            <implements>implements <name>SocketFactory</name>,
                <name>LayeredSocketFactory</name>
            </implements>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>SSLContext</name>
                    </type>
                    <name>sslcontext</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>SSLContext</name>
                </type>
                <name>createEasySSLContext</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>SSLContext</name>
                                    </type>
                                    <name>context</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>SSLContext</name>.
                                                    <name>getInstance</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"TLS"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>context</name>.
                                            <name>init</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>TrustManager</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>new
                                                            <call>
                                                                <name>NaiveTrustManager</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>context</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IOException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>e</name>.
                                                                <name>getMessage</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>SSLContext</name>
                </type>
                <name>getSSLContext</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>sslcontext</name>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>sslcontext</name>
                                        </name>
                                        =
                                        <call>
                                            <name>createEasySSLContext</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>sslcontext</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>Socket</name>
                </type>
                <name>connectSocket</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Socket</name>
                            </type>
                            <name>sock</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>host</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>port</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>InetAddress</name>
                            </type>
                            <name>localAddress</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>localPort</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>HttpParams</name>
                            </type>
                            <name>params</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>connTimeout</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>HttpConnectionParams</name>.
                                            <name>getConnectionTimeout</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>params</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>soTimeout</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>HttpConnectionParams</name>.
                                            <name>getSoTimeout</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>params</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>InetSocketAddress</name>
                            </type>
                            <name>remoteAddress</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>InetSocketAddress</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>host</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>port</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>SSLSocket</name>
                            </type>
                            <name>sslsock</name> =
                            <init>
                                <expr>
                                    <call>(<name>SSLSocket</name>)
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>sock</name> != <name>null</name>) ? <name>sock</name> :
                                                    <call>
                                                        <name>createSocket</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>(<name>localAddress</name> != <name>null</name>) || (<name>localPort</name> &gt; 0)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// we need to bind explicitly</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>localPort</name>
                                            &lt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>localPort</name>
                                                    = 0
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <comment type="line">// indicates "any"</comment>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <specifier>final</specifier>
                                            <name>InetSocketAddress</name>
                                        </type>
                                        <name>isa</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>InetSocketAddress</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>localAddress</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>localPort</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>sslsock</name>.
                                                <name>bind</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>isa</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>sslsock</name>.
                                    <name>connect</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>remoteAddress</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>connTimeout</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>sslsock</name>.
                                    <name>setSoTimeout</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>soTimeout</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>sslsock</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>Socket</name>
                </type>
                <name>createSocket</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getSSLContext</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getSocketFactory</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>createSocket</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSecure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Socket</name>
                            </type>
                            <name>arg0</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IllegalArgumentException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>Socket</name>
                </type>
                <name>createSocket</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Socket</name>
                            </type>
                            <name>socket</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>host</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>port</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>autoClose</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getSSLContext</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getSocketFactory</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>createSocket</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>socket</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>host</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>port</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>autoClose</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
