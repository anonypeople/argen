<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\acra\src\main\java\org\acra\sender\HttpSender.java">
    <comment type="block">/*
        * Copyright 2010 Kevin Gaudin
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>acra</name>.
            <name>sender</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>org</name>.<name>acra</name>.<name>ACRA</name>.
            <name>LOG_TAG</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>URL</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>HashMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>android</name>.<name>content</name>.
            <name>Context</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.
            <name>ACRA</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.
            <name>ACRAConfiguration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.
            <name>ACRAConstants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.
            <name>ReportField</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.<name>annotation</name>.
            <name>ReportsCrashes</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.<name>collector</name>.
            <name>CrashReportData</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.<name>util</name>.
            <name>HttpRequest</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.<name>util</name>.<name>JSONReportBuilder</name>.
            <name>JSONReportException</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>android</name>.<name>net</name>.
            <name>Uri</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>android</name>.<name>util</name>.
            <name>Log</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * The {@link ReportSender} used by ACRA when {@link ReportsCrashes#formUri()}
        * has been defined in order to post crash data to a custom server-side data
        * collection script. It sends all data in a POST request with parameters named
        * with easy to understand names (basically a string conversion of
        * {@link ReportField} enum values) or based on your own conversion Map from
        * {@link ReportField} values to String.
        * &lt;/p&gt;
        *
        * &lt;p&gt;
        * To use specific POST parameter names, you can provide your own report fields
        * mapping scheme:
        * &lt;/p&gt;
        *
        * &lt;pre&gt;
        * &amp;#64;ReportsCrashes(...)
        * public class myApplication extends Application {
        *
        * public void onCreate() {
        * super.onCreate();
        * ACRA.init(this);
        * Map&amp;lt;ReportField, String&amp;gt; mapping = new HashMap&amp;lt;ReportField, String&amp;gt;();
        * mapping.put(ReportField.APP_VERSION_CODE, &amp;quot;myAppVerCode');
        * mapping.put(ReportField.APP_VERSION_NAME, &amp;quot;myAppVerName');
        * //...
        * mapping.put(ReportField.USER_EMAIL, &amp;quot;userEmail');
        * // remove any default report sender
        * ErrorReporter.getInstance().removeAllReportSenders();
        * // create your own instance with your specific mapping
        * ErrorReporter.getInstance().addReportSender(new ReportSender(&amp;quot;http://my.domain.com/reports/receiver.py&amp;quot;,
        mapping));
        * }
        * }
        * &lt;/pre&gt;
        *
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>HttpSender</name>
        <super>
            <implements>implements
                <name>ReportSender</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Available HTTP methods to send data. Only POST and PUT are currently
                * supported.
                */
            </comment>
            <enum>
                <specifier>public</specifier>
                enum <name>Method</name>
                <block>{
                    <expr>
                        <name>POST</name>
                    </expr>
                    ,
                    <expr>
                        <name>PUT</name>
                    </expr>
                    }
                </block>

                <comment type="javadoc">/**
                    * Type of report data encoding, currently supports Html Form encoding and
                    * JSON.
                    */
                </comment>
                public enum <name>Type</name>
                <block>{
                    <comment type="javadoc">/**
                        * Send data as a www form encoded list of key/values.
                        * @see &lt;a href="http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4"&gt;Form content
                        types&lt;/a&gt;
                        */
                    </comment>
                    <expr>
                        <name>FORM</name>
                        <block>{
                            @
                            <expr>
                                <name>Override</name>
                                public <name>String</name>
                                <call>
                                    <name>getContentType</name>
                                    <argument_list>()</argument_list>
                                </call>
                                <block>{
                                    <return>return <expr>"application/x-www-form-urlencoded"</expr>;
                                    </return>
                                </block>
                            </expr>
                        </block>
                    </expr>
                    }
                </block>
            </enum>
            }
        </block>
    </class>
    ,
    <comment type="javadoc">/**
        * Send data as a structured JSON tree.
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>JSON</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>String</name>
                    <call>
                        <name>getContentType</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>"application/json"</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    }
    <empty_stmt>;</empty_stmt>

    <function_decl>
        <type>
            <specifier>public</specifier>
            <specifier>abstract</specifier>
            <name>String</name>
        </type>
        <name>getContentType</name>
        <parameter_list>()</parameter_list>;
    </function_decl>
    }

    private
    <decl_stmt>
        <decl>
            <type>
                <specifier>final</specifier>
                <name>Uri</name>
            </type>
            <name>mFormUri</name>
        </decl>
        ;
    </decl_stmt>
    <decl_stmt>
        <decl>
            <type>
                <specifier>private</specifier>
                <specifier>final</specifier>
                <name>
                    <name>Map</name>
                    <argument_list>&lt;
                        <argument>
                            <name>ReportField</name>
                        </argument>
                        ,
                        <argument>
                            <name>String</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </type>
            <name>mMapping</name>
        </decl>
        ;
    </decl_stmt>
    <decl_stmt>
        <decl>
            <type>
                <specifier>private</specifier>
                <specifier>final</specifier>
                <name>Method</name>
            </type>
            <name>mMethod</name>
        </decl>
        ;
    </decl_stmt>
    <decl_stmt>
        <decl>
            <type>
                <specifier>private</specifier>
                <specifier>final</specifier>
                <name>Type</name>
            </type>
            <name>mType</name>
        </decl>
        ;
    </decl_stmt>
    <decl_stmt>
        <decl>
            <type>
                <specifier>private</specifier>
                <name>String</name>
            </type>
            <name>mUsername</name>
        </decl>
        ;
    </decl_stmt>
    <decl_stmt>
        <decl>
            <type>
                <specifier>private</specifier>
                <name>String</name>
            </type>
            <name>mPassword</name>
        </decl>
        ;
    </decl_stmt>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * Create a new HttpSender instance with its destination taken from
        * {@link ACRA#getConfig()} dynamically. Configuration changes to the
        * formUri are applied automatically.
        * &lt;/p&gt;
        *
        * @param method
        * HTTP {@link Method} to be used to send data. Currently only
        * {@link Method#POST} and {@link Method#PUT} are available. If
        * {@link Method#PUT} is used, the {@link ReportField#REPORT_ID}
        * is appended to the formUri to be compliant with RESTful APIs.
        *
        * @param type
        * {@link Type} of encoding used to send the report body.
        * {@link Type#FORM} is a simple Key/Value pairs list as defined
        * by the application/x-www-form-urlencoded mime type.
        *
        * @param mapping
        * Applies only to {@link Method#POST} method parameter. If null,
        * POST parameters will be named with {@link ReportField} values
        * converted to String with .toString(). If not null, POST
        * parameters will be named with the result of
        * mapping.get(ReportField.SOME_FIELD);
        */
    </comment>
    <constructor>
        <specifier>public</specifier>
        <name>HttpSender</name>
        <parameter_list>(
            <param>
                <decl>
                    <type>
                        <name>Method</name>
                    </type>
                    <name>method</name>
                </decl>
            </param>
            ,
            <param>
                <decl>
                    <type>
                        <name>Type</name>
                    </type>
                    <name>type</name>
                </decl>
            </param>
            ,
            <param>
                <decl>
                    <type>
                        <name>
                            <name>Map</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>ReportField</name>
                                </argument>
                                ,
                                <argument>
                                    <name>String</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>mapping</name>
                </decl>
            </param>
            )
        </parameter_list>
        <block>{
            <expr_stmt>
                <expr>
                    <name>mMethod</name>
                    =
                    <name>method</name>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <name>mFormUri</name>
                    =
                    <name>null</name>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <name>mMapping</name>
                    =
                    <name>mapping</name>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <name>mType</name>
                    =
                    <name>type</name>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <name>mUsername</name>
                    =
                    <name>null</name>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <name>mPassword</name>
                    =
                    <name>null</name>
                </expr>
                ;
            </expr_stmt>
            }
        </block>
    </constructor>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * Create a new HttpPostSender instance with a fixed destination provided as
        * a parameter. Configuration changes to the formUri are not applied.
        * &lt;/p&gt;
        *
        * @param method
        * HTTP {@link Method} to be used to send data. Currently only
        * {@link Method#POST} and {@link Method#PUT} are available. If
        * {@link Method#PUT} is used, the {@link ReportField#REPORT_ID}
        * is appended to the formUri to be compliant with RESTful APIs.
        *
        * @param type
        * {@link Type} of encoding used to send the report body.
        * {@link Type#FORM} is a simple Key/Value pairs list as defined
        * by the application/x-www-form-urlencoded mime type.
        * @param formUri
        * The URL of your server-side crash report collection script.
        * @param mapping
        * Applies only to {@link Method#POST} method parameter. If null,
        * POST parameters will be named with {@link ReportField} values
        * converted to String with .toString(). If not null, POST
        * parameters will be named with the result of
        * mapping.get(ReportField.SOME_FIELD);
        */
    </comment>
    <constructor>
        <specifier>public</specifier>
        <name>HttpSender</name>
        <parameter_list>(
            <param>
                <decl>
                    <type>
                        <name>Method</name>
                    </type>
                    <name>method</name>
                </decl>
            </param>
            ,
            <param>
                <decl>
                    <type>
                        <name>Type</name>
                    </type>
                    <name>type</name>
                </decl>
            </param>
            ,
            <param>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>formUri</name>
                </decl>
            </param>
            ,
            <param>
                <decl>
                    <type>
                        <name>
                            <name>Map</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>ReportField</name>
                                </argument>
                                ,
                                <argument>
                                    <name>String</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>mapping</name>
                </decl>
            </param>
            )
        </parameter_list>
        <block>{
            <expr_stmt>
                <expr>
                    <name>mMethod</name>
                    =
                    <name>method</name>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <name>mFormUri</name>
                    =
                    <call>
                        <name><name>Uri</name>.
                            <name>parse</name>
                        </name>
                        <argument_list>(
                            <argument>
                                <expr>
                                    <name>formUri</name>
                                </expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <name>mMapping</name>
                    =
                    <name>mapping</name>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <name>mType</name>
                    =
                    <name>type</name>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <name>mUsername</name>
                    =
                    <name>null</name>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <name>mPassword</name>
                    =
                    <name>null</name>
                </expr>
                ;
            </expr_stmt>
            }
        </block>
    </constructor>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * Set credentials for this HttpSender that override (if present) the ones
        * set globally.
        * &lt;/p&gt;
        *
        * @param username
        * The username to set for HTTP Basic Auth.
        * @param password
        * The password to set for HTTP Basic Auth.
        */
    </comment>
    <function>
        <type>
            <annotation>@
                <name>SuppressWarnings</name>
                <argument_list>( "unused" )</argument_list>
            </annotation>
            <specifier>public</specifier>
            <name>void</name>
        </type>
        <name>setBasicAuth</name>
        <parameter_list>(
            <param>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>username</name>
                </decl>
            </param>
            ,
            <param>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>password</name>
                </decl>
            </param>
            )
        </parameter_list>
        <block>{
            <expr_stmt>
                <expr>
                    <name>mUsername</name>
                    =
                    <name>username</name>
                </expr>
                ;
            </expr_stmt>
            <expr_stmt>
                <expr>
                    <name>mPassword</name>
                    =
                    <name>password</name>
                </expr>
                ;
            </expr_stmt>
            }
        </block>
    </function>

    <function>
        <type>
            <annotation>@
                <name>Override</name>
            </annotation>
            <specifier>public</specifier>
            <name>void</name>
        </type>
        <name>send</name>
        <parameter_list>(
            <param>
                <decl>
                    <type>
                        <name>Context</name>
                    </type>
                    <name>context</name>
                </decl>
            </param>
            ,
            <param>
                <decl>
                    <type>
                        <name>CrashReportData</name>
                    </type>
                    <name>report</name>
                </decl>
            </param>
            )
        </parameter_list>
        <throws>throws
            <argument>
                <expr>
                    <name>ReportSenderException</name>
                </expr>
            </argument>
        </throws>
        <block>{

            <try>try
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URL</name>
                            </type>
                            <name>reportUrl</name> =
                            <init>
                                <expr>
                                    <name>mFormUri</name>
                                    == <name>null</name> ? new
                                    <call>
                                        <name>URL</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>ACRA</name>.
                                                            <name>getConfig</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>formUri</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    : new
                                    <call>
                                        <name>URL</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>mFormUri</name>.
                                                            <name>toString</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Log</name>.
                                    <name>d</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>LOG_TAG</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Connect to " +
                                            <call>
                                                <name><name>reportUrl</name>.
                                                    <name>toString</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>login</name> =
                            <init>
                                <expr>
                                    <name>mUsername</name>
                                    != <name>null</name> ? <name>mUsername</name> :
                                    <call>
                                        <name><name>ACRAConfiguration</name>.
                                            <name>isNull</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>ACRA</name>.
                                                            <name>getConfig</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>formUriBasicAuthLogin</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ? <name>null</name> :
                                    <call>
                                        <name>
                                            <name>ACRA</name>
                                            .
                                            <name>getConfig</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>formUriBasicAuthLogin</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>password</name> =
                            <init>
                                <expr>
                                    <name>mPassword</name>
                                    != <name>null</name> ? <name>mPassword</name> :
                                    <call>
                                        <name><name>ACRAConfiguration</name>.
                                            <name>isNull</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>ACRA</name>.
                                                            <name>getConfig</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>formUriBasicAuthPassword</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ? <name>null</name> :
                                    <call>
                                        <name>
                                            <name>ACRA</name>
                                            .
                                            <name>getConfig</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>formUriBasicAuthPassword</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>HttpRequest</name>
                            </type>
                            <name>request</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>HttpRequest</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>request</name>.
                                    <name>setConnectionTimeOut</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ACRA</name>.
                                                    <name>getConfig</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>connectionTimeout</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>request</name>.
                                    <name>setSocketTimeOut</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ACRA</name>.
                                                    <name>getConfig</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>socketTimeout</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>request</name>.
                                    <name>setMaxNrRetries</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ACRA</name>.
                                                    <name>getConfig</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>maxNumberOfRequestRetries</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>request</name>.
                                    <name>setLogin</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>login</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>request</name>.
                                    <name>setPassword</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>password</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>request</name>.
                                    <name>setHeaders</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ACRA</name>.
                                                    <name>getConfig</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getHttpHeaders</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Generate report body depending on requested type</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>reportAsString</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>mType</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>JSON</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>reportAsString</name>
                                        =
                                        <call>
                                            <name><name>report</name>.
                                                <name>toJSON</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>toString</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>FORM</name>
                                </expr>
                                :
                            </case>
                            <default>default:
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <specifier>final</specifier>
                                            <name>
                                                <name>Map</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>String</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>String</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </type>
                                        <name>finalReport</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>remap</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>report</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>reportAsString</name>
                                        =
                                        <call>
                                            <name><name>HttpRequest</name>.
                                                <name>getParamsAsFormString</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>finalReport</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>

                            </default>
                            }
                        </block>
                    </switch>

                    <comment type="line">// Adjust URL depending on method</comment>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>mMethod</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>POST</name>
                                </expr>
                                :
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>PUT</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>reportUrl</name>
                                        = new
                                        <call>
                                            <name>URL</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>reportUrl</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        + '/' +
                                                        <call>
                                                            <name><name>report</name>.
                                                                <name>getProperty</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>ReportField</name>.
                                                                            <name>REPORT_ID</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <default>default:
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Unknown method: " +
                                                        <call>
                                                            <name><name>mMethod</name>.
                                                                <name>name</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                            </default>
                            }
                        </block>
                    </switch>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>request</name>.
                                    <name>send</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>context</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>reportUrl</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>mMethod</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>reportAsString</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>mType</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
                <catch>catch (
                    <param>
                        <decl>
                            <type>
                                <name>IOException</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                    <block>{
                        <throw>throw
                            <expr>new
                                <call>
                                    <name>ReportSenderException</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"Error while sending " +
                                                <call>
                                                    <name><name>ACRA</name>.
                                                        <name>getConfig</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>reportType</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                + " report via Http " +
                                                <call>
                                                    <name><name>mMethod</name>.
                                                        <name>name</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>e</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            ;
                        </throw>
                        }
                    </block>
                </catch>
                <catch>catch (
                    <param>
                        <decl>
                            <type>
                                <name>JSONReportException</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                    <block>{
                        <throw>throw
                            <expr>new
                                <call>
                                    <name>ReportSenderException</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"Error while sending " +
                                                <call>
                                                    <name><name>ACRA</name>.
                                                        <name>getConfig</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>reportType</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                + " report via Http " +
                                                <call>
                                                    <name><name>mMethod</name>.
                                                        <name>name</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>e</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            ;
                        </throw>
                        }
                    </block>
                </catch>
            </try>
            }
        </block>
    </function>

    <function>
        <type>
            <specifier>private</specifier>
            <name>
                <name>Map</name>
                <argument_list>&lt;
                    <argument>
                        <name>String</name>
                    </argument>
                    ,
                    <argument>
                        <name>String</name>
                    </argument>
                    &gt;
                </argument_list>
            </name>
        </type>
        <name>remap</name>
        <parameter_list>(
            <param>
                <decl>
                    <type>
                        <name>
                            <name>Map</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>ReportField</name>
                                </argument>
                                ,
                                <argument>
                                    <name>String</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>report</name>
                </decl>
            </param>
            )
        </parameter_list>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <name>ReportField</name>
                        <index>[]</index>
                    </type>
                    <name>fields</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>ACRA</name>.
                                    <name>getConfig</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>customReportContent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <if>if
                <condition>(
                    <expr>
                        <name><name>fields</name>.
                            <name>length</name>
                        </name>
                        == 0
                    </expr>
                    )
                </condition>
                <then>
                    <block>{
                        <expr_stmt>
                            <expr>
                                <name>fields</name>
                                =
                                <name><name>ACRAConstants</name>.
                                    <name>DEFAULT_REPORT_FIELDS</name>
                                </name>
                            </expr>
                            ;
                        </expr_stmt>
                        }
                    </block>
                </then>
            </if>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>final</specifier>
                        <name>
                            <name>Map</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>String</name>
                                </argument>
                                ,
                                <argument>
                                    <name>String</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>finalReport</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>HashMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>String</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>String</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>report</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <for>for (
                <init>
                    <decl>
                        <type>
                            <name>ReportField</name>
                        </type>
                        <name>field</name> :
                        <range>
                            <expr>
                                <name>fields</name>
                            </expr>
                        </range>
                    </decl>
                </init>
                )
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>mMapping</name>
                                == <name>null</name> ||
                                <call>
                                    <name><name>mMapping</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>field</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>finalReport</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>field</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>report</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>field</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>finalReport</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>mMapping</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>field</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>report</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>field</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </for>
            <return>return
                <expr>
                    <name>finalReport</name>
                </expr>
                ;
            </return>
            }
        </block>
    </function>

    }
</unit>
