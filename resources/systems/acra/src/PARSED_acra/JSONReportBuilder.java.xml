<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\acra\src\main\java\org\acra\util\JSONReportBuilder.java">
    <package>package
        <name><name>org</name>.<name>acra</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>BufferedReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>StringReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>NumberFormat</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>ParseException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>acra</name>.
            <name>ACRA</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.
            <name>ReportField</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.<name>collector</name>.
            <name>CollectorUtil</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.<name>collector</name>.
            <name>CrashReportData</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>acra</name>.<name>sender</name>.
            <name>ReportSenderException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>json</name>.
            <name>JSONArray</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>json</name>.
            <name>JSONException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>json</name>.
            <name>JSONObject</name>
        </name>
        ;
    </import>

    <class>
        <specifier>public</specifier>
        class <name>JSONReportBuilder</name>
        <block>{
            <comment type="javadoc">/**
                * &lt;p&gt;
                * Create a JSONObject containing the whole report data with the most
                * detailed possible structure depth. Fields are not just converted to a
                * single key=value pair. If a value can be decomposed into subobjects, it
                * is done.
                * &lt;/p&gt;
                *
                * &lt;p&gt;
                * For example, a String containing:
                *
                * &lt;pre&gt;
                * some.key.name1=value1
                * some.key.name2=value2
                * some.other=value3
                * any.other.key=value4
                * key.without.value5
                * &lt;/pre&gt;
                *
                * is converted to
                *
                * &lt;pre&gt;
                * {
                * some : {
                * key : {
                * name1 : "value1",
                * name2 : "value2"
                * },
                * other : "value3"
                * },
                * any : {
                * other : {
                * key : "value4"
                * }
                * }
                * key.without.value : true
                * }
                * &lt;/pre&gt;
                *
                * &lt;/p&gt;
                *
                * @param errorContent
                * The ACRA report data structure.
                * @return A JSONObject containing all fields from the report converted to
                * JSON.
                * @throws ReportSenderException
                * @throws JSONReportException
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>JSONObject</name>
                </type>
                <name>buildJSONReport</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CrashReportData</name>
                            </type>
                            <name>errorContent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>JSONReportException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JSONObject</name>
                            </type>
                            <name>jsonReport</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JSONObject</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BufferedReader</name>
                            </type>
                            <name>reader</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>ReportField</name>
                                </type>
                                <name>key</name> :
                                <range>
                                    <expr>
                                        <call>
                                            <name><name>errorContent</name>.
                                                <name>keySet</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <try>try
                                <block>{
                                    <comment type="line">// Each ReportField can be identified as a substructure and
                                        not
                                    </comment>
                                    <comment type="line">// a simple String value.</comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>key</name>.
                                                        <name>containsKeyValuePairs</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>JSONObject</name>
                                                        </type>
                                                        <name>subObject</name> =
                                                        <init>
                                                            <expr>new
                                                                <call>
                                                                    <name>JSONObject</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>String</name>
                                                        </type>
                                                        <name>strContent</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>errorContent</name>.
                                                                        <name>getProperty</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>key</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>reader</name>
                                                        = new
                                                        <call>
                                                            <name>BufferedReader</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>StringReader</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>strContent</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>1024</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>String</name>
                                                        </type>
                                                        <name>line</name> =
                                                        <init>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <try>try
                                                    <block>{
                                                        <while>while
                                                            <condition>(
                                                                <expr>(<name>line</name> =
                                                                    <call>
                                                                        <name><name>reader</name>.
                                                                            <name>readLine</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    ) !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>addJSONFromProperty</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>subObject</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>line</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </while>
                                                        }
                                                    </block>
                                                    <catch>catch (
                                                        <param>
                                                            <decl>
                                                                <type>
                                                                    <name>IOException</name>
                                                                </type>
                                                                <name>e</name>
                                                            </decl>
                                                        </param>
                                                        )
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>ACRA</name>.<name>log</name>.
                                                                            <name>e</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>ACRA</name>.
                                                                                        <name>LOG_TAG</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"Error while converting " +
                                                                                    <call>
                                                                                        <name><name>key</name>.
                                                                                            <name>name</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    + " to JSON."
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>e</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </catch>
                                                </try>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>jsonReport</name>.
                                                                <name>accumulate</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>key</name>.
                                                                                <name>name</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>subObject</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <comment type="line">// This field is a simple String value, store it as
                                                    it is
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>jsonReport</name>.
                                                                <name>accumulate</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>key</name>.
                                                                                <name>name</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>guessType</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                errorContent</name>.
                                                                                                <name>getProperty</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>key</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>JSONException</name>
                                            </type>
                                            <name>e</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>JSONReportException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Could not create JSON object for key " +
                                                                <name>key</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>e</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </catch>
                                <finally>finally
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>CollectorUtil</name>.
                                                        <name>safeClose</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>reader</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </finally>
                            </try>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>jsonReport</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;
                * Given a String containing key=value pairs on each line, adds a detailed
                * JSON structure to an existing JSONObject, reusing intermediate subobjects
                * if available when keys are composed of a succession of subkeys delimited
                * by dots.
                * &lt;/p&gt;
                *
                * &lt;p&gt;
                * For example, adding the string "metrics.xdpi=160.0" to an object
                * containing
                *
                * &lt;pre&gt;
                * {
                * "metrics" : { "ydpi" : "160.0"},
                * "width" : "320",
                * "height" : "533"
                * }
                * &lt;/pre&gt;
                *
                * results in
                *
                * &lt;pre&gt;
                * {
                * "metrics" : { "ydpi" : "160.0", "xdpi" : "160.0"},
                * "width" : "320",
                * "height" : "533"
                * }
                * &lt;/pre&gt;
                *
                * &lt;/p&gt;
                *
                * @param destination
                * The JSONObject where the data must be inserted.
                * @param propertyString
                * A string containing "some.key.name=Any value"
                * @throws JSONException
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>addJSONFromProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>JSONObject</name>
                            </type>
                            <name>destination</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyString</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>JSONException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>equalsIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>propertyString</name>.
                                            <name>indexOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'='</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>equalsIndex</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>JSONObject</name>
                                        </type>
                                        <name>finalObject</name> =
                                        <init>
                                            <expr>
                                                <name>destination</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>currentKey</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>propertyString</name>.
                                                        <name>substring</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>equalsIndex</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>trim</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>currentValue</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>propertyString</name>.
                                                        <name>substring</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>equalsIndex</name>
                                                                + 1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>trim</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Object</name>
                                        </type>
                                        <name>value</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>guessType</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>currentValue</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>value</name>
                                            <name>instanceof</name>
                                            <name>String</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>value</name>
                                                    = ((<name>String</name>) <name>value</name>).
                                                    <call>
                                                        <name>replaceAll</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"\\\\n"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"\n"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                            <index>[]</index>
                                        </type>
                                        <name>splitKey</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>currentKey</name>.
                                                        <name>split</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"\\."</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>splitKey</name>.
                                                <name>length</name>
                                            </name>
                                            &gt; 1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>addJSONSubTree</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>finalObject</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>splitKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>finalObject</name>.
                                                            <name>accumulate</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>currentKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>destination</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>propertyString</name>.
                                                                <name>trim</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>Object</name>
                </type>
                <name>guessType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>value</name>.
                                        <name>equalsIgnoreCase</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"true"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>true</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>value</name>.
                                        <name>equalsIgnoreCase</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"false"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>value</name>.
                                        <name>matches</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                "(?:^|\\s)([1-9](?:\\d*|(?:\\d{0,2})(?:,\\d{3})*)(?:\\.\\d*[1-9])?|0?\\.\\d*[1-9]|0)(?:\\s|$)"
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>NumberFormat</name>
                                        </type>
                                        <name>format</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>NumberFormat</name>.
                                                        <name>getInstance</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>Locale</name>.
                                                                    <name>US</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <try>try
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Number</name>
                                                </type>
                                                <name>number</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>format</name>.
                                                                <name>parse</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>value</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <return>return
                                            <expr>
                                                <name>number</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>ParseException</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// never mind</comment>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>value</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Deep insert a value inside a JSONObject, reusing existing subobjects when
                * available or creating them when necessary.
                *
                * @param destination
                * The JSONObject which receives the additional subitem.
                * @param keys
                * An array containing the path keys leading to where the value
                * has to be inserted.
                * @param value
                * The value to be inserted.
                * @throws JSONException
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>addJSONSubTree</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>JSONObject</name>
                            </type>
                            <name>destination</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>keys</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>JSONException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>keys</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>subKey</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>keys</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name><name>keys</name>.
                                            <name>length</name>
                                        </name>
                                        - 1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>JSONObject</name>
                                                </type>
                                                <name>intermediate</name> =
                                                <init>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>destination</name>.
                                                            <name>isNull</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>subKey</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>intermediate</name>
                                                            = new
                                                            <call>
                                                                <name>JSONObject</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>destination</name>.
                                                                    <name>accumulate</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>subKey</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>intermediate</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Object</name>
                                                            </type>
                                                            <name>target</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>destination</name>.
                                                                            <name>get</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>subKey</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>target</name>
                                                                <name>instanceof</name>
                                                                <name>JSONObject</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>intermediate</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>destination</name>.
                                                                                <name>getJSONObject</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>subKey</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>target</name>
                                                                        <name>instanceof</name>
                                                                        <name>JSONArray</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <comment type="line">// Unexpected JSONArray,
                                                                            see issue #186
                                                                        </comment>
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>JSONArray</name>
                                                                                </type>
                                                                                <name>wildCard</name> =
                                                                                <init>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                destination</name>.
                                                                                                <name>getJSONArray
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>subKey
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <for>for (
                                                                            <init>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>int</name>
                                                                                    </type>
                                                                                    <name>j</name> =
                                                                                    <init>
                                                                                        <expr>0</expr>
                                                                                    </init>
                                                                                </decl>
                                                                                ;
                                                                            </init>
                                                                            <condition>
                                                                                <expr>
                                                                                    <name>j</name>
                                                                                    &lt;
                                                                                    <call>
                                                                                        <name><name>wildCard</name>.
                                                                                            <name>length</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </condition>
                                                                            <incr>
                                                                                <expr><name>j</name>++
                                                                                </expr>
                                                                            </incr>
                                                                            )
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>intermediate</name>
                                                                                        =
                                                                                        <call>
                                                                                            <name><name>wildCard</name>.
                                                                                                <name>optJSONObject
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>j</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>
                                                                                            <name>intermediate</name>
                                                                                            !=
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <comment type="line">//
                                                                                                Found the original
                                                                                                JSONObject we were
                                                                                                looking for
                                                                                            </comment>
                                                                                            <break>break;</break>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                </if>
                                                                                }
                                                                            </block>
                                                                        </for>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                        </else>
                                                    </if>

                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>intermediate</name>
                                                                ==
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>ACRA</name>.<name>log</name>.
                                                                                <name>e</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>ACRA</name>.
                                                                                            <name>LOG_TAG</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>"Unknown json subtree type,
                                                                                        see issue #186"
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <comment type="line">// We should never get here, but if
                                                                    we do, drop this value to still send the report
                                                                </comment>
                                                                <return>return;</return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>destination</name>
                                                =
                                                <name>intermediate</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>destination</name>.
                                                        <name>accumulate</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>subKey</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <class>
                <specifier>public</specifier>
                <specifier>static</specifier> class <name>JSONReportException</name>
                <super>
                    <extends>extends
                        <name>Exception</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>long</name>
                            </type>
                            <name>serialVersionUID</name> =
                            <init>
                                <expr>-694684023635442219L</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>public</specifier>
                        <name>JSONReportException</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>message</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Throwable</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>message</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>e</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    }
                </block>
            </class>
            <empty_stmt>;</empty_stmt>
            }
        </block>
    </class>
</unit>
