<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\acra\src\main\java\org\acra\ReportField.java">
    <comment type="block">/*
        * Copyright 2010 Kevin Gaudin
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.
            <name>acra</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>acra</name>.<name>annotation</name>.
            <name>ReportsCrashes</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>android</name>.<name>content</name>.<name>res</name>.
            <name>Configuration</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Specifies all the different fields available in a crash report.
        *
        * @author Normal
        *
        */
    </comment>
    <enum>
        <specifier>public</specifier>
        enum <name>ReportField</name>
        <block>{
            <comment type="javadoc">/**
                * Report Identifier
                */
            </comment>
            <expr_stmt>
                <expr>
                    <name>REPORT_ID</name>
                </expr>
                ,
                <comment type="javadoc">/**
                    * Application version code. This is the incremental integer version code
                    * used to differentiate versions on the android market.
                    *
                    * @see android.content.pm.PackageInfo#versionCode
                    */
                </comment>
                <expr>
                    <name>APP_VERSION_CODE</name>
                </expr>
                ,
                <comment type="javadoc">/**
                    * Application version name.
                    *
                    * @see android.content.pm.PackageInfo#versionName
                    */
                </comment>
                <expr>
                    <name>APP_VERSION_NAME</name>
                </expr>
                ,
                <comment type="javadoc">/**
                    * Application package name.
                    *
                    * @see android.content.Context#getPackageName()
                    */
                </comment>
                <expr>
                    <name>PACKAGE_NAME</name>
                </expr>
                ,
                <comment type="javadoc">/**
                    * Base path of the application's private file folder.
                    *
                    * @see android.content.Context#getFilesDir()
                    */
                </comment>
                <expr>
                    <name>FILE_PATH</name>
                </expr>
                ,
                <comment type="javadoc">/**
                    * Device model name.
                    *
                    * @see android.os.Build#MODEL
                    */
                </comment>
                <expr>
                    <name>PHONE_MODEL</name>
                </expr>
                ,
                <comment type="javadoc">/**
                    * Device android version name.
                    *
                    * @see android.os.Build.VERSION#RELEASE
                    */
                </comment>
                <expr>
                    <name>ANDROID_VERSION</name>
                </expr>
                ,
                <comment type="javadoc">/**
                    * Android Build details.
                    *
                    * @see android.os.Build
                    */
                </comment>
                <expr>
                    <name>BUILD</name>
                    <block>{
                        @
                        <expr>
                            <name>Override</name>
                            public <name>boolean</name>
                            <call>
                                <name>containsKeyValuePairs</name>
                                <argument_list>()</argument_list>
                            </call>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                            </block>
                        </expr>
                    </block>
                </expr>
            </expr_stmt>
            }
        </block>
    </enum>
    },
    <comment type="javadoc">/**
        * Device brand (manufacturer or carrier).
        *
        * @see android.os.Build#BRAND
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>BRAND</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Device overall product code.
            *
            * @see android.os.Build#PRODUCT
            */
        </comment>
        <expr>
            <name>PRODUCT</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Estimation of the total device memory size based on filesystem stats.
            */
        </comment>
        <expr>
            <name>TOTAL_MEM_SIZE</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Estimation of the available device memory size based on filesystem stats.
            */
        </comment>
        <expr>
            <name>AVAILABLE_MEM_SIZE</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Contains key = value pairs defined by the application developer during
            * the application build.
            */
        </comment>
        <expr>
            <name>BUILD_CONFIG</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>boolean</name>
                    <call>
                        <name>containsKeyValuePairs</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>true</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    },
    <comment type="javadoc">/**
        * Contains key = value pairs defined by the application developer during
        * the application execution.
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>CUSTOM_DATA</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>boolean</name>
                    <call>
                        <name>containsKeyValuePairs</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>true</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    },
    <comment type="javadoc">/**
        * The Holy Stack Trace.
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>STACK_TRACE</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * A hash of the stack trace, taking only method names into account.&lt;br&gt;
            * Line numbers are stripped out before computing the hash. This can help you
            * uniquely identify stack traces.
            */
        </comment>
        <expr>
            <name>STACK_TRACE_HASH</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * {@link Configuration} fields state on the application start.
            *
            * @see Configuration
            */
        </comment>
        <expr>
            <name>INITIAL_CONFIGURATION</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>boolean</name>
                    <call>
                        <name>containsKeyValuePairs</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>true</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    },
    <comment type="javadoc">/**
        * {@link Configuration} fields state on the application crash.
        *
        * @see Configuration
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>CRASH_CONFIGURATION</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>boolean</name>
                    <call>
                        <name>containsKeyValuePairs</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>true</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    },
    <comment type="javadoc">/**
        * Device display specifications.
        *
        * @see android.view.WindowManager#getDefaultDisplay()
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>DISPLAY</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>boolean</name>
                    <call>
                        <name>containsKeyValuePairs</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>true</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    },
    <comment type="javadoc">/**
        * Comment added by the user in the CrashReportDialog displayed in
        * {@link ReportingInteractionMode#NOTIFICATION} mode.
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>USER_COMMENT</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * User date on application start.
            */
        </comment>
        <expr>
            <name>USER_APP_START_DATE</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * User date immediately after the crash occurred.
            */
        </comment>
        <expr>
            <name>USER_CRASH_DATE</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Memory state details for the application process.
            */
        </comment>
        <expr>
            <name>DUMPSYS_MEMINFO</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Content of the android.os.DropBoxManager (introduced in API level 8).
            * Requires READ_LOGS permission.
            */
        </comment>
        <expr>
            <name>DROPBOX</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Logcat default extract. Requires READ_LOGS permission.
            */
        </comment>
        <expr>
            <name>LOGCAT</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Logcat eventslog extract. Requires READ_LOGS permission.
            */
        </comment>
        <expr>
            <name>EVENTSLOG</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Logcat radio extract. Requires READ_LOGS permission.
            */
        </comment>
        <expr>
            <name>RADIOLOG</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * True if the report has been explicitly sent silently by the developer.
            */
        </comment>
        <expr>
            <name>IS_SILENT</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Device unique ID (IMEI). Requires READ_PHONE_STATE permission.
            */
        </comment>
        <expr>
            <name>DEVICE_ID</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Installation unique ID. This identifier allow you to track a specific
            * user application installation without using any personal data.
            */
        </comment>
        <expr>
            <name>INSTALLATION_ID</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * User email address. Can be provided by the user in the
            * {@link ACRA#PREF_USER_EMAIL_ADDRESS} SharedPreference.
            */
        </comment>
        <expr>
            <name>USER_EMAIL</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Features declared as available on this device by the system.
            */
        </comment>
        <expr>
            <name>DEVICE_FEATURES</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>boolean</name>
                    <call>
                        <name>containsKeyValuePairs</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>true</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    },
    <comment type="javadoc">/**
        * External storage state and standard directories.
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>ENVIRONMENT</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>boolean</name>
                    <call>
                        <name>containsKeyValuePairs</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>true</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    },
    <comment type="javadoc">/**
        * System settings.
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>SETTINGS_SYSTEM</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>boolean</name>
                    <call>
                        <name>containsKeyValuePairs</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>true</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    },
    <comment type="javadoc">/**
        * Secure settings (applications can't modify them).
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>SETTINGS_SECURE</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>boolean</name>
                    <call>
                        <name>containsKeyValuePairs</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>true</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    },
    <comment type="javadoc">/**
        * Global settings, introduced in Android 4.2 (API level 17) to centralize settings for multiple users.
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>SETTINGS_GLOBAL</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>boolean</name>
                    <call>
                        <name>containsKeyValuePairs</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>true</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    },
    <comment type="javadoc">/**
        * SharedPreferences contents
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>SHARED_PREFERENCES</name>
            <block>{
                @
                <expr>
                    <name>Override</name>
                    public <name>boolean</name>
                    <call>
                        <name>containsKeyValuePairs</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <return>return <expr>true</expr>;
                        </return>
                    </block>
                </expr>
            </block>
        </expr>
    </expr_stmt>
    }
    },
    <comment type="javadoc">/**
        * Content of your own application log file. To be configured with
        * {@link ReportsCrashes#applicationLogFile()} to define the path/name of
        * the log file and {@link ReportsCrashes#applicationLogFileLines()} to set
        * the number of lines you want to be retrieved.
        */
    </comment>
    <expr_stmt>
        <expr>
            <name>APPLICATION_LOG</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Since Android API Level 16 (Android 4.1 - Jelly Beans), retrieve the list
            * of supported Media codecs and their capabilities (color format, profile
            * and level).
            */
        </comment>
        <expr>
            <name>MEDIA_CODEC_LIST</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Retrieves details of the failing thread (id, name, group name).
            */
        </comment>
        <expr>
            <name>THREAD_DETAILS</name>
        </expr>
        ,
        <comment type="javadoc">/**
            * Retrieves the user IP address(es).
            */
        </comment>
        <expr>
            <name>USER_IP</name>
        </expr>
        ;
    </expr_stmt>

    <comment type="javadoc">/**
        * Whether this field is a collection of key/value pairs.
        *
        * @return true if the field contains a string with a key/value pair on each
        * line, key and value separated by an equal sugn
        *
        */
    </comment>
    <function>
        <type>
            <specifier>public</specifier>
            <name>boolean</name>
        </type>
        <name>containsKeyValuePairs</name>
        <parameter_list>()</parameter_list>
        <block>{
            <return>return <expr>false</expr>;
            </return>
            }
        </block>
    </function>
    }
</unit>
