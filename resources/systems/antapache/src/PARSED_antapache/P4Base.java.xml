<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\antapache\src\main\org\apache\tools\ant\taskdefs\optional\perforce\P4Base.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        *
        */
    </comment>
    <comment type="block">/*
        * Portions of this software are based upon public domain software
        * originally written at the National Center for Supercomputing Applications,
        * University of Illinois, Urbana-Champaign.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>
            optional</name>.
            <name>perforce</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>oro</name>.<name>text</name>.<name>perl</name>.
            <name>Perl5Util</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.
            <name>BuildException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.
            <name>Project</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.
            <name>Execute</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.
            <name>Commandline</name>
        </name>
        ;
    </import>


    <comment type="javadoc">/** Base class for Perforce (P4) ANT tasks. See individual task for example usage.
        *
        * @see P4Sync
        * @see P4Have
        * @see P4Change
        * @see P4Edit
        * @see P4Submit
        * @see P4Label
        * @see org.apache.tools.ant.taskdefs.Execute
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>P4Base</name>
        <super>
            <extends>extends <name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.
                <name>Task</name>
            </extends>
        </super>
        <block>{
            <comment type="line">// CheckStyle:VisibilityModifier OFF - bc</comment>
            <comment type="line">// CheckStyle:MemberNameCheck OFF - bc</comment>
            <comment type="javadoc">/**Perl5 regexp in Java - cool eh? */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Perl5Util</name>
                    </type>
                    <name>util</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/** The OS shell to use (cmd.exe or /bin/sh) */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>shell</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//P4 runtime directives</comment>
            <comment type="javadoc">/** Perforce Server Port (eg KM01:1666) */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>P4Port</name> =
                    <init>
                        <expr>""</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/** Perforce Client (eg myclientspec) */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>P4Client</name> =
                    <init>
                        <expr>""</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/** Perforce User (eg fbloggs) */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>P4User</name> =
                    <init>
                        <expr>""</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/** Perforce view for commands. (eg //projects/foobar/main/source/... )*/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>P4View</name> =
                    <init>
                        <expr>""</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Perforce task directives</comment>
            <comment type="javadoc">/** Keep going or fail on error - defaults to fail. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>failOnError</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//P4 g-opts and cmd opts (rtfm)</comment>
            <comment type="javadoc">/** Perforce 'global' opts.
                * Forms half of low level API */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>P4Opts</name> =
                    <init>
                        <expr>""</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/** Perforce command opts.
                * Forms half of low level API */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>P4CmdOpts</name> =
                    <init>
                        <expr>""</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Set by the task or a handler to indicate that the task has failed.
                BuildExceptions
                * can also be thrown to indicate failure. */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>inError</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** If inError is set, then errorMessage needs to contain the reason why. */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>errorMessage</name> =
                    <init>
                        <expr>""</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// CheckStyle:MemberNameCheck ON</comment>
            <comment type="line">// CheckStyle:VisibilityModifier ON</comment>

            <comment type="javadoc">/**
                * gets whether or not the task has encountered an error
                * @return error flag
                * @since ant 1.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getInError</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>inError</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * sets the error flag on the task
                * @param inError if true an error has been encountered by the handler
                * @since ant 1.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setInError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>inError</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>inError</name>
                            </name>
                            =
                            <name>inError</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * gets the error message recorded by the Perforce handler
                * @return error message
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getErrorMessage</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>errorMessage</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * sets the error message
                * @param errorMessage line of error output
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setErrorMessage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>errorMessage</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>errorMessage</name>
                            </name>
                            =
                            <name>errorMessage</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">//Setters called by Ant</comment>

            <comment type="javadoc">/**
                * The p4d server and port to connect to;
                * optional, default "perforce:1666"
                *
                * @param p4Port the port one wants to set such as localhost:1666
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPort</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>p4Port</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>P4Port</name>
                            </name>
                            = "-p" +
                            <name>p4Port</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The p4 client spec to use;
                * optional, defaults to the current user
                *
                * @param p4Client the name of the Perforce client spec
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setClient</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>p4Client</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>P4Client</name>
                            </name>
                            = "-c" +
                            <name>p4Client</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The p4 username;
                * optional, defaults to the current user
                *
                * @param p4User the user name
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setUser</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>p4User</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>P4User</name>
                            </name>
                            = "-u" +
                            <name>p4User</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Set global P4 options; Used on all
                * of the Perforce tasks.
                *
                * @param p4Opts global options, to use a specific P4Config file for instance
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setGlobalopts</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>p4Opts</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>P4Opts</name>
                            </name>
                            =
                            <name>p4Opts</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * The client, branch or label view to operate upon;
                * optional default "//...".
                *
                * the view is required for the following tasks :
                * &lt;ul&gt;
                * &lt;li&gt;p4delete&lt;/li&gt;
                * &lt;li&gt;p4edit&lt;/li&gt;
                * &lt;li&gt;p4reopen&lt;/li&gt;
                * &lt;li&gt;p4resolve&lt;/li&gt;
                * &lt;/ul&gt;
                *
                * @param p4View the view one wants to use
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setView</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>p4View</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>P4View</name>
                            </name>
                            =
                            <name>p4View</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Set extra command options; only used on some
                * of the Perforce tasks.
                *
                * @param p4CmdOpts command line options going after the particular
                * Perforce command
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setCmdopts</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>p4CmdOpts</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>P4CmdOpts</name>
                            </name>
                            =
                            <name>p4CmdOpts</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * whether to stop the build (true, default)
                * or keep going if an error is returned from the p4 command
                * @param fail indicates whether one wants to fail the build if an error comes from the
                * Perforce command
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFailonerror</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>fail</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>failOnError</name>
                            =
                            <name>fail</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * sets attributes Port, Client, User from properties
                * if these properties are defined.
                * Called automatically by UnknownElement
                * @see org.apache.tools.ant.UnknownElement
                * &lt;table&gt;
                * &lt;tr&gt;&lt;th&gt;Property&lt;/th&gt;&lt;th&gt;Attribute&lt;/th&gt;&lt;/tr&gt;
                * &lt;tr&gt;&lt;td&gt;p4.port&lt;/td&gt;&lt;td&gt;Port&lt;/td&gt;&lt;/tr&gt;
                * &lt;tr&gt;&lt;td&gt;p4.client&lt;/td&gt;&lt;td&gt;Client&lt;/td&gt;&lt;/tr&gt;
                * &lt;tr&gt;&lt;td&gt;p4.user&lt;/td&gt;&lt;td&gt;User&lt;/td&gt;&lt;/tr&gt;
                * &lt;/table&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>init</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <name>util</name>
                            = new
                            <call>
                                <name>Perl5Util</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//Get default P4 settings from environment - Mark would have done something
                        cool with
                    </comment>
                    <comment type="line">//introspection here.....:-)</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tmpprop</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// CheckStyle:InnerAssignment OFF</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>tmpprop</name> =
                                <call>
                                    <name>getProject</name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>getProperty</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"p4.port"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ) !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setPort</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>tmpprop</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>tmpprop</name> =
                                <call>
                                    <name>getProject</name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>getProperty</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"p4.client"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ) !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setClient</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>tmpprop</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>tmpprop</name> =
                                <call>
                                    <name>getProject</name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>getProperty</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"p4.user"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ) !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setUser</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>tmpprop</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// CheckStyle:InnerAssignment ON</comment>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * no usages found for this method
                * runs a Perforce command without a handler
                * @param command the command that one wants to execute
                * @throws BuildException if failonerror is set and the command fails
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>execP4Command</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>command</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>BuildException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>execP4Command</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>command</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Execute P4 command assembled by subclasses.
                *
                * @param command The command to run
                * @param handler A P4Handler to process any input and output
                *
                * @throws BuildException if failonerror has been set to true
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>execP4Command</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>command</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>P4Handler</name>
                            </type>
                            <name>handler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>BuildException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <comment type="line">// reset error flags before executing the command</comment>
                            <expr_stmt>
                                <expr>
                                    <name>inError</name>
                                    = false
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>errorMessage</name>
                                    = ""
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Commandline</name>
                                    </type>
                                    <name>commandline</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>Commandline</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>commandline</name>.
                                            <name>setExecutable</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"p4"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">//Check API for these - it's how CVS does it...</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>P4Port</name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>P4Port</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        != 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>commandline</name>.
                                                        <name>createArgument</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>setValue</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>P4Port</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>P4User</name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>P4User</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        != 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>commandline</name>.
                                                        <name>createArgument</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>setValue</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>P4User</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>P4Client</name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>P4Client</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        != 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>commandline</name>.
                                                        <name>createArgument</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>setValue</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>P4Client</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>P4Opts</name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>P4Opts</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        != 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>commandline</name>.
                                                        <name>createArgument</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>setLine</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>P4Opts</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>commandline</name>.
                                            <name>createArgument</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>setLine</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>command</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>log</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>commandline</name>.
                                                            <name>describeCommand</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>Project</name>.
                                                        <name>MSG_VERBOSE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>handler</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>handler</name>
                                                = new
                                                <call>
                                                    <name>SimpleP4OutputHandler</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>this</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Execute</name>
                                    </type>
                                    <name>exe</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>Execute</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>handler</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>exe</name>.
                                            <name>setAntRun</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getProject</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>exe</name>.
                                            <name>setCommandline</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>commandline</name>.
                                                            <name>getCommandline</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>exe</name>.
                                                    <name>execute</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>inError</name>
                                                &amp;&amp;
                                                <name>failOnError</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name>BuildException</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>errorMessage</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>IOException</name>
                                            </type>
                                            <name>e</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>BuildException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>e</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </catch>
                                <finally>finally
                                    <block>{
                                        <try>try
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>handler</name>.
                                                                <name>stop</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                            <catch>catch (
                                                <param>
                                                    <decl>
                                                        <type>
                                                            <name>Exception</name>
                                                        </type>
                                                        <name>e</name>
                                                    </decl>
                                                </param>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>log</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Error stopping execution framework: " +
                                                                            <call>
                                                                                <name><name>e</name>.
                                                                                    <name>toString</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>Project</name>.
                                                                                <name>MSG_ERR</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </catch>
                                        </try>
                                        }
                                    </block>
                                </finally>
                            </try>


                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>failMsg</name> =
                                        <init>
                                            <expr>"Problem exec'ing P4 command: " +
                                                <call>
                                                    <name><name>e</name>.
                                                        <name>getMessage</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>failOnError</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>e</name>
                                                        <name>instanceof</name>
                                                        <name>BuildException</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>(<name>BuildException</name>)
                                                                <name>e</name>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>BuildException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>failMsg</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>e</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>log</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>failMsg</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Project</name>.
                                                                        <name>MSG_ERR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>

                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
