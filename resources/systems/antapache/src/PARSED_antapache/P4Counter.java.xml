<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\antapache\src\main\org\apache\tools\ant\taskdefs\optional\perforce\P4Counter.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        *
        */
    </comment>
    <comment type="block">/*
        * Portions of this software are based upon public domain software
        * originally written at the National Center for Supercomputing Applications,
        * University of Illinois, Urbana-Champaign.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>
            optional</name>.
            <name>perforce</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.
            <name>BuildException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.
            <name>Project</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Obtains or sets the value of a counter.
        *
        * &lt;p&gt; When used in its base form
        * (where only the counter name is provided), the counter value will be
        * printed to the output stream. When the value is provided, the counter
        * will be set to the value provided. When a property name is provided,
        * the property will be filled with the value of the counter. You may
        * not specify to both get and set the value of the counter in the same
        * Task.
        * &lt;/p&gt;
        * &lt;P&gt;
        * The user performing this task must have Perforce &amp;quot;review&amp;quot; permissions
        * as defined by Perforce protections in order for this task to succeed.
        &lt;/P&gt;

        * Example Usage:&lt;br&gt;
        * &amp;lt;p4counter name="${p4.counter}" property=${p4.change}"/&amp;gt;
        *
        * @ant.task category="scm"
        */
    </comment>

    <class>
        <specifier>public</specifier>
        class <name>P4Counter</name>
        <super>
            <extends>extends
                <name>P4Base</name>
            </extends>
        </super>
        <block>{
            <comment type="line">// CheckStyle:VisibilityModifier OFF - bc</comment>
            <comment type="javadoc">/**
                * name of the counter
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>String</name>
                    </type>
                    <name>counter</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * name of an optional property
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>String</name>
                    </type>
                    <name>property</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * flag telling whether the value of the counter should be set
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>boolean</name>
                    </type>
                    <name>shouldSetValue</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * flag telling whether a property should be set
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>boolean</name>
                    </type>
                    <name>shouldSetProperty</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * new value for the counter
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>int</name>
                    </type>
                    <name>value</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// CheckStyle:VisibilityModifier ON</comment>

            <comment type="javadoc">/**
                * The name of the counter; required
                * @param counter name of the counter
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>counter</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>counter</name>
                            </name>
                            =
                            <name>counter</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The new value for the counter; optional.
                * @param value new value for the counter
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>value</name>
                            </name>
                            =
                            <name>value</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>shouldSetValue</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A property to be set with the value of the counter
                * @param property the name of a property to set with the value
                * of the counter
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>property</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>property</name>
                            </name>
                            =
                            <name>property</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>shouldSetProperty</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * again, properties are mutable in this tsk
                * @throws BuildException if the required parameters are not supplied.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>execute</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>BuildException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>(<name>counter</name> == <name>null</name>) ||
                                <call>
                                    <name><name>counter</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>BuildException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"No counter specified to retrieve"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>shouldSetValue</name>
                                &amp;&amp;
                                <name>shouldSetProperty</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>BuildException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Cannot both set the value of the property and retrieve the "
                                                        + "value of the property."
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>command</name> =
                            <init>
                                <expr>"counter " + <name>P4CmdOpts</name> + " " +
                                    <name>counter</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <name>shouldSetProperty</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you
                                </comment>
                                <comment type="line">// have to start running through regular expressions here. Much
                                    easier
                                </comment>
                                <comment type="line">// to just not include the scripting information than to try to add
                                    it
                                </comment>
                                <comment type="line">// and strip it later.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>command</name>
                                        = "-s " +
                                        <name>command</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>shouldSetValue</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>command</name>
                                        += " " +
                                        <name>value</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>shouldSetProperty</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <specifier>final</specifier>
                                            <name>Project</name>
                                        </type>
                                        <name>myProj</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getProject</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>P4Handler</name>
                                        </type>
                                        <name>handler</name> =
                                        <init>
                                            <expr>new
                                                <class>
                                                    <super>
                                                        <name>P4HandlerAdapter</name>
                                                    </super>
                                                    <argument_list>()</argument_list>
                                                    <block>{
                                                        <function>
                                                            <type>
                                                                <specifier>public</specifier>
                                                                <name>void</name>
                                                            </type>
                                                            <name>process</name>
                                                            <parameter_list>(
                                                                <param>
                                                                    <decl>
                                                                        <type>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>line</name>
                                                                    </decl>
                                                                </param>
                                                                )
                                                            </parameter_list>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>log</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"P4Counter retrieved line \""
                                                                                        + <name>line</name> + "\""
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>Project</name>.
                                                                                            <name>MSG_VERBOSE</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <try>try
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>value</name>
                                                                                =
                                                                                <call>
                                                                                    <name><name>Integer</name>.
                                                                                        <name>parseInt</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>line</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>myProj</name>.
                                                                                        <name>setProperty</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>property</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>"" +
                                                                                                <name>value</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                    <catch>catch (
                                                                        <param>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>NumberFormatException</name>
                                                                                </type>
                                                                                <name>nfe</name>
                                                                            </decl>
                                                                        </param>
                                                                        )
                                                                        <block>{
                                                                            <throw>throw
                                                                                <expr>new
                                                                                    <call>
                                                                                        <name>BuildException</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>"Perforce error. "
                                                                                                    + "Could not
                                                                                                    retrieve counter
                                                                                                    value."
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </throw>
                                                                            }
                                                                        </block>
                                                                    </catch>
                                                                </try>
                                                                }
                                                            </block>
                                                        </function>
                                                        }
                                                    </block>
                                                </class>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>execP4Command</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>command</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>handler</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>execP4Command</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>command</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>SimpleP4OutputHandler</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
