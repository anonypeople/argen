<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\antapache\src\main\org\apache\tools\tar\TarConstants.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        *
        */
    </comment>

    <comment type="block">/*
        * This package is based on the work done by Timothy Gerard Endres
        * (time@ice.com) to whom the Ant project is very grateful for his great code.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>tools</name>.
            <name>tar</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * This interface contains all the definitions used in the package.
        *
        */
    </comment>
    <comment type="line">// CheckStyle:InterfaceIsTypeCheck OFF (bc)</comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>TarConstants</name>
        <block>{

            <comment type="javadoc">/**
                * The length of the name field in a header buffer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>NAMELEN</name> =
                    <init>
                        <expr>100</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The length of the mode field in a header buffer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>MODELEN</name> =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The length of the user id field in a header buffer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>UIDLEN</name> =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The length of the group id field in a header buffer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>GIDLEN</name> =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The length of the checksum field in a header buffer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>CHKSUMLEN</name> =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The length of the size field in a header buffer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>SIZELEN</name> =
                    <init>
                        <expr>12</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The maximum size of a file in a tar archive (That's 11 sevens, octal).
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>long</name>
                    </type>
                    <name>MAXSIZE</name> =
                    <init>
                        <expr>077777777777L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The length of the magic field in a header buffer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>MAGICLEN</name> =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The length of the modification time field in a header buffer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>MODTIMELEN</name> =
                    <init>
                        <expr>12</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The length of the user name field in a header buffer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>UNAMELEN</name> =
                    <init>
                        <expr>32</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The length of the group name field in a header buffer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>GNAMELEN</name> =
                    <init>
                        <expr>32</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The length of the devices field in a header buffer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>DEVLEN</name> =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * LF_ constants represent the "link flag" of an entry, or more commonly,
                * the "entry type". This is the "old way" of indicating a normal file.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>byte</name>
                    </type>
                    <name>LF_OLDNORM</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Normal file type.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>byte</name>
                    </type>
                    <name>LF_NORMAL</name> =
                    <init>
                        <expr>(<name>byte</name>) '0'
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Link file type.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>byte</name>
                    </type>
                    <name>LF_LINK</name> =
                    <init>
                        <expr>(<name>byte</name>) '1'
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Symbolic link file type.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>byte</name>
                    </type>
                    <name>LF_SYMLINK</name> =
                    <init>
                        <expr>(<name>byte</name>) '2'
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Character device file type.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>byte</name>
                    </type>
                    <name>LF_CHR</name> =
                    <init>
                        <expr>(<name>byte</name>) '3'
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Block device file type.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>byte</name>
                    </type>
                    <name>LF_BLK</name> =
                    <init>
                        <expr>(<name>byte</name>) '4'
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Directory file type.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>byte</name>
                    </type>
                    <name>LF_DIR</name> =
                    <init>
                        <expr>(<name>byte</name>) '5'
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * FIFO (pipe) file type.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>byte</name>
                    </type>
                    <name>LF_FIFO</name> =
                    <init>
                        <expr>(<name>byte</name>) '6'
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Contiguous file type.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>byte</name>
                    </type>
                    <name>LF_CONTIG</name> =
                    <init>
                        <expr>(<name>byte</name>) '7'
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The magic tag representing a POSIX tar archive.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>TMAGIC</name> =
                    <init>
                        <expr>"ustar"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The magic tag representing a GNU tar archive.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>GNU_TMAGIC</name> =
                    <init>
                        <expr>"ustar "</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The namr of the GNU tar entry which contains a long name.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>GNU_LONGLINK</name> =
                    <init>
                        <expr>"././@LongLink"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Identifies the *next* file on the tape as having a long name.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>byte</name>
                    </type>
                    <name>LF_GNUTYPE_LONGNAME</name> =
                    <init>
                        <expr>(<name>byte</name>) 'L'
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            }
        </block>
    </class>
</unit>
