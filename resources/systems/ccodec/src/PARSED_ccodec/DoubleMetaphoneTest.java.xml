<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\David\IdeaProjects\arem\resources\systems\ccodec\src\test\java\org\apache\commons\codec\language\DoubleMetaphoneTest.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>codec</name>.<name>language</name></name>;</package>

<import>import static <name><name>org</name>.<name>junit</name>.<name>Assert</name>.<name>assertEquals</name></name>;</import>
<import>import static <name><name>org</name>.<name>junit</name>.<name>Assert</name>.<name>assertFalse</name></name>;</import>
<import>import static <name><name>org</name>.<name>junit</name>.<name>Assert</name>.<name>assertTrue</name></name>;</import>
<import>import static <name><name>org</name>.<name>junit</name>.<name>Assert</name>.<name>fail</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>codec</name>.<name>EncoderException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>codec</name>.<name>StringEncoderAbstractTest</name></name>;</import>
<import>import <name><name>org</name>.<name>junit</name>.<name>Test</name></name>;</import>

<comment type="javadoc">/**
 * Tests {@link DoubleMetaphone}.
 *
 * &lt;p&gt;Keep this file in UTF-8 encoding for proper Javadoc processing.&lt;/p&gt;
 *
 * @see "http://www.cuj.com/documents/s=8038/cuj0006philips/"
 * @version $Id: DoubleMetaphoneTest.java 1468715 2013-04-17 02:10:48Z ggregory $
 */</comment>
<class><specifier>public</specifier> class <name>DoubleMetaphoneTest</name> <super><extends>extends <name><name>StringEncoderAbstractTest</name><argument_list>&lt;<argument><name>DoubleMetaphone</name></argument>&gt;</argument_list></name></extends></super> <block>{

    <comment type="javadoc">/**
     * Test data from http://aspell.net/test/orig/batch0.tab.
     *
     * "Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org). Verbatim copying
     * and distribution of this entire article is permitted in any medium,
     * provided this notice is preserved."
     *
     * Massaged the test data in the array below.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name><index>[]</index><index>[]</index></type> <name>FIXTURE</name> =<init> <expr><block>{ <expr><block>{ <expr>"Accosinly"</expr>, <expr>"Occasionally"</expr> }</block></expr>, <expr><block>{
            <expr>"Ciculer"</expr>, <expr>"Circler"</expr> }</block></expr>, <expr><block>{
            <expr>"Circue"</expr>, <expr>"Circle"</expr> }</block></expr>, <expr><block>{
            <expr>"Maddness"</expr>, <expr>"Madness"</expr> }</block></expr>, <expr><block>{
            <expr>"Occusionaly"</expr>, <expr>"Occasionally"</expr> }</block></expr>, <expr><block>{
            <expr>"Steffen"</expr>, <expr>"Stephen"</expr> }</block></expr>, <expr><block>{
            <expr>"Thw"</expr>, <expr>"The"</expr> }</block></expr>, <expr><block>{
            <expr>"Unformanlly"</expr>, <expr>"Unfortunately"</expr> }</block></expr>, <expr><block>{
            <expr>"Unfortally"</expr>, <expr>"Unfortunately"</expr> }</block></expr>, <expr><block>{
            <expr>"abilitey"</expr>, <expr>"ability"</expr> }</block></expr>, <expr><block>{
            <expr>"abouy"</expr>, <expr>"about"</expr> }</block></expr>, <expr><block>{
            <expr>"absorbtion"</expr>, <expr>"absorption"</expr> }</block></expr>, <expr><block>{
            <expr>"accidently"</expr>, <expr>"accidentally"</expr> }</block></expr>, <expr><block>{
            <expr>"accomodate"</expr>, <expr>"accommodate"</expr> }</block></expr>, <expr><block>{
            <expr>"acommadate"</expr>, <expr>"accommodate"</expr> }</block></expr>, <expr><block>{
            <expr>"acord"</expr>, <expr>"accord"</expr> }</block></expr>, <expr><block>{
            <expr>"adultry"</expr>, <expr>"adultery"</expr> }</block></expr>, <expr><block>{
            <expr>"aggresive"</expr>, <expr>"aggressive"</expr> }</block></expr>, <expr><block>{
            <expr>"alchohol"</expr>, <expr>"alcohol"</expr> }</block></expr>, <expr><block>{
            <expr>"alchoholic"</expr>, <expr>"alcoholic"</expr> }</block></expr>, <expr><block>{
            <expr>"allieve"</expr>, <expr>"alive"</expr> }</block></expr>, <expr><block>{
            <expr>"alot"</expr>, <expr>"a lot"</expr> }</block></expr>, <expr><block>{
            <expr>"alright"</expr>, <expr>"all right"</expr> }</block></expr>, <expr><block>{
            <expr>"amature"</expr>, <expr>"amateur"</expr> }</block></expr>, <expr><block>{
            <expr>"ambivilant"</expr>, <expr>"ambivalent"</expr> }</block></expr>, <expr><block>{
            <expr>"amification"</expr>, <expr>"amplification"</expr> }</block></expr>, <expr><block>{
            <expr>"amourfous"</expr>, <expr>"amorphous"</expr> }</block></expr>, <expr><block>{
            <expr>"annoint"</expr>, <expr>"anoint"</expr> }</block></expr>, <expr><block>{
            <expr>"annonsment"</expr>, <expr>"announcement"</expr> }</block></expr>, <expr><block>{
            <expr>"annoyting"</expr>, <expr>"anting"</expr> }</block></expr>, <expr><block>{
            <expr>"annuncio"</expr>, <expr>"announce"</expr> }</block></expr>, <expr><block>{
            <expr>"anonomy"</expr>, <expr>"anatomy"</expr> }</block></expr>, <expr><block>{
            <expr>"anotomy"</expr>, <expr>"anatomy"</expr> }</block></expr>, <expr><block>{
            <expr>"antidesestablishmentarianism"</expr>, <expr>"antidisestablishmentarianism"</expr> }</block></expr>, <expr><block>{
            <expr>"antidisestablishmentarism"</expr>, <expr>"antidisestablishmentarianism"</expr> }</block></expr>, <expr><block>{
            <expr>"anynomous"</expr>, <expr>"anonymous"</expr> }</block></expr>, <expr><block>{
            <expr>"appelet"</expr>, <expr>"applet"</expr> }</block></expr>, <expr><block>{
            <expr>"appreceiated"</expr>, <expr>"appreciated"</expr> }</block></expr>, <expr><block>{
            <expr>"appresteate"</expr>, <expr>"appreciate"</expr> }</block></expr>, <expr><block>{
            <expr>"aquantance"</expr>, <expr>"acquaintance"</expr> }</block></expr>, <expr><block>{
            <expr>"aratictature"</expr>, <expr>"architecture"</expr> }</block></expr>, <expr><block>{
            <expr>"archeype"</expr>, <expr>"archetype"</expr> }</block></expr>, <expr><block>{
            <expr>"aricticure"</expr>, <expr>"architecture"</expr> }</block></expr>, <expr><block>{
            <expr>"artic"</expr>, <expr>"arctic"</expr> }</block></expr>, <expr><block>{
            <expr>"asentote"</expr>, <expr>"asymptote"</expr> }</block></expr>, <expr><block>{
            <expr>"ast"</expr>, <expr>"at"</expr> }</block></expr>, <expr><block>{
            <expr>"asterick"</expr>, <expr>"asterisk"</expr> }</block></expr>, <expr><block>{
            <expr>"asymetric"</expr>, <expr>"asymmetric"</expr> }</block></expr>, <expr><block>{
            <expr>"atentively"</expr>, <expr>"attentively"</expr> }</block></expr>, <expr><block>{
            <expr>"autoamlly"</expr>, <expr>"automatically"</expr> }</block></expr>, <expr><block>{
            <expr>"bankrot"</expr>, <expr>"bankrupt"</expr> }</block></expr>, <expr><block>{
            <expr>"basicly"</expr>, <expr>"basically"</expr> }</block></expr>, <expr><block>{
            <expr>"batallion"</expr>, <expr>"battalion"</expr> }</block></expr>, <expr><block>{
            <expr>"bbrose"</expr>, <expr>"browse"</expr> }</block></expr>, <expr><block>{
            <expr>"beauro"</expr>, <expr>"bureau"</expr> }</block></expr>, <expr><block>{
            <expr>"beaurocracy"</expr>, <expr>"bureaucracy"</expr> }</block></expr>, <expr><block>{
            <expr>"beggining"</expr>, <expr>"beginning"</expr> }</block></expr>, <expr><block>{
            <expr>"beging"</expr>, <expr>"beginning"</expr> }</block></expr>, <expr><block>{
            <expr>"behaviour"</expr>, <expr>"behavior"</expr> }</block></expr>, <expr><block>{
            <expr>"beleive"</expr>, <expr>"believe"</expr> }</block></expr>, <expr><block>{
            <expr>"belive"</expr>, <expr>"believe"</expr> }</block></expr>, <expr><block>{
            <expr>"benidifs"</expr>, <expr>"benefits"</expr> }</block></expr>, <expr><block>{
            <expr>"bigginging"</expr>, <expr>"beginning"</expr> }</block></expr>, <expr><block>{
            <expr>"blait"</expr>, <expr>"bleat"</expr> }</block></expr>, <expr><block>{
            <expr>"bouyant"</expr>, <expr>"buoyant"</expr> }</block></expr>, <expr><block>{
            <expr>"boygot"</expr>, <expr>"boycott"</expr> }</block></expr>, <expr><block>{
            <expr>"brocolli"</expr>, <expr>"broccoli"</expr> }</block></expr>, <expr><block>{
            <expr>"buch"</expr>, <expr>"bush"</expr> }</block></expr>, <expr><block>{
            <expr>"buder"</expr>, <expr>"butter"</expr> }</block></expr>, <expr><block>{
            <expr>"budr"</expr>, <expr>"butter"</expr> }</block></expr>, <expr><block>{
            <expr>"budter"</expr>, <expr>"butter"</expr> }</block></expr>, <expr><block>{
            <expr>"buracracy"</expr>, <expr>"bureaucracy"</expr> }</block></expr>, <expr><block>{
            <expr>"burracracy"</expr>, <expr>"bureaucracy"</expr> }</block></expr>, <expr><block>{
            <expr>"buton"</expr>, <expr>"button"</expr> }</block></expr>, <expr><block>{
            <expr>"byby"</expr>, <expr>"by by"</expr> }</block></expr>, <expr><block>{
            <expr>"cauler"</expr>, <expr>"caller"</expr> }</block></expr>, <expr><block>{
            <expr>"ceasar"</expr>, <expr>"caesar"</expr> }</block></expr>, <expr><block>{
            <expr>"cemetary"</expr>, <expr>"cemetery"</expr> }</block></expr>, <expr><block>{
            <expr>"changeing"</expr>, <expr>"changing"</expr> }</block></expr>, <expr><block>{
            <expr>"cheet"</expr>, <expr>"cheat"</expr> }</block></expr>, <expr><block>{
            <expr>"cicle"</expr>, <expr>"circle"</expr> }</block></expr>, <expr><block>{
            <expr>"cimplicity"</expr>, <expr>"simplicity"</expr> }</block></expr>, <expr><block>{
            <expr>"circumstaces"</expr>, <expr>"circumstances"</expr> }</block></expr>, <expr><block>{
            <expr>"clob"</expr>, <expr>"club"</expr> }</block></expr>, <expr><block>{
            <expr>"coaln"</expr>, <expr>"colon"</expr> }</block></expr>, <expr><block>{
            <expr>"cocamena"</expr>, <expr>"cockamamie"</expr> }</block></expr>, <expr><block>{
            <expr>"colleaque"</expr>, <expr>"colleague"</expr> }</block></expr>, <expr><block>{
            <expr>"colloquilism"</expr>, <expr>"colloquialism"</expr> }</block></expr>, <expr><block>{
            <expr>"columne"</expr>, <expr>"column"</expr> }</block></expr>, <expr><block>{
            <expr>"comiler"</expr>, <expr>"compiler"</expr> }</block></expr>, <expr><block>{
            <expr>"comitmment"</expr>, <expr>"commitment"</expr> }</block></expr>, <expr><block>{
            <expr>"comitte"</expr>, <expr>"committee"</expr> }</block></expr>, <expr><block>{
            <expr>"comittmen"</expr>, <expr>"commitment"</expr> }</block></expr>, <expr><block>{
            <expr>"comittmend"</expr>, <expr>"commitment"</expr> }</block></expr>, <expr><block>{
            <expr>"commerciasl"</expr>, <expr>"commercials"</expr> }</block></expr>, <expr><block>{
            <expr>"commited"</expr>, <expr>"committed"</expr> }</block></expr>, <expr><block>{
            <expr>"commitee"</expr>, <expr>"committee"</expr> }</block></expr>, <expr><block>{
            <expr>"companys"</expr>, <expr>"companies"</expr> }</block></expr>, <expr><block>{
            <expr>"compicated"</expr>, <expr>"complicated"</expr> }</block></expr>, <expr><block>{
            <expr>"comupter"</expr>, <expr>"computer"</expr> }</block></expr>, <expr><block>{
            <expr>"concensus"</expr>, <expr>"consensus"</expr> }</block></expr>, <expr><block>{
            <expr>"confusionism"</expr>, <expr>"confucianism"</expr> }</block></expr>, <expr><block>{
            <expr>"congradulations"</expr>, <expr>"congratulations"</expr> }</block></expr>, <expr><block>{
            <expr>"conibation"</expr>, <expr>"contribution"</expr> }</block></expr>, <expr><block>{
            <expr>"consident"</expr>, <expr>"consistent"</expr> }</block></expr>, <expr><block>{
            <expr>"consident"</expr>, <expr>"consonant"</expr> }</block></expr>, <expr><block>{
            <expr>"contast"</expr>, <expr>"constant"</expr> }</block></expr>, <expr><block>{
            <expr>"contastant"</expr>, <expr>"constant"</expr> }</block></expr>, <expr><block>{
            <expr>"contunie"</expr>, <expr>"continue"</expr> }</block></expr>, <expr><block>{
            <expr>"cooly"</expr>, <expr>"coolly"</expr> }</block></expr>, <expr><block>{
            <expr>"copping"</expr>, <expr>"coping"</expr> }</block></expr>, <expr><block>{
            <expr>"cosmoplyton"</expr>, <expr>"cosmopolitan"</expr> }</block></expr>, <expr><block>{
            <expr>"courst"</expr>, <expr>"court"</expr> }</block></expr>, <expr><block>{
            <expr>"crasy"</expr>, <expr>"crazy"</expr> }</block></expr>, <expr><block>{
            <expr>"cravets"</expr>, <expr>"caveats"</expr> }</block></expr>, <expr><block>{
            <expr>"credetability"</expr>, <expr>"credibility"</expr> }</block></expr>, <expr><block>{
            <expr>"criqitue"</expr>, <expr>"critique"</expr> }</block></expr>, <expr><block>{
            <expr>"croke"</expr>, <expr>"croak"</expr> }</block></expr>, <expr><block>{
            <expr>"crucifiction"</expr>, <expr>"crucifixion"</expr> }</block></expr>, <expr><block>{
            <expr>"crusifed"</expr>, <expr>"crucified"</expr> }</block></expr>, <expr><block>{
            <expr>"ctitique"</expr>, <expr>"critique"</expr> }</block></expr>, <expr><block>{
            <expr>"cumba"</expr>, <expr>"combo"</expr> }</block></expr>, <expr><block>{
            <expr>"custamisation"</expr>, <expr>"customization"</expr> }</block></expr>, <expr><block>{
            <expr>"dag"</expr>, <expr>"dog"</expr> }</block></expr>, <expr><block>{
            <expr>"daly"</expr>, <expr>"daily"</expr> }</block></expr>, <expr><block>{
            <expr>"danguages"</expr>, <expr>"dangerous"</expr> }</block></expr>, <expr><block>{
            <expr>"deaft"</expr>, <expr>"draft"</expr> }</block></expr>, <expr><block>{
            <expr>"defence"</expr>, <expr>"defense"</expr> }</block></expr>, <expr><block>{
            <expr>"defenly"</expr>, <expr>"defiantly"</expr> }</block></expr>, <expr><block>{
            <expr>"definate"</expr>, <expr>"definite"</expr> }</block></expr>, <expr><block>{
            <expr>"definately"</expr>, <expr>"definitely"</expr> }</block></expr>, <expr><block>{
            <expr>"dependeble"</expr>, <expr>"dependable"</expr> }</block></expr>, <expr><block>{
            <expr>"descrption"</expr>, <expr>"description"</expr> }</block></expr>, <expr><block>{
            <expr>"descrptn"</expr>, <expr>"description"</expr> }</block></expr>, <expr><block>{
            <expr>"desparate"</expr>, <expr>"desperate"</expr> }</block></expr>, <expr><block>{
            <expr>"dessicate"</expr>, <expr>"desiccate"</expr> }</block></expr>, <expr><block>{
            <expr>"destint"</expr>, <expr>"distant"</expr> }</block></expr>, <expr><block>{
            <expr>"develepment"</expr>, <expr>"developments"</expr> }</block></expr>, <expr><block>{
            <expr>"developement"</expr>, <expr>"development"</expr> }</block></expr>, <expr><block>{
            <expr>"develpond"</expr>, <expr>"development"</expr> }</block></expr>, <expr><block>{
            <expr>"devulge"</expr>, <expr>"divulge"</expr> }</block></expr>, <expr><block>{
            <expr>"diagree"</expr>, <expr>"disagree"</expr> }</block></expr>, <expr><block>{
            <expr>"dieties"</expr>, <expr>"deities"</expr> }</block></expr>, <expr><block>{
            <expr>"dinasaur"</expr>, <expr>"dinosaur"</expr> }</block></expr>, <expr><block>{
            <expr>"dinasour"</expr>, <expr>"dinosaur"</expr> }</block></expr>, <expr><block>{
            <expr>"direcyly"</expr>, <expr>"directly"</expr> }</block></expr>, <expr><block>{
            <expr>"discuess"</expr>, <expr>"discuss"</expr> }</block></expr>, <expr><block>{
            <expr>"disect"</expr>, <expr>"dissect"</expr> }</block></expr>, <expr><block>{
            <expr>"disippate"</expr>, <expr>"dissipate"</expr> }</block></expr>, <expr><block>{
            <expr>"disition"</expr>, <expr>"decision"</expr> }</block></expr>, <expr><block>{
            <expr>"dispair"</expr>, <expr>"despair"</expr> }</block></expr>, <expr><block>{
            <expr>"disssicion"</expr>, <expr>"discussion"</expr> }</block></expr>, <expr><block>{
            <expr>"distarct"</expr>, <expr>"distract"</expr> }</block></expr>, <expr><block>{
            <expr>"distart"</expr>, <expr>"distort"</expr> }</block></expr>, <expr><block>{
            <expr>"distroy"</expr>, <expr>"destroy"</expr> }</block></expr>, <expr><block>{
            <expr>"documtations"</expr>, <expr>"documentation"</expr> }</block></expr>, <expr><block>{
            <expr>"doenload"</expr>, <expr>"download"</expr> }</block></expr>, <expr><block>{
            <expr>"dongle"</expr>, <expr>"dangle"</expr> }</block></expr>, <expr><block>{
            <expr>"doog"</expr>, <expr>"dog"</expr> }</block></expr>, <expr><block>{
            <expr>"dramaticly"</expr>, <expr>"dramatically"</expr> }</block></expr>, <expr><block>{
            <expr>"drunkeness"</expr>, <expr>"drunkenness"</expr> }</block></expr>, <expr><block>{
            <expr>"ductioneery"</expr>, <expr>"dictionary"</expr> }</block></expr>, <expr><block>{
            <expr>"dur"</expr>, <expr>"due"</expr> }</block></expr>, <expr><block>{
            <expr>"duren"</expr>, <expr>"during"</expr> }</block></expr>, <expr><block>{
            <expr>"dymatic"</expr>, <expr>"dynamic"</expr> }</block></expr>, <expr><block>{
            <expr>"dynaic"</expr>, <expr>"dynamic"</expr> }</block></expr>, <expr><block>{
            <expr>"ecstacy"</expr>, <expr>"ecstasy"</expr> }</block></expr>, <expr><block>{
            <expr>"efficat"</expr>, <expr>"efficient"</expr> }</block></expr>, <expr><block>{
            <expr>"efficity"</expr>, <expr>"efficacy"</expr> }</block></expr>, <expr><block>{
            <expr>"effots"</expr>, <expr>"efforts"</expr> }</block></expr>, <expr><block>{
            <expr>"egsistence"</expr>, <expr>"existence"</expr> }</block></expr>, <expr><block>{
            <expr>"eitiology"</expr>, <expr>"etiology"</expr> }</block></expr>, <expr><block>{
            <expr>"elagent"</expr>, <expr>"elegant"</expr> }</block></expr>, <expr><block>{
            <expr>"elligit"</expr>, <expr>"elegant"</expr> }</block></expr>, <expr><block>{
            <expr>"embarass"</expr>, <expr>"embarrass"</expr> }</block></expr>, <expr><block>{
            <expr>"embarassment"</expr>, <expr>"embarrassment"</expr> }</block></expr>, <expr><block>{
            <expr>"embaress"</expr>, <expr>"embarrass"</expr> }</block></expr>, <expr><block>{
            <expr>"encapsualtion"</expr>, <expr>"encapsulation"</expr> }</block></expr>, <expr><block>{
            <expr>"encyclapidia"</expr>, <expr>"encyclopedia"</expr> }</block></expr>, <expr><block>{
            <expr>"encyclopia"</expr>, <expr>"encyclopedia"</expr> }</block></expr>, <expr><block>{
            <expr>"engins"</expr>, <expr>"engine"</expr> }</block></expr>, <expr><block>{
            <expr>"enhence"</expr>, <expr>"enhance"</expr> }</block></expr>, <expr><block>{
            <expr>"enligtment"</expr>, <expr>"Enlightenment"</expr> }</block></expr>, <expr><block>{
            <expr>"ennuui"</expr>, <expr>"ennui"</expr> }</block></expr>, <expr><block>{
            <expr>"enought"</expr>, <expr>"enough"</expr> }</block></expr>, <expr><block>{
            <expr>"enventions"</expr>, <expr>"inventions"</expr> }</block></expr>, <expr><block>{
            <expr>"envireminakl"</expr>, <expr>"environmental"</expr> }</block></expr>, <expr><block>{
            <expr>"enviroment"</expr>, <expr>"environment"</expr> }</block></expr>, <expr><block>{
            <expr>"epitomy"</expr>, <expr>"epitome"</expr> }</block></expr>, <expr><block>{
            <expr>"equire"</expr>, <expr>"acquire"</expr> }</block></expr>, <expr><block>{
            <expr>"errara"</expr>, <expr>"error"</expr> }</block></expr>, <expr><block>{
            <expr>"erro"</expr>, <expr>"error"</expr> }</block></expr>, <expr><block>{
            <expr>"evaualtion"</expr>, <expr>"evaluation"</expr> }</block></expr>, <expr><block>{
            <expr>"evething"</expr>, <expr>"everything"</expr> }</block></expr>, <expr><block>{
            <expr>"evtually"</expr>, <expr>"eventually"</expr> }</block></expr>, <expr><block>{
            <expr>"excede"</expr>, <expr>"exceed"</expr> }</block></expr>, <expr><block>{
            <expr>"excercise"</expr>, <expr>"exercise"</expr> }</block></expr>, <expr><block>{
            <expr>"excpt"</expr>, <expr>"except"</expr> }</block></expr>, <expr><block>{
            <expr>"excution"</expr>, <expr>"execution"</expr> }</block></expr>, <expr><block>{
            <expr>"exhileration"</expr>, <expr>"exhilaration"</expr> }</block></expr>, <expr><block>{
            <expr>"existance"</expr>, <expr>"existence"</expr> }</block></expr>, <expr><block>{
            <expr>"expleyly"</expr>, <expr>"explicitly"</expr> }</block></expr>, <expr><block>{
            <expr>"explity"</expr>, <expr>"explicitly"</expr> }</block></expr>, <expr><block>{
            <expr>"expresso"</expr>, <expr>"espresso"</expr> }</block></expr>, <expr><block>{
            <expr>"exspidient"</expr>, <expr>"expedient"</expr> }</block></expr>, <expr><block>{
            <expr>"extions"</expr>, <expr>"extensions"</expr> }</block></expr>, <expr><block>{
            <expr>"factontion"</expr>, <expr>"factorization"</expr> }</block></expr>, <expr><block>{
            <expr>"failer"</expr>, <expr>"failure"</expr> }</block></expr>, <expr><block>{
            <expr>"famdasy"</expr>, <expr>"fantasy"</expr> }</block></expr>, <expr><block>{
            <expr>"faver"</expr>, <expr>"favor"</expr> }</block></expr>, <expr><block>{
            <expr>"faxe"</expr>, <expr>"fax"</expr> }</block></expr>, <expr><block>{
            <expr>"febuary"</expr>, <expr>"february"</expr> }</block></expr>, <expr><block>{
            <expr>"firey"</expr>, <expr>"fiery"</expr> }</block></expr>, <expr><block>{
            <expr>"fistival"</expr>, <expr>"festival"</expr> }</block></expr>, <expr><block>{
            <expr>"flatterring"</expr>, <expr>"flattering"</expr> }</block></expr>, <expr><block>{
            <expr>"fluk"</expr>, <expr>"flux"</expr> }</block></expr>, <expr><block>{
            <expr>"flukse"</expr>, <expr>"flux"</expr> }</block></expr>, <expr><block>{
            <expr>"fone"</expr>, <expr>"phone"</expr> }</block></expr>, <expr><block>{
            <expr>"forsee"</expr>, <expr>"foresee"</expr> }</block></expr>, <expr><block>{
            <expr>"frustartaion"</expr>, <expr>"frustrating"</expr> }</block></expr>, <expr><block>{
            <expr>"fuction"</expr>, <expr>"function"</expr> }</block></expr>, <expr><block>{
            <expr>"funetik"</expr>, <expr>"phonetic"</expr> }</block></expr>, <expr><block>{
            <expr>"futs"</expr>, <expr>"guts"</expr> }</block></expr>, <expr><block>{
            <expr>"gamne"</expr>, <expr>"came"</expr> }</block></expr>, <expr><block>{
            <expr>"gaurd"</expr>, <expr>"guard"</expr> }</block></expr>, <expr><block>{
            <expr>"generly"</expr>, <expr>"generally"</expr> }</block></expr>, <expr><block>{
            <expr>"ghandi"</expr>, <expr>"gandhi"</expr> }</block></expr>, <expr><block>{
            <expr>"goberment"</expr>, <expr>"government"</expr> }</block></expr>, <expr><block>{
            <expr>"gobernement"</expr>, <expr>"government"</expr> }</block></expr>, <expr><block>{
            <expr>"gobernment"</expr>, <expr>"government"</expr> }</block></expr>, <expr><block>{
            <expr>"gotton"</expr>, <expr>"gotten"</expr> }</block></expr>, <expr><block>{
            <expr>"gracefull"</expr>, <expr>"graceful"</expr> }</block></expr>, <expr><block>{
            <expr>"gradualy"</expr>, <expr>"gradually"</expr> }</block></expr>, <expr><block>{
            <expr>"grammer"</expr>, <expr>"grammar"</expr> }</block></expr>, <expr><block>{
            <expr>"hallo"</expr>, <expr>"hello"</expr> }</block></expr>, <expr><block>{
            <expr>"hapily"</expr>, <expr>"happily"</expr> }</block></expr>, <expr><block>{
            <expr>"harrass"</expr>, <expr>"harass"</expr> }</block></expr>, <expr><block>{
            <expr>"havne"</expr>, <expr>"have"</expr> }</block></expr>, <expr><block>{
            <expr>"heellp"</expr>, <expr>"help"</expr> }</block></expr>, <expr><block>{
            <expr>"heighth"</expr>, <expr>"height"</expr> }</block></expr>, <expr><block>{
            <expr>"hellp"</expr>, <expr>"help"</expr> }</block></expr>, <expr><block>{
            <expr>"helo"</expr>, <expr>"hello"</expr> }</block></expr>, <expr><block>{
            <expr>"herlo"</expr>, <expr>"hello"</expr> }</block></expr>, <expr><block>{
            <expr>"hifin"</expr>, <expr>"hyphen"</expr> }</block></expr>, <expr><block>{
            <expr>"hifine"</expr>, <expr>"hyphen"</expr> }</block></expr>, <expr><block>{
            <expr>"higer"</expr>, <expr>"higher"</expr> }</block></expr>, <expr><block>{
            <expr>"hiphine"</expr>, <expr>"hyphen"</expr> }</block></expr>, <expr><block>{
            <expr>"hippie"</expr>, <expr>"hippy"</expr> }</block></expr>, <expr><block>{
            <expr>"hippopotamous"</expr>, <expr>"hippopotamus"</expr> }</block></expr>, <expr><block>{
            <expr>"hlp"</expr>, <expr>"help"</expr> }</block></expr>, <expr><block>{
            <expr>"hourse"</expr>, <expr>"horse"</expr> }</block></expr>, <expr><block>{
            <expr>"houssing"</expr>, <expr>"housing"</expr> }</block></expr>, <expr><block>{
            <expr>"howaver"</expr>, <expr>"however"</expr> }</block></expr>, <expr><block>{
            <expr>"howver"</expr>, <expr>"however"</expr> }</block></expr>, <expr><block>{
            <expr>"humaniti"</expr>, <expr>"humanity"</expr> }</block></expr>, <expr><block>{
            <expr>"hyfin"</expr>, <expr>"hyphen"</expr> }</block></expr>, <expr><block>{
            <expr>"hypotathes"</expr>, <expr>"hypothesis"</expr> }</block></expr>, <expr><block>{
            <expr>"hypotathese"</expr>, <expr>"hypothesis"</expr> }</block></expr>, <expr><block>{
            <expr>"hystrical"</expr>, <expr>"hysterical"</expr> }</block></expr>, <expr><block>{
            <expr>"ident"</expr>, <expr>"indent"</expr> }</block></expr>, <expr><block>{
            <expr>"illegitament"</expr>, <expr>"illegitimate"</expr> }</block></expr>, <expr><block>{
            <expr>"imbed"</expr>, <expr>"embed"</expr> }</block></expr>, <expr><block>{
            <expr>"imediaetly"</expr>, <expr>"immediately"</expr> }</block></expr>, <expr><block>{
            <expr>"imfamy"</expr>, <expr>"infamy"</expr> }</block></expr>, <expr><block>{
            <expr>"immenant"</expr>, <expr>"immanent"</expr> }</block></expr>, <expr><block>{
            <expr>"implemtes"</expr>, <expr>"implements"</expr> }</block></expr>, <expr><block>{
            <expr>"inadvertant"</expr>, <expr>"inadvertent"</expr> }</block></expr>, <expr><block>{
            <expr>"incase"</expr>, <expr>"in case"</expr> }</block></expr>, <expr><block>{
            <expr>"incedious"</expr>, <expr>"insidious"</expr> }</block></expr>, <expr><block>{
            <expr>"incompleet"</expr>, <expr>"incomplete"</expr> }</block></expr>, <expr><block>{
            <expr>"incomplot"</expr>, <expr>"incomplete"</expr> }</block></expr>, <expr><block>{
            <expr>"inconvenant"</expr>, <expr>"inconvenient"</expr> }</block></expr>, <expr><block>{
            <expr>"inconvience"</expr>, <expr>"inconvenience"</expr> }</block></expr>, <expr><block>{
            <expr>"independant"</expr>, <expr>"independent"</expr> }</block></expr>, <expr><block>{
            <expr>"independenent"</expr>, <expr>"independent"</expr> }</block></expr>, <expr><block>{
            <expr>"indepnends"</expr>, <expr>"independent"</expr> }</block></expr>, <expr><block>{
            <expr>"indepth"</expr>, <expr>"in depth"</expr> }</block></expr>, <expr><block>{
            <expr>"indispensible"</expr>, <expr>"indispensable"</expr> }</block></expr>, <expr><block>{
            <expr>"inefficite"</expr>, <expr>"inefficient"</expr> }</block></expr>, <expr><block>{
            <expr>"inerface"</expr>, <expr>"interface"</expr> }</block></expr>, <expr><block>{
            <expr>"infact"</expr>, <expr>"in fact"</expr> }</block></expr>, <expr><block>{
            <expr>"influencial"</expr>, <expr>"influential"</expr> }</block></expr>, <expr><block>{
            <expr>"inital"</expr>, <expr>"initial"</expr> }</block></expr>, <expr><block>{
            <expr>"initinized"</expr>, <expr>"initialized"</expr> }</block></expr>, <expr><block>{
            <expr>"initized"</expr>, <expr>"initialized"</expr> }</block></expr>, <expr><block>{
            <expr>"innoculate"</expr>, <expr>"inoculate"</expr> }</block></expr>, <expr><block>{
            <expr>"insistant"</expr>, <expr>"insistent"</expr> }</block></expr>, <expr><block>{
            <expr>"insistenet"</expr>, <expr>"insistent"</expr> }</block></expr>, <expr><block>{
            <expr>"instulation"</expr>, <expr>"installation"</expr> }</block></expr>, <expr><block>{
            <expr>"intealignt"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intejilent"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intelegent"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intelegnent"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intelejent"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"inteligent"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intelignt"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intellagant"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intellegent"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intellegint"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intellgnt"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intensionality"</expr>, <expr>"intensionally"</expr> }</block></expr>, <expr><block>{
            <expr>"interate"</expr>, <expr>"iterate"</expr> }</block></expr>, <expr><block>{
            <expr>"internation"</expr>, <expr>"international"</expr> }</block></expr>, <expr><block>{
            <expr>"interpretate"</expr>, <expr>"interpret"</expr> }</block></expr>, <expr><block>{
            <expr>"interpretter"</expr>, <expr>"interpreter"</expr> }</block></expr>, <expr><block>{
            <expr>"intertes"</expr>, <expr>"interested"</expr> }</block></expr>, <expr><block>{
            <expr>"intertesd"</expr>, <expr>"interested"</expr> }</block></expr>, <expr><block>{
            <expr>"invermeantial"</expr>, <expr>"environmental"</expr> }</block></expr>, <expr><block>{
            <expr>"irregardless"</expr>, <expr>"regardless"</expr> }</block></expr>, <expr><block>{
            <expr>"irresistable"</expr>, <expr>"irresistible"</expr> }</block></expr>, <expr><block>{
            <expr>"irritible"</expr>, <expr>"irritable"</expr> }</block></expr>, <expr><block>{
            <expr>"islams"</expr>, <expr>"muslims"</expr> }</block></expr>, <expr><block>{
            <expr>"isotrop"</expr>, <expr>"isotope"</expr> }</block></expr>, <expr><block>{
            <expr>"isreal"</expr>, <expr>"israel"</expr> }</block></expr>, <expr><block>{
            <expr>"johhn"</expr>, <expr>"john"</expr> }</block></expr>, <expr><block>{
            <expr>"judgement"</expr>, <expr>"judgment"</expr> }</block></expr>, <expr><block>{
            <expr>"kippur"</expr>, <expr>"kipper"</expr> }</block></expr>, <expr><block>{
            <expr>"knawing"</expr>, <expr>"knowing"</expr> }</block></expr>, <expr><block>{
            <expr>"latext"</expr>, <expr>"latest"</expr> }</block></expr>, <expr><block>{
            <expr>"leasve"</expr>, <expr>"leave"</expr> }</block></expr>, <expr><block>{
            <expr>"lesure"</expr>, <expr>"leisure"</expr> }</block></expr>, <expr><block>{
            <expr>"liasion"</expr>, <expr>"lesion"</expr> }</block></expr>, <expr><block>{
            <expr>"liason"</expr>, <expr>"liaison"</expr> }</block></expr>, <expr><block>{
            <expr>"libary"</expr>, <expr>"library"</expr> }</block></expr>, <expr><block>{
            <expr>"likly"</expr>, <expr>"likely"</expr> }</block></expr>, <expr><block>{
            <expr>"lilometer"</expr>, <expr>"kilometer"</expr> }</block></expr>, <expr><block>{
            <expr>"liquify"</expr>, <expr>"liquefy"</expr> }</block></expr>, <expr><block>{
            <expr>"lloyer"</expr>, <expr>"layer"</expr> }</block></expr>, <expr><block>{
            <expr>"lossing"</expr>, <expr>"losing"</expr> }</block></expr>, <expr><block>{
            <expr>"luser"</expr>, <expr>"laser"</expr> }</block></expr>, <expr><block>{
            <expr>"maintanence"</expr>, <expr>"maintenance"</expr> }</block></expr>, <expr><block>{
            <expr>"majaerly"</expr>, <expr>"majority"</expr> }</block></expr>, <expr><block>{
            <expr>"majoraly"</expr>, <expr>"majority"</expr> }</block></expr>, <expr><block>{
            <expr>"maks"</expr>, <expr>"masks"</expr> }</block></expr>, <expr><block>{
            <expr>"mandelbrot"</expr>, <expr>"Mandelbrot"</expr> }</block></expr>, <expr><block>{
            <expr>"mant"</expr>, <expr>"want"</expr> }</block></expr>, <expr><block>{
            <expr>"marshall"</expr>, <expr>"marshal"</expr> }</block></expr>, <expr><block>{
            <expr>"maxium"</expr>, <expr>"maximum"</expr> }</block></expr>, <expr><block>{
            <expr>"meory"</expr>, <expr>"memory"</expr> }</block></expr>, <expr><block>{
            <expr>"metter"</expr>, <expr>"better"</expr> }</block></expr>, <expr><block>{
            <expr>"mic"</expr>, <expr>"mike"</expr> }</block></expr>, <expr><block>{
            <expr>"midia"</expr>, <expr>"media"</expr> }</block></expr>, <expr><block>{
            <expr>"millenium"</expr>, <expr>"millennium"</expr> }</block></expr>, <expr><block>{
            <expr>"miniscule"</expr>, <expr>"minuscule"</expr> }</block></expr>, <expr><block>{
            <expr>"minkay"</expr>, <expr>"monkey"</expr> }</block></expr>, <expr><block>{
            <expr>"minum"</expr>, <expr>"minimum"</expr> }</block></expr>, <expr><block>{
            <expr>"mischievious"</expr>, <expr>"mischievous"</expr> }</block></expr>, <expr><block>{
            <expr>"misilous"</expr>, <expr>"miscellaneous"</expr> }</block></expr>, <expr><block>{
            <expr>"momento"</expr>, <expr>"memento"</expr> }</block></expr>, <expr><block>{
            <expr>"monkay"</expr>, <expr>"monkey"</expr> }</block></expr>, <expr><block>{
            <expr>"mosaik"</expr>, <expr>"mosaic"</expr> }</block></expr>, <expr><block>{
            <expr>"mostlikely"</expr>, <expr>"most likely"</expr> }</block></expr>, <expr><block>{
            <expr>"mousr"</expr>, <expr>"mouser"</expr> }</block></expr>, <expr><block>{
            <expr>"mroe"</expr>, <expr>"more"</expr> }</block></expr>, <expr><block>{
            <expr>"neccessary"</expr>, <expr>"necessary"</expr> }</block></expr>, <expr><block>{
            <expr>"necesary"</expr>, <expr>"necessary"</expr> }</block></expr>, <expr><block>{
            <expr>"necesser"</expr>, <expr>"necessary"</expr> }</block></expr>, <expr><block>{
            <expr>"neice"</expr>, <expr>"niece"</expr> }</block></expr>, <expr><block>{
            <expr>"neighbour"</expr>, <expr>"neighbor"</expr> }</block></expr>, <expr><block>{
            <expr>"nemonic"</expr>, <expr>"pneumonic"</expr> }</block></expr>, <expr><block>{
            <expr>"nevade"</expr>, <expr>"Nevada"</expr> }</block></expr>, <expr><block>{
            <expr>"nickleodeon"</expr>, <expr>"nickelodeon"</expr> }</block></expr>, <expr><block>{
            <expr>"nieve"</expr>, <expr>"naive"</expr> }</block></expr>, <expr><block>{
            <expr>"noone"</expr>, <expr>"no one"</expr> }</block></expr>, <expr><block>{
            <expr>"noticably"</expr>, <expr>"noticeably"</expr> }</block></expr>, <expr><block>{
            <expr>"notin"</expr>, <expr>"not in"</expr> }</block></expr>, <expr><block>{
            <expr>"nozled"</expr>, <expr>"nuzzled"</expr> }</block></expr>, <expr><block>{
            <expr>"objectsion"</expr>, <expr>"objects"</expr> }</block></expr>, <expr><block>{
            <expr>"obsfuscate"</expr>, <expr>"obfuscate"</expr> }</block></expr>, <expr><block>{
            <expr>"ocassion"</expr>, <expr>"occasion"</expr> }</block></expr>, <expr><block>{
            <expr>"occuppied"</expr>, <expr>"occupied"</expr> }</block></expr>, <expr><block>{
            <expr>"occurence"</expr>, <expr>"occurrence"</expr> }</block></expr>, <expr><block>{
            <expr>"octagenarian"</expr>, <expr>"octogenarian"</expr> }</block></expr>, <expr><block>{
            <expr>"olf"</expr>, <expr>"old"</expr> }</block></expr>, <expr><block>{
            <expr>"opposim"</expr>, <expr>"opossum"</expr> }</block></expr>, <expr><block>{
            <expr>"organise"</expr>, <expr>"organize"</expr> }</block></expr>, <expr><block>{
            <expr>"organiz"</expr>, <expr>"organize"</expr> }</block></expr>, <expr><block>{
            <expr>"orientate"</expr>, <expr>"orient"</expr> }</block></expr>, <expr><block>{
            <expr>"oscilascope"</expr>, <expr>"oscilloscope"</expr> }</block></expr>, <expr><block>{
            <expr>"oving"</expr>, <expr>"moving"</expr> }</block></expr>, <expr><block>{
            <expr>"paramers"</expr>, <expr>"parameters"</expr> }</block></expr>, <expr><block>{
            <expr>"parametic"</expr>, <expr>"parameter"</expr> }</block></expr>, <expr><block>{
            <expr>"paranets"</expr>, <expr>"parameters"</expr> }</block></expr>, <expr><block>{
            <expr>"partrucal"</expr>, <expr>"particular"</expr> }</block></expr>, <expr><block>{
            <expr>"pataphysical"</expr>, <expr>"metaphysical"</expr> }</block></expr>, <expr><block>{
            <expr>"patten"</expr>, <expr>"pattern"</expr> }</block></expr>, <expr><block>{
            <expr>"permissable"</expr>, <expr>"permissible"</expr> }</block></expr>, <expr><block>{
            <expr>"permition"</expr>, <expr>"permission"</expr> }</block></expr>, <expr><block>{
            <expr>"permmasivie"</expr>, <expr>"permissive"</expr> }</block></expr>, <expr><block>{
            <expr>"perogative"</expr>, <expr>"prerogative"</expr> }</block></expr>, <expr><block>{
            <expr>"persue"</expr>, <expr>"pursue"</expr> }</block></expr>, <expr><block>{
            <expr>"phantasia"</expr>, <expr>"fantasia"</expr> }</block></expr>, <expr><block>{
            <expr>"phenominal"</expr>, <expr>"phenomenal"</expr> }</block></expr>, <expr><block>{
            <expr>"picaresque"</expr>, <expr>"picturesque"</expr> }</block></expr>, <expr><block>{
            <expr>"playwrite"</expr>, <expr>"playwright"</expr> }</block></expr>, <expr><block>{
            <expr>"poeses"</expr>, <expr>"poesies"</expr> }</block></expr>, <expr><block>{
            <expr>"polation"</expr>, <expr>"politician"</expr> }</block></expr>, <expr><block>{
            <expr>"poligamy"</expr>, <expr>"polygamy"</expr> }</block></expr>, <expr><block>{
            <expr>"politict"</expr>, <expr>"politic"</expr> }</block></expr>, <expr><block>{
            <expr>"pollice"</expr>, <expr>"police"</expr> }</block></expr>, <expr><block>{
            <expr>"polypropalene"</expr>, <expr>"polypropylene"</expr> }</block></expr>, <expr><block>{
            <expr>"pompom"</expr>, <expr>"pompon"</expr> }</block></expr>, <expr><block>{
            <expr>"possable"</expr>, <expr>"possible"</expr> }</block></expr>, <expr><block>{
            <expr>"practicle"</expr>, <expr>"practical"</expr> }</block></expr>, <expr><block>{
            <expr>"pragmaticism"</expr>, <expr>"pragmatism"</expr> }</block></expr>, <expr><block>{
            <expr>"preceeding"</expr>, <expr>"preceding"</expr> }</block></expr>, <expr><block>{
            <expr>"precion"</expr>, <expr>"precision"</expr> }</block></expr>, <expr><block>{
            <expr>"precios"</expr>, <expr>"precision"</expr> }</block></expr>, <expr><block>{
            <expr>"preemptory"</expr>, <expr>"peremptory"</expr> }</block></expr>, <expr><block>{
            <expr>"prefices"</expr>, <expr>"prefixes"</expr> }</block></expr>, <expr><block>{
            <expr>"prefixt"</expr>, <expr>"prefixed"</expr> }</block></expr>, <expr><block>{
            <expr>"presbyterian"</expr>, <expr>"Presbyterian"</expr> }</block></expr>, <expr><block>{
            <expr>"presue"</expr>, <expr>"pursue"</expr> }</block></expr>, <expr><block>{
            <expr>"presued"</expr>, <expr>"pursued"</expr> }</block></expr>, <expr><block>{
            <expr>"privielage"</expr>, <expr>"privilege"</expr> }</block></expr>, <expr><block>{
            <expr>"priviledge"</expr>, <expr>"privilege"</expr> }</block></expr>, <expr><block>{
            <expr>"proceedures"</expr>, <expr>"procedures"</expr> }</block></expr>, <expr><block>{
            <expr>"pronensiation"</expr>, <expr>"pronunciation"</expr> }</block></expr>, <expr><block>{
            <expr>"pronisation"</expr>, <expr>"pronunciation"</expr> }</block></expr>, <expr><block>{
            <expr>"pronounciation"</expr>, <expr>"pronunciation"</expr> }</block></expr>, <expr><block>{
            <expr>"properally"</expr>, <expr>"properly"</expr> }</block></expr>, <expr><block>{
            <expr>"proplematic"</expr>, <expr>"problematic"</expr> }</block></expr>, <expr><block>{
            <expr>"protray"</expr>, <expr>"portray"</expr> }</block></expr>, <expr><block>{
            <expr>"pscolgst"</expr>, <expr>"psychologist"</expr> }</block></expr>, <expr><block>{
            <expr>"psicolagest"</expr>, <expr>"psychologist"</expr> }</block></expr>, <expr><block>{
            <expr>"psycolagest"</expr>, <expr>"psychologist"</expr> }</block></expr>, <expr><block>{
            <expr>"quoz"</expr>, <expr>"quiz"</expr> }</block></expr>, <expr><block>{
            <expr>"radious"</expr>, <expr>"radius"</expr> }</block></expr>, <expr><block>{
            <expr>"ramplily"</expr>, <expr>"rampantly"</expr> }</block></expr>, <expr><block>{
            <expr>"reccomend"</expr>, <expr>"recommend"</expr> }</block></expr>, <expr><block>{
            <expr>"reccona"</expr>, <expr>"raccoon"</expr> }</block></expr>, <expr><block>{
            <expr>"recieve"</expr>, <expr>"receive"</expr> }</block></expr>, <expr><block>{
            <expr>"reconise"</expr>, <expr>"recognize"</expr> }</block></expr>, <expr><block>{
            <expr>"rectangeles"</expr>, <expr>"rectangle"</expr> }</block></expr>, <expr><block>{
            <expr>"redign"</expr>, <expr>"redesign"</expr> }</block></expr>, <expr><block>{
            <expr>"reoccurring"</expr>, <expr>"recurring"</expr> }</block></expr>, <expr><block>{
            <expr>"repitition"</expr>, <expr>"repetition"</expr> }</block></expr>, <expr><block>{
            <expr>"replasments"</expr>, <expr>"replacement"</expr> }</block></expr>, <expr><block>{
            <expr>"reposable"</expr>, <expr>"responsible"</expr> }</block></expr>, <expr><block>{
            <expr>"reseblence"</expr>, <expr>"resemblance"</expr> }</block></expr>, <expr><block>{
            <expr>"respct"</expr>, <expr>"respect"</expr> }</block></expr>, <expr><block>{
            <expr>"respecally"</expr>, <expr>"respectfully"</expr> }</block></expr>, <expr><block>{
            <expr>"roon"</expr>, <expr>"room"</expr> }</block></expr>, <expr><block>{
            <expr>"rought"</expr>, <expr>"roughly"</expr> }</block></expr>, <expr><block>{
            <expr>"rsx"</expr>, <expr>"RSX"</expr> }</block></expr>, <expr><block>{
            <expr>"rudemtry"</expr>, <expr>"rudimentary"</expr> }</block></expr>, <expr><block>{
            <expr>"runnung"</expr>, <expr>"running"</expr> }</block></expr>, <expr><block>{
            <expr>"sacreligious"</expr>, <expr>"sacrilegious"</expr> }</block></expr>, <expr><block>{
            <expr>"saftly"</expr>, <expr>"safely"</expr> }</block></expr>, <expr><block>{
            <expr>"salut"</expr>, <expr>"salute"</expr> }</block></expr>, <expr><block>{
            <expr>"satifly"</expr>, <expr>"satisfy"</expr> }</block></expr>, <expr><block>{
            <expr>"scrabdle"</expr>, <expr>"scrabble"</expr> }</block></expr>, <expr><block>{
            <expr>"searcheable"</expr>, <expr>"searchable"</expr> }</block></expr>, <expr><block>{
            <expr>"secion"</expr>, <expr>"section"</expr> }</block></expr>, <expr><block>{
            <expr>"seferal"</expr>, <expr>"several"</expr> }</block></expr>, <expr><block>{
            <expr>"segements"</expr>, <expr>"segments"</expr> }</block></expr>, <expr><block>{
            <expr>"sence"</expr>, <expr>"sense"</expr> }</block></expr>, <expr><block>{
            <expr>"seperate"</expr>, <expr>"separate"</expr> }</block></expr>, <expr><block>{
            <expr>"sherbert"</expr>, <expr>"sherbet"</expr> }</block></expr>, <expr><block>{
            <expr>"sicolagest"</expr>, <expr>"psychologist"</expr> }</block></expr>, <expr><block>{
            <expr>"sieze"</expr>, <expr>"seize"</expr> }</block></expr>, <expr><block>{
            <expr>"simpfilty"</expr>, <expr>"simplicity"</expr> }</block></expr>, <expr><block>{
            <expr>"simplye"</expr>, <expr>"simply"</expr> }</block></expr>, <expr><block>{
            <expr>"singal"</expr>, <expr>"signal"</expr> }</block></expr>, <expr><block>{
            <expr>"sitte"</expr>, <expr>"site"</expr> }</block></expr>, <expr><block>{
            <expr>"situration"</expr>, <expr>"situation"</expr> }</block></expr>, <expr><block>{
            <expr>"slyph"</expr>, <expr>"sylph"</expr> }</block></expr>, <expr><block>{
            <expr>"smil"</expr>, <expr>"smile"</expr> }</block></expr>, <expr><block>{
            <expr>"snuck"</expr>, <expr>"sneaked"</expr> }</block></expr>, <expr><block>{
            <expr>"sometmes"</expr>, <expr>"sometimes"</expr> }</block></expr>, <expr><block>{
            <expr>"soonec"</expr>, <expr>"sonic"</expr> }</block></expr>, <expr><block>{
            <expr>"specificialy"</expr>, <expr>"specifically"</expr> }</block></expr>, <expr><block>{
            <expr>"spel"</expr>, <expr>"spell"</expr> }</block></expr>, <expr><block>{
            <expr>"spoak"</expr>, <expr>"spoke"</expr> }</block></expr>, <expr><block>{
            <expr>"sponsered"</expr>, <expr>"sponsored"</expr> }</block></expr>, <expr><block>{
            <expr>"stering"</expr>, <expr>"steering"</expr> }</block></expr>, <expr><block>{
            <expr>"straightjacket"</expr>, <expr>"straitjacket"</expr> }</block></expr>, <expr><block>{
            <expr>"stumach"</expr>, <expr>"stomach"</expr> }</block></expr>, <expr><block>{
            <expr>"stutent"</expr>, <expr>"student"</expr> }</block></expr>, <expr><block>{
            <expr>"styleguide"</expr>, <expr>"style guide"</expr> }</block></expr>, <expr><block>{
            <expr>"subisitions"</expr>, <expr>"substitutions"</expr> }</block></expr>, <expr><block>{
            <expr>"subjecribed"</expr>, <expr>"subscribed"</expr> }</block></expr>, <expr><block>{
            <expr>"subpena"</expr>, <expr>"subpoena"</expr> }</block></expr>, <expr><block>{
            <expr>"substations"</expr>, <expr>"substitutions"</expr> }</block></expr>, <expr><block>{
            <expr>"suger"</expr>, <expr>"sugar"</expr> }</block></expr>, <expr><block>{
            <expr>"supercede"</expr>, <expr>"supersede"</expr> }</block></expr>, <expr><block>{
            <expr>"superfulous"</expr>, <expr>"superfluous"</expr> }</block></expr>, <expr><block>{
            <expr>"susan"</expr>, <expr>"Susan"</expr> }</block></expr>, <expr><block>{
            <expr>"swimwear"</expr>, <expr>"swim wear"</expr> }</block></expr>, <expr><block>{
            <expr>"syncorization"</expr>, <expr>"synchronization"</expr> }</block></expr>, <expr><block>{
            <expr>"taff"</expr>, <expr>"tough"</expr> }</block></expr>, <expr><block>{
            <expr>"taht"</expr>, <expr>"that"</expr> }</block></expr>, <expr><block>{
            <expr>"tattos"</expr>, <expr>"tattoos"</expr> }</block></expr>, <expr><block>{
            <expr>"techniquely"</expr>, <expr>"technically"</expr> }</block></expr>, <expr><block>{
            <expr>"teh"</expr>, <expr>"the"</expr> }</block></expr>, <expr><block>{
            <expr>"tem"</expr>, <expr>"team"</expr> }</block></expr>, <expr><block>{
            <expr>"teo"</expr>, <expr>"two"</expr> }</block></expr>, <expr><block>{
            <expr>"teridical"</expr>, <expr>"theoretical"</expr> }</block></expr>, <expr><block>{
            <expr>"tesst"</expr>, <expr>"test"</expr> }</block></expr>, <expr><block>{
            <expr>"tets"</expr>, <expr>"tests"</expr> }</block></expr>, <expr><block>{
            <expr>"thanot"</expr>, <expr>"than or"</expr> }</block></expr>, <expr><block>{
            <expr>"theirselves"</expr>, <expr>"themselves"</expr> }</block></expr>, <expr><block>{
            <expr>"theridically"</expr>, <expr>"theoretical"</expr> }</block></expr>, <expr><block>{
            <expr>"thredically"</expr>, <expr>"theoretically"</expr> }</block></expr>, <expr><block>{
            <expr>"thruout"</expr>, <expr>"throughout"</expr> }</block></expr>, <expr><block>{
            <expr>"ths"</expr>, <expr>"this"</expr> }</block></expr>, <expr><block>{
            <expr>"titalate"</expr>, <expr>"titillate"</expr> }</block></expr>, <expr><block>{
            <expr>"tobagan"</expr>, <expr>"tobaggon"</expr> }</block></expr>, <expr><block>{
            <expr>"tommorrow"</expr>, <expr>"tomorrow"</expr> }</block></expr>, <expr><block>{
            <expr>"tomorow"</expr>, <expr>"tomorrow"</expr> }</block></expr>, <expr><block>{
            <expr>"tradegy"</expr>, <expr>"tragedy"</expr> }</block></expr>, <expr><block>{
            <expr>"trubbel"</expr>, <expr>"trouble"</expr> }</block></expr>, <expr><block>{
            <expr>"ttest"</expr>, <expr>"test"</expr> }</block></expr>, <expr><block>{
            <expr>"tunnellike"</expr>, <expr>"tunnel like"</expr> }</block></expr>, <expr><block>{
            <expr>"tured"</expr>, <expr>"turned"</expr> }</block></expr>, <expr><block>{
            <expr>"tyrrany"</expr>, <expr>"tyranny"</expr> }</block></expr>, <expr><block>{
            <expr>"unatourral"</expr>, <expr>"unnatural"</expr> }</block></expr>, <expr><block>{
            <expr>"unaturral"</expr>, <expr>"unnatural"</expr> }</block></expr>, <expr><block>{
            <expr>"unconisitional"</expr>, <expr>"unconstitutional"</expr> }</block></expr>, <expr><block>{
            <expr>"unconscience"</expr>, <expr>"unconscious"</expr> }</block></expr>, <expr><block>{
            <expr>"underladder"</expr>, <expr>"under ladder"</expr> }</block></expr>, <expr><block>{
            <expr>"unentelegible"</expr>, <expr>"unintelligible"</expr> }</block></expr>, <expr><block>{
            <expr>"unfortunently"</expr>, <expr>"unfortunately"</expr> }</block></expr>, <expr><block>{
            <expr>"unnaturral"</expr>, <expr>"unnatural"</expr> }</block></expr>, <expr><block>{
            <expr>"upcast"</expr>, <expr>"up cast"</expr> }</block></expr>, <expr><block>{
            <expr>"upmost"</expr>, <expr>"utmost"</expr> }</block></expr>, <expr><block>{
            <expr>"uranisium"</expr>, <expr>"uranium"</expr> }</block></expr>, <expr><block>{
            <expr>"verison"</expr>, <expr>"version"</expr> }</block></expr>, <expr><block>{
            <expr>"vinagarette"</expr>, <expr>"vinaigrette"</expr> }</block></expr>, <expr><block>{
            <expr>"volumptuous"</expr>, <expr>"voluptuous"</expr> }</block></expr>, <expr><block>{
            <expr>"volunteerism"</expr>, <expr>"voluntarism"</expr> }</block></expr>, <expr><block>{
            <expr>"volye"</expr>, <expr>"volley"</expr> }</block></expr>, <expr><block>{
            <expr>"wadting"</expr>, <expr>"wasting"</expr> }</block></expr>, <expr><block>{
            <expr>"waite"</expr>, <expr>"wait"</expr> }</block></expr>, <expr><block>{
            <expr>"wan't"</expr>, <expr>"won't"</expr> }</block></expr>, <expr><block>{
            <expr>"warloord"</expr>, <expr>"warlord"</expr> }</block></expr>, <expr><block>{
            <expr>"whaaat"</expr>, <expr>"what"</expr> }</block></expr>, <expr><block>{
            <expr>"whard"</expr>, <expr>"ward"</expr> }</block></expr>, <expr><block>{
            <expr>"whimp"</expr>, <expr>"wimp"</expr> }</block></expr>, <expr><block>{
            <expr>"wicken"</expr>, <expr>"weaken"</expr> }</block></expr>, <expr><block>{
            <expr>"wierd"</expr>, <expr>"weird"</expr> }</block></expr>, <expr><block>{
            <expr>"wrank"</expr>, <expr>"rank"</expr> }</block></expr>, <expr><block>{
            <expr>"writeen"</expr>, <expr>"righten"</expr> }</block></expr>, <expr><block>{
            <expr>"writting"</expr>, <expr>"writing"</expr> }</block></expr>, <expr><block>{
            <expr>"wundeews"</expr>, <expr>"windows"</expr> }</block></expr>, <expr><block>{
            <expr>"yeild"</expr>, <expr>"yield"</expr> }</block></expr>, <expr><block>{
            <expr>"youe"</expr>, <expr>"your"</expr> }</block></expr>
    }</block></expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * A subset of FIXTURE generated by this test.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name><index>[]</index><index>[]</index></type> <name>MATCHES</name> =<init> <expr><block>{ <expr><block>{ <expr>"Accosinly"</expr>, <expr>"Occasionally"</expr> }</block></expr>, <expr><block>{
            <expr>"Maddness"</expr>, <expr>"Madness"</expr> }</block></expr>, <expr><block>{
            <expr>"Occusionaly"</expr>, <expr>"Occasionally"</expr> }</block></expr>, <expr><block>{
            <expr>"Steffen"</expr>, <expr>"Stephen"</expr> }</block></expr>, <expr><block>{
            <expr>"Thw"</expr>, <expr>"The"</expr> }</block></expr>, <expr><block>{
            <expr>"Unformanlly"</expr>, <expr>"Unfortunately"</expr> }</block></expr>, <expr><block>{
            <expr>"Unfortally"</expr>, <expr>"Unfortunately"</expr> }</block></expr>, <expr><block>{
            <expr>"abilitey"</expr>, <expr>"ability"</expr> }</block></expr>, <expr><block>{
            <expr>"absorbtion"</expr>, <expr>"absorption"</expr> }</block></expr>, <expr><block>{
            <expr>"accidently"</expr>, <expr>"accidentally"</expr> }</block></expr>, <expr><block>{
            <expr>"accomodate"</expr>, <expr>"accommodate"</expr> }</block></expr>, <expr><block>{
            <expr>"acommadate"</expr>, <expr>"accommodate"</expr> }</block></expr>, <expr><block>{
            <expr>"acord"</expr>, <expr>"accord"</expr> }</block></expr>, <expr><block>{
            <expr>"adultry"</expr>, <expr>"adultery"</expr> }</block></expr>, <expr><block>{
            <expr>"aggresive"</expr>, <expr>"aggressive"</expr> }</block></expr>, <expr><block>{
            <expr>"alchohol"</expr>, <expr>"alcohol"</expr> }</block></expr>, <expr><block>{
            <expr>"alchoholic"</expr>, <expr>"alcoholic"</expr> }</block></expr>, <expr><block>{
            <expr>"allieve"</expr>, <expr>"alive"</expr> }</block></expr>, <expr><block>{
            <expr>"alot"</expr>, <expr>"a lot"</expr> }</block></expr>, <expr><block>{
            <expr>"alright"</expr>, <expr>"all right"</expr> }</block></expr>, <expr><block>{
            <expr>"amature"</expr>, <expr>"amateur"</expr> }</block></expr>, <expr><block>{
            <expr>"ambivilant"</expr>, <expr>"ambivalent"</expr> }</block></expr>, <expr><block>{
            <expr>"amourfous"</expr>, <expr>"amorphous"</expr> }</block></expr>, <expr><block>{
            <expr>"annoint"</expr>, <expr>"anoint"</expr> }</block></expr>, <expr><block>{
            <expr>"annonsment"</expr>, <expr>"announcement"</expr> }</block></expr>, <expr><block>{
            <expr>"annoyting"</expr>, <expr>"anting"</expr> }</block></expr>, <expr><block>{
            <expr>"annuncio"</expr>, <expr>"announce"</expr> }</block></expr>, <expr><block>{
            <expr>"anotomy"</expr>, <expr>"anatomy"</expr> }</block></expr>, <expr><block>{
            <expr>"antidesestablishmentarianism"</expr>, <expr>"antidisestablishmentarianism"</expr> }</block></expr>, <expr><block>{
            <expr>"antidisestablishmentarism"</expr>, <expr>"antidisestablishmentarianism"</expr> }</block></expr>, <expr><block>{
            <expr>"anynomous"</expr>, <expr>"anonymous"</expr> }</block></expr>, <expr><block>{
            <expr>"appelet"</expr>, <expr>"applet"</expr> }</block></expr>, <expr><block>{
            <expr>"appreceiated"</expr>, <expr>"appreciated"</expr> }</block></expr>, <expr><block>{
            <expr>"appresteate"</expr>, <expr>"appreciate"</expr> }</block></expr>, <expr><block>{
            <expr>"aquantance"</expr>, <expr>"acquaintance"</expr> }</block></expr>, <expr><block>{
            <expr>"aricticure"</expr>, <expr>"architecture"</expr> }</block></expr>, <expr><block>{
            <expr>"asterick"</expr>, <expr>"asterisk"</expr> }</block></expr>, <expr><block>{
            <expr>"asymetric"</expr>, <expr>"asymmetric"</expr> }</block></expr>, <expr><block>{
            <expr>"atentively"</expr>, <expr>"attentively"</expr> }</block></expr>, <expr><block>{
            <expr>"bankrot"</expr>, <expr>"bankrupt"</expr> }</block></expr>, <expr><block>{
            <expr>"basicly"</expr>, <expr>"basically"</expr> }</block></expr>, <expr><block>{
            <expr>"batallion"</expr>, <expr>"battalion"</expr> }</block></expr>, <expr><block>{
            <expr>"bbrose"</expr>, <expr>"browse"</expr> }</block></expr>, <expr><block>{
            <expr>"beauro"</expr>, <expr>"bureau"</expr> }</block></expr>, <expr><block>{
            <expr>"beaurocracy"</expr>, <expr>"bureaucracy"</expr> }</block></expr>, <expr><block>{
            <expr>"beggining"</expr>, <expr>"beginning"</expr> }</block></expr>, <expr><block>{
            <expr>"behaviour"</expr>, <expr>"behavior"</expr> }</block></expr>, <expr><block>{
            <expr>"beleive"</expr>, <expr>"believe"</expr> }</block></expr>, <expr><block>{
            <expr>"belive"</expr>, <expr>"believe"</expr> }</block></expr>, <expr><block>{
            <expr>"blait"</expr>, <expr>"bleat"</expr> }</block></expr>, <expr><block>{
            <expr>"bouyant"</expr>, <expr>"buoyant"</expr> }</block></expr>, <expr><block>{
            <expr>"boygot"</expr>, <expr>"boycott"</expr> }</block></expr>, <expr><block>{
            <expr>"brocolli"</expr>, <expr>"broccoli"</expr> }</block></expr>, <expr><block>{
            <expr>"buder"</expr>, <expr>"butter"</expr> }</block></expr>, <expr><block>{
            <expr>"budr"</expr>, <expr>"butter"</expr> }</block></expr>, <expr><block>{
            <expr>"budter"</expr>, <expr>"butter"</expr> }</block></expr>, <expr><block>{
            <expr>"buracracy"</expr>, <expr>"bureaucracy"</expr> }</block></expr>, <expr><block>{
            <expr>"burracracy"</expr>, <expr>"bureaucracy"</expr> }</block></expr>, <expr><block>{
            <expr>"buton"</expr>, <expr>"button"</expr> }</block></expr>, <expr><block>{
            <expr>"byby"</expr>, <expr>"by by"</expr> }</block></expr>, <expr><block>{
            <expr>"cauler"</expr>, <expr>"caller"</expr> }</block></expr>, <expr><block>{
            <expr>"ceasar"</expr>, <expr>"caesar"</expr> }</block></expr>, <expr><block>{
            <expr>"cemetary"</expr>, <expr>"cemetery"</expr> }</block></expr>, <expr><block>{
            <expr>"changeing"</expr>, <expr>"changing"</expr> }</block></expr>, <expr><block>{
            <expr>"cheet"</expr>, <expr>"cheat"</expr> }</block></expr>, <expr><block>{
            <expr>"cimplicity"</expr>, <expr>"simplicity"</expr> }</block></expr>, <expr><block>{
            <expr>"circumstaces"</expr>, <expr>"circumstances"</expr> }</block></expr>, <expr><block>{
            <expr>"clob"</expr>, <expr>"club"</expr> }</block></expr>, <expr><block>{
            <expr>"coaln"</expr>, <expr>"colon"</expr> }</block></expr>, <expr><block>{
            <expr>"colleaque"</expr>, <expr>"colleague"</expr> }</block></expr>, <expr><block>{
            <expr>"colloquilism"</expr>, <expr>"colloquialism"</expr> }</block></expr>, <expr><block>{
            <expr>"columne"</expr>, <expr>"column"</expr> }</block></expr>, <expr><block>{
            <expr>"comitmment"</expr>, <expr>"commitment"</expr> }</block></expr>, <expr><block>{
            <expr>"comitte"</expr>, <expr>"committee"</expr> }</block></expr>, <expr><block>{
            <expr>"comittmen"</expr>, <expr>"commitment"</expr> }</block></expr>, <expr><block>{
            <expr>"comittmend"</expr>, <expr>"commitment"</expr> }</block></expr>, <expr><block>{
            <expr>"commerciasl"</expr>, <expr>"commercials"</expr> }</block></expr>, <expr><block>{
            <expr>"commited"</expr>, <expr>"committed"</expr> }</block></expr>, <expr><block>{
            <expr>"commitee"</expr>, <expr>"committee"</expr> }</block></expr>, <expr><block>{
            <expr>"companys"</expr>, <expr>"companies"</expr> }</block></expr>, <expr><block>{
            <expr>"comupter"</expr>, <expr>"computer"</expr> }</block></expr>, <expr><block>{
            <expr>"concensus"</expr>, <expr>"consensus"</expr> }</block></expr>, <expr><block>{
            <expr>"confusionism"</expr>, <expr>"confucianism"</expr> }</block></expr>, <expr><block>{
            <expr>"congradulations"</expr>, <expr>"congratulations"</expr> }</block></expr>, <expr><block>{
            <expr>"contunie"</expr>, <expr>"continue"</expr> }</block></expr>, <expr><block>{
            <expr>"cooly"</expr>, <expr>"coolly"</expr> }</block></expr>, <expr><block>{
            <expr>"copping"</expr>, <expr>"coping"</expr> }</block></expr>, <expr><block>{
            <expr>"cosmoplyton"</expr>, <expr>"cosmopolitan"</expr> }</block></expr>, <expr><block>{
            <expr>"crasy"</expr>, <expr>"crazy"</expr> }</block></expr>, <expr><block>{
            <expr>"croke"</expr>, <expr>"croak"</expr> }</block></expr>, <expr><block>{
            <expr>"crucifiction"</expr>, <expr>"crucifixion"</expr> }</block></expr>, <expr><block>{
            <expr>"crusifed"</expr>, <expr>"crucified"</expr> }</block></expr>, <expr><block>{
            <expr>"cumba"</expr>, <expr>"combo"</expr> }</block></expr>, <expr><block>{
            <expr>"custamisation"</expr>, <expr>"customization"</expr> }</block></expr>, <expr><block>{
            <expr>"dag"</expr>, <expr>"dog"</expr> }</block></expr>, <expr><block>{
            <expr>"daly"</expr>, <expr>"daily"</expr> }</block></expr>, <expr><block>{
            <expr>"defence"</expr>, <expr>"defense"</expr> }</block></expr>, <expr><block>{
            <expr>"definate"</expr>, <expr>"definite"</expr> }</block></expr>, <expr><block>{
            <expr>"definately"</expr>, <expr>"definitely"</expr> }</block></expr>, <expr><block>{
            <expr>"dependeble"</expr>, <expr>"dependable"</expr> }</block></expr>, <expr><block>{
            <expr>"descrption"</expr>, <expr>"description"</expr> }</block></expr>, <expr><block>{
            <expr>"descrptn"</expr>, <expr>"description"</expr> }</block></expr>, <expr><block>{
            <expr>"desparate"</expr>, <expr>"desperate"</expr> }</block></expr>, <expr><block>{
            <expr>"dessicate"</expr>, <expr>"desiccate"</expr> }</block></expr>, <expr><block>{
            <expr>"destint"</expr>, <expr>"distant"</expr> }</block></expr>, <expr><block>{
            <expr>"develepment"</expr>, <expr>"developments"</expr> }</block></expr>, <expr><block>{
            <expr>"developement"</expr>, <expr>"development"</expr> }</block></expr>, <expr><block>{
            <expr>"develpond"</expr>, <expr>"development"</expr> }</block></expr>, <expr><block>{
            <expr>"devulge"</expr>, <expr>"divulge"</expr> }</block></expr>, <expr><block>{
            <expr>"dieties"</expr>, <expr>"deities"</expr> }</block></expr>, <expr><block>{
            <expr>"dinasaur"</expr>, <expr>"dinosaur"</expr> }</block></expr>, <expr><block>{
            <expr>"dinasour"</expr>, <expr>"dinosaur"</expr> }</block></expr>, <expr><block>{
            <expr>"discuess"</expr>, <expr>"discuss"</expr> }</block></expr>, <expr><block>{
            <expr>"disect"</expr>, <expr>"dissect"</expr> }</block></expr>, <expr><block>{
            <expr>"disippate"</expr>, <expr>"dissipate"</expr> }</block></expr>, <expr><block>{
            <expr>"disition"</expr>, <expr>"decision"</expr> }</block></expr>, <expr><block>{
            <expr>"dispair"</expr>, <expr>"despair"</expr> }</block></expr>, <expr><block>{
            <expr>"distarct"</expr>, <expr>"distract"</expr> }</block></expr>, <expr><block>{
            <expr>"distart"</expr>, <expr>"distort"</expr> }</block></expr>, <expr><block>{
            <expr>"distroy"</expr>, <expr>"destroy"</expr> }</block></expr>, <expr><block>{
            <expr>"doenload"</expr>, <expr>"download"</expr> }</block></expr>, <expr><block>{
            <expr>"dongle"</expr>, <expr>"dangle"</expr> }</block></expr>, <expr><block>{
            <expr>"doog"</expr>, <expr>"dog"</expr> }</block></expr>, <expr><block>{
            <expr>"dramaticly"</expr>, <expr>"dramatically"</expr> }</block></expr>, <expr><block>{
            <expr>"drunkeness"</expr>, <expr>"drunkenness"</expr> }</block></expr>, <expr><block>{
            <expr>"ductioneery"</expr>, <expr>"dictionary"</expr> }</block></expr>, <expr><block>{
            <expr>"ecstacy"</expr>, <expr>"ecstasy"</expr> }</block></expr>, <expr><block>{
            <expr>"egsistence"</expr>, <expr>"existence"</expr> }</block></expr>, <expr><block>{
            <expr>"eitiology"</expr>, <expr>"etiology"</expr> }</block></expr>, <expr><block>{
            <expr>"elagent"</expr>, <expr>"elegant"</expr> }</block></expr>, <expr><block>{
            <expr>"embarass"</expr>, <expr>"embarrass"</expr> }</block></expr>, <expr><block>{
            <expr>"embarassment"</expr>, <expr>"embarrassment"</expr> }</block></expr>, <expr><block>{
            <expr>"embaress"</expr>, <expr>"embarrass"</expr> }</block></expr>, <expr><block>{
            <expr>"encapsualtion"</expr>, <expr>"encapsulation"</expr> }</block></expr>, <expr><block>{
            <expr>"encyclapidia"</expr>, <expr>"encyclopedia"</expr> }</block></expr>, <expr><block>{
            <expr>"encyclopia"</expr>, <expr>"encyclopedia"</expr> }</block></expr>, <expr><block>{
            <expr>"engins"</expr>, <expr>"engine"</expr> }</block></expr>, <expr><block>{
            <expr>"enhence"</expr>, <expr>"enhance"</expr> }</block></expr>, <expr><block>{
            <expr>"ennuui"</expr>, <expr>"ennui"</expr> }</block></expr>, <expr><block>{
            <expr>"enventions"</expr>, <expr>"inventions"</expr> }</block></expr>, <expr><block>{
            <expr>"envireminakl"</expr>, <expr>"environmental"</expr> }</block></expr>, <expr><block>{
            <expr>"enviroment"</expr>, <expr>"environment"</expr> }</block></expr>, <expr><block>{
            <expr>"epitomy"</expr>, <expr>"epitome"</expr> }</block></expr>, <expr><block>{
            <expr>"equire"</expr>, <expr>"acquire"</expr> }</block></expr>, <expr><block>{
            <expr>"errara"</expr>, <expr>"error"</expr> }</block></expr>, <expr><block>{
            <expr>"evaualtion"</expr>, <expr>"evaluation"</expr> }</block></expr>, <expr><block>{
            <expr>"excede"</expr>, <expr>"exceed"</expr> }</block></expr>, <expr><block>{
            <expr>"excercise"</expr>, <expr>"exercise"</expr> }</block></expr>, <expr><block>{
            <expr>"excpt"</expr>, <expr>"except"</expr> }</block></expr>, <expr><block>{
            <expr>"exhileration"</expr>, <expr>"exhilaration"</expr> }</block></expr>, <expr><block>{
            <expr>"existance"</expr>, <expr>"existence"</expr> }</block></expr>, <expr><block>{
            <expr>"expleyly"</expr>, <expr>"explicitly"</expr> }</block></expr>, <expr><block>{
            <expr>"explity"</expr>, <expr>"explicitly"</expr> }</block></expr>, <expr><block>{
            <expr>"failer"</expr>, <expr>"failure"</expr> }</block></expr>, <expr><block>{
            <expr>"faver"</expr>, <expr>"favor"</expr> }</block></expr>, <expr><block>{
            <expr>"faxe"</expr>, <expr>"fax"</expr> }</block></expr>, <expr><block>{
            <expr>"firey"</expr>, <expr>"fiery"</expr> }</block></expr>, <expr><block>{
            <expr>"fistival"</expr>, <expr>"festival"</expr> }</block></expr>, <expr><block>{
            <expr>"flatterring"</expr>, <expr>"flattering"</expr> }</block></expr>, <expr><block>{
            <expr>"flukse"</expr>, <expr>"flux"</expr> }</block></expr>, <expr><block>{
            <expr>"fone"</expr>, <expr>"phone"</expr> }</block></expr>, <expr><block>{
            <expr>"forsee"</expr>, <expr>"foresee"</expr> }</block></expr>, <expr><block>{
            <expr>"frustartaion"</expr>, <expr>"frustrating"</expr> }</block></expr>, <expr><block>{
            <expr>"funetik"</expr>, <expr>"phonetic"</expr> }</block></expr>, <expr><block>{
            <expr>"gaurd"</expr>, <expr>"guard"</expr> }</block></expr>, <expr><block>{
            <expr>"generly"</expr>, <expr>"generally"</expr> }</block></expr>, <expr><block>{
            <expr>"ghandi"</expr>, <expr>"gandhi"</expr> }</block></expr>, <expr><block>{
            <expr>"gotton"</expr>, <expr>"gotten"</expr> }</block></expr>, <expr><block>{
            <expr>"gracefull"</expr>, <expr>"graceful"</expr> }</block></expr>, <expr><block>{
            <expr>"gradualy"</expr>, <expr>"gradually"</expr> }</block></expr>, <expr><block>{
            <expr>"grammer"</expr>, <expr>"grammar"</expr> }</block></expr>, <expr><block>{
            <expr>"hallo"</expr>, <expr>"hello"</expr> }</block></expr>, <expr><block>{
            <expr>"hapily"</expr>, <expr>"happily"</expr> }</block></expr>, <expr><block>{
            <expr>"harrass"</expr>, <expr>"harass"</expr> }</block></expr>, <expr><block>{
            <expr>"heellp"</expr>, <expr>"help"</expr> }</block></expr>, <expr><block>{
            <expr>"heighth"</expr>, <expr>"height"</expr> }</block></expr>, <expr><block>{
            <expr>"hellp"</expr>, <expr>"help"</expr> }</block></expr>, <expr><block>{
            <expr>"helo"</expr>, <expr>"hello"</expr> }</block></expr>, <expr><block>{
            <expr>"hifin"</expr>, <expr>"hyphen"</expr> }</block></expr>, <expr><block>{
            <expr>"hifine"</expr>, <expr>"hyphen"</expr> }</block></expr>, <expr><block>{
            <expr>"hiphine"</expr>, <expr>"hyphen"</expr> }</block></expr>, <expr><block>{
            <expr>"hippie"</expr>, <expr>"hippy"</expr> }</block></expr>, <expr><block>{
            <expr>"hippopotamous"</expr>, <expr>"hippopotamus"</expr> }</block></expr>, <expr><block>{
            <expr>"hourse"</expr>, <expr>"horse"</expr> }</block></expr>, <expr><block>{
            <expr>"houssing"</expr>, <expr>"housing"</expr> }</block></expr>, <expr><block>{
            <expr>"howaver"</expr>, <expr>"however"</expr> }</block></expr>, <expr><block>{
            <expr>"howver"</expr>, <expr>"however"</expr> }</block></expr>, <expr><block>{
            <expr>"humaniti"</expr>, <expr>"humanity"</expr> }</block></expr>, <expr><block>{
            <expr>"hyfin"</expr>, <expr>"hyphen"</expr> }</block></expr>, <expr><block>{
            <expr>"hystrical"</expr>, <expr>"hysterical"</expr> }</block></expr>, <expr><block>{
            <expr>"illegitament"</expr>, <expr>"illegitimate"</expr> }</block></expr>, <expr><block>{
            <expr>"imbed"</expr>, <expr>"embed"</expr> }</block></expr>, <expr><block>{
            <expr>"imediaetly"</expr>, <expr>"immediately"</expr> }</block></expr>, <expr><block>{
            <expr>"immenant"</expr>, <expr>"immanent"</expr> }</block></expr>, <expr><block>{
            <expr>"implemtes"</expr>, <expr>"implements"</expr> }</block></expr>, <expr><block>{
            <expr>"inadvertant"</expr>, <expr>"inadvertent"</expr> }</block></expr>, <expr><block>{
            <expr>"incase"</expr>, <expr>"in case"</expr> }</block></expr>, <expr><block>{
            <expr>"incedious"</expr>, <expr>"insidious"</expr> }</block></expr>, <expr><block>{
            <expr>"incompleet"</expr>, <expr>"incomplete"</expr> }</block></expr>, <expr><block>{
            <expr>"incomplot"</expr>, <expr>"incomplete"</expr> }</block></expr>, <expr><block>{
            <expr>"inconvenant"</expr>, <expr>"inconvenient"</expr> }</block></expr>, <expr><block>{
            <expr>"inconvience"</expr>, <expr>"inconvenience"</expr> }</block></expr>, <expr><block>{
            <expr>"independant"</expr>, <expr>"independent"</expr> }</block></expr>, <expr><block>{
            <expr>"independenent"</expr>, <expr>"independent"</expr> }</block></expr>, <expr><block>{
            <expr>"indepnends"</expr>, <expr>"independent"</expr> }</block></expr>, <expr><block>{
            <expr>"indepth"</expr>, <expr>"in depth"</expr> }</block></expr>, <expr><block>{
            <expr>"indispensible"</expr>, <expr>"indispensable"</expr> }</block></expr>, <expr><block>{
            <expr>"inefficite"</expr>, <expr>"inefficient"</expr> }</block></expr>, <expr><block>{
            <expr>"infact"</expr>, <expr>"in fact"</expr> }</block></expr>, <expr><block>{
            <expr>"influencial"</expr>, <expr>"influential"</expr> }</block></expr>, <expr><block>{
            <expr>"innoculate"</expr>, <expr>"inoculate"</expr> }</block></expr>, <expr><block>{
            <expr>"insistant"</expr>, <expr>"insistent"</expr> }</block></expr>, <expr><block>{
            <expr>"insistenet"</expr>, <expr>"insistent"</expr> }</block></expr>, <expr><block>{
            <expr>"instulation"</expr>, <expr>"installation"</expr> }</block></expr>, <expr><block>{
            <expr>"intealignt"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intelegent"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intelegnent"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intelejent"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"inteligent"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intelignt"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intellagant"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intellegent"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intellegint"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intellgnt"</expr>, <expr>"intelligent"</expr> }</block></expr>, <expr><block>{
            <expr>"intensionality"</expr>, <expr>"intensionally"</expr> }</block></expr>, <expr><block>{
            <expr>"internation"</expr>, <expr>"international"</expr> }</block></expr>, <expr><block>{
            <expr>"interpretate"</expr>, <expr>"interpret"</expr> }</block></expr>, <expr><block>{
            <expr>"interpretter"</expr>, <expr>"interpreter"</expr> }</block></expr>, <expr><block>{
            <expr>"intertes"</expr>, <expr>"interested"</expr> }</block></expr>, <expr><block>{
            <expr>"intertesd"</expr>, <expr>"interested"</expr> }</block></expr>, <expr><block>{
            <expr>"invermeantial"</expr>, <expr>"environmental"</expr> }</block></expr>, <expr><block>{
            <expr>"irresistable"</expr>, <expr>"irresistible"</expr> }</block></expr>, <expr><block>{
            <expr>"irritible"</expr>, <expr>"irritable"</expr> }</block></expr>, <expr><block>{
            <expr>"isreal"</expr>, <expr>"israel"</expr> }</block></expr>, <expr><block>{
            <expr>"johhn"</expr>, <expr>"john"</expr> }</block></expr>, <expr><block>{
            <expr>"kippur"</expr>, <expr>"kipper"</expr> }</block></expr>, <expr><block>{
            <expr>"knawing"</expr>, <expr>"knowing"</expr> }</block></expr>, <expr><block>{
            <expr>"lesure"</expr>, <expr>"leisure"</expr> }</block></expr>, <expr><block>{
            <expr>"liasion"</expr>, <expr>"lesion"</expr> }</block></expr>, <expr><block>{
            <expr>"liason"</expr>, <expr>"liaison"</expr> }</block></expr>, <expr><block>{
            <expr>"likly"</expr>, <expr>"likely"</expr> }</block></expr>, <expr><block>{
            <expr>"liquify"</expr>, <expr>"liquefy"</expr> }</block></expr>, <expr><block>{
            <expr>"lloyer"</expr>, <expr>"layer"</expr> }</block></expr>, <expr><block>{
            <expr>"lossing"</expr>, <expr>"losing"</expr> }</block></expr>, <expr><block>{
            <expr>"luser"</expr>, <expr>"laser"</expr> }</block></expr>, <expr><block>{
            <expr>"maintanence"</expr>, <expr>"maintenance"</expr> }</block></expr>, <expr><block>{
            <expr>"mandelbrot"</expr>, <expr>"Mandelbrot"</expr> }</block></expr>, <expr><block>{
            <expr>"marshall"</expr>, <expr>"marshal"</expr> }</block></expr>, <expr><block>{
            <expr>"maxium"</expr>, <expr>"maximum"</expr> }</block></expr>, <expr><block>{
            <expr>"mic"</expr>, <expr>"mike"</expr> }</block></expr>, <expr><block>{
            <expr>"midia"</expr>, <expr>"media"</expr> }</block></expr>, <expr><block>{
            <expr>"millenium"</expr>, <expr>"millennium"</expr> }</block></expr>, <expr><block>{
            <expr>"miniscule"</expr>, <expr>"minuscule"</expr> }</block></expr>, <expr><block>{
            <expr>"minkay"</expr>, <expr>"monkey"</expr> }</block></expr>, <expr><block>{
            <expr>"mischievious"</expr>, <expr>"mischievous"</expr> }</block></expr>, <expr><block>{
            <expr>"momento"</expr>, <expr>"memento"</expr> }</block></expr>, <expr><block>{
            <expr>"monkay"</expr>, <expr>"monkey"</expr> }</block></expr>, <expr><block>{
            <expr>"mosaik"</expr>, <expr>"mosaic"</expr> }</block></expr>, <expr><block>{
            <expr>"mostlikely"</expr>, <expr>"most likely"</expr> }</block></expr>, <expr><block>{
            <expr>"mousr"</expr>, <expr>"mouser"</expr> }</block></expr>, <expr><block>{
            <expr>"mroe"</expr>, <expr>"more"</expr> }</block></expr>, <expr><block>{
            <expr>"necesary"</expr>, <expr>"necessary"</expr> }</block></expr>, <expr><block>{
            <expr>"necesser"</expr>, <expr>"necessary"</expr> }</block></expr>, <expr><block>{
            <expr>"neice"</expr>, <expr>"niece"</expr> }</block></expr>, <expr><block>{
            <expr>"neighbour"</expr>, <expr>"neighbor"</expr> }</block></expr>, <expr><block>{
            <expr>"nemonic"</expr>, <expr>"pneumonic"</expr> }</block></expr>, <expr><block>{
            <expr>"nevade"</expr>, <expr>"Nevada"</expr> }</block></expr>, <expr><block>{
            <expr>"nickleodeon"</expr>, <expr>"nickelodeon"</expr> }</block></expr>, <expr><block>{
            <expr>"nieve"</expr>, <expr>"naive"</expr> }</block></expr>, <expr><block>{
            <expr>"noone"</expr>, <expr>"no one"</expr> }</block></expr>, <expr><block>{
            <expr>"notin"</expr>, <expr>"not in"</expr> }</block></expr>, <expr><block>{
            <expr>"nozled"</expr>, <expr>"nuzzled"</expr> }</block></expr>, <expr><block>{
            <expr>"objectsion"</expr>, <expr>"objects"</expr> }</block></expr>, <expr><block>{
            <expr>"ocassion"</expr>, <expr>"occasion"</expr> }</block></expr>, <expr><block>{
            <expr>"occuppied"</expr>, <expr>"occupied"</expr> }</block></expr>, <expr><block>{
            <expr>"occurence"</expr>, <expr>"occurrence"</expr> }</block></expr>, <expr><block>{
            <expr>"octagenarian"</expr>, <expr>"octogenarian"</expr> }</block></expr>, <expr><block>{
            <expr>"opposim"</expr>, <expr>"opossum"</expr> }</block></expr>, <expr><block>{
            <expr>"organise"</expr>, <expr>"organize"</expr> }</block></expr>, <expr><block>{
            <expr>"organiz"</expr>, <expr>"organize"</expr> }</block></expr>, <expr><block>{
            <expr>"orientate"</expr>, <expr>"orient"</expr> }</block></expr>, <expr><block>{
            <expr>"oscilascope"</expr>, <expr>"oscilloscope"</expr> }</block></expr>, <expr><block>{
            <expr>"parametic"</expr>, <expr>"parameter"</expr> }</block></expr>, <expr><block>{
            <expr>"permissable"</expr>, <expr>"permissible"</expr> }</block></expr>, <expr><block>{
            <expr>"permmasivie"</expr>, <expr>"permissive"</expr> }</block></expr>, <expr><block>{
            <expr>"persue"</expr>, <expr>"pursue"</expr> }</block></expr>, <expr><block>{
            <expr>"phantasia"</expr>, <expr>"fantasia"</expr> }</block></expr>, <expr><block>{
            <expr>"phenominal"</expr>, <expr>"phenomenal"</expr> }</block></expr>, <expr><block>{
            <expr>"playwrite"</expr>, <expr>"playwright"</expr> }</block></expr>, <expr><block>{
            <expr>"poeses"</expr>, <expr>"poesies"</expr> }</block></expr>, <expr><block>{
            <expr>"poligamy"</expr>, <expr>"polygamy"</expr> }</block></expr>, <expr><block>{
            <expr>"politict"</expr>, <expr>"politic"</expr> }</block></expr>, <expr><block>{
            <expr>"pollice"</expr>, <expr>"police"</expr> }</block></expr>, <expr><block>{
            <expr>"polypropalene"</expr>, <expr>"polypropylene"</expr> }</block></expr>, <expr><block>{
            <expr>"possable"</expr>, <expr>"possible"</expr> }</block></expr>, <expr><block>{
            <expr>"practicle"</expr>, <expr>"practical"</expr> }</block></expr>, <expr><block>{
            <expr>"pragmaticism"</expr>, <expr>"pragmatism"</expr> }</block></expr>, <expr><block>{
            <expr>"preceeding"</expr>, <expr>"preceding"</expr> }</block></expr>, <expr><block>{
            <expr>"precios"</expr>, <expr>"precision"</expr> }</block></expr>, <expr><block>{
            <expr>"preemptory"</expr>, <expr>"peremptory"</expr> }</block></expr>, <expr><block>{
            <expr>"prefixt"</expr>, <expr>"prefixed"</expr> }</block></expr>, <expr><block>{
            <expr>"presbyterian"</expr>, <expr>"Presbyterian"</expr> }</block></expr>, <expr><block>{
            <expr>"presue"</expr>, <expr>"pursue"</expr> }</block></expr>, <expr><block>{
            <expr>"presued"</expr>, <expr>"pursued"</expr> }</block></expr>, <expr><block>{
            <expr>"privielage"</expr>, <expr>"privilege"</expr> }</block></expr>, <expr><block>{
            <expr>"priviledge"</expr>, <expr>"privilege"</expr> }</block></expr>, <expr><block>{
            <expr>"proceedures"</expr>, <expr>"procedures"</expr> }</block></expr>, <expr><block>{
            <expr>"pronensiation"</expr>, <expr>"pronunciation"</expr> }</block></expr>, <expr><block>{
            <expr>"pronounciation"</expr>, <expr>"pronunciation"</expr> }</block></expr>, <expr><block>{
            <expr>"properally"</expr>, <expr>"properly"</expr> }</block></expr>, <expr><block>{
            <expr>"proplematic"</expr>, <expr>"problematic"</expr> }</block></expr>, <expr><block>{
            <expr>"protray"</expr>, <expr>"portray"</expr> }</block></expr>, <expr><block>{
            <expr>"pscolgst"</expr>, <expr>"psychologist"</expr> }</block></expr>, <expr><block>{
            <expr>"psicolagest"</expr>, <expr>"psychologist"</expr> }</block></expr>, <expr><block>{
            <expr>"psycolagest"</expr>, <expr>"psychologist"</expr> }</block></expr>, <expr><block>{
            <expr>"quoz"</expr>, <expr>"quiz"</expr> }</block></expr>, <expr><block>{
            <expr>"radious"</expr>, <expr>"radius"</expr> }</block></expr>, <expr><block>{
            <expr>"reccomend"</expr>, <expr>"recommend"</expr> }</block></expr>, <expr><block>{
            <expr>"reccona"</expr>, <expr>"raccoon"</expr> }</block></expr>, <expr><block>{
            <expr>"recieve"</expr>, <expr>"receive"</expr> }</block></expr>, <expr><block>{
            <expr>"reconise"</expr>, <expr>"recognize"</expr> }</block></expr>, <expr><block>{
            <expr>"rectangeles"</expr>, <expr>"rectangle"</expr> }</block></expr>, <expr><block>{
            <expr>"reoccurring"</expr>, <expr>"recurring"</expr> }</block></expr>, <expr><block>{
            <expr>"repitition"</expr>, <expr>"repetition"</expr> }</block></expr>, <expr><block>{
            <expr>"replasments"</expr>, <expr>"replacement"</expr> }</block></expr>, <expr><block>{
            <expr>"respct"</expr>, <expr>"respect"</expr> }</block></expr>, <expr><block>{
            <expr>"respecally"</expr>, <expr>"respectfully"</expr> }</block></expr>, <expr><block>{
            <expr>"rsx"</expr>, <expr>"RSX"</expr> }</block></expr>, <expr><block>{
            <expr>"runnung"</expr>, <expr>"running"</expr> }</block></expr>, <expr><block>{
            <expr>"sacreligious"</expr>, <expr>"sacrilegious"</expr> }</block></expr>, <expr><block>{
            <expr>"salut"</expr>, <expr>"salute"</expr> }</block></expr>, <expr><block>{
            <expr>"searcheable"</expr>, <expr>"searchable"</expr> }</block></expr>, <expr><block>{
            <expr>"seferal"</expr>, <expr>"several"</expr> }</block></expr>, <expr><block>{
            <expr>"segements"</expr>, <expr>"segments"</expr> }</block></expr>, <expr><block>{
            <expr>"sence"</expr>, <expr>"sense"</expr> }</block></expr>, <expr><block>{
            <expr>"seperate"</expr>, <expr>"separate"</expr> }</block></expr>, <expr><block>{
            <expr>"sicolagest"</expr>, <expr>"psychologist"</expr> }</block></expr>, <expr><block>{
            <expr>"sieze"</expr>, <expr>"seize"</expr> }</block></expr>, <expr><block>{
            <expr>"simplye"</expr>, <expr>"simply"</expr> }</block></expr>, <expr><block>{
            <expr>"sitte"</expr>, <expr>"site"</expr> }</block></expr>, <expr><block>{
            <expr>"slyph"</expr>, <expr>"sylph"</expr> }</block></expr>, <expr><block>{
            <expr>"smil"</expr>, <expr>"smile"</expr> }</block></expr>, <expr><block>{
            <expr>"sometmes"</expr>, <expr>"sometimes"</expr> }</block></expr>, <expr><block>{
            <expr>"soonec"</expr>, <expr>"sonic"</expr> }</block></expr>, <expr><block>{
            <expr>"specificialy"</expr>, <expr>"specifically"</expr> }</block></expr>, <expr><block>{
            <expr>"spel"</expr>, <expr>"spell"</expr> }</block></expr>, <expr><block>{
            <expr>"spoak"</expr>, <expr>"spoke"</expr> }</block></expr>, <expr><block>{
            <expr>"sponsered"</expr>, <expr>"sponsored"</expr> }</block></expr>, <expr><block>{
            <expr>"stering"</expr>, <expr>"steering"</expr> }</block></expr>, <expr><block>{
            <expr>"straightjacket"</expr>, <expr>"straitjacket"</expr> }</block></expr>, <expr><block>{
            <expr>"stumach"</expr>, <expr>"stomach"</expr> }</block></expr>, <expr><block>{
            <expr>"stutent"</expr>, <expr>"student"</expr> }</block></expr>, <expr><block>{
            <expr>"styleguide"</expr>, <expr>"style guide"</expr> }</block></expr>, <expr><block>{
            <expr>"subpena"</expr>, <expr>"subpoena"</expr> }</block></expr>, <expr><block>{
            <expr>"substations"</expr>, <expr>"substitutions"</expr> }</block></expr>, <expr><block>{
            <expr>"supercede"</expr>, <expr>"supersede"</expr> }</block></expr>, <expr><block>{
            <expr>"superfulous"</expr>, <expr>"superfluous"</expr> }</block></expr>, <expr><block>{
            <expr>"susan"</expr>, <expr>"Susan"</expr> }</block></expr>, <expr><block>{
            <expr>"swimwear"</expr>, <expr>"swim wear"</expr> }</block></expr>, <expr><block>{
            <expr>"syncorization"</expr>, <expr>"synchronization"</expr> }</block></expr>, <expr><block>{
            <expr>"taff"</expr>, <expr>"tough"</expr> }</block></expr>, <expr><block>{
            <expr>"taht"</expr>, <expr>"that"</expr> }</block></expr>, <expr><block>{
            <expr>"tattos"</expr>, <expr>"tattoos"</expr> }</block></expr>, <expr><block>{
            <expr>"techniquely"</expr>, <expr>"technically"</expr> }</block></expr>, <expr><block>{
            <expr>"teh"</expr>, <expr>"the"</expr> }</block></expr>, <expr><block>{
            <expr>"tem"</expr>, <expr>"team"</expr> }</block></expr>, <expr><block>{
            <expr>"teo"</expr>, <expr>"two"</expr> }</block></expr>, <expr><block>{
            <expr>"teridical"</expr>, <expr>"theoretical"</expr> }</block></expr>, <expr><block>{
            <expr>"tesst"</expr>, <expr>"test"</expr> }</block></expr>, <expr><block>{
            <expr>"theridically"</expr>, <expr>"theoretical"</expr> }</block></expr>, <expr><block>{
            <expr>"thredically"</expr>, <expr>"theoretically"</expr> }</block></expr>, <expr><block>{
            <expr>"thruout"</expr>, <expr>"throughout"</expr> }</block></expr>, <expr><block>{
            <expr>"ths"</expr>, <expr>"this"</expr> }</block></expr>, <expr><block>{
            <expr>"titalate"</expr>, <expr>"titillate"</expr> }</block></expr>, <expr><block>{
            <expr>"tobagan"</expr>, <expr>"tobaggon"</expr> }</block></expr>, <expr><block>{
            <expr>"tommorrow"</expr>, <expr>"tomorrow"</expr> }</block></expr>, <expr><block>{
            <expr>"tomorow"</expr>, <expr>"tomorrow"</expr> }</block></expr>, <expr><block>{
            <expr>"trubbel"</expr>, <expr>"trouble"</expr> }</block></expr>, <expr><block>{
            <expr>"ttest"</expr>, <expr>"test"</expr> }</block></expr>, <expr><block>{
            <expr>"tyrrany"</expr>, <expr>"tyranny"</expr> }</block></expr>, <expr><block>{
            <expr>"unatourral"</expr>, <expr>"unnatural"</expr> }</block></expr>, <expr><block>{
            <expr>"unaturral"</expr>, <expr>"unnatural"</expr> }</block></expr>, <expr><block>{
            <expr>"unconisitional"</expr>, <expr>"unconstitutional"</expr> }</block></expr>, <expr><block>{
            <expr>"unconscience"</expr>, <expr>"unconscious"</expr> }</block></expr>, <expr><block>{
            <expr>"underladder"</expr>, <expr>"under ladder"</expr> }</block></expr>, <expr><block>{
            <expr>"unentelegible"</expr>, <expr>"unintelligible"</expr> }</block></expr>, <expr><block>{
            <expr>"unfortunently"</expr>, <expr>"unfortunately"</expr> }</block></expr>, <expr><block>{
            <expr>"unnaturral"</expr>, <expr>"unnatural"</expr> }</block></expr>, <expr><block>{
            <expr>"upcast"</expr>, <expr>"up cast"</expr> }</block></expr>, <expr><block>{
            <expr>"verison"</expr>, <expr>"version"</expr> }</block></expr>, <expr><block>{
            <expr>"vinagarette"</expr>, <expr>"vinaigrette"</expr> }</block></expr>, <expr><block>{
            <expr>"volunteerism"</expr>, <expr>"voluntarism"</expr> }</block></expr>, <expr><block>{
            <expr>"volye"</expr>, <expr>"volley"</expr> }</block></expr>, <expr><block>{
            <expr>"waite"</expr>, <expr>"wait"</expr> }</block></expr>, <expr><block>{
            <expr>"wan't"</expr>, <expr>"won't"</expr> }</block></expr>, <expr><block>{
            <expr>"warloord"</expr>, <expr>"warlord"</expr> }</block></expr>, <expr><block>{
            <expr>"whaaat"</expr>, <expr>"what"</expr> }</block></expr>, <expr><block>{
            <expr>"whard"</expr>, <expr>"ward"</expr> }</block></expr>, <expr><block>{
            <expr>"whimp"</expr>, <expr>"wimp"</expr> }</block></expr>, <expr><block>{
            <expr>"wicken"</expr>, <expr>"weaken"</expr> }</block></expr>, <expr><block>{
            <expr>"wierd"</expr>, <expr>"weird"</expr> }</block></expr>, <expr><block>{
            <expr>"wrank"</expr>, <expr>"rank"</expr> }</block></expr>, <expr><block>{
            <expr>"writeen"</expr>, <expr>"righten"</expr> }</block></expr>, <expr><block>{
            <expr>"writting"</expr>, <expr>"writing"</expr> }</block></expr>, <expr><block>{
            <expr>"wundeews"</expr>, <expr>"windows"</expr> }</block></expr>, <expr><block>{
            <expr>"yeild"</expr>, <expr>"yield"</expr> }</block></expr>, }</block></expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Tests encoding APIs in one place.
     */</comment>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>assertDoubleMetaphone</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>expected</name></decl></param>, <param><decl><type><specifier>final</specifier> <name>String</name></type> <name>source</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expected</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>encode</name><argument_list>(<argument><expr><name>source</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try <block>{
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expected</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>encode</name><argument_list>(<argument><expr>(<name>Object</name>) <name>source</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch>catch (<param><decl><type><specifier>final</specifier> <name>EncoderException</name></type> <name>e</name></decl></param>) <block>{
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr>"Unexpected expection: " + <name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expected</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>doubleMetaphone</name><argument_list>(<argument><expr><name>source</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expected</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>doubleMetaphone</name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr>false</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Tests encoding APIs in one place.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>assertDoubleMetaphoneAlt</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>expected</name></decl></param>, <param><decl><type><specifier>final</specifier> <name>String</name></type> <name>source</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expected</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>doubleMetaphone</name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>doubleMetaphoneEqualTest</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name><name>String</name><index>[]</index><index>[]</index></name></type> <name>pairs</name></decl></param>, <param><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>useAlternate</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>this</name>.<name>validateFixture</name></name><argument_list>(<argument><expr><name>pairs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for>for (<init><decl><type><specifier>final</specifier> <name>String</name><index>[]</index></type> <name>pair</name> :<range> <expr><name>pairs</name></expr></range></decl></init>) <block>{
            <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>name0</name> =<init> <expr><name><name>pair</name><index>[<expr>0</expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>name1</name> =<init> <expr><name><name>pair</name><index>[<expr>1</expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>failMsg</name> =<init> <expr>"Expected match between " + <name>name0</name> + " and " + <name>name1</name> + " (use alternate: " + <name>useAlternate</name> + ")"</expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>failMsg</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr><name>name0</name></expr></argument>, <argument><expr><name>name1</name></expr></argument>, <argument><expr><name>useAlternate</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>failMsg</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr><name>name1</name></expr></argument>, <argument><expr><name>name0</name></expr></argument>, <argument><expr><name>useAlternate</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if>if <condition>(<expr>!<name>useAlternate</name></expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>failMsg</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr><name>name0</name></expr></argument>, <argument><expr><name>name1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><name>failMsg</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr><name>name1</name></expr></argument>, <argument><expr><name>name0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></for>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>doubleMetaphoneNotEqualTest</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>alternate</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr>"Brain"</expr></argument>, <argument><expr>"Band"</expr></argument>, <argument><expr><name>alternate</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr>"Band"</expr></argument>, <argument><expr>"Brain"</expr></argument>, <argument><expr><name>alternate</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if>if <condition>(<expr>!<name>alternate</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr>"Brain"</expr></argument>, <argument><expr>"Band"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr>"Band"</expr></argument>, <argument><expr>"Brain"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function>

    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>protected</specifier> <name>DoubleMetaphone</name></type> <name>createStringEncoder</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr>new <call><name>DoubleMetaphone</name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>testDoubleMetaphone</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"TSTN"</expr></argument>, <argument><expr>"testing"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"0"</expr></argument>, <argument><expr>"The"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"KK"</expr></argument>, <argument><expr>"quick"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"PRN"</expr></argument>, <argument><expr>"brown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"FKS"</expr></argument>, <argument><expr>"fox"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"JMPT"</expr></argument>, <argument><expr>"jumped"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"AFR"</expr></argument>, <argument><expr>"over"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"0"</expr></argument>, <argument><expr>"the"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"LS"</expr></argument>, <argument><expr>"lazy"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"TKS"</expr></argument>, <argument><expr>"dogs"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"MKFR"</expr></argument>, <argument><expr>"MacCafferey"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"STFN"</expr></argument>, <argument><expr>"Stephan"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"KSSK"</expr></argument>, <argument><expr>"Kuczewski"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"MKLL"</expr></argument>, <argument><expr>"McClelland"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"SNHS"</expr></argument>, <argument><expr>"san jose"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphone</name><argument_list>(<argument><expr>"SNFP"</expr></argument>, <argument><expr>"xenophobia"</expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"TSTN"</expr></argument>, <argument><expr>"testing"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"T"</expr></argument>, <argument><expr>"The"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"KK"</expr></argument>, <argument><expr>"quick"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"PRN"</expr></argument>, <argument><expr>"brown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"FKS"</expr></argument>, <argument><expr>"fox"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"AMPT"</expr></argument>, <argument><expr>"jumped"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"AFR"</expr></argument>, <argument><expr>"over"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"T"</expr></argument>, <argument><expr>"the"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"LS"</expr></argument>, <argument><expr>"lazy"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"TKS"</expr></argument>, <argument><expr>"dogs"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"MKFR"</expr></argument>, <argument><expr>"MacCafferey"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"STFN"</expr></argument>, <argument><expr>"Stephan"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"KXFS"</expr></argument>, <argument><expr>"Kutchefski"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"MKLL"</expr></argument>, <argument><expr>"McClelland"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"SNHS"</expr></argument>, <argument><expr>"san jose"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"SNFP"</expr></argument>, <argument><expr>"xenophobia"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"FKR"</expr></argument>, <argument><expr>"Fokker"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"AK"</expr></argument>, <argument><expr>"Joqqi"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"HF"</expr></argument>, <argument><expr>"Hovvi"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertDoubleMetaphoneAlt</name><argument_list>(<argument><expr>"XRN"</expr></argument>, <argument><expr>"Czerny"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>testEmpty</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>doubleMetaphone</name><argument_list>(<argument><expr><name>null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>doubleMetaphone</name><argument_list>(<argument><expr>""</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>doubleMetaphone</name><argument_list>(<argument><expr>" "</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>doubleMetaphone</name><argument_list>(<argument><expr>"\t\n\r "</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Test setting maximum length
     */</comment>
    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>testSetMaxCodeLength</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>value</name> =<init> <expr>"jumped"</expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier>final</specifier> <name>DoubleMetaphone</name></type> <name>doubleMetaphone</name> =<init> <expr>new <call><name>DoubleMetaphone</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line">// Sanity check of default settings</comment>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr>"Default Max Code Length"</expr></argument>, <argument><expr>4</expr></argument>, <argument><expr><call><name><name>doubleMetaphone</name>.<name>getMaxCodeLen</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr>"Default Primary"</expr></argument>,   <argument><expr>"JMPT"</expr></argument>, <argument><expr><call><name><name>doubleMetaphone</name>.<name>doubleMetaphone</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr>false</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr>"Default Alternate"</expr></argument>, <argument><expr>"AMPT"</expr></argument>, <argument><expr><call><name><name>doubleMetaphone</name>.<name>doubleMetaphone</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Check setting Max Code Length</comment>
        <expr_stmt><expr><call><name><name>doubleMetaphone</name>.<name>setMaxCodeLen</name></name><argument_list>(<argument><expr>3</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr>"Set Max Code Length"</expr></argument>, <argument><expr>3</expr></argument>, <argument><expr><call><name><name>doubleMetaphone</name>.<name>getMaxCodeLen</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr>"Max=3 Primary"</expr></argument>,   <argument><expr>"JMP"</expr></argument>, <argument><expr><call><name><name>doubleMetaphone</name>.<name>doubleMetaphone</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr>false</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr>"Max=3 Alternate"</expr></argument>, <argument><expr>"AMP"</expr></argument>, <argument><expr><call><name><name>doubleMetaphone</name>.<name>doubleMetaphone</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>testIsDoubleMetaphoneEqualBasic</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><specifier>final</specifier> <name>String</name><index>[]</index><index>[]</index></type> <name>testFixture</name> =<init> <expr>new <name><name>String</name><index>[]</index><index>[]</index></name> <block>{ <expr><block>{ <expr>"Case"</expr>, <expr>"case"</expr> }</block></expr>, <expr><block>{
                <expr>"CASE"</expr>, <expr>"Case"</expr> }</block></expr>, <expr><block>{
                <expr>"caSe"</expr>, <expr>"cAsE"</expr> }</block></expr>, <expr><block>{
                <expr>"cookie"</expr>, <expr>"quick"</expr> }</block></expr>, <expr><block>{
                <expr>"quick"</expr>, <expr>"cookie"</expr> }</block></expr>, <expr><block>{
                <expr>"Brian"</expr>, <expr>"Bryan"</expr> }</block></expr>, <expr><block>{
                <expr>"Auto"</expr>, <expr>"Otto"</expr> }</block></expr>, <expr><block>{
                <expr>"Steven"</expr>, <expr>"Stefan"</expr> }</block></expr>, <expr><block>{
                <expr>"Philipowitz"</expr>, <expr>"Filipowicz"</expr> }</block></expr>
        }</block></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>doubleMetaphoneEqualTest</name><argument_list>(<argument><expr><name>testFixture</name></expr></argument>, <argument><expr>false</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>doubleMetaphoneEqualTest</name><argument_list>(<argument><expr><name>testFixture</name></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Example in the original article but failures in this Java impl:
     */</comment>
    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>testIsDoubleMetaphoneEqualExtended1</name><parameter_list>()</parameter_list> <block>{
        <comment type="line">//        String[][] testFixture = new String[][] { { "Smith", "Schmidt" }</comment>
        <comment type="line">//        };</comment>
        <comment type="line">//        doubleMetaphoneEqualTest(testFixture, false);</comment>
        <comment type="line">//        doubleMetaphoneEqualTest(testFixture, true);</comment>
    }</block></function>

    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>testIsDoubleMetaphoneEqualExtended2</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><specifier>final</specifier> <name>String</name><index>[]</index><index>[]</index></type> <name>testFixture</name> =<init> <expr>new <name><name>String</name><index>[]</index><index>[]</index></name> <block>{ <expr><block>{ <expr>"Jablonski"</expr>, <expr>"Yablonsky"</expr> }</block></expr>
        }</block></expr></init></decl>;</decl_stmt>
        <comment type="line">//doubleMetaphoneEqualTest(testFixture, false);</comment>
        <expr_stmt><expr><call><name>doubleMetaphoneEqualTest</name><argument_list>(<argument><expr><name>testFixture</name></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Used to generate the MATCHES array and test possible matches from the
     * FIXTURE array.
     */</comment>
    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>testIsDoubleMetaphoneEqualExtended3</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>this</name>.<name>validateFixture</name></name><argument_list>(<argument><expr><name>FIXTURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>StringBuilder</name></type> <name>failures</name> =<init> <expr>new <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>StringBuilder</name></type> <name>matches</name> =<init> <expr>new <call><name>StringBuilder</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>cr</name> =<init> <expr><call><name><name>System</name>.<name>getProperty</name></name><argument_list>(<argument><expr>"line.separator"</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>matches</name>.<name>append</name></name><argument_list>(<argument><expr>"private static final String[][] MATCHES = {" + <name>cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>failCount</name> =<init> <expr>0</expr></init></decl>;</decl_stmt>
        <for>for (<init><decl><type><name>int</name></type> <name>i</name> =<init> <expr>0</expr></init></decl>;</init> <condition><expr><name>i</name> &lt; <name><name>FIXTURE</name>.<name>length</name></name></expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
            <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>name0</name> =<init> <expr><name><name>FIXTURE</name><index>[<expr><name>i</name></expr>]</index><index>[<expr>0</expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>name1</name> =<init> <expr><name><name>FIXTURE</name><index>[<expr><name>i</name></expr>]</index><index>[<expr>1</expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>match1</name> =<init> <expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr><name>name0</name></expr></argument>, <argument><expr><name>name1</name></expr></argument>, <argument><expr>false</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>match2</name> =<init> <expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr><name>name0</name></expr></argument>, <argument><expr><name>name1</name></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if>if <condition>(<expr><name>match1</name> == false &amp;&amp; <name>match2</name> == false</expr>)</condition><then> <block>{
                <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>failMsg</name> =<init> <expr>"[" + <name>i</name> + "] " + <name>name0</name> + " and " + <name>name1</name> + <name>cr</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>failures</name>.<name>append</name></name><argument_list>(<argument><expr><name>failMsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>failCount</name>++</expr>;</expr_stmt>
            }</block></then> <else>else <block>{
                <expr_stmt><expr><call><name><name>matches</name>.<name>append</name></name><argument_list>(<argument><expr>"{\"" + <name>name0</name> + "\", \"" + <name>name1</name> + "\"}," + <name>cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></for>
        <expr_stmt><expr><call><name><name>matches</name>.<name>append</name></name><argument_list>(<argument><expr>"};"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// Turn on to print a new MATCH array</comment>
        <comment type="line">//System.out.println(matches.toString());</comment>
        <if>if <condition>(<expr><name>failCount</name> &gt; 0</expr>)</condition><then> <block>{
            <comment type="line">// Turn on to see which pairs do NOT match.</comment>
            <comment type="line">// String msg = failures.toString();</comment>
            <comment type="line">//fail(failCount + " failures out of " + FIXTURE.length + ". The</comment>
            <comment type="line">// following could be made to match: " + cr + msg);</comment>
        }</block></then></if>
    }</block></function>

    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>testIsDoubleMetaphoneEqualWithMATCHES</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>this</name>.<name>validateFixture</name></name><argument_list>(<argument><expr><name>MATCHES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for>for (<init><decl><type><name>int</name></type> <name>i</name> =<init> <expr>0</expr></init></decl>;</init> <condition><expr><name>i</name> &lt; <name><name>MATCHES</name>.<name>length</name></name></expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
            <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>name0</name> =<init> <expr><name><name>MATCHES</name><index>[<expr><name>i</name></expr>]</index><index>[<expr>0</expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>name1</name> =<init> <expr><name><name>MATCHES</name><index>[<expr><name>i</name></expr>]</index><index>[<expr>1</expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>match1</name> =<init> <expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr><name>name0</name></expr></argument>, <argument><expr><name>name1</name></expr></argument>, <argument><expr>false</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>match2</name> =<init> <expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr><name>name0</name></expr></argument>, <argument><expr><name>name1</name></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if>if <condition>(<expr><name>match1</name> == false &amp;&amp; <name>match2</name> == false</expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr>"Expected match [" + <name>i</name> + "] " + <name>name0</name> + " and " + <name>name1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></for>
    }</block></function>

    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>testIsDoubleMetaphoneNotEqual</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>doubleMetaphoneNotEqualTest</name><argument_list>(<argument><expr>false</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>doubleMetaphoneNotEqualTest</name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>testCCedilla</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr>"\u00e7"</expr></argument>, <argument><expr>"S"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// c-cedilla</comment>
    }</block></function>

    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>testNTilde</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>this</name>.<name>getStringEncoder</name></name><argument_list>()</argument_list></call>.<call><name>isDoubleMetaphoneEqual</name><argument_list>(<argument><expr>"\u00f1"</expr></argument>, <argument><expr>"N"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// n-tilde</comment>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>validateFixture</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name><name>String</name><index>[]</index><index>[]</index></name></type> <name>pairs</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name><name>pairs</name>.<name>length</name></name> == 0</expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr>"Test fixture is empty"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <for>for (<init><decl><type><name>int</name></type> <name>i</name> =<init> <expr>0</expr></init></decl>;</init> <condition><expr><name>i</name> &lt; <name><name>pairs</name>.<name>length</name></name></expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
            <if>if <condition>(<expr><name><name>pairs</name><index>[<expr><name>i</name></expr>]</index></name>.<name>length</name> != 2</expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr>"Error in test fixture in the data array at index " + <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></for>
    }</block></function>
}</block></class>
</unit>
