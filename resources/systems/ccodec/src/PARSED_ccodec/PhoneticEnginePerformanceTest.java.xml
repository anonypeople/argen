<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\David\IdeaProjects\arem\resources\systems\ccodec\src\test\java\org\apache\commons\codec\language\bm\PhoneticEnginePerformanceTest.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>codec</name>.<name>language</name>.<name>bm</name></name>;</package>

<import>import <name><name>org</name>.<name>junit</name>.<name>Test</name></name>;</import>

<comment type="javadoc">/**
 * Tests performance for {@link PhoneticEngine}.
 * &lt;p&gt;
 * See &lt;a href="https://issues.apache.org/jira/browse/CODEC-174"&gt;[CODEC-174] Improve performance of Beider Morse
 * encoder&lt;/a&gt;.
 * &lt;/p&gt;
 * &lt;p&gt;
 * Results for November 7, 2013, project SVN revision 1539678.
 * &lt;/p&gt;
 * &lt;p&gt;
 * Environment:
 * &lt;/p&gt;
 * &lt;ul&gt;
 * &lt;li&gt;java version "1.7.0_45"&lt;/li&gt;
 * &lt;li&gt;Java(TM) SE Runtime Environment (build 1.7.0_45-b18)&lt;/li&gt;
 * &lt;li&gt;Java HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mode)&lt;/li&gt;
 * &lt;li&gt;OS name: "windows 7", version: "6.1", arch: "amd64", family: "windows")&lt;/li&gt;
 * &lt;/ul&gt;
 * &lt;ol&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 33,039 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 32,297 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 32,857 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': &lt;b&gt;31,561 millis.&lt;/b&gt;&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 32,665 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 32,215 millis.&lt;/li&gt;
 * &lt;/ol&gt;
 * &lt;p&gt;
 * On this file's revision 1539678, with patch &lt;a
 * href="https://issues.apache.org/jira/secure/attachment/12611963/CODEC-174-change-rules-storage-to-Map.patch"
 * &gt;CODEC-174-change-rules-storage-to-Map&lt;/a&gt;:
 * &lt;/p&gt;
 * &lt;ol&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 18,196 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,858 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,644 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': &lt;b&gt;13,591 millis.&lt;/b&gt;&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,861 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,696 millis.&lt;/li&gt;
 * &lt;/ol&gt;
 * &lt;p&gt;
 * Patch applied, committed revision 1539783.
 * &lt;/p&gt;
 * &lt;p&gt;
 * On this file's revision 1539783, with patch &lt;a
 * href="https://issues.apache.org/jira/secure/attachment/12611962/CODEC-174-delete-subsequence-cache.patch"
 * &gt;CODEC-174-delete-subsequence-cache.patch&lt;/a&gt;:
 * &lt;/p&gt;
 * &lt;ol&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,547 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': &lt;b&gt;13,501 millis.&lt;/b&gt;&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,528 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 17,110 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,910 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 16,969 millis.&lt;/li&gt;
 * &lt;/ol&gt;
 * &lt;p&gt;
 * Patch not applied.
 * &lt;/p&gt;
 * &lt;p&gt;
 * On this file's revision 1539787, with patch &lt;a
 * href="https://issues.apache.org/jira/secure/attachment/12612178/CODEC-174-reuse-set-in-PhonemeBuilder.patch"
 * &gt;CODEC-174-reuse-set-in-PhonemeBuilder.patch&lt;/a&gt;:
 * &lt;/p&gt;
 * &lt;ol&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,724 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,451 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,742 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': &lt;b&gt;13,186 millis.&lt;/b&gt;&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,600 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 16,405 millis.&lt;/li&gt;
 * &lt;/ol&gt;
 * &lt;p&gt;
 * Patch applied, committed revision 1539788.
 * &lt;/p&gt;
 * &lt;p&gt;
 * Before patch https://issues.apache.org/jira/secure/attachment/12613371/CODEC-174-refactor-restrictTo-method-in-SomeLanguages.patch
 * &lt;/p&gt;
 * &lt;ol&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,133 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,064 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': &lt;b&gt;12,838 millis.&lt;/b&gt;&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 12,970 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,122 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 13,293 millis.&lt;/li&gt;
 * &lt;/ol&gt;
 * &lt;p&gt;
 * After patch https://issues.apache.org/jira/secure/attachment/12613371/CODEC-174-refactor-restrictTo-method-in-SomeLanguages.patch
 * &lt;/p&gt;
 * &lt;ol&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 11,576 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 11,506 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 11,361 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': &lt;b&gt;11,142 millis.&lt;/b&gt;&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 11,430 millis.&lt;/li&gt;
 * &lt;li&gt;Time for encoding 80,000 times the input 'Angelo': 11,297 millis.&lt;/li&gt;
 * &lt;/ol&gt;
 * &lt;p&gt;
 * Patch applied, committed revision 1541234.
 * &lt;/p&gt;
 */</comment>
<class><specifier>public</specifier> class <name>PhoneticEnginePerformanceTest</name> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>LOOP</name> =<init> <expr>80000</expr></init></decl>;</decl_stmt>

    <function><type><annotation>@<name>Test</name></annotation>
    <specifier>public</specifier> <name>void</name></type> <name>test</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><specifier>final</specifier> <name>PhoneticEngine</name></type> <name>engine</name> =<init> <expr>new <call><name>PhoneticEngine</name><argument_list>(<argument><expr><name><name>NameType</name>.<name>GENERIC</name></name></expr></argument>, <argument><expr><name><name>RuleType</name>.<name>APPROX</name></name></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>input</name> =<init> <expr>"Angelo"</expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>startMillis</name> =<init> <expr><call><name><name>System</name>.<name>currentTimeMillis</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for (<init><decl><type><name>int</name></type> <name>i</name> =<init> <expr>0</expr></init></decl>;</init> <condition><expr><name>i</name> &lt; <name>LOOP</name></expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
            <expr_stmt><expr><call><name><name>engine</name>.<name>encode</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
        <decl_stmt><decl><type><specifier>final</specifier> <name>long</name></type> <name>totalMillis</name> =<init> <expr><call><name><name>System</name>.<name>currentTimeMillis</name></name><argument_list>()</argument_list></call> - <name>startMillis</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>System</name>.<name>out</name>.<name>println</name></name><argument_list>(<argument><expr><call><name><name>String</name>.<name>format</name></name><argument_list>(<argument><expr>"Time for encoding %,d times the input '%s': %,d millis."</expr></argument>, <argument><expr><name>LOOP</name></expr></argument>, <argument><expr><name>input</name></expr></argument>,
                <argument><expr><name>totalMillis</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
}</block></class>
</unit>
