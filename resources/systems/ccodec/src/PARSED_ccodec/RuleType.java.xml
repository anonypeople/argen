<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\David\IdeaProjects\arem\resources\systems\ccodec\src\main\java\org\apache\commons\codec\language\bm\RuleType.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>codec</name>.<name>language</name>.<name>bm</name></name>;</package>

<comment type="javadoc">/**
 * Types of rule.
 *
 * @since 1.6
 * @version $Id: RuleType.java 1542813 2013-11-17 20:52:32Z tn $
 */</comment>
<enum><specifier>public</specifier> enum <name>RuleType</name> <block>{

    <comment type="javadoc">/** Approximate rules, which will lead to the largest number of phonetic interpretations. */</comment>
    <expr_stmt><expr><call><name>APPROX</name><argument_list>(<argument><expr>"approx"</expr></argument>)</argument_list></call></expr>,
    <comment type="javadoc">/** Exact rules, which will lead to a minimum number of phonetic interpretations. */</comment>
    <expr><call><name>EXACT</name><argument_list>(<argument><expr>"exact"</expr></argument>)</argument_list></call></expr>,
    <comment type="javadoc">/** For internal use only. Please use {@link #APPROX} or {@link #EXACT}. */</comment>
    <expr><call><name>RULES</name><argument_list>(<argument><expr>"rules"</expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>name</name></decl>;</decl_stmt>

    <constructor><name>RuleType</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>name</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>name</name></name> = <name>name</name></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Gets the rule name.
     *
     * @return the rule name.
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>name</name></name></expr>;</return>
    }</block></function>

}</block></enum>
</unit>
