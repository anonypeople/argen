<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\David\IdeaProjects\arem\resources\systems\ccodec\src\main\java\org\apache\commons\codec\binary\StringUtils.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>codec</name>.<name>binary</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>UnsupportedEncodingException</name></name>;</import>
<import>import <name><name>java</name>.<name>nio</name>.<name>charset</name>.<name>Charset</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>codec</name>.<name>CharEncoding</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>codec</name>.<name>Charsets</name></name>;</import>

<comment type="javadoc">/**
 * Converts String to and from bytes using the encodings required by the Java specification. These encodings are
 * specified in &lt;a href="http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html"&gt;
 * Standard charsets&lt;/a&gt;.
 *
 * &lt;p&gt;This class is immutable and thread-safe.&lt;/p&gt;
 *
 * @see CharEncoding
 * @see &lt;a href="http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html"&gt;Standard charsets&lt;/a&gt;
 * @version $Id: StringUtils.java 1435550 2013-01-19 14:09:52Z tn $
 * @since 1.4
 */</comment>
<class><specifier>public</specifier> class <name>StringUtils</name> <block>{

    <comment type="javadoc">/**
     * Calls {@link String#getBytes(Charset)}
     *
     * @param string
     *            The string to encode (if null, return null).
     * @param charset
     *            The {@link Charset} to encode the {@code String}
     * @return the encoded bytes
     */</comment>
    <function><type><specifier>private</specifier> <specifier>static</specifier> <name>byte</name><index>[]</index></type> <name>getBytes</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>string</name></decl></param>, <param><decl><type><specifier>final</specifier> <name>Charset</name></type> <name>charset</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>string</name> == <name>null</name></expr>)</condition><then> <block>{
            <return>return <expr><name>null</name></expr>;</return>
        }</block></then></if>
        <return>return <expr><call><name><name>string</name>.<name>getBytes</name></name><argument_list>(<argument><expr><name>charset</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Encodes the given string into a sequence of bytes using the ISO-8859-1 charset, storing the result into a new
     * byte array.
     *
     * @param string
     *            the String to encode, may be {@code null}
     * @return encoded bytes, or {@code null} if the input string was {@code null}
     * @throws NullPointerException
     *             Thrown if {@link Charsets#ISO_8859_1} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     * @see &lt;a href="http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html"&gt;Standard charsets&lt;/a&gt;
     * @see #getBytesUnchecked(String, String)
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>byte</name><index>[]</index></type> <name>getBytesIso8859_1</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>string</name></decl></param>)</parameter_list> <block>{
        <return>return <expr><call><name>getBytes</name><argument_list>(<argument><expr><name>string</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>ISO_8859_1</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>


    <comment type="javadoc">/**
     * Encodes the given string into a sequence of bytes using the named charset, storing the result into a new byte
     * array.
     * &lt;p&gt;
     * This method catches {@link UnsupportedEncodingException} and rethrows it as {@link IllegalStateException}, which
     * should never happen for a required charset name. Use this method when the encoding is required to be in the JRE.
     * &lt;/p&gt;
     *
     * @param string
     *            the String to encode, may be {@code null}
     * @param charsetName
     *            The name of a required {@link java.nio.charset.Charset}
     * @return encoded bytes, or {@code null} if the input string was {@code null}
     * @throws IllegalStateException
     *             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen for a
     *             required charset name.
     * @see CharEncoding
     * @see String#getBytes(String)
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>byte</name><index>[]</index></type> <name>getBytesUnchecked</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>string</name></decl></param>, <param><decl><type><specifier>final</specifier> <name>String</name></type> <name>charsetName</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>string</name> == <name>null</name></expr>)</condition><then> <block>{
            <return>return <expr><name>null</name></expr>;</return>
        }</block></then></if>
        <try>try <block>{
            <return>return <expr><call><name><name>string</name>.<name>getBytes</name></name><argument_list>(<argument><expr><name>charsetName</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block> <catch>catch (<param><decl><type><specifier>final</specifier> <name>UnsupportedEncodingException</name></type> <name>e</name></decl></param>) <block>{
            <throw>throw <expr><call><name><name>StringUtils</name>.<name>newIllegalStateException</name></name><argument_list>(<argument><expr><name>charsetName</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        }</block></catch></try>
    }</block></function>

    <comment type="javadoc">/**
     * Encodes the given string into a sequence of bytes using the US-ASCII charset, storing the result into a new byte
     * array.
     *
     * @param string
     *            the String to encode, may be {@code null}
     * @return encoded bytes, or {@code null} if the input string was {@code null}
     * @throws NullPointerException
     *             Thrown if {@link Charsets#US_ASCII} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     * @see &lt;a href="http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html"&gt;Standard charsets&lt;/a&gt;
     * @see #getBytesUnchecked(String, String)
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>byte</name><index>[]</index></type> <name>getBytesUsAscii</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>string</name></decl></param>)</parameter_list> <block>{
        <return>return <expr><call><name>getBytes</name><argument_list>(<argument><expr><name>string</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>US_ASCII</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Encodes the given string into a sequence of bytes using the UTF-16 charset, storing the result into a new byte
     * array.
     *
     * @param string
     *            the String to encode, may be {@code null}
     * @return encoded bytes, or {@code null} if the input string was {@code null}
     * @throws NullPointerException
     *             Thrown if {@link Charsets#UTF_16} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     * @see &lt;a href="http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html"&gt;Standard charsets&lt;/a&gt;
     * @see #getBytesUnchecked(String, String)
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>byte</name><index>[]</index></type> <name>getBytesUtf16</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>string</name></decl></param>)</parameter_list> <block>{
        <return>return <expr><call><name>getBytes</name><argument_list>(<argument><expr><name>string</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>UTF_16</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Encodes the given string into a sequence of bytes using the UTF-16BE charset, storing the result into a new byte
     * array.
     *
     * @param string
     *            the String to encode, may be {@code null}
     * @return encoded bytes, or {@code null} if the input string was {@code null}
     * @throws NullPointerException
     *             Thrown if {@link Charsets#UTF_16BE} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     * @see &lt;a href="http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html"&gt;Standard charsets&lt;/a&gt;
     * @see #getBytesUnchecked(String, String)
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>byte</name><index>[]</index></type> <name>getBytesUtf16Be</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>string</name></decl></param>)</parameter_list> <block>{
        <return>return <expr><call><name>getBytes</name><argument_list>(<argument><expr><name>string</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>UTF_16BE</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Encodes the given string into a sequence of bytes using the UTF-16LE charset, storing the result into a new byte
     * array.
     *
     * @param string
     *            the String to encode, may be {@code null}
     * @return encoded bytes, or {@code null} if the input string was {@code null}
     * @throws NullPointerException
     *             Thrown if {@link Charsets#UTF_16LE} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     * @see &lt;a href="http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html"&gt;Standard charsets&lt;/a&gt;
     * @see #getBytesUnchecked(String, String)
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>byte</name><index>[]</index></type> <name>getBytesUtf16Le</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>string</name></decl></param>)</parameter_list> <block>{
        <return>return <expr><call><name>getBytes</name><argument_list>(<argument><expr><name>string</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>UTF_16LE</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Encodes the given string into a sequence of bytes using the UTF-8 charset, storing the result into a new byte
     * array.
     *
     * @param string
     *            the String to encode, may be {@code null}
     * @return encoded bytes, or {@code null} if the input string was {@code null}
     * @throws NullPointerException
     *             Thrown if {@link Charsets#UTF_8} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     * @see &lt;a href="http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html"&gt;Standard charsets&lt;/a&gt;
     * @see #getBytesUnchecked(String, String)
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>byte</name><index>[]</index></type> <name>getBytesUtf8</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>string</name></decl></param>)</parameter_list> <block>{
        <return>return <expr><call><name>getBytes</name><argument_list>(<argument><expr><name>string</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>UTF_8</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier>private</specifier> <specifier>static</specifier> <name>IllegalStateException</name></type> <name>newIllegalStateException</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>charsetName</name></decl></param>,
                                                                  <param><decl><type><specifier>final</specifier> <name>UnsupportedEncodingException</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
        <return>return <expr>new <call><name>IllegalStateException</name><argument_list>(<argument><expr><name>charsetName</name> + ": " + <name>e</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Constructs a new &lt;code&gt;String&lt;/code&gt; by decoding the specified array of bytes using the given charset.
     *
     * @param bytes
     *            The bytes to be decoded into characters
     * @param charset
     *            The {@link Charset} to encode the {@code String}
     * @return A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the given charset,
     *         or {@code null} if the input byte array was {@code null}.
     * @throws NullPointerException
     *             Thrown if {@link Charsets#UTF_8} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     */</comment>
    <function><type><specifier>private</specifier> <specifier>static</specifier> <name>String</name></type> <name>newString</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>bytes</name></decl></param>, <param><decl><type><specifier>final</specifier> <name>Charset</name></type> <name>charset</name></decl></param>)</parameter_list> <block>{
        <return>return <expr><name>bytes</name> == <name>null</name> ? <name>null</name> : new <call><name>String</name><argument_list>(<argument><expr><name>bytes</name></expr></argument>, <argument><expr><name>charset</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Constructs a new &lt;code&gt;String&lt;/code&gt; by decoding the specified array of bytes using the given charset.
     * &lt;p&gt;
     * This method catches {@link UnsupportedEncodingException} and re-throws it as {@link IllegalStateException}, which
     * should never happen for a required charset name. Use this method when the encoding is required to be in the JRE.
     * &lt;/p&gt;
     *
     * @param bytes
     *            The bytes to be decoded into characters, may be {@code null}
     * @param charsetName
     *            The name of a required {@link java.nio.charset.Charset}
     * @return A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the given charset,
     *         or {@code null} if the input byte array was {@code null}.
     * @throws IllegalStateException
     *             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen for a
     *             required charset name.
     * @see CharEncoding
     * @see String#String(byte[], String)
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>newString</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>bytes</name></decl></param>, <param><decl><type><specifier>final</specifier> <name>String</name></type> <name>charsetName</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>bytes</name> == <name>null</name></expr>)</condition><then> <block>{
            <return>return <expr><name>null</name></expr>;</return>
        }</block></then></if>
        <try>try <block>{
            <return>return <expr>new <call><name>String</name><argument_list>(<argument><expr><name>bytes</name></expr></argument>, <argument><expr><name>charsetName</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block> <catch>catch (<param><decl><type><specifier>final</specifier> <name>UnsupportedEncodingException</name></type> <name>e</name></decl></param>) <block>{
            <throw>throw <expr><call><name><name>StringUtils</name>.<name>newIllegalStateException</name></name><argument_list>(<argument><expr><name>charsetName</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        }</block></catch></try>
    }</block></function>

    <comment type="javadoc">/**
     * Constructs a new &lt;code&gt;String&lt;/code&gt; by decoding the specified array of bytes using the ISO-8859-1 charset.
     *
     * @param bytes
     *            The bytes to be decoded into characters, may be {@code null}
     * @return A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the ISO-8859-1 charset, or
     *         {@code null} if the input byte array was {@code null}.
     * @throws NullPointerException
     *             Thrown if {@link Charsets#ISO_8859_1} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>newStringIso8859_1</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>bytes</name></decl></param>)</parameter_list> <block>{
        <return>return <expr>new <call><name>String</name><argument_list>(<argument><expr><name>bytes</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>ISO_8859_1</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Constructs a new &lt;code&gt;String&lt;/code&gt; by decoding the specified array of bytes using the US-ASCII charset.
     *
     * @param bytes
     *            The bytes to be decoded into characters
     * @return A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the US-ASCII charset,
     *         or {@code null} if the input byte array was {@code null}.
     * @throws NullPointerException
     *             Thrown if {@link Charsets#US_ASCII} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>newStringUsAscii</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>bytes</name></decl></param>)</parameter_list> <block>{
        <return>return <expr>new <call><name>String</name><argument_list>(<argument><expr><name>bytes</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>US_ASCII</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Constructs a new &lt;code&gt;String&lt;/code&gt; by decoding the specified array of bytes using the UTF-16 charset.
     *
     * @param bytes
     *            The bytes to be decoded into characters
     * @return A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the UTF-16 charset
     *         or {@code null} if the input byte array was {@code null}.
     * @throws NullPointerException
     *             Thrown if {@link Charsets#UTF_16} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>newStringUtf16</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>bytes</name></decl></param>)</parameter_list> <block>{
        <return>return <expr>new <call><name>String</name><argument_list>(<argument><expr><name>bytes</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>UTF_16</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Constructs a new &lt;code&gt;String&lt;/code&gt; by decoding the specified array of bytes using the UTF-16BE charset.
     *
     * @param bytes
     *            The bytes to be decoded into characters
     * @return A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the UTF-16BE charset,
     *         or {@code null} if the input byte array was {@code null}.
     * @throws NullPointerException
     *             Thrown if {@link Charsets#UTF_16BE} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>newStringUtf16Be</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>bytes</name></decl></param>)</parameter_list> <block>{
        <return>return <expr>new <call><name>String</name><argument_list>(<argument><expr><name>bytes</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>UTF_16BE</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Constructs a new &lt;code&gt;String&lt;/code&gt; by decoding the specified array of bytes using the UTF-16LE charset.
     *
     * @param bytes
     *            The bytes to be decoded into characters
     * @return A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the UTF-16LE charset,
     *         or {@code null} if the input byte array was {@code null}.
     * @throws NullPointerException
     *             Thrown if {@link Charsets#UTF_16LE} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>newStringUtf16Le</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>bytes</name></decl></param>)</parameter_list> <block>{
        <return>return <expr>new <call><name>String</name><argument_list>(<argument><expr><name>bytes</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>UTF_16LE</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Constructs a new &lt;code&gt;String&lt;/code&gt; by decoding the specified array of bytes using the UTF-8 charset.
     *
     * @param bytes
     *            The bytes to be decoded into characters
     * @return A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the UTF-8 charset,
     *         or {@code null} if the input byte array was {@code null}.
     * @throws NullPointerException
     *             Thrown if {@link Charsets#UTF_8} is not initialized, which should never happen since it is
     *             required by the Java platform specification.
     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
     */</comment>
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>String</name></type> <name>newStringUtf8</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name><name>byte</name><index>[]</index></name></type> <name>bytes</name></decl></param>)</parameter_list> <block>{
        <return>return <expr><call><name>newString</name><argument_list>(<argument><expr><name>bytes</name></expr></argument>, <argument><expr><name><name>Charsets</name>.<name>UTF_8</name></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

}</block></class>
</unit>
