<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\test\java\org\apache\commons\io\monitor\AbstractMonitorTestCase.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.
            <name>monitor</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>File</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>FileFilter</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>junit</name>.<name>framework</name>.
            <name>TestCase</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.
            <name>FileUtils</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.<name>filefilter</name>.
            <name>FileFilterUtils</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.<name>filefilter</name>.
            <name>HiddenFileFilter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.<name>filefilter</name>.
            <name>IOFileFilter</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * {@link FileAlterationObserver} Test Case.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>AbstractMonitorTestCase</name>
        <super>
            <extends>extends
                <name>TestCase</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/** File observer */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>FileAlterationObserver</name>
                    </type>
                    <name>observer</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Listener which collects file changes */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>CollectionFileListener</name>
                    </type>
                    <name>listener</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Test diretory name */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>testDirName</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Directory for test files */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>File</name>
                    </type>
                    <name>testDir</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Time in milliseconds to pause in tests */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>long</name>
                    </type>
                    <name>pauseTime</name> =
                    <init>
                        <expr>100L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Construct a new test case.
                *
                * @param name The name of the test
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>AbstractMonitorTestCase</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setUp</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>testDir</name>
                            = new
                            <call>
                                <name>File</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>File</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"."</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>testDirName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>testDir</name>.
                                        <name>exists</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>FileUtils</name>.
                                                <name>cleanDirectory</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>testDir</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>testDir</name>.
                                                <name>mkdir</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IOFileFilter</name>
                            </type>
                            <name>files</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>FileFilterUtils</name>.
                                            <name>fileFileFilter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IOFileFilter</name>
                            </type>
                            <name>javaSuffix</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>FileFilterUtils</name>.
                                            <name>suffixFileFilter</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>".java"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IOFileFilter</name>
                            </type>
                            <name>fileFilter</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>FileFilterUtils</name>.
                                            <name>and</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>files</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>javaSuffix</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IOFileFilter</name>
                            </type>
                            <name>directories</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>FileFilterUtils</name>.
                                            <name>directoryFileFilter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IOFileFilter</name>
                            </type>
                            <name>visible</name> =
                            <init>
                                <expr>
                                    <name><name>HiddenFileFilter</name>.
                                        <name>VISIBLE</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IOFileFilter</name>
                            </type>
                            <name>dirFilter</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>FileFilterUtils</name>.
                                            <name>and</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>directories</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>visible</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IOFileFilter</name>
                            </type>
                            <name>filter</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>FileFilterUtils</name>.
                                            <name>or</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>dirFilter</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fileFilter</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>createObserver</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>testDir</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>filter</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Create a {@link FileAlterationObserver}.
                *
                * @param file The directory to observe
                * @param fileFilter The file filter to apply
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>createObserver</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>file</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>FileFilter</name>
                            </type>
                            <name>fileFilter</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>observer</name>
                            = new
                            <call>
                                <name>FileAlterationObserver</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>file</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fileFilter</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>observer</name>.
                                    <name>addListener</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>listener</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>observer</name>.
                                    <name>addListener</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>FileAlterationListenerAdaptor</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>observer</name>.
                                            <name>initialize</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fail</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Observer init() threw " +
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>tearDown</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>FileUtils</name>.
                                    <name>deleteDirectory</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>testDir</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Check all the Collections are empty
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>checkCollectionsEmpty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>label</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkCollectionSizes</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"EMPTY-" +
                                            <name>label</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Check all the Collections have the expected sizes.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>checkCollectionSizes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>label</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dirCreate</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dirChange</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dirDelete</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fileCreate</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fileChange</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fileDelete</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>label</name>
                            = <name>label</name> + "[" +
                            <call>
                                <name><name>listener</name>.
                                    <name>getCreatedDirectories</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>size</name>
                                <argument_list>()</argument_list>
                            </call>
                            +
                            " " +
                            <call>
                                <name><name>listener</name>.
                                    <name>getChangedDirectories</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>size</name>
                                <argument_list>()</argument_list>
                            </call>
                            +
                            " " +
                            <call>
                                <name><name>listener</name>.
                                    <name>getDeletedDirectories</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>size</name>
                                <argument_list>()</argument_list>
                            </call>
                            +
                            " " +
                            <call>
                                <name><name>listener</name>.
                                    <name>getCreatedFiles</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>size</name>
                                <argument_list>()</argument_list>
                            </call>
                            +
                            " " +
                            <call>
                                <name><name>listener</name>.
                                    <name>getChangedFiles</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>size</name>
                                <argument_list>()</argument_list>
                            </call>
                            +
                            " " +
                            <call>
                                <name><name>listener</name>.
                                    <name>getDeletedFiles</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>size</name>
                                <argument_list>()</argument_list>
                            </call>
                            + "]"
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>label</name>
                                            + ": No. of directories created"
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>dirCreate</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>listener</name>.
                                                    <name>getCreatedDirectories</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>size</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>label</name>
                                            + ": No. of directories changed"
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>dirChange</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>listener</name>.
                                                    <name>getChangedDirectories</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>size</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>label</name>
                                            + ": No. of directories deleted"
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>dirDelete</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>listener</name>.
                                                    <name>getDeletedDirectories</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>size</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>label</name>
                                            + ": No. of files created"
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fileCreate</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>listener</name>.
                                                    <name>getCreatedFiles</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>size</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>label</name>
                                            + ": No. of files changed"
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fileChange</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>listener</name>.
                                                    <name>getChangedFiles</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>size</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>label</name>
                                            + ": No. of files deleted"
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fileDelete</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>listener</name>.
                                                    <name>getDeletedFiles</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>size</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Either creates a file if it doesn't exist or updates the last modified date/time
                * if it does.
                *
                * @param file The file to touch
                * @return The file
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>File</name>
                </type>
                <name>touch</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>file</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>lastModified</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>file</name>.
                                            <name>exists</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    ?
                                    <call>
                                        <name><name>file</name>.
                                            <name>lastModified</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    : 0
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>FileUtils</name>.
                                            <name>touch</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>file</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>file</name>
                                    = new
                                    <call>
                                        <name>File</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>file</name>.
                                                            <name>getParent</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>file</name>.
                                                            <name>getName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>lastModified</name>
                                        ==
                                        <call>
                                            <name><name>file</name>.
                                                <name>lastModified</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>sleepHandleInterruped</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>pauseTime</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>FileUtils</name>.
                                                    <name>touch</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>file</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>file</name>
                                            = new
                                            <call>
                                                <name>File</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>file</name>.
                                                                    <name>getParent</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>file</name>.
                                                                    <name>getName</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fail</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Touching " + <name>file</name> + ": " +
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>sleepHandleInterruped</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>pauseTime</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>file</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Thread.sleep(timeInMilliseconds) - ignore InterruptedException
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>sleepHandleInterruped</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>timeInMilliseconds</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>Thread</name>.
                                            <name>sleep</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>timeInMilliseconds</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch(
                            <param>
                                <decl>
                                    <type>
                                        <name>InterruptedException</name>
                                    </type>
                                    <name>ie</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// ignore</comment>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
