<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\main\java\org\apache\commons\io\input\ClosedInputStream.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.
            <name>input</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Closed input stream. This stream returns -1 to all attempts to read
        * something from the stream.
        * &lt;p&gt;
        * Typically uses of this class include testing for corner cases in methods
        * that accept input streams and acting as a sentinel value instead of a
        * &lt;code&gt;null&lt;/code&gt; input stream.
        *
        * @version $Id: ClosedInputStream.java 1304052 2012-03-22 20:55:29Z ggregory $
        * @since 1.4
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>ClosedInputStream</name>
        <super>
            <extends>extends
                <name>InputStream</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * A singleton.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>ClosedInputStream</name>
                    </type>
                    <name>CLOSED_INPUT_STREAM</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>ClosedInputStream</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Returns -1 to indicate that the stream is closed.
                *
                * @return always -1
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>read</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
