<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\test\java\org\apache\commons\io\CopyUtilsTest.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.
            <name>io</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ByteArrayInputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>OutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Reader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>StringWriter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Writer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Arrays</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.<name>output</name>.
            <name>ByteArrayOutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.<name>testtools</name>.
            <name>FileBasedTestCase</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.<name>testtools</name>.
            <name>YellOnCloseInputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.<name>testtools</name>.
            <name>YellOnFlushAndCloseOutputStream</name>
        </name>
        ;
    </import>

    @
    <expr_stmt>
        <expr>
            <call>
                <name>SuppressWarnings</name>
                <argument_list>(
                    <argument>
                        <expr>"deprecation"</expr>
                    </argument>
                    )
                </argument_list>
            </call>
            <comment type="line">// these are test cases for the deprecated CopyUtils</comment>

            <comment type="javadoc">/**
                * JUnit tests for CopyUtils.
                *
                * @version $Id: CopyUtilsTest.java 1302056 2012-03-18 03:03:38Z ggregory $
                * @see CopyUtils
                */
            </comment>
            public class <name>CopyUtilsTest</name> extends <name>FileBasedTestCase</name>
            <block>{

                <comment type="block">/*
                    * NOTE this is not particularly beautiful code. A better way to check for
                    * flush and close status would be to implement "trojan horse" wrapper
                    * implementations of the various stream classes, which set a flag when
                    * relevant methods are called. (JT)
                    */
                </comment>

                private static final
                <expr>
                    <name>int</name>
                    <name>FILE_SIZE</name> = 1024 * 4 + 1
                </expr>
                ;


                private
                <expr>
                    <name>
                        <name>byte</name>
                        <index>[]</index>
                    </name>
                    <name>inData</name> =
                    <call>
                        <name>generateTestData</name>
                        <argument_list>(
                            <argument>
                                <expr>
                                    <name>FILE_SIZE</name>
                                </expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                </expr>
                ;

                public
                <expr>
                    <call>
                        <name>CopyUtilsTest</name>
                        <argument_list>(
                            <argument>
                                <expr>
                                    <name>String</name>
                                    <name>testName</name>
                                </expr>
                            </argument>
                            )
                        </argument_list>
                    </call>
                    <block>{
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>testName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        }
                    </block>

                    <comment type="line">// ----------------------------------------------------------------</comment>
                    <comment type="line">// Setup</comment>
                    <comment type="line">// ----------------------------------------------------------------</comment>

                    @
                    <name>Override</name>
                    public <name>void</name>
                    <call>
                        <name>setUp</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        }
                    </block>

                    @
                    <name>Override</name>
                    public <name>void</name>
                    <call>
                        <name>tearDown</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        }
                    </block>

                    <comment type="line">// ----------------------------------------------------------------</comment>
                    <comment type="line">// Tests</comment>
                    <comment type="line">// ----------------------------------------------------------------</comment>

                    public <name>void</name>
                    <call>
                        <name>testCtor</name>
                        <argument_list>()</argument_list>
                    </call>
                    <block>{
                        <expr>new
                            <call>
                                <name>CopyUtils</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <comment type="line">// Nothing to assert, the constructor is public and does not blow up.
                        </comment>
                        }
                    </block>

                    public <name>void</name>
                    <call>
                        <name>testCopy_byteArrayToOutputStream</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        <expr>
                            <name>ByteArrayOutputStream</name>
                            <name>baout</name> = new
                            <call>
                                <name>ByteArrayOutputStream</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>OutputStream</name>
                            <name>out</name> = new
                            <call>
                                <name>YellOnFlushAndCloseOutputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baout</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <call>
                                <name><name>CopyUtils</name>.
                                    <name>copy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>inData</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>out</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Sizes differ"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>inData</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>baout</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Content differs"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Arrays</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>inData</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>baout</name>.
                                                                    <name>toByteArray</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        }
                    </block>

                    public <name>void</name>
                    <call>
                        <name>testCopy_byteArrayToWriter</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        <expr>
                            <name>ByteArrayOutputStream</name>
                            <name>baout</name> = new
                            <call>
                                <name>ByteArrayOutputStream</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>OutputStream</name>
                            <name>out</name> = new
                            <call>
                                <name>YellOnFlushAndCloseOutputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baout</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>Writer</name>
                            <name>writer</name> = new
                            <call>
                                <name><name>java</name>.<name>io</name>.
                                    <name>OutputStreamWriter</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>out</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <call>
                                <name><name>CopyUtils</name>.
                                    <name>copy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>inData</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>writer</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name><name>writer</name>.
                                    <name>flush</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Sizes differ"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>inData</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>baout</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Content differs"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Arrays</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>inData</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>baout</name>.
                                                                    <name>toByteArray</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        }
                    </block>

                    public <name>void</name>
                    <call>
                        <name>testCopy_byteArrayToWriterWithEncoding</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        <expr>
                            <name>String</name>
                            <name>inDataStr</name> = "data"
                        </expr>
                        ;
                        <expr>
                            <name>String</name>
                            <name>charsetName</name> = "UTF-8"
                        </expr>
                        ;
                        <expr>
                            <name>StringWriter</name>
                            <name>writer</name> = new
                            <call>
                                <name>StringWriter</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name><name>CopyUtils</name>.
                                    <name>copy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>inDataStr</name>.
                                                    <name>getBytes</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>charsetName</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>writer</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>charsetName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>inDataStr</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>writer</name>.
                                                    <name>toString</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        }
                    </block>

                    public <name>void</name>
                    <call>
                        <name>testCopy_inputStreamToOutputStream</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        <expr>
                            <name>InputStream</name>
                            <name>in</name> = new
                            <call>
                                <name>ByteArrayInputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>inData</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>in</name>
                            = new
                            <call>
                                <name>YellOnCloseInputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>in</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <name>ByteArrayOutputStream</name>
                            <name>baout</name> = new
                            <call>
                                <name>ByteArrayOutputStream</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>OutputStream</name>
                            <name>out</name> = new
                            <call>
                                <name>YellOnFlushAndCloseOutputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baout</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <name>int</name>
                            <name>count</name> =
                            <call>
                                <name><name>CopyUtils</name>.
                                    <name>copy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>in</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>out</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Not all bytes were read"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>in</name>.
                                                    <name>available</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Sizes differ"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>inData</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>baout</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Content differs"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Arrays</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>inData</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>baout</name>.
                                                                    <name>toByteArray</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>inData</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>count</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        }
                    </block>

                    public <name>void</name>
                    <call>
                        <name>testCopy_inputStreamToWriter</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        <expr>
                            <name>InputStream</name>
                            <name>in</name> = new
                            <call>
                                <name>ByteArrayInputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>inData</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>in</name>
                            = new
                            <call>
                                <name>YellOnCloseInputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>in</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <name>ByteArrayOutputStream</name>
                            <name>baout</name> = new
                            <call>
                                <name>ByteArrayOutputStream</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>OutputStream</name>
                            <name>out</name> = new
                            <call>
                                <name>YellOnFlushAndCloseOutputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baout</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>Writer</name>
                            <name>writer</name> = new
                            <call>
                                <name><name>java</name>.<name>io</name>.
                                    <name>OutputStreamWriter</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>out</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <call>
                                <name><name>CopyUtils</name>.
                                    <name>copy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>in</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>writer</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name><name>writer</name>.
                                    <name>flush</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Not all bytes were read"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>in</name>.
                                                    <name>available</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Sizes differ"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>inData</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>baout</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Content differs"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Arrays</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>inData</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>baout</name>.
                                                                    <name>toByteArray</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        }
                    </block>

                    public <name>void</name>
                    <call>
                        <name>testCopy_inputStreamToWriterWithEncoding</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        <expr>
                            <name>String</name>
                            <name>inDataStr</name> = "data"
                        </expr>
                        ;
                        <expr>
                            <name>String</name>
                            <name>charsetName</name> = "UTF-8"
                        </expr>
                        ;
                        <expr>
                            <name>StringWriter</name>
                            <name>writer</name> = new
                            <call>
                                <name>StringWriter</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name><name>CopyUtils</name>.
                                    <name>copy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>ByteArrayInputStream</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>inDataStr</name>.
                                                                    <name>getBytes</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>charsetName</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>writer</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>charsetName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>inDataStr</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>writer</name>.
                                                    <name>toString</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        }
                    </block>

                    public <name>void</name>
                    <call>
                        <name>testCopy_readerToOutputStream</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        <expr>
                            <name>InputStream</name>
                            <name>in</name> = new
                            <call>
                                <name>ByteArrayInputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>inData</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>in</name>
                            = new
                            <call>
                                <name>YellOnCloseInputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>in</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>Reader</name>
                            <name>reader</name> = new
                            <call>
                                <name><name>java</name>.<name>io</name>.
                                    <name>InputStreamReader</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>in</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <name>ByteArrayOutputStream</name>
                            <name>baout</name> = new
                            <call>
                                <name>ByteArrayOutputStream</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>OutputStream</name>
                            <name>out</name> = new
                            <call>
                                <name>YellOnFlushAndCloseOutputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baout</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <call>
                                <name><name>CopyUtils</name>.
                                    <name>copy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>reader</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>out</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <comment type="line">//Note: this method *does* flush. It is equivalent to:</comment>
                        <comment type="line">// OutputStreamWriter _out = new OutputStreamWriter(fout);</comment>
                        <comment type="line">// IOUtils.copy( fin, _out, 4096 ); // copy( Reader, Writer, int );
                        </comment>
                        <comment type="line">// _out.flush();</comment>
                        <comment type="line">// out = fout;</comment>

                        <comment type="line">// Note: rely on the method to flush</comment>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Sizes differ"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>inData</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>baout</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Content differs"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Arrays</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>inData</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>baout</name>.
                                                                    <name>toByteArray</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        }
                    </block>

                    public <name>void</name>
                    <call>
                        <name>testCopy_readerToWriter</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        <expr>
                            <name>InputStream</name>
                            <name>in</name> = new
                            <call>
                                <name>ByteArrayInputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>inData</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>in</name>
                            = new
                            <call>
                                <name>YellOnCloseInputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>in</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>Reader</name>
                            <name>reader</name> = new
                            <call>
                                <name><name>java</name>.<name>io</name>.
                                    <name>InputStreamReader</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>in</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <name>ByteArrayOutputStream</name>
                            <name>baout</name> = new
                            <call>
                                <name>ByteArrayOutputStream</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>OutputStream</name>
                            <name>out</name> = new
                            <call>
                                <name>YellOnFlushAndCloseOutputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baout</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>Writer</name>
                            <name>writer</name> = new
                            <call>
                                <name><name>java</name>.<name>io</name>.
                                    <name>OutputStreamWriter</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>out</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <name>int</name>
                            <name>count</name> =
                            <call>
                                <name><name>CopyUtils</name>.
                                    <name>copy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>reader</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>writer</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name><name>writer</name>.
                                    <name>flush</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"The number of characters returned by copy is wrong"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>inData</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>count</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Sizes differ"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>inData</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>baout</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Content differs"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Arrays</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>inData</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>baout</name>.
                                                                    <name>toByteArray</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        }
                    </block>

                    public <name>void</name>
                    <call>
                        <name>testCopy_stringToOutputStream</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        <expr>
                            <name>String</name>
                            <name>str</name> = new
                            <call>
                                <name>String</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>inData</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <name>ByteArrayOutputStream</name>
                            <name>baout</name> = new
                            <call>
                                <name>ByteArrayOutputStream</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>OutputStream</name>
                            <name>out</name> = new
                            <call>
                                <name>YellOnFlushAndCloseOutputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baout</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <call>
                                <name><name>CopyUtils</name>.
                                    <name>copy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>str</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>out</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <comment type="line">//Note: this method *does* flush. It is equivalent to:</comment>
                        <comment type="line">// OutputStreamWriter _out = new OutputStreamWriter(fout);</comment>
                        <comment type="line">// IOUtils.copy( str, _out, 4096 ); // copy( Reader, Writer, int );
                        </comment>
                        <comment type="line">// _out.flush();</comment>
                        <comment type="line">// out = fout;</comment>
                        <comment type="line">// note: we don't flush here; this IOUtils method does it for us</comment>

                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Sizes differ"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>inData</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>baout</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Content differs"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Arrays</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>inData</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>baout</name>.
                                                                    <name>toByteArray</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        }
                    </block>

                    public <name>void</name>
                    <call>
                        <name>testCopy_stringToWriter</name>
                        <argument_list>()</argument_list>
                    </call>
                    throws <name>Exception</name>
                    <block>{
                        <expr>
                            <name>String</name>
                            <name>str</name> = new
                            <call>
                                <name>String</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>inData</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <name>ByteArrayOutputStream</name>
                            <name>baout</name> = new
                            <call>
                                <name>ByteArrayOutputStream</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>OutputStream</name>
                            <name>out</name> = new
                            <call>
                                <name>YellOnFlushAndCloseOutputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baout</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <name>Writer</name>
                            <name>writer</name> = new
                            <call>
                                <name><name>java</name>.<name>io</name>.
                                    <name>OutputStreamWriter</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>out</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <call>
                                <name><name>CopyUtils</name>.
                                    <name>copy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>str</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>writer</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name><name>writer</name>.
                                    <name>flush</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;

                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Sizes differ"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>inData</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>baout</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Content differs"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Arrays</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>inData</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>baout</name>.
                                                                    <name>toByteArray</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                        }
                    </block>
                </expr>

                }
            </block>
        </expr>
    </expr_stmt>
    <comment type="line">// CopyUtilsTest</comment>
</unit>
