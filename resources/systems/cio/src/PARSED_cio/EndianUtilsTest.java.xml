<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\test\java\org\apache\commons\io\EndianUtilsTest.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.
            <name>io</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ByteArrayInputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ByteArrayOutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>EOFException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>junit</name>.<name>framework</name>.
            <name>TestCase</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * @version $Id: EndianUtilsTest.java 1302056 2012-03-18 03:03:38Z ggregory $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>EndianUtilsTest</name>
        <super>
            <extends>extends
                <name>TestCase</name>
            </extends>
        </super>
        <block>{

            <constructor>
                <specifier>public</specifier>
                <name>EndianUtilsTest</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testCtor</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>EndianUtils</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// Constructor does not blow up.</comment>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testEOFException</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayInputStream</name>
                            </type>
                            <name>input</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>byte</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{}</block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>EndianUtils</name>.
                                            <name>readSwappedDouble</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>input</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>fail</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Expected EOFException"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>EOFException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// expected</comment>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testSwapShort</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>short</name>) 0
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapShort</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>short</name>) 0
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>short</name>) 0x0201
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapShort</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>short</name>) 0x0102
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>short</name>) 0xffff
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapShort</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>short</name>) 0xffff
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>short</name>) 0x0102
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapShort</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>short</name>) 0x0201
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testSwapInteger</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x04030201</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0x01020304</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01000000</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0x00000001</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x00000001</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0x01000000</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x11111111</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0x11111111</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0xabcdef10</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0x10efcdab</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0xab</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0xab000000</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testSwapLong</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapLong</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x0807060504030201L</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapLong</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0x0102030405060708L</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0xffffffffffffffffL</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapLong</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0xffffffffffffffffL</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0xab</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapLong</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0xab00000000000000L</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testSwapFloat</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0.0f</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapFloat</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0.0f</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>f1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Float</name>.
                                            <name>intBitsToFloat</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0x01020304</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>f2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Float</name>.
                                            <name>intBitsToFloat</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0x04030201</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapFloat</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>f1</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testSwapDouble</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapDouble</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0.0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>d1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Double</name>.
                                            <name>longBitsToDouble</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0x0102030405060708L</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>d2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Double</name>.
                                            <name>longBitsToDouble</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0x0807060504030201L</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapDouble</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>d1</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests all swapXxxx methods for symmetry when going from one endian
                * to another and back again.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testSymmetry</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>short</name>) 0x0102
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapShort</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>EndianUtils</name>.
                                                                    <name>swapShort</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>short</name>) 0x0102
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01020304</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>EndianUtils</name>.
                                                                    <name>swapInteger</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>0x01020304</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x0102030405060708L</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapLong</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>EndianUtils</name>.
                                                                    <name>swapLong</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>0x0102030405060708L</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>f1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Float</name>.
                                            <name>intBitsToFloat</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0x01020304</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapFloat</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>EndianUtils</name>.
                                                                    <name>swapFloat</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>f1</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>d1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Double</name>.
                                            <name>longBitsToDouble</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0x0102030405060708L</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>swapDouble</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>EndianUtils</name>.
                                                                    <name>swapDouble</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>d1</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testReadSwappedShort</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </name>
                                    <block>{ <expr>0x02</expr>, <expr>0x01</expr> }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x0102</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedShort</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>bytes</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayInputStream</name>
                            </type>
                            <name>input</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bytes</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x0102</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedShort</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>input</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testWriteSwappedShort</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>EndianUtils</name>.
                                    <name>writeSwappedShort</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bytes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>short</name>) 0x0102
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x02</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayOutputStream</name>
                            </type>
                            <name>baos</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayOutputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>2</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>EndianUtils</name>.
                                    <name>writeSwappedShort</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baos</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>short</name>) 0x0102
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>bytes</name>
                            =
                            <call>
                                <name><name>baos</name>.
                                    <name>toByteArray</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x02</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testReadSwappedUnsignedShort</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </name>
                                    <block>{ <expr>0x02</expr>, <expr>0x01</expr> }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x00000102</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedUnsignedShort</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>bytes</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayInputStream</name>
                            </type>
                            <name>input</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bytes</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x00000102</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedUnsignedShort</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>input</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testReadSwappedInteger</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </name>
                                    <block>{ <expr>0x04</expr>, <expr>0x03</expr>, <expr>0x02</expr>, <expr>0x01</expr> }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01020304</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>bytes</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayInputStream</name>
                            </type>
                            <name>input</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bytes</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01020304</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>input</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testWriteSwappedInteger</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[<expr>4</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>EndianUtils</name>.
                                    <name>writeSwappedInteger</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bytes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0x01020304</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x04</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x03</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x02</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>3</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayOutputStream</name>
                            </type>
                            <name>baos</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayOutputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>4</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>EndianUtils</name>.
                                    <name>writeSwappedInteger</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baos</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0x01020304</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>bytes</name>
                            =
                            <call>
                                <name><name>baos</name>.
                                    <name>toByteArray</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x04</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x03</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x02</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>3</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testReadSwappedUnsignedInteger</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </name>
                                    <block>{ <expr>0x04</expr>, <expr>0x03</expr>, <expr>0x02</expr>, <expr>0x01</expr> }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x0000000001020304L</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedUnsignedInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>bytes</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayInputStream</name>
                            </type>
                            <name>input</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bytes</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x0000000001020304L</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedUnsignedInteger</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>input</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testReadSwappedLong</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </name>
                                    <block>{ <expr>0x08</expr>, <expr>0x07</expr>, <expr>0x06</expr>, <expr>0x05</expr>, <expr>
                                        0x04</expr>, <expr>0x03</expr>, <expr>0x02</expr>, <expr>0x01</expr> }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x0102030405060708L</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedLong</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>bytes</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayInputStream</name>
                            </type>
                            <name>input</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bytes</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x0102030405060708L</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedLong</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>input</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testWriteSwappedLong</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[<expr>8</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>EndianUtils</name>.
                                    <name>writeSwappedLong</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bytes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0x0102030405060708L</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x08</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x07</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x06</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x05</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>3</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x04</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>4</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x03</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>5</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x02</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>6</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>7</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayOutputStream</name>
                            </type>
                            <name>baos</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayOutputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>8</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>EndianUtils</name>.
                                    <name>writeSwappedLong</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baos</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0x0102030405060708L</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>bytes</name>
                            =
                            <call>
                                <name><name>baos</name>.
                                    <name>toByteArray</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x08</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x07</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x06</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x05</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>3</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x04</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>4</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x03</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>5</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x02</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>6</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>7</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testReadSwappedFloat</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </name>
                                    <block>{ <expr>0x04</expr>, <expr>0x03</expr>, <expr>0x02</expr>, <expr>0x01</expr> }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>f1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Float</name>.
                                            <name>intBitsToFloat</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0x01020304</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>f2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>EndianUtils</name>.
                                            <name>readSwappedFloat</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bytes</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>f2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayInputStream</name>
                            </type>
                            <name>input</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bytes</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedFloat</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>input</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testWriteSwappedFloat</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[<expr>4</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>f1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Float</name>.
                                            <name>intBitsToFloat</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0x01020304</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>EndianUtils</name>.
                                    <name>writeSwappedFloat</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bytes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>f1</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x04</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x03</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x02</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>3</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayOutputStream</name>
                            </type>
                            <name>baos</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayOutputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>4</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>EndianUtils</name>.
                                    <name>writeSwappedFloat</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baos</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>f1</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>bytes</name>
                            =
                            <call>
                                <name><name>baos</name>.
                                    <name>toByteArray</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x04</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x03</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x02</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>3</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testReadSwappedDouble</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </name>
                                    <block>{ <expr>0x08</expr>, <expr>0x07</expr>, <expr>0x06</expr>, <expr>0x05</expr>, <expr>
                                        0x04</expr>, <expr>0x03</expr>, <expr>0x02</expr>, <expr>0x01</expr> }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>d1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Double</name>.
                                            <name>longBitsToDouble</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0x0102030405060708L</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>d2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>EndianUtils</name>.
                                            <name>readSwappedDouble</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bytes</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>d2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayInputStream</name>
                            </type>
                            <name>input</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bytes</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedDouble</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>input</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testWriteSwappedDouble</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bytes</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[<expr>8</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>d1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Double</name>.
                                            <name>longBitsToDouble</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0x0102030405060708L</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>EndianUtils</name>.
                                    <name>writeSwappedDouble</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bytes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>d1</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x08</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x07</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x06</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x05</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>3</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x04</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>4</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x03</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>5</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x02</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>6</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>7</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayOutputStream</name>
                            </type>
                            <name>baos</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayOutputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>8</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>EndianUtils</name>.
                                    <name>writeSwappedDouble</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baos</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>d1</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>bytes</name>
                            =
                            <call>
                                <name><name>baos</name>.
                                    <name>toByteArray</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x08</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x07</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x06</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x05</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>3</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x04</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>4</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x03</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>5</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x02</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>6</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0x01</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bytes</name>
                                                <index>[<expr>7</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// tests #IO-101</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testSymmetryOfLong</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                                <index>[]</index>
                            </type>
                            <name>tests</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>double</name>
                                        <index>[]</index>
                                    </name>
                                    <block>{<expr>34.345</expr>, <expr>-345.5645</expr>, <expr>545.12</expr>, <expr>
                                        10.043</expr>, <expr>7.123456789123</expr>}
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>double</name>
                                </type>
                                <name>test</name> :
                                <range>
                                    <expr>
                                        <name>tests</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{

                            <comment type="line">// testing the real problem</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </type>
                                    <name>buffer</name> =
                                    <init>
                                        <expr>new
                                            <name>
                                                <name>byte</name>
                                                <index>[<expr>8</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>ln1</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Double</name>.
                                                    <name>doubleToLongBits</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>test</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>EndianUtils</name>.
                                            <name>writeSwappedLong</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>buffer</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>ln1</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>ln2</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedLong</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>buffer</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>assertEquals</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ln1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>ln2</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// testing the bug report</comment>
                            <expr_stmt>
                                <expr>
                                    <name>buffer</name>
                                    = new
                                    <name>
                                        <name>byte</name>
                                        <index>[<expr>8</expr>]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>EndianUtils</name>.
                                            <name>writeSwappedDouble</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>buffer</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>test</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>val</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>EndianUtils</name>.
                                                    <name>readSwappedDouble</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>buffer</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>assertEquals</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>test</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>val</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="line">// tests #IO-117</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testUnsignedOverrun</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>target</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </name>
                                    <block>{ <expr>0</expr>, <expr>0</expr>, <expr>0</expr>,
                                        <expr>(<name>byte</name>)0x80
                                        </expr>
                                        }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>expected</name> =
                            <init>
                                <expr>0x80000000L</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>actual</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>EndianUtils</name>.
                                            <name>readSwappedUnsignedInteger</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>target</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"readSwappedUnsignedInteger(byte[], int) was incorrect"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>expected</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>actual</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayInputStream</name>
                            </type>
                            <name>in</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>target</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>actual</name>
                            =
                            <call>
                                <name><name>EndianUtils</name>.
                                    <name>readSwappedUnsignedInteger</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>in</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"readSwappedUnsignedInteger(InputStream) was incorrect"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>expected</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>actual</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
