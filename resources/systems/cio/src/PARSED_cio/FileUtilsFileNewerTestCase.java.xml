<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\test\java\org\apache\commons\io\FileUtilsFileNewerTestCase.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.
            <name>io</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>File</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Date</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.<name>testtools</name>.
            <name>FileBasedTestCase</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This is used to test FileUtils for correctness.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>FileUtilsFileNewerTestCase</name>
        <super>
            <extends>extends
                <name>FileBasedTestCase</name>
            </extends>
        </super>
        <block>{

            <comment type="line">// Test data</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>FILE1_SIZE</name> =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>FILE2_SIZE</name> =
                    <init>
                        <expr>1024 * 4 + 1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>File</name>
                    </type>
                    <name>m_testFile1</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>File</name>
                    </type>
                    <name>m_testFile2</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>FileUtilsFileNewerTestCase</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>m_testFile1</name>
                            = new
                            <call>
                                <name>File</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getTestDirectory</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"file1-test.txt"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>m_testFile2</name>
                            = new
                            <call>
                                <name>File</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getTestDirectory</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"file2-test.txt"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/** @see junit.framework.TestCase#setUp() */</comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setUp</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getTestDirectory</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>mkdirs</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>createFile</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>m_testFile1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>FILE1_SIZE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>createFile</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>m_testFile2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>FILE2_SIZE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/** @see junit.framework.TestCase#tearDown() */</comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>tearDown</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>m_testFile1</name>.
                                    <name>delete</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>m_testFile2</name>.
                                    <name>delete</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests the &lt;code&gt;isFileNewer(File, *)&lt;/code&gt; methods which a "normal" file.
                *
                * @see FileUtils#isFileNewer(File, long)
                * @see FileUtils#isFileNewer(File, Date)
                * @see FileUtils#isFileNewer(File, File)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testIsFileNewer</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>m_testFile1</name>.
                                        <name>exists</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>IllegalStateException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"The m_testFile1 should exist"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>fileLastModified</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>m_testFile1</name>.
                                            <name>lastModified</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>long</name>
                            </type>
                            <name>TWO_SECOND</name> =
                            <init>
                                <expr>2000</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>testIsFileNewer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"two second earlier is not newer"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>m_testFile1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fileLastModified</name>
                                            +
                                            <name>TWO_SECOND</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>testIsFileNewer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"same time is not newer"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>m_testFile1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fileLastModified</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>testIsFileNewer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"two second later is newer"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>m_testFile1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fileLastModified</name>
                                            -
                                            <name>TWO_SECOND</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests the &lt;code&gt;isFileNewer(File, *)&lt;/code&gt; methods which a not existing file.
                *
                * @see FileUtils#isFileNewer(File, long)
                * @see FileUtils#isFileNewer(File, Date)
                * @see FileUtils#isFileNewer(File, File)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testIsFileNewerImaginaryFile</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>imaginaryFile</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>File</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getTestDirectory</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"imaginaryFile"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>imaginaryFile</name>.
                                        <name>exists</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>IllegalStateException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"The imaginary File exists"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>testIsFileNewer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"imaginary file can be newer"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>imaginaryFile</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>m_testFile2</name>.
                                                    <name>lastModified</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests the &lt;code&gt;isFileNewer(File, *)&lt;/code&gt; methods which the specified conditions.
                * &lt;p/&gt;
                * Creates :
                * &lt;ul&gt;
                * &lt;li&gt;a &lt;code&gt;Date&lt;/code&gt; which represents the time reference&lt;/li&gt;
                * &lt;li&gt;a temporary file with the same last modification date than the time reference&lt;/li&gt;
                * &lt;/ul&gt;
                * Then compares (with the needed &lt;code&gt;isFileNewer&lt;/code&gt; method) the last modification date
                of
                * the specified file with the specified time reference, the created &lt;code&gt;Date&lt;/code&gt; and
                the temporary
                * file.
                * &lt;br/&gt;
                * The test is successfull if the three comparaisons return the specified wanted result.
                *
                * @param description describes the tested situation
                * @param file the file of which the last modification date is compared
                * @param time the time reference measured in milliseconds since the epoch
                *
                * @see FileUtils#isFileNewer(File, long)
                * @see FileUtils#isFileNewer(File, Date)
                * @see FileUtils#isFileNewer(File, File)
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>testIsFileNewer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>description</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>file</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>time</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>wantedResult</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>description</name>
                                            + " - time"
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>wantedResult</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>FileUtils</name>.
                                                    <name>isFileNewer</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>file</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>time</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>description</name>
                                            + " - date"
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>wantedResult</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>FileUtils</name>.
                                                    <name>isFileNewer</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>file</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>new
                                                            <call>
                                                                <name>Date</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>time</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>temporaryFile</name> =
                            <init>
                                <expr>
                                    <name>m_testFile2</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>temporaryFile</name>.
                                    <name>setLastModified</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>time</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"The temporary file hasn't the right last modification date"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>time</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>temporaryFile</name>.
                                                    <name>lastModified</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>description</name>
                                            + " - file"
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>wantedResult</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>FileUtils</name>.
                                                    <name>isFileNewer</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>file</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>temporaryFile</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests the &lt;code&gt;isFileNewer(File, long)&lt;/code&gt; method without specifying a &lt;code&gt;File&lt;/code&gt;.
                * &lt;br/&gt;
                * The test is successfull if the method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testIsFileNewerNoFile</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>FileUtils</name>.
                                            <name>isFileNewer</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>fail</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"File not specified"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IllegalArgumentException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{}</block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests the &lt;code&gt;isFileNewer(File, Date)&lt;/code&gt; method without specifying a &lt;code&gt;Date&lt;/code&gt;.
                * &lt;br/&gt;
                * The test is successfull if the method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testIsFileNewerNoDate</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>FileUtils</name>.
                                            <name>isFileNewer</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>m_testFile1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>Date</name>)
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>fail</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Date not specified"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IllegalArgumentException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{}</block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests the &lt;code&gt;isFileNewer(File, File)&lt;/code&gt; method without specifying a reference &lt;code&gt;File&lt;/code&gt;.
                * &lt;br/&gt;
                * The test is successfull if the method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testIsFileNewerNoFileReference</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>FileUtils</name>.
                                            <name>isFileNewer</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>m_testFile1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>File</name>)
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>fail</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Reference file not specified"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IllegalArgumentException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{}</block>
                        </catch>
                    </try>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
