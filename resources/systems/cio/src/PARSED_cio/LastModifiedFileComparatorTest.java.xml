<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\test\java\org\apache\commons\io\comparator\LastModifiedFileComparatorTest.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.
            <name>comparator</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>File</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Test case for {@link LastModifiedFileComparator}.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>LastModifiedFileComparatorTest</name>
        <super>
            <extends>extends
                <name>ComparatorAbstractTestCase</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Construct a new test case with the specified name.
                *
                * @param name Name of the test
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>LastModifiedFileComparatorTest</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/** @see junit.framework.TestCase#setUp() */</comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setUp</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>setUp</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>comparator</name>
                            = (<name>AbstractFileComparator</name>)
                            <name><name>LastModifiedFileComparator</name>.
                                <name>LASTMODIFIED_COMPARATOR</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>reverse</name>
                            =
                            <name><name>LastModifiedFileComparator</name>.
                                <name>LASTMODIFIED_REVERSE</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>dir</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getTestDirectory</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>olderFile</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>File</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>dir</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"older.txt"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>createFile</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>olderFile</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>equalFile</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>File</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>dir</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"equal.txt"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>createFile</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>equalFile</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <do>do
                        <block>{
                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>Thread</name>.
                                                    <name>sleep</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>300</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <catch>catch(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>InterruptedException</name>
                                            </type>
                                            <name>ie</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <comment type="line">// ignore</comment>
                                        }
                                    </block>
                                </catch>
                            </try>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>equalFile</name>.
                                            <name>setLastModified</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.
                                                            <name>currentTimeMillis</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>olderFile</name>.
                                        <name>lastModified</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <call>
                                    <name><name>equalFile</name>.
                                        <name>lastModified</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        ;
                    </do>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>newerFile</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>File</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>dir</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"newer.txt"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>createFile</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>newerFile</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <do>do
                        <block>{
                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>Thread</name>.
                                                    <name>sleep</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>300</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <catch>catch(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>InterruptedException</name>
                                            </type>
                                            <name>ie</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <comment type="line">// ignore</comment>
                                        }
                                    </block>
                                </catch>
                            </try>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>newerFile</name>.
                                            <name>setLastModified</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.
                                                            <name>currentTimeMillis</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>equalFile</name>.
                                        <name>lastModified</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <call>
                                    <name><name>newerFile</name>.
                                        <name>lastModified</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        ;
                    </do>
                    <expr_stmt>
                        <expr>
                            <name>equalFile1</name>
                            =
                            <name>equalFile</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>equalFile2</name>
                            =
                            <name>equalFile</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>lessFile</name>
                            =
                            <name>olderFile</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>moreFile</name>
                            =
                            <name>newerFile</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
