<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\main\java\org\apache\commons\io\output\NullWriter.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.
            <name>output</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Writer</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This {@link Writer} writes all data to the famous &lt;b&gt;/dev/null&lt;/b&gt;.
        * &lt;p&gt;
        * This &lt;code&gt;Writer&lt;/code&gt; has no destination (file/socket etc.) and all
        * characters written to it are ignored and lost.
        *
        * @version $Id: NullWriter.java 1304052 2012-03-22 20:55:29Z ggregory $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>NullWriter</name>
        <super>
            <extends>extends
                <name>Writer</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * A singleton.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>NullWriter</name>
                    </type>
                    <name>NULL_WRITER</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>NullWriter</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Constructs a new NullWriter.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>NullWriter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Does nothing - output to &lt;code&gt;/dev/null&lt;/code&gt;.
                * @param c The character to write
                * @return this writer
                * @since 2.0
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>Writer</name>
                </type>
                <name>append</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//to /dev/null</comment>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Does nothing - output to &lt;code&gt;/dev/null&lt;/code&gt;.
                * @param csq The character sequence to write
                * @param start The index of the first character to write
                * @param end The index of the first character to write (exclusive)
                * @return this writer
                * @since 2.0
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>Writer</name>
                </type>
                <name>append</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CharSequence</name>
                            </type>
                            <name>csq</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//to /dev/null</comment>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Does nothing - output to &lt;code&gt;/dev/null&lt;/code&gt;.
                * @param csq The character sequence to write
                * @return this writer
                * @since 2.0
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>Writer</name>
                </type>
                <name>append</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CharSequence</name>
                            </type>
                            <name>csq</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//to /dev/null</comment>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Does nothing - output to &lt;code&gt;/dev/null&lt;/code&gt;.
                * @param idx The character to write
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>write</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>idx</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//to /dev/null</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Does nothing - output to &lt;code&gt;/dev/null&lt;/code&gt;.
                * @param chr The characters to write
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>write</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>char</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>chr</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//to /dev/null</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Does nothing - output to &lt;code&gt;/dev/null&lt;/code&gt;.
                * @param chr The characters to write
                * @param st The start offset
                * @param end The number of characters to write
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>write</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>char</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>chr</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>st</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//to /dev/null</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Does nothing - output to &lt;code&gt;/dev/null&lt;/code&gt;.
                * @param str The string to write
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>write</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//to /dev/null</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Does nothing - output to &lt;code&gt;/dev/null&lt;/code&gt;.
                * @param str The string to write
                * @param st The start offset
                * @param end The number of characters to write
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>write</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>st</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//to /dev/null</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/** @see java.io.Writer#flush() */</comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>flush</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">//to /dev/null</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/** @see java.io.Writer#close() */</comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>close</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">//to /dev/null</comment>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
