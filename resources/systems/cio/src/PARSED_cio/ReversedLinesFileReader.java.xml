<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\main\java\org\apache\commons\io\input\ReversedLinesFileReader.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.
            <name>input</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Closeable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>File</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>RandomAccessFile</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>UnsupportedEncodingException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>nio</name>.<name>charset</name>.
            <name>Charset</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>nio</name>.<name>charset</name>.
            <name>CharsetEncoder</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Reads lines in a file reversely (similar to a BufferedReader, but starting at
        * the last line). Useful for e.g. searching in log files.
        *
        * @since 2.2
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>ReversedLinesFileReader</name>
        <super>
            <implements>implements
                <name>Closeable</name>
            </implements>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>blockSize</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>encoding</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>RandomAccessFile</name>
                    </type>
                    <name>randomAccessFile</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>totalByteLength</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>totalBlockCount</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>byte</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>newLineSequences</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>avoidNewlineSplitBufferSize</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>byteDecrement</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>FilePart</name>
                    </type>
                    <name>currentFilePart</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>trailingNewlineOfFileSkipped</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a ReversedLinesFileReader with default block size of 4KB and the
                * platform's default encoding.
                *
                * @param file
                * the file to be read
                * @throws IOException if an I/O error occurs
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>ReversedLinesFileReader</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>File</name>
                            </type>
                            <name>file</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>file</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>4096</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Charset</name>.
                                                    <name>defaultCharset</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>toString</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a ReversedLinesFileReader with the given block size and encoding.
                *
                * @param file
                * the file to be read
                * @param blockSize
                * size of the internal buffer (for ideal performance this should
                * match with the block size of the underlying file system).
                * @param encoding
                * the encoding of the file
                * @throws IOException if an I/O error occurs
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>ReversedLinesFileReader</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>File</name>
                            </type>
                            <name>file</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>blockSize</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>blockSize</name>
                            </name>
                            =
                            <name>blockSize</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>encoding</name>
                            </name>
                            =
                            <name>encoding</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>randomAccessFile</name>
                            = new
                            <call>
                                <name>RandomAccessFile</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>file</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"r"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>totalByteLength</name>
                            =
                            <call>
                                <name><name>randomAccessFile</name>.
                                    <name>length</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>lastBlockLength</name> =
                            <init>
                                <expr>
                                    <call>(<name>int</name>)
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>totalByteLength</name>
                                                    %
                                                    <name>blockSize</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>lastBlockLength</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>totalBlockCount</name>
                                        = <name>totalByteLength</name> / <name>blockSize</name> + 1
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>totalBlockCount</name>
                                        = <name>totalByteLength</name> /
                                        <name>blockSize</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>totalByteLength</name>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>lastBlockLength</name>
                                                    =
                                                    <name>blockSize</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>currentFilePart</name>
                            = new
                            <call>
                                <name>FilePart</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>totalBlockCount</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>lastBlockLength</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// --- check &amp; prepare encoding ---</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Charset</name>
                            </type>
                            <name>charset</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Charset</name>.
                                            <name>forName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CharsetEncoder</name>
                            </type>
                            <name>charsetEncoder</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>charset</name>.
                                            <name>newEncoder</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>maxBytesPerChar</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>charsetEncoder</name>.
                                            <name>maxBytesPerChar</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr><name>maxBytesPerChar</name>==1f
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// all one byte encodings are no problem</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>byteDecrement</name>
                                        = 1
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>charset</name>
                                        ==
                                        <call>
                                            <name><name>Charset</name>.
                                                <name>forName</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"UTF-8"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// UTF-8 works fine out of the box, for multibyte sequences
                                            a second UTF-8 byte can never be a newline byte
                                        </comment>
                                        <comment type="line">// http://en.wikipedia.org/wiki/UTF-8</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>byteDecrement</name>
                                                = 1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>charset</name>
                                                ==
                                                <call>
                                                    <name><name>Charset</name>.
                                                        <name>forName</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Shift_JIS"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// Same as for UTF-8</comment>
                                                <comment type="line">//
                                                    http://www.herongyang.com/Unicode/JIS-Shift-JIS-Encoding.html
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>byteDecrement</name>
                                                        = 1
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>charset</name>
                                                        ==
                                                        <call>
                                                            <name><name>Charset</name>.
                                                                <name>forName</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"UTF-16BE"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        || <name>charset</name> ==
                                                        <call>
                                                            <name><name>Charset</name>.
                                                                <name>forName</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"UTF-16LE"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// UTF-16 new line sequences are not
                                                            allowed as second tuple of four byte sequences,
                                                        </comment>
                                                        <comment type="line">// however byte order has to be specified
                                                        </comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>byteDecrement</name>
                                                                = 2
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>charset</name>
                                                                ==
                                                                <call>
                                                                    <name><name>Charset</name>.
                                                                        <name>forName</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"UTF-16"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <throw>throw
                                                                    <expr>new
                                                                        <call>
                                                                            <name>UnsupportedEncodingException</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"For UTF-16, you need to
                                                                                        specify the byte order (use
                                                                                        UTF-16BE or UTF-16LE)"
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </throw>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <throw>throw
                                                                    <expr>new
                                                                        <call>
                                                                            <name>UnsupportedEncodingException</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"Encoding "+<name>
                                                                                        encoding</name>+" is not
                                                                                        supported yet (feel free to
                                                                                        submit a patch)"
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </throw>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <comment type="line">// NOTE: The new line sequences are matched in the order given, so it is
                        important that \r\n is BEFORE \n
                    </comment>
                    <expr_stmt>
                        <expr>
                            <name>newLineSequences</name>
                            = new
                            <name>
                                <name>byte</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            <block>{
                                <expr>"\r\n".
                                    <call>
                                        <name>getBytes</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>"\n".
                                    <call>
                                        <name>getBytes</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>"\r".
                                    <call>
                                        <name>getBytes</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                }
                            </block>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>avoidNewlineSplitBufferSize</name>
                            =
                            <name>
                                <name>newLineSequences</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            .
                            <name>length</name>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the lines of the file from bottom to top.
                *
                * @return the next line or null if the start of the file is reached
                * @throws IOException if an I/O error occurs
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>readLine</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>line</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>currentFilePart</name>.
                                            <name>readLine</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>line</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>currentFilePart</name>
                                    =
                                    <call>
                                        <name><name>currentFilePart</name>.
                                            <name>rollOver</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>currentFilePart</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>line</name>
                                                =
                                                <call>
                                                    <name><name>currentFilePart</name>.
                                                        <name>readLine</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// no more fileparts: we're done, leave line set to null
                                        </comment>
                                        <break>break;</break>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </while>

                    <comment type="line">// aligned behaviour wiht BufferedReader that doesn't return a last, emtpy
                        line
                    </comment>
                    <if>if
                        <condition>(
                            <expr>"".
                                <call>
                                    <name>equals</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>line</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &amp;&amp; !
                                <name>trailingNewlineOfFileSkipped</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>trailingNewlineOfFileSkipped</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>line</name>
                                        =
                                        <call>
                                            <name>readLine</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>line</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Closes underlying resources.
                *
                * @throws IOException if an I/O error occurs
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>close</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>randomAccessFile</name>.
                                    <name>close</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <class>
                <specifier>private</specifier>
                class <name>FilePart</name>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>long</name>
                            </type>
                            <name>no</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>data</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>leftOver</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>currentLastBytePos</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * ctor
                        * @param no the part number
                        * @param length its length
                        * @param leftOverOfLastFilePart remainder
                        * @throws IOException if there is a problem reading the file
                        */
                    </comment>
                    <constructor>
                        <specifier>private</specifier>
                        <name>FilePart</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>long</name>
                                    </type>
                                    <name>no</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>int</name>
                                    </type>
                                    <name>length</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>byte</name>
                                            <index>[]</index>
                                        </name>
                                    </type>
                                    <name>leftOverOfLastFilePart</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>no</name>
                                    </name>
                                    =
                                    <name>no</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>dataLength</name> =
                                    <init>
                                        <expr>
                                            <name>length</name>
                                            + (<name>leftOverOfLastFilePart</name> != <name>null</name> ?
                                            <name><name>leftOverOfLastFilePart</name>.
                                                <name>length</name>
                                            </name>
                                            : 0)
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>data</name>
                                    </name>
                                    = new
                                    <name>
                                        <name>byte</name>
                                        <index>[
                                            <expr>
                                                <name>dataLength</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>long</name>
                                    </type>
                                    <name>off</name> =
                                    <init>
                                        <expr>(<name>no</name> - 1) *
                                            <name>blockSize</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// read data</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>no</name>
                                        &gt; 0
                                    </expr>
                                    <comment type="block">/* file not empty */</comment>)
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>randomAccessFile</name>.
                                                        <name>seek</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>off</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>countRead</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>randomAccessFile</name>.
                                                                <name>read</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>data</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>0</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>length</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>countRead</name>
                                                    !=
                                                    <name>length</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IllegalStateException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Count of requested bytes and actually
                                                                            read bytes don't match"
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <comment type="line">// copy left over part into data arr</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>leftOverOfLastFilePart</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>leftOverOfLastFilePart</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>data</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>length</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>leftOverOfLastFilePart</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>currentLastBytePos</name>
                                    </name>
                                    =
                                    <name><name>data</name>.
                                        <name>length</name>
                                    </name>
                                    - 1
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>leftOver</name>
                                    </name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Handles block rollover
                        *
                        * @return the new FilePart or null
                        * @throws IOException if there was a problem reading the file
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>FilePart</name>
                        </type>
                        <name>rollOver</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>currentLastBytePos</name>
                                        &gt; -1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalStateException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Current currentLastCharPos unexpectedly positive... "
                                                                + "last readLine() should have returned something!
                                                                currentLastCharPos=" +
                                                                <name>currentLastBytePos</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>no</name>
                                        &gt; 1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>new
                                                <call>
                                                    <name>FilePart</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>no</name>
                                                                - 1
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>blockSize</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>leftOver</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// NO 1 was the last FilePart, we're finished</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>leftOver</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IllegalStateException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Unexpected leftover of the last block:
                                                                            leftOverOfThisFilePart="
                                                                            + new
                                                                            <call>
                                                                                <name>String</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>leftOver</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>encoding</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <return>return
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Reads a line.
                        *
                        * @return the line or null
                        * @throws IOException if there is an error reading from the file
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>String</name>
                        </type>
                        <name>readLine</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>line</name> =
                                    <init>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>newLineMatchByteCount</name>
                                </decl>
                                ;
                            </decl_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>isLastFilePart</name> =
                                    <init>
                                        <expr>
                                            <name>no</name>
                                            == 1
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>i</name> =
                                    <init>
                                        <expr>
                                            <name>currentLastBytePos</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>i</name>
                                        &gt; -1
                                    </expr>
                                    )
                                </condition>
                                <block>{

                                    <if>if
                                        <condition>(
                                            <expr>!<name>isLastFilePart</name> &amp;&amp; <name>i</name> &lt;
                                                <name>avoidNewlineSplitBufferSize</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// avoidNewlineSplitBuffer: for all except the last
                                                    file part we
                                                </comment>
                                                <comment type="line">// take a few bytes to the next file part to avoid
                                                    splitting of newlines
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>createLeftOver</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                <comment type="line">// skip last few bytes and leave it to the next
                                                    file part
                                                </comment>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <comment type="line">// --- check for newline ---</comment>
                                    <if>if
                                        <condition>(
                                            <expr>(<name>newLineMatchByteCount</name> =
                                                <call>
                                                    <name>getNewLineMatchByteCount</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>data</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ) &gt; 0
                                            </expr>
                                            <comment type="block">/* found newline */</comment>)
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <specifier>final</specifier>
                                                            <name>int</name>
                                                        </type>
                                                        <name>lineStart</name> =
                                                        <init>
                                                            <expr>
                                                                <name>i</name>
                                                                + 1
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>lineLengthBytes</name> =
                                                        <init>
                                                            <expr>
                                                                <name>currentLastBytePos</name>
                                                                - <name>lineStart</name> + 1
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>

                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>lineLengthBytes</name>
                                                            &lt; 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <throw>throw
                                                                <expr>new
                                                                    <call>
                                                                        <name>IllegalStateException</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"Unexpected negative line
                                                                                    length="+
                                                                                    <name>lineLengthBytes</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </throw>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>byte</name>
                                                            <index>[]</index>
                                                        </type>
                                                        <name>lineData</name> =
                                                        <init>
                                                            <expr>new
                                                                <name>
                                                                    <name>byte</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>lineLengthBytes</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.
                                                                <name>arraycopy</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>data</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>lineStart</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>lineData</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>0</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>lineLengthBytes</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <expr_stmt>
                                                    <expr>
                                                        <name>line</name>
                                                        = new
                                                        <call>
                                                            <name>String</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>lineData</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>encoding</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <expr_stmt>
                                                    <expr>
                                                        <name>currentLastBytePos</name>
                                                        = <name>i</name> -
                                                        <name>newLineMatchByteCount</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                <comment type="line">// found line</comment>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <comment type="line">// --- move cursor ---</comment>
                                    <expr_stmt>
                                        <expr>
                                            <name>i</name>
                                            -=
                                            <name>byteDecrement</name>
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <comment type="line">// --- end of file part handling ---</comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>i</name>
                                                &lt; 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>createLeftOver</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                <comment type="line">// end of file part</comment>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </while>

                            <comment type="line">// --- last file part handling ---</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>isLastFilePart</name>
                                        &amp;&amp; <name>leftOver</name> !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// there will be no line break anymore, this is the first
                                            line of the file
                                        </comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>line</name>
                                                = new
                                                <call>
                                                    <name>String</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>leftOver</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>encoding</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>leftOver</name>
                                                =
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <return>return
                                <expr>
                                    <name>line</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Creates the buffer containing any left over bytes.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>createLeftOver</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>lineLengthBytes</name> =
                                    <init>
                                        <expr>
                                            <name>currentLastBytePos</name>
                                            + 1
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>lineLengthBytes</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// create left over for next block</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>leftOver</name>
                                                = new
                                                <name>
                                                    <name>byte</name>
                                                    <index>[
                                                        <expr>
                                                            <name>lineLengthBytes</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>data</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>leftOver</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>lineLengthBytes</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>leftOver</name>
                                                =
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>currentLastBytePos</name>
                                    = -1
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Finds the new-line sequence and return its length.
                        *
                        * @param data buffer to scan
                        * @param i start offset in buffer
                        * @return length of newline sequence or 0 if none found
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>int</name>
                        </type>
                        <name>getNewLineMatchByteCount</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>byte</name>
                                            <index>[]</index>
                                        </name>
                                    </type>
                                    <name>data</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>i</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>byte</name>
                                            <index>[]</index>
                                        </type>
                                        <name>newLineSequence</name> :
                                        <range>
                                            <expr>
                                                <name>newLineSequences</name>
                                            </expr>
                                        </range>
                                    </decl>
                                </init>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>boolean</name>
                                            </type>
                                            <name>match</name> =
                                            <init>
                                                <expr>true</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <for>for (
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>j</name> =
                                                <init>
                                                    <expr>
                                                        <name><name>newLineSequence</name>.
                                                            <name>length</name>
                                                        </name>
                                                        - 1
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </init>
                                        <condition>
                                            <expr>
                                                <name>j</name>
                                                &gt;= 0
                                            </expr>
                                            ;
                                        </condition>
                                        <incr>
                                            <expr><name>j</name>--
                                            </expr>
                                        </incr>
                                        )
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>k</name> =
                                                    <init>
                                                        <expr>
                                                            <name>i</name>
                                                            + <name>j</name> - (
                                                            <name><name>newLineSequence</name>.
                                                                <name>length</name>
                                                            </name>
                                                            - 1)
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>match</name>
                                                    &amp;= <name>k</name> &gt;= 0 &amp;&amp;
                                                    <name>
                                                        <name>data</name>
                                                        <index>[
                                                            <expr>
                                                                <name>k</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    ==
                                                    <name>
                                                        <name>newLineSequence</name>
                                                        <index>[
                                                            <expr>
                                                                <name>j</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </for>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>match</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <name><name>newLineSequence</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return <expr>0</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            }
        </block>
    </class>
</unit>
