<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\main\java\org\apache\commons\io\comparator\SizeFileComparator.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.
            <name>comparator</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>File</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Comparator</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.
            <name>FileUtils</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Compare the &lt;b&gt;length/size&lt;/b&gt; of two files for order (see
        * {@link File#length()} and {@link FileUtils#sizeOfDirectory(File)}).
        * &lt;p&gt;
        * This comparator can be used to sort lists or arrays of files
        * by their length/size.
        * &lt;p&gt;
        * Example of sorting a list of files using the
        * {@link #SIZE_COMPARATOR} singleton instance:
        * &lt;pre&gt;
        * List&amp;lt;File&amp;gt; list = ...
        * SizeFileComparator.SIZE_COMPARATOR.sort(list);
        * &lt;/pre&gt;
        * &lt;p&gt;
        * Example of doing a &lt;i&gt;reverse&lt;/i&gt; sort of an array of files using the
        * {@link #SIZE_REVERSE} singleton instance:
        * &lt;pre&gt;
        * File[] array = ...
        * SizeFileComparator.SIZE_REVERSE.sort(array);
        * &lt;/pre&gt;
        * &lt;p&gt;
        * &lt;strong&gt;N.B.&lt;/strong&gt; Directories are treated as &lt;b&gt;zero size&lt;/b&gt; unless
        * &lt;code&gt;sumDirectoryContents&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.
        *
        * @version $Id: SizeFileComparator.java 1304052 2012-03-22 20:55:29Z ggregory $
        * @since 1.4
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>SizeFileComparator</name>
        <super>
            <extends>extends
                <name>AbstractFileComparator</name>
            </extends>
            <implements>implements
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** Size comparator instance - directories are treated as zero size */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>Comparator</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>File</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>SIZE_COMPARATOR</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>SizeFileComparator</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Reverse size comparator instance - directories are treated as zero size */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>Comparator</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>File</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>SIZE_REVERSE</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>ReverseComparator</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>SIZE_COMPARATOR</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Size comparator instance which sums the size of a directory's contents
                * using {@link FileUtils#sizeOfDirectory(File)}
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>Comparator</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>File</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>SIZE_SUMDIR_COMPARATOR</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>SizeFileComparator</name>
                                <argument_list>(
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Reverse size comparator instance which sums the size of a directory's contents
                * using {@link FileUtils#sizeOfDirectory(File)}
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>Comparator</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>File</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>SIZE_SUMDIR_REVERSE</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>ReverseComparator</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>SIZE_SUMDIR_COMPARATOR</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Whether the sum of the directory's contents should be calculated. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>sumDirectoryContents</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Construct a file size comparator instance (directories treated as zero size).
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>SizeFileComparator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>sumDirectoryContents</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Construct a file size comparator instance specifying whether the size of
                * the directory contents should be aggregated.
                * &lt;p&gt;
                * If the &lt;code&gt;sumDirectoryContents&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; The size of
                * directories is calculated using {@link FileUtils#sizeOfDirectory(File)}.
                *
                * @param sumDirectoryContents &lt;code&gt;true&lt;/code&gt; if the sum of the directoryies contents
                * should be calculated, otherwise &lt;code&gt;false&lt;/code&gt; if directories should be treated
                * as size zero (see {@link FileUtils#sizeOfDirectory(File)}).
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>SizeFileComparator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>sumDirectoryContents</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>sumDirectoryContents</name>
                            </name>
                            =
                            <name>sumDirectoryContents</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Compare the length of two files.
                *
                * @param file1 The first file to compare
                * @param file2 The second file to compare
                * @return a negative value if the first file's length
                * is less than the second, zero if the lengths are the
                * same and a positive value if the first files length
                * is greater than the second file.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>compare</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>file1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>file2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>size1</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>file1</name>.
                                        <name>isDirectory</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>size1</name>
                                        = <name>sumDirectoryContents</name> &amp;&amp;
                                        <call>
                                            <name><name>file1</name>.
                                                <name>exists</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ?
                                        <call>
                                            <name><name>FileUtils</name>.
                                                <name>sizeOfDirectory</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>file1</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        : 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>size1</name>
                                        =
                                        <call>
                                            <name><name>file1</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>size2</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>file2</name>.
                                        <name>isDirectory</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>size2</name>
                                        = <name>sumDirectoryContents</name> &amp;&amp;
                                        <call>
                                            <name><name>file2</name>.
                                                <name>exists</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ?
                                        <call>
                                            <name><name>FileUtils</name>.
                                                <name>sizeOfDirectory</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>file2</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        : 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>size2</name>
                                        =
                                        <call>
                                            <name><name>file2</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>size1</name>
                                    -
                                    <name>size2</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>-1</expr>;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>result</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>1</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <return>return <expr>0</expr>;
                                        </return>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * String representation of this file comparator.
                *
                * @return String representation of this file comparator
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            + "[sumDirectoryContents=" + <name>sumDirectoryContents</name> + "]"
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
