<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\main\java\org\apache\commons\io\filefilter\SizeFileFilter.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.
            <name>filefilter</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>File</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Filters files based on size, can filter either smaller files or
        * files equal to or larger than a given threshold.
        * &lt;p&gt;
        * For example, to print all files and directories in the
        * current directory whose size is greater than 1 MB:
        *
        * &lt;pre&gt;
        * File dir = new File(".");
        * String[] files = dir.list( new SizeFileFilter(1024 * 1024) );
        * for ( int i = 0; i &amp;lt; files.length; i++ ) {
        * System.out.println(files[i]);
        * }
        * &lt;/pre&gt;
        *
        * @version $Id: SizeFileFilter.java 1304052 2012-03-22 20:55:29Z ggregory $
        * @since 1.2
        * @see FileFilterUtils#sizeFileFilter(long)
        * @see FileFilterUtils#sizeFileFilter(long, boolean)
        * @see FileFilterUtils#sizeRangeFileFilter(long, long)
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>SizeFileFilter</name>
        <super>
            <extends>extends
                <name>AbstractFileFilter</name>
            </extends>
            <implements>implements
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** The size threshold. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>size</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/** Whether the files accepted will be larger or smaller. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>acceptLarger</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Constructs a new size file filter for files equal to or
                * larger than a certain size.
                *
                * @param size the threshold size of the files
                * @throws IllegalArgumentException if the size is negative
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>SizeFileFilter</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>size</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>size</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Constructs a new size file filter for files based on a certain size
                * threshold.
                *
                * @param size the threshold size of the files
                * @param acceptLarger if true, files equal to or larger are accepted,
                * otherwise smaller ones (but not equal to)
                * @throws IllegalArgumentException if the size is negative
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>SizeFileFilter</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>size</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>acceptLarger</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>size</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The size must be non-negative"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>size</name>
                            </name>
                            =
                            <name>size</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>acceptLarger</name>
                            </name>
                            =
                            <name>acceptLarger</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Checks to see if the size of the file is favorable.
                * &lt;p&gt;
                * If size equals threshold and smaller files are required,
                * file &lt;b&gt;IS NOT&lt;/b&gt; selected.
                * If size equals threshold and larger files are required,
                * file &lt;b&gt;IS&lt;/b&gt; selected.
                *
                * @param file the File to check
                * @return true if the filename matches
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>accept</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>file</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>smaller</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>file</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    &lt;
                                    <name>size</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>acceptLarger</name>
                            ? !<name>smaller</name> :
                            <name>smaller</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Provide a String representaion of this file filter.
                *
                * @return a String representaion
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>condition</name> =
                            <init>
                                <expr>
                                    <name>acceptLarger</name>
                                    ? "&gt;=" : "&lt;"
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            + "(" + <name>condition</name> + <name>size</name> + ")"
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
