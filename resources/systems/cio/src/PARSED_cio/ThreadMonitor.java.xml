<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\main\java\org\apache\commons\io\ThreadMonitor.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.
            <name>io</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * Monitors a thread, interrupting it of it reaches the specified timout.
        * &lt;p&gt;
        * This works by sleeping until the specified timout amount and then
        * interrupting the thread being monitored. If the thread being monitored
        * completes its work before being interrupted, it should &lt;code&gt;interrupt()&lt;code&gt;
        * the &lt;i&gt;monitor&lt;/i&gt; thread.
        * &lt;p&gt;
        *
        * &lt;pre&gt;
        * long timeoutInMillis = 1000;
        * try {
        * Thread monitor = ThreadMonitor.start(timeoutInMillis);
        * // do some work here
        * ThreadMonitor.stop(monitor);
        * } catch (InterruptedException e) {
        * // timed amount was reached
        * }
        * &lt;/pre&gt;
        *
        * @version $Id: ThreadMonitor.java 1302056 2012-03-18 03:03:38Z ggregory $
        */
    </comment>
    <class>class <name>ThreadMonitor</name>
        <super>
            <implements>implements
                <name>Runnable</name>
            </implements>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>Thread</name>
                    </type>
                    <name>thread</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>timeout</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Start monitoring the current thread.
                *
                * @param timeout The timout amount in milliseconds
                * or no timeout if the value is zero or less
                * @return The monitor thread or &lt;code&gt;null&lt;/code&gt;
                * if the timout amount is not greater than zero
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Thread</name>
                </type>
                <name>start</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>timeout</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>start</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Thread</name>.
                                                    <name>currentThread</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>timeout</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Start monitoring the specified thread.
                *
                * @param thread The thread The thread to monitor
                * @param timeout The timout amount in milliseconds
                * or no timeout if the value is zero or less
                * @return The monitor thread or &lt;code&gt;null&lt;/code&gt;
                * if the timout amount is not greater than zero
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Thread</name>
                </type>
                <name>start</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Thread</name>
                            </type>
                            <name>thread</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>timeout</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Thread</name>
                            </type>
                            <name>monitor</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>timeout</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>ThreadMonitor</name>
                                        </type>
                                        <name>timout</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>ThreadMonitor</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>thread</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>timeout</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>monitor</name>
                                        = new
                                        <call>
                                            <name>Thread</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>timout</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>ThreadMonitor</name>.
                                                            <name>
                                                                <name/>
                                                            </name>
                                                        </name>
                                                        class.
                                                        <call>
                                                            <name>getSimpleName</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>monitor</name>.
                                                <name>setDaemon</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>monitor</name>.
                                                <name>start</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>monitor</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Stop monitoring the specified thread.
                *
                * @param thread The monitor thread, may be &lt;code&gt;null&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>stop</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Thread</name>
                            </type>
                            <name>thread</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>thread</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>thread</name>.
                                                <name>interrupt</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Construct and new monitor.
                *
                * @param thread The thread to monitor
                * @param timeout The timout amount in milliseconds
                */
            </comment>
            <constructor>
                <specifier>private</specifier>
                <name>ThreadMonitor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Thread</name>
                            </type>
                            <name>thread</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>timeout</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>thread</name>
                            </name>
                            =
                            <name>thread</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>timeout</name>
                            </name>
                            =
                            <name>timeout</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Sleep until the specified timout amount and then
                * interrupt the thread being monitored.
                *
                * @see Runnable#run()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>run</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>Thread</name>.
                                            <name>sleep</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>timeout</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>thread</name>.
                                            <name>interrupt</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>InterruptedException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// timeout not reached</comment>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
