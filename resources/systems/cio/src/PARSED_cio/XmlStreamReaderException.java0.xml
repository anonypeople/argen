<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\test\java\org\apache\commons\io\input\compatibility\XmlStreamReaderException.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.<name>input</name>.
            <name>compatibility</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The XmlStreamReaderException is thrown by the XmlStreamReader constructors if
        * the charset encoding can not be determined according to the XML 1.0
        * specification and RFC 3023.
        * &lt;p&gt;
        * The exception returns the unconsumed InputStream to allow the application to
        * do an alternate processing with the stream. Note that the original
        * InputStream given to the XmlStreamReader cannot be used as that one has been
        * already read.
        *
        * @version $Id: XmlStreamReaderException.java 1302056 2012-03-18 03:03:38Z ggregory $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XmlStreamReaderException</name>
        <super>
            <extends>extends <name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.<name>
                input</name>.
                <name>XmlStreamReaderException</name>
            </extends>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>1L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>InputStream</name>
                    </type>
                    <name>is</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates an exception instance if the charset encoding could not be
                * determined.
                * &lt;p&gt;
                * Instances of this exception are thrown by the XmlStreamReader.
                *
                * @param msg message describing the reason for the exception.
                * @param bomEnc BOM encoding.
                * @param xmlGuessEnc XML guess encoding.
                * @param xmlEnc XML prolog encoding.
                * @param is the unconsumed InputStream.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XmlStreamReaderException</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>bomEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xmlGuessEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xmlEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bomEnc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xmlGuessEnc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xmlEnc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>is</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates an exception instance if the charset encoding could not be
                * determined.
                * &lt;p&gt;
                * Instances of this exception are thrown by the XmlStreamReader.
                *
                * @param msg message describing the reason for the exception.
                * @param ctMime MIME type in the content-type.
                * @param ctEnc encoding in the content-type.
                * @param bomEnc BOM encoding.
                * @param xmlGuessEnc XML guess encoding.
                * @param xmlEnc XML prolog encoding.
                * @param is the unconsumed InputStream.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XmlStreamReaderException</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ctMime</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ctEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>bomEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xmlGuessEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xmlEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>ctMime</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>ctEnc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bomEnc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xmlGuessEnc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xmlEnc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>is</name>
                            </name>
                            =
                            <name>is</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the unconsumed InputStream to allow the application to do an
                * alternate encoding detection on the InputStream.
                *
                * @return the unconsumed InputStream.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>InputStream</name>
                </type>
                <name>getInputStream</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>is</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
