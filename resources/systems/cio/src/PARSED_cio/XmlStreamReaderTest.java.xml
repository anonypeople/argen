<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cio\src\test\java\org\apache\commons\io\input\XmlStreamReaderTest.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.
            <name>input</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ByteArrayInputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ByteArrayOutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>OutputStreamWriter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Writer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>MessageFormat</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>HashMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>junit</name>.<name>framework</name>.
            <name>TestCase</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>io</name>.
            <name>IOUtils</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XmlStreamReaderTest</name>
        <super>
            <extends>extends
                <name>TestCase</name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>XML5</name> =
                    <init>
                        <expr>"xml-prolog-encoding-spaced-single-quotes"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>XML4</name> =
                    <init>
                        <expr>"xml-prolog-encoding-single-quotes"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>XML3</name> =
                    <init>
                        <expr>"xml-prolog-encoding-double-quotes"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>XML2</name> =
                    <init>
                        <expr>"xml-prolog"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>XML1</name> =
                    <init>
                        <expr>"xml"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>_testRawNoBomValid</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXmlStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"no-bom"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>XML1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XmlStreamReader</name>
                            </type>
                            <name>xmlReader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XmlStreamReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>is</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>xmlReader</name>.
                                                    <name>getEncoding</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>is</name>
                            =
                            <call>
                                <name>getXmlStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>XML2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>xmlReader</name>
                            = new
                            <call>
                                <name>XmlStreamReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>is</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>xmlReader</name>.
                                                    <name>getEncoding</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>is</name>
                            =
                            <call>
                                <name>getXmlStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>XML3</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>xmlReader</name>
                            = new
                            <call>
                                <name>XmlStreamReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>is</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>xmlReader</name>.
                                                    <name>getEncoding</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>is</name>
                            =
                            <call>
                                <name>getXmlStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>XML4</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>xmlReader</name>
                            = new
                            <call>
                                <name>XmlStreamReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>is</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>xmlReader</name>.
                                                    <name>getEncoding</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>is</name>
                            =
                            <call>
                                <name>getXmlStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>XML5</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>xmlReader</name>
                            = new
                            <call>
                                <name>XmlStreamReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>is</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>xmlReader</name>.
                                                    <name>getEncoding</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>_testRawNoBomInvalid</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXmlStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"no-bom"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>XML3</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>new
                                    <call>
                                        <name>XmlStreamReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>is</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>fail</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"It should have failed"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>assertTrue</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>ex</name>.
                                                                <name>getMessage</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>indexOf</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"Invalid encoding,"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        &gt; -1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testRawNoBom</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawNoBomValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawNoBomValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawNoBomValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"ISO-8859-1"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawNoBomValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"CP1047"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>_testRawBomValid</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXmlStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                    + "-bom"
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>XML3</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XmlStreamReader</name>
                            </type>
                            <name>xmlReader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XmlStreamReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>is</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>encoding</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"UTF-16"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>assertEquals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>xmlReader</name>.
                                                                <name>getEncoding</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>assertEquals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>xmlReader</name>.
                                                                <name>getEncoding</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>substring</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>0</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>encoding</name>.
                                                                                <name>length</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>_testRawBomInvalid</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>bomEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>streamEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prologEnc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXmlStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bomEnc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>XML3</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>streamEnc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>prologEnc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XmlStreamReader</name>
                                    </type>
                                    <name>xmlReader</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XmlStreamReader</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>is</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>false</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>foundEnc</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>xmlReader</name>.
                                                    <name>getEncoding</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>fail</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"It should have failed for BOM " + <name>bomEnc</name> + ",
                                                    streamEnc "
                                                    + <name>streamEnc</name> + " and prologEnc " + <name>prologEnc
                                                    </name> + ": found "
                                                    +
                                                    <name>foundEnc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>assertTrue</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>ex</name>.
                                                                <name>getMessage</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>indexOf</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"Invalid encoding,"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        &gt; -1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testRawBom</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-16LE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-16"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"ISO-8859-1"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"ISO-8859-1"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16LE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16LE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-16LE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16LE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testRawBomInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UTF-16LE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16LE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testHttp</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// niallp 2010-10-06 - remove following 2 tests - I reinstated</comment>
                    <comment type="line">// checks for non-UTF-16 encodings (18 tests) and these failed</comment>
                    <comment type="line">//_testHttpValid("application/xml", "no-bom", "US-ASCII", null);</comment>
                    <comment type="line">//_testHttpValid("application/xml", "UTF-8-bom", "US-ASCII", null);</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset=UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset=\"UTF-8\""</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset='UTF-8'"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset=UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset=UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset=UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset=UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16LE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpValid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testAlternateDefaultEncoding</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testAlternateDefaultEncoding</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testAlternateDefaultEncoding</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testAlternateDefaultEncoding</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testAlternateDefaultEncoding</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testAlternateDefaultEncoding</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpInvalid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/xml;charset=UTF-16"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-16"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/html"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/html"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/html;charset=UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>_testHttpLenient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"text/html;charset=UTF-16BE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"no-bom"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"US-ASCII"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testRawContent</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name> =
                            <init>
                                <expr>"UTF-8"</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXML</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"no-bom"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>XML3</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayInputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>xml</name>.
                                                            <name>getBytes</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>encoding</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XmlStreamReader</name>
                            </type>
                            <name>xmlReader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XmlStreamReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>is</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Check encoding"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>xmlReader</name>.
                                                    <name>getEncoding</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Check content"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xml</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>IOUtils</name>.
                                                    <name>toString</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>xmlReader</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testHttpContent</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name> =
                            <init>
                                <expr>"UTF-8"</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXML</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"no-bom"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>XML3</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayInputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>xml</name>.
                                                            <name>getBytes</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>encoding</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XmlStreamReader</name>
                            </type>
                            <name>xmlReader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XmlStreamReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>is</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Check encoding"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>xmlReader</name>.
                                                    <name>getEncoding</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Check content"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xml</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>IOUtils</name>.
                                                    <name>toString</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>xmlReader</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>_testAlternateDefaultEncoding</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>cT</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>bomEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>streamEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prologEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>alternateEnc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXmlStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bomEnc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>prologEnc</name>
                                                    == <name>null</name> ?
                                                    <name>XML1</name>
                                                    :
                                                    <name>XML3</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>streamEnc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>prologEnc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XmlStreamReader</name>
                            </type>
                            <name>xmlReader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XmlStreamReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>is</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>cT</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>alternateEnc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>streamEnc</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"UTF-16"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// we can not assert things here because UTF-8, US-ASCII and
                                </comment>
                                <comment type="line">// ISO-8859-1 look alike for the chars used for detection</comment>
                                <comment type="line">// (niallp 2010-10-06 - I re-instated the check below - the
                                    tests(6) passed)
                                </comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>enc</name> =
                                        <init>
                                            <expr>
                                                <name>alternateEnc</name>
                                                != <name>null</name> ? <name>alternateEnc</name> :
                                                <name>streamEnc</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>assertEquals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>xmlReader</name>.
                                                                <name>getEncoding</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>enc</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">//String enc = (alternateEnc != null) ? alternateEnc : streamEnc;
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>assertEquals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>xmlReader</name>.
                                                                <name>getEncoding</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>substring</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>0</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>streamEnc</name>.
                                                                                <name>length</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>streamEnc</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>_testHttpValid</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>cT</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>bomEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>streamEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prologEnc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXmlStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bomEnc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>prologEnc</name>
                                                    == <name>null</name> ? <name>XML1</name> :
                                                    <name>XML3</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>streamEnc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>prologEnc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XmlStreamReader</name>
                            </type>
                            <name>xmlReader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XmlStreamReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>is</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>cT</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>streamEnc</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"UTF-16"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// we can not assert things here because UTF-8, US-ASCII and
                                </comment>
                                <comment type="line">// ISO-8859-1 look alike for the chars used for detection</comment>
                                <comment type="line">// (niallp 2010-10-06 - I re-instated the check below and removed
                                    the 2 tests that failed)
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>assertEquals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>xmlReader</name>.
                                                                <name>getEncoding</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>streamEnc</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>assertEquals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>xmlReader</name>.
                                                                <name>getEncoding</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>substring</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>0</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>streamEnc</name>.
                                                                                <name>length</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>streamEnc</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>_testHttpInvalid</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>cT</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>bomEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>streamEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prologEnc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXmlStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bomEnc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>prologEnc</name>
                                                    == <name>null</name> ? <name>XML2</name> :
                                                    <name>XML3</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>streamEnc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>prologEnc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>new
                                    <call>
                                        <name>XmlStreamReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>is</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>cT</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>fail</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"It should have failed for HTTP Content-type " + <name>cT</name> +
                                                    ", BOM "
                                                    + <name>bomEnc</name> + ", streamEnc " + <name>streamEnc</name> + "
                                                    and prologEnc "
                                                    +
                                                    <name>prologEnc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>assertTrue</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>ex</name>.
                                                                <name>getMessage</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>indexOf</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"Invalid encoding,"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        &gt; -1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>_testHttpLenient</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>cT</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>bomEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>streamEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prologEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>shouldbe</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXmlStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bomEnc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>prologEnc</name>
                                                    == <name>null</name> ? <name>XML2</name> :
                                                    <name>XML3</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>streamEnc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>prologEnc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XmlStreamReader</name>
                            </type>
                            <name>xmlReader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XmlStreamReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>is</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>cT</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>xmlReader</name>.
                                                    <name>getEncoding</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>shouldbe</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ENCODING_ATTRIBUTE_XML</name> =
                    <init>
                        <expr>"&lt;?xml version=\"1.0\" ?&gt; \n"
                            + "&lt;atom:feed xmlns:atom=\"http://www.w3.org/2005/Atom\"&gt;\n"
                            + "\n"
                            + " &lt;atom:entry&gt;\n"
                            + " &lt;atom:title encoding='base64'&gt;&lt;![CDATA\n"
                            + "aW5nTGluZSIgLz4"
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testEncodingAttributeXML</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>
                                                            <name>ENCODING_ATTRIBUTE_XML</name>
                                                            .
                                                            <name>getBytes</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"UTF-8"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XmlStreamReader</name>
                            </type>
                            <name>xmlReader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XmlStreamReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>is</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>""</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>xmlReader</name>.
                                                    <name>getEncoding</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"UTF-8"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// XML Stream generator</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>NO_BOM_BYTES</name> =
                    <init>
                        <expr>
                            <block>{}</block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>UTF_16BE_BOM_BYTES</name> =
                    <init>
                        <expr>
                            <block>{ <expr>0xFE</expr>, <expr>0xFF</expr> }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>UTF_16LE_BOM_BYTES</name> =
                    <init>
                        <expr>
                            <block>{ <expr>0xFF</expr>, <expr>0XFE</expr> }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>UTF_8_BOM_BYTES</name> =
                    <init>
                        <expr>
                            <block>{ <expr>0xEF</expr>, <expr>0xBB</expr>, <expr>0xBF</expr> }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>Map</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>String</name>
                                </argument>
                                ,
                                <argument>
                                    <name>int</name>
                                    <index>[]</index>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>BOMs</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>HashMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>String</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>int</name>
                                                <index>[]</index>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            static
            <block>{
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>BOMs</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"no-bom"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>NO_BOM_BYTES</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>BOMs</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"UTF-16BE-bom"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>UTF_16BE_BOM_BYTES</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>BOMs</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"UTF-16LE-bom"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>UTF_16LE_BOM_BYTES</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>BOMs</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"UTF-16-bom"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>NO_BOM_BYTES</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// it's added by the writer</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>BOMs</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"UTF-8-bom"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>UTF_8_BOM_BYTES</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                }
            </block>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>MessageFormat</name>
                    </type>
                    <name>XML</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>MessageFormat</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;root&gt;{2}&lt;/root&gt;"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>MessageFormat</name>
                    </type>
                    <name>XML_WITH_PROLOG</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>MessageFormat</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;?xml version=\"1.0\"?&gt;\n&lt;root&gt;{2}&lt;/root&gt;"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>MessageFormat</name>
                    </type>
                    <name>XML_WITH_PROLOG_AND_ENCODING_DOUBLE_QUOTES</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>MessageFormat</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;?xml version=\"1.0\" encoding=\"{1}\"?&gt;\n&lt;root&gt;{2}&lt;/root&gt;"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>MessageFormat</name>
                    </type>
                    <name>XML_WITH_PROLOG_AND_ENCODING_SINGLE_QUOTES</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>MessageFormat</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;?xml version=\"1.0\" encoding=''{1}''?&gt;\n&lt;root&gt;{2}&lt;/root&gt;"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>MessageFormat</name>
                    </type>
                    <name>XML_WITH_PROLOG_AND_ENCODING_SPACED_SINGLE_QUOTES</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>MessageFormat</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;?xml version=\"1.0\" encoding = \t \n \r''{1}''?&gt;\n&lt;root&gt;{2}&lt;/root&gt;"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>MessageFormat</name>
                    </type>
                    <name>INFO</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>MessageFormat</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"\nBOM : {0}\nDoc : {1}\nStream Enc : {2}\nProlog Enc : {3}\n"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>Map</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>String</name>
                                </argument>
                                ,
                                <argument>
                                    <name>MessageFormat</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>XMLs</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>HashMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>String</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>MessageFormat</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            static
            <block>{
                <constructor_decl>
                    <name><name>XMLs</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>XML1</name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>XML</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <constructor_decl>
                    <name><name>XMLs</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>XML2</name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>XML_WITH_PROLOG</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <constructor_decl>
                    <name><name>XMLs</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>XML3</name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>XML_WITH_PROLOG_AND_ENCODING_DOUBLE_QUOTES</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <constructor_decl>
                    <name><name>XMLs</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>XML4</name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>XML_WITH_PROLOG_AND_ENCODING_SINGLE_QUOTES</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <constructor_decl>
                    <name><name>XMLs</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>XML5</name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>XML_WITH_PROLOG_AND_ENCODING_SPACED_SINGLE_QUOTES</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                }
            </block>

            <comment type="javadoc">/**
                *
                * @param bomType no-bom, UTF-16BE-bom, UTF-16LE-bom, UTF-8-bom
                * @param xmlType xml, xml-prolog, xml-prolog-charset
                * @return XML stream
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>InputStream</name>
                </type>
                <name>getXmlStream</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>bomType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xmlType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>streamEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prologEnc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayOutputStream</name>
                            </type>
                            <name>baos</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayOutputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1024</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>bom</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>BOMs</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bomType</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>bom</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>bom</name>
                                        = new
                                        <name>
                                            <name>int</name>
                                            <index>[<expr>0</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>element</name> :
                                <range>
                                    <expr>
                                        <name>bom</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>baos</name>.
                                            <name>write</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>element</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Writer</name>
                            </type>
                            <name>writer</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>OutputStreamWriter</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>baos</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>streamEnc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xmlDoc</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXML</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bomType</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>xmlType</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>streamEnc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>prologEnc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>writer</name>.
                                    <name>write</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>xmlDoc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// PADDDING TO TEST THINGS WORK BEYOND PUSHBACK_SIZE</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>writer</name>.
                                    <name>write</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;da&gt;\n"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt; 10000
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>writer</name>.
                                            <name>write</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"&lt;do/&gt;\n"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>writer</name>.
                                    <name>write</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;/da&gt;\n"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>writer</name>.
                                    <name>close</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>ByteArrayInputStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>baos</name>.
                                                    <name>toByteArray</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Create the XML.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>String</name>
                </type>
                <name>getXML</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>bomType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xmlType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>streamEnc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prologEnc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>MessageFormat</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>XMLs</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xmlType</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>info</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>INFO</name>.
                                            <name>format</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Object</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <name>bomType</name>
                                                        </expr>
                                                        ,
                                                        <expr>
                                                            <name>xmlType</name>
                                                        </expr>
                                                        ,
                                                        <expr>
                                                            <name>prologEnc</name>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xmlDoc</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>xml</name>.
                                            <name>format</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Object</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <name>streamEnc</name>
                                                        </expr>
                                                        ,
                                                        <expr>
                                                            <name>prologEnc</name>
                                                        </expr>
                                                        ,
                                                        <expr>
                                                            <name>info</name>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>xmlDoc</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
