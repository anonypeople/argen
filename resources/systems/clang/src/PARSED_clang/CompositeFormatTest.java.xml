<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\clang\src\test\java\org\apache\commons\lang\text\CompositeFormatTest.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>lang</name>.
            <name>text</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>FieldPosition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>Format</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>ParsePosition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>SimpleDateFormat</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>junit</name>.<name>framework</name>.
            <name>TestCase</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Unit tests for {@link org.apache.commons.lang.text.CompositeFormat}.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>CompositeFormatTest</name>
        <super>
            <extends>extends
                <name>TestCase</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Create a new test case with the specified name.
                *
                * @param name
                * name
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>CompositeFormatTest</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>


            <comment type="javadoc">/**
                * Ensures that the parse/format separation is correctly maintained.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testCompositeFormat</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Format</name>
                            </type>
                            <name>parser</name> =
                            <init>
                                <expr>new
                                    <class>
                                        <super>
                                            <name>Format</name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <specifier>public</specifier>
                                                    <name>StringBuffer</name>
                                                </type>
                                                <name>format</name>
                                                <parameter_list>(
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>Object</name>
                                                            </type>
                                                            <name>obj</name>
                                                        </decl>
                                                    </param>
                                                    ,
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>StringBuffer</name>
                                                            </type>
                                                            <name>toAppendTo</name>
                                                        </decl>
                                                    </param>
                                                    ,
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>FieldPosition</name>
                                                            </type>
                                                            <name>pos</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                </parameter_list>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>UnsupportedOperationException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Not implemented"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </function>

                                            <function>
                                                <type>
                                                    <specifier>public</specifier>
                                                    <name>Object</name>
                                                </type>
                                                <name>parseObject</name>
                                                <parameter_list>(
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>source</name>
                                                        </decl>
                                                    </param>
                                                    ,
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>ParsePosition</name>
                                                            </type>
                                                            <name>pos</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                </parameter_list>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    <comment type="line">// do nothing</comment>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Format</name>
                            </type>
                            <name>formatter</name> =
                            <init>
                                <expr>new
                                    <class>
                                        <super>
                                            <name>Format</name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <specifier>public</specifier>
                                                    <name>StringBuffer</name>
                                                </type>
                                                <name>format</name>
                                                <parameter_list>(
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>Object</name>
                                                            </type>
                                                            <name>obj</name>
                                                        </decl>
                                                    </param>
                                                    ,
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>StringBuffer</name>
                                                            </type>
                                                            <name>toAppendTo</name>
                                                        </decl>
                                                    </param>
                                                    ,
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>FieldPosition</name>
                                                            </type>
                                                            <name>pos</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                </parameter_list>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    <comment type="line">// do nothing</comment>
                                                    }
                                                </block>
                                            </function>

                                            <function>
                                                <type>
                                                    <specifier>public</specifier>
                                                    <name>Object</name>
                                                </type>
                                                <name>parseObject</name>
                                                <parameter_list>(
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>source</name>
                                                        </decl>
                                                    </param>
                                                    ,
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>ParsePosition</name>
                                                            </type>
                                                            <name>pos</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                </parameter_list>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>UnsupportedOperationException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Not implemented"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CompositeFormat</name>
                            </type>
                            <name>composite</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>CompositeFormat</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>parser</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>formatter</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>composite</name>.
                                    <name>parseObject</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>""</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>composite</name>.
                                    <name>format</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>Object</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>StringBuffer</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Parser get method incorrectly implemented"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parser</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>composite</name>.
                                                    <name>getParser</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Formatter get method incorrectly implemented"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>formatter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>composite</name>.
                                                    <name>getFormatter</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testUsage</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Format</name>
                            </type>
                            <name>f1</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SimpleDateFormat</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"MMddyyyy"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>Locale</name>.
                                                        <name>ENGLISH</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Format</name>
                            </type>
                            <name>f2</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SimpleDateFormat</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"MMMM d, yyyy"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>Locale</name>.
                                                        <name>ENGLISH</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CompositeFormat</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>CompositeFormat</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>f1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>f2</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>testString</name> =
                            <init>
                                <expr>"January 3, 2005"</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>testString</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>c</name>.
                                                    <name>format</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>c</name>.
                                                                    <name>parseObject</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"01032005"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>testString</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>c</name>.
                                                    <name>reformat</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"01032005"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
