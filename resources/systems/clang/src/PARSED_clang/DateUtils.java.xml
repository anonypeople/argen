<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\clang\src\main\java\org\apache\commons\lang\time\DateUtils.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>lang</name>.
            <name>time</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>ParseException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>ParsePosition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>SimpleDateFormat</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Calendar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Date</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>NoSuchElementException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>TimeZone</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>lang</name>.
            <name>StringUtils</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;A suite of utilities surrounding the use of the
        * {@link java.util.Calendar} and {@link java.util.Date} object.&lt;/p&gt;
        *
        * &lt;p&gt;DateUtils contains a lot of common methods considering manipulations
        * of Dates or Calendars. Some methods require some extra explanation.
        * The truncate, ceiling and round methods could be considered the Math.floor(),
        * Math.ceil() or Math.round versions for dates
        * This way date-fields will be ignored in bottom-up order.
        * As a complement to these methods we've introduced some fragment-methods.
        * With these methods the Date-fields will be ignored in top-down order.
        * Since a date without a year is not a valid date, you have to decide in what
        * kind of date-field you want your result, for instance milliseconds or days.
        * &lt;/p&gt;
        *
        *
        *
        * @author Apache Software Foundation
        * @author &lt;a href="mailto:sergek@lokitech.com"&gt;Serge Knystautas&lt;/a&gt;
        * @author Janek Bogucki
        * @author &lt;a href="mailto:ggregory@seagullsw.com"&gt;Gary Gregory&lt;/a&gt;
        * @author Phil Steitz
        * @author Robert Scholte
        * @since 2.0
        * @version $Id: DateUtils.java 1056840 2011-01-09 00:12:23Z niallp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>DateUtils</name>
        <block>{

            <comment type="javadoc">/**
                * The UTC time zone (often referred to as GMT).
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>TimeZone</name>
                    </type>
                    <name>UTC_TIME_ZONE</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>TimeZone</name>.
                                    <name>getTimeZone</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"GMT"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Number of milliseconds in a standard second.
                * @since 2.1
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>MILLIS_PER_SECOND</name> =
                    <init>
                        <expr>1000</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Number of milliseconds in a standard minute.
                * @since 2.1
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>MILLIS_PER_MINUTE</name> =
                    <init>
                        <expr>60 *
                            <name>MILLIS_PER_SECOND</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Number of milliseconds in a standard hour.
                * @since 2.1
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>MILLIS_PER_HOUR</name> =
                    <init>
                        <expr>60 *
                            <name>MILLIS_PER_MINUTE</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Number of milliseconds in a standard day.
                * @since 2.1
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>MILLIS_PER_DAY</name> =
                    <init>
                        <expr>24 *
                            <name>MILLIS_PER_HOUR</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * This is half a month, so this represents whether a date is in the top
                * or bottom half of the month.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>SEMI_MONTH</name> =
                    <init>
                        <expr>1001</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fields</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <block>{
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MILLISECOND</name>
                                            </name>
                                        </expr>
                                        }
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>SECOND</name>
                                            </name>
                                        </expr>
                                        }
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MINUTE</name>
                                            </name>
                                        </expr>
                                        }
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>HOUR_OF_DAY</name>
                                            </name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>HOUR</name>
                                            </name>
                                        </expr>
                                        }
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DATE</name>
                                            </name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DAY_OF_MONTH</name>
                                            </name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>AM_PM</name>
                                            </name>
                                        </expr>
                                        <comment type="block">/* Calendar.DAY_OF_YEAR, Calendar.DAY_OF_WEEK,
                                            Calendar.DAY_OF_WEEK_IN_MONTH */
                                        </comment>
                                        }
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MONTH</name>
                                            </name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name><name>DateUtils</name>.
                                                <name>SEMI_MONTH</name>
                                            </name>
                                        </expr>
                                        }
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>YEAR</name>
                                            </name>
                                        </expr>
                                        }
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>ERA</name>
                                            </name>
                                        </expr>
                                        }
                                    </block>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A week range, starting on Sunday.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>RANGE_WEEK_SUNDAY</name> =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A week range, starting on Monday.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>RANGE_WEEK_MONDAY</name> =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A week range, starting on the day focused.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>RANGE_WEEK_RELATIVE</name> =
                    <init>
                        <expr>3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A week range, centered around the day focused.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>RANGE_WEEK_CENTER</name> =
                    <init>
                        <expr>4</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A month range, the week starting on Sunday.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>RANGE_MONTH_SUNDAY</name> =
                    <init>
                        <expr>5</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A month range, the week starting on Monday.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>RANGE_MONTH_MONDAY</name> =
                    <init>
                        <expr>6</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Constant marker for truncating
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>MODIFY_TRUNCATE</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Constant marker for rounding
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>MODIFY_ROUND</name> =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Constant marker for ceiling
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>MODIFY_CEILING</name>=
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;&lt;code&gt;DateUtils&lt;/code&gt; instances should NOT be constructed in
                * standard programming. Instead, the class should be used as
                * &lt;code&gt;DateUtils.parse(str);&lt;/code&gt;.&lt;/p&gt;
                *
                * &lt;p&gt;This constructor is public to permit tools that require a JavaBean
                * instance to operate.&lt;/p&gt;
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>DateUtils</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;Checks if two date objects are on the same day ignoring time.&lt;/p&gt;
                *
                * &lt;p&gt;28 Mar 2002 13:45 and 28 Mar 2002 06:01 would return true.
                * 28 Mar 2002 13:45 and 12 Mar 2002 13:45 would return false.
                * &lt;/p&gt;
                *
                * @param date1 the first date, not altered, not null
                * @param date2 the second date, not altered, not null
                * @return true if they represent the same day
                * @throws IllegalArgumentException if either date is &lt;code&gt;null&lt;/code&gt;
                * @since 2.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isSameDay</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date1</name>
                                == <name>null</name> || <name>date2</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>cal1</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date1</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>cal2</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>isSameDay</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cal1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cal2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Checks if two calendar objects are on the same day ignoring time.&lt;/p&gt;
                *
                * &lt;p&gt;28 Mar 2002 13:45 and 28 Mar 2002 06:01 would return true.
                * 28 Mar 2002 13:45 and 12 Mar 2002 13:45 would return false.
                * &lt;/p&gt;
                *
                * @param cal1 the first calendar, not altered, not null
                * @param cal2 the second calendar, not altered, not null
                * @return true if they represent the same day
                * @throws IllegalArgumentException if either calendar is &lt;code&gt;null&lt;/code&gt;
                * @since 2.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isSameDay</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>cal1</name>
                                == <name>null</name> || <name>cal2</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>(
                            <call>
                                <name><name>cal1</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>ERA</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>ERA</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name><name>cal1</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name><name>cal1</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DAY_OF_YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DAY_OF_YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;Checks if two date objects represent the same instant in time.&lt;/p&gt;
                *
                * &lt;p&gt;This method compares the long millisecond time of the two objects.&lt;/p&gt;
                *
                * @param date1 the first date, not altered, not null
                * @param date2 the second date, not altered, not null
                * @return true if they represent the same millisecond instant
                * @throws IllegalArgumentException if either date is &lt;code&gt;null&lt;/code&gt;
                * @since 2.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isSameInstant</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date1</name>
                                == <name>null</name> || <name>date2</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>date1</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>date2</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Checks if two calendar objects represent the same instant in time.&lt;/p&gt;
                *
                * &lt;p&gt;This method compares the long millisecond time of the two objects.&lt;/p&gt;
                *
                * @param cal1 the first calendar, not altered, not null
                * @param cal2 the second calendar, not altered, not null
                * @return true if they represent the same millisecond instant
                * @throws IllegalArgumentException if either date is &lt;code&gt;null&lt;/code&gt;
                * @since 2.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isSameInstant</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>cal1</name>
                                == <name>null</name> || <name>cal2</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>cal1</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getTime</name>
                                <argument_list>()</argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getTime</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;Checks if two calendar objects represent the same local time.&lt;/p&gt;
                *
                * &lt;p&gt;This method compares the values of the fields of the two objects.
                * In addition, both calendars must be the same of the same type.&lt;/p&gt;
                *
                * @param cal1 the first calendar, not altered, not null
                * @param cal2 the second calendar, not altered, not null
                * @return true if they represent the same millisecond instant
                * @throws IllegalArgumentException if either date is &lt;code&gt;null&lt;/code&gt;
                * @since 2.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isSameLocalTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>cal1</name>
                                == <name>null</name> || <name>cal2</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>(
                            <call>
                                <name><name>cal1</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MILLISECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MILLISECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name><name>cal1</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>SECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>SECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name><name>cal1</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MINUTE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MINUTE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name><name>cal1</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>HOUR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>HOUR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name><name>cal1</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DAY_OF_YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DAY_OF_YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name><name>cal1</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name><name>cal1</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>ERA</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>ERA</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name><name>cal1</name>.
                                    <name>getClass</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            ==
                            <call>
                                <name><name>cal2</name>.
                                    <name>getClass</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;Parses a string representing a date by trying a variety of different parsers.&lt;/p&gt;
                *
                * &lt;p&gt;The parse will try each parse pattern in turn.
                * A parse is only deemed successful if it parses the whole of the input string.
                * If no parse patterns match, a ParseException is thrown.&lt;/p&gt;
                * The parser will be lenient toward the parsed date.
                *
                * @param str the date to parse, not null
                * @param parsePatterns the date format patterns to use, see SimpleDateFormat, not null
                * @return the parsed date
                * @throws IllegalArgumentException if the date string or pattern array is null
                * @throws ParseException if none of the date patterns were suitable (or there were none)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>parseDate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>parsePatterns</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>ParseException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>parseDateWithLeniency</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>str</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsePatterns</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;Parses a string representing a date by trying a variety of different parsers.&lt;/p&gt;
                *
                * &lt;p&gt;The parse will try each parse pattern in turn.
                * A parse is only deemed successful if it parses the whole of the input string.
                * If no parse patterns match, a ParseException is thrown.&lt;/p&gt;
                * The parser parses strictly - it does not allow for dates such as "February 942, 1996".
                *
                * @param str the date to parse, not null
                * @param parsePatterns the date format patterns to use, see SimpleDateFormat, not null
                * @return the parsed date
                * @throws IllegalArgumentException if the date string or pattern array is null
                * @throws ParseException if none of the date patterns were suitable
                * @since 2.5
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>parseDateStrictly</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>parsePatterns</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>ParseException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>parseDateWithLeniency</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>str</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsePatterns</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Parses a string representing a date by trying a variety of different parsers.&lt;/p&gt;
                *
                * &lt;p&gt;The parse will try each parse pattern in turn.
                * A parse is only deemed successful if it parses the whole of the input string.
                * If no parse patterns match, a ParseException is thrown.&lt;/p&gt;
                *
                * @param str the date to parse, not null
                * @param parsePatterns the date format patterns to use, see SimpleDateFormat, not null
                * @param lenient Specify whether or not date/time parsing is to be lenient.
                * @return the parsed date
                * @throws IllegalArgumentException if the date string or pattern array is null
                * @throws ParseException if none of the date patterns were suitable
                * @see java.util.Calender#isLenient()
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>parseDateWithLeniency</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>parsePatterns</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>lenient</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>ParseException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>str</name>
                                == <name>null</name> || <name>parsePatterns</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Date and Patterns must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SimpleDateFormat</name>
                            </type>
                            <name>parser</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SimpleDateFormat</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>parser</name>.
                                    <name>setLenient</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>lenient</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ParsePosition</name>
                            </type>
                            <name>pos</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ParsePosition</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>parsePatterns</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>pattern</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>parsePatterns</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// LANG-530 - need to make sure 'ZZ' output doesn't get passed to
                                SimpleDateFormat
                            </comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>parsePatterns</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>endsWith</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"ZZ"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>pattern</name>
                                                =
                                                <call>
                                                    <name><name>pattern</name>.
                                                        <name>substring</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>pattern</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                - 1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>parser</name>.
                                            <name>applyPattern</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>pattern</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>pos</name>.
                                            <name>setIndex</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>str2</name> =
                                    <init>
                                        <expr>
                                            <name>str</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// LANG-530 - need to make sure 'ZZ' output doesn't hit
                                SimpleDateFormat as it will ParseException
                            </comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>parsePatterns</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>endsWith</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"ZZ"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>signIdx</name>  =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name>indexOfSignChars</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>str2</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>0</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <while>while
                                            <condition>(
                                                <expr>
                                                    <name>signIdx</name>
                                                    &gt;=0
                                                </expr>
                                                )
                                            </condition>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>str2</name>
                                                        =
                                                        <call>
                                                            <name>reformatTimezone</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>str2</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>signIdx</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>signIdx</name>
                                                        =
                                                        <call>
                                                            <name>indexOfSignChars</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>str2</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>++
                                                                        <name>signIdx</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </while>
                                        }
                                    </block>
                                </then>
                            </if>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Date</name>
                                    </type>
                                    <name>date</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>parser</name>.
                                                    <name>parse</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>str2</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>pos</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>date</name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>pos</name>.
                                                <name>getIndex</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <call>
                                            <name><name>str2</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>date</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>ParseException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Unable to parse the date: " +
                                            <name>str</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>-1</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Index of sign charaters (i.e. '+' or '-').
                *
                * @param str The string to search
                * @param startPos The start position
                * @return the index of the first sign character or -1 if not found
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>int</name>
                </type>
                <name>indexOfSignChars</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>startPos</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>idx</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>StringUtils</name>.
                                            <name>indexOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>str</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>'+'</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>startPos</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>idx</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>idx</name>
                                        =
                                        <call>
                                            <name><name>StringUtils</name>.
                                                <name>indexOf</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>str</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>'-'</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>startPos</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>idx</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Reformat the timezone in a date string.
                *
                * @param str The input string
                * @param signIdx The index position of the sign characters
                * @return The reformatted string
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                </type>
                <name>reformatTimezone</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>signIdx</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str2</name> =
                            <init>
                                <expr>
                                    <name>str</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>signIdx</name>
                                &gt;= 0 &amp;&amp;
                                <name>signIdx</name>
                                + 5 &lt;
                                <call>
                                    <name><name>str</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp;
                                <call>
                                    <name><name>Character</name>.
                                        <name>isDigit</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>signIdx</name>
                                                                + 1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &amp;&amp;
                                <call>
                                    <name><name>Character</name>.
                                        <name>isDigit</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>signIdx</name>
                                                                + 2
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &amp;&amp;
                                <call>
                                    <name><name>str</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>signIdx</name>
                                                + 3
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == ':' &amp;&amp;
                                <call>
                                    <name><name>Character</name>.
                                        <name>isDigit</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>signIdx</name>
                                                                + 4
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &amp;&amp;
                                <call>
                                    <name><name>Character</name>.
                                        <name>isDigit</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>signIdx</name>
                                                                + 5
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>str2</name>
                                        =
                                        <call>
                                            <name><name>str</name>.
                                                <name>substring</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>signIdx</name>
                                                        + 3
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        +
                                        <call>
                                            <name><name>str</name>.
                                                <name>substring</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>signIdx</name>
                                                        + 4
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>str2</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Adds a number of years to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to add, may be negative
                * @return the new date object with the amount added
                * @throws IllegalArgumentException if the date is null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>addYears</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Adds a number of months to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to add, may be negative
                * @return the new date object with the amount added
                * @throws IllegalArgumentException if the date is null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>addMonths</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MONTH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Adds a number of weeks to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to add, may be negative
                * @return the new date object with the amount added
                * @throws IllegalArgumentException if the date is null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>addWeeks</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>WEEK_OF_YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Adds a number of days to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to add, may be negative
                * @return the new date object with the amount added
                * @throws IllegalArgumentException if the date is null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>addDays</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DAY_OF_MONTH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Adds a number of hours to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to add, may be negative
                * @return the new date object with the amount added
                * @throws IllegalArgumentException if the date is null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>addHours</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>HOUR_OF_DAY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Adds a number of minutes to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to add, may be negative
                * @return the new date object with the amount added
                * @throws IllegalArgumentException if the date is null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>addMinutes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MINUTE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Adds a number of seconds to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to add, may be negative
                * @return the new date object with the amount added
                * @throws IllegalArgumentException if the date is null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>addSeconds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>SECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Adds a number of milliseconds to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to add, may be negative
                * @return the new date object with the amount added
                * @throws IllegalArgumentException if the date is null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>addMilliseconds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MILLISECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Adds to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param calendarField the calendar field to add to
                * @param amount the amount to add, may be negative
                * @return the new date object with the amount added
                * @throws IllegalArgumentException if the date is null
                * @deprecated Will become privately scoped in 3.0
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>add</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>calendarField</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>c</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>c</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>calendarField</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>c</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Sets the years field to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to set
                * @return a new Date object set with the specified value
                * @throws IllegalArgumentException if the date is null
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>setYears</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Sets the months field to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to set
                * @return a new Date object set with the specified value
                * @throws IllegalArgumentException if the date is null
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>setMonths</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MONTH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Sets the day of month field to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to set
                * @return a new Date object set with the specified value
                * @throws IllegalArgumentException if the date is null
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>setDays</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DAY_OF_MONTH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Sets the hours field to a date returning a new object. Hours range
                * from 0-23.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to set
                * @return a new Date object set with the specified value
                * @throws IllegalArgumentException if the date is null
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>setHours</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>HOUR_OF_DAY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Sets the minute field to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to set
                * @return a new Date object set with the specified value
                * @throws IllegalArgumentException if the date is null
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>setMinutes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MINUTE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Sets the seconds field to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to set
                * @return a new Date object set with the specified value
                * @throws IllegalArgumentException if the date is null
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>setSeconds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>SECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Sets the miliseconds field to a date returning a new object.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param amount the amount to set
                * @return a new Date object set with the specified value
                * @throws IllegalArgumentException if the date is null
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>setMilliseconds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MILLISECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Sets the specified field to a date returning a new object.
                * This does not use a lenient calendar.
                * The original date object is unchanged.
                *
                * @param date the date, not null
                * @param calendarField the calendar field to set the amount to
                * @param amount the amount to set
                * @return a new Date object set with the specified value
                * @throws IllegalArgumentException if the date is null
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>set</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>calendarField</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>amount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// getInstance() returns a new object, so this method is thread safe.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>c</name>.
                                    <name>setLenient</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>c</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>c</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>calendarField</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>amount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>c</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Convert a Date into a Calendar object.
                *
                * @param date the date to convert to a Calendar
                * @return the created Calendar
                * @throws NullPointerException if null is passed in
                * @since 2.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Calendar</name>
                </type>
                <name>toCalendar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>c</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>c</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;Round this date, leaving the field specified as the most
                * significant field.&lt;/p&gt;
                *
                * &lt;p&gt;For example, if you had the datetime of 28 Mar 2002
                * 13:45:01.231, if this was passed with HOUR, it would return
                * 28 Mar 2002 14:00:00.000. If this was passed with MONTH, it
                * would return 1 April 2002 0:00:00.000.&lt;/p&gt;
                *
                * &lt;p&gt;For a date in a timezone that handles the change to daylight
                * saving time, rounding to Calendar.HOUR_OF_DAY will behave as follows.
                * Suppose daylight saving time begins at 02:00 on March 30. Rounding a
                * date that crosses this time would produce the following values:
                * &lt;ul&gt;
                * &lt;li&gt;March 30, 2003 01:10 rounds to March 30, 2003 01:00&lt;/li&gt;
                * &lt;li&gt;March 30, 2003 01:40 rounds to March 30, 2003 03:00&lt;/li&gt;
                * &lt;li&gt;March 30, 2003 02:10 rounds to March 30, 2003 03:00&lt;/li&gt;
                * &lt;li&gt;March 30, 2003 02:40 rounds to March 30, 2003 04:00&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param date the date to work with
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * or &lt;code&gt;SEMI_MONTH&lt;/code&gt;
                * @return the rounded date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;
                * @throws ArithmeticException if the year is over 280 million
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>round</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>gval</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>gval</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>modify</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>gval</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>field</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>MODIFY_ROUND</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>gval</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Round this date, leaving the field specified as the most
                * significant field.&lt;/p&gt;
                *
                * &lt;p&gt;For example, if you had the datetime of 28 Mar 2002
                * 13:45:01.231, if this was passed with HOUR, it would return
                * 28 Mar 2002 14:00:00.000. If this was passed with MONTH, it
                * would return 1 April 2002 0:00:00.000.&lt;/p&gt;
                *
                * &lt;p&gt;For a date in a timezone that handles the change to daylight
                * saving time, rounding to Calendar.HOUR_OF_DAY will behave as follows.
                * Suppose daylight saving time begins at 02:00 on March 30. Rounding a
                * date that crosses this time would produce the following values:
                * &lt;ul&gt;
                * &lt;li&gt;March 30, 2003 01:10 rounds to March 30, 2003 01:00&lt;/li&gt;
                * &lt;li&gt;March 30, 2003 01:40 rounds to March 30, 2003 03:00&lt;/li&gt;
                * &lt;li&gt;March 30, 2003 02:10 rounds to March 30, 2003 03:00&lt;/li&gt;
                * &lt;li&gt;March 30, 2003 02:40 rounds to March 30, 2003 04:00&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param date the date to work with
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * or &lt;code&gt;SEMI_MONTH&lt;/code&gt;
                * @return the rounded date (a different object)
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;
                * @throws ArithmeticException if the year is over 280 million
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Calendar</name>
                </type>
                <name>round</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>rounded</name> =
                            <init>
                                <expr>(<name>Calendar</name>)
                                    <call>
                                        <name><name>date</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>modify</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rounded</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>field</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>MODIFY_ROUND</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>rounded</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Round this date, leaving the field specified as the most
                * significant field.&lt;/p&gt;
                *
                * &lt;p&gt;For example, if you had the datetime of 28 Mar 2002
                * 13:45:01.231, if this was passed with HOUR, it would return
                * 28 Mar 2002 14:00:00.000. If this was passed with MONTH, it
                * would return 1 April 2002 0:00:00.000.&lt;/p&gt;
                *
                * &lt;p&gt;For a date in a timezone that handles the change to daylight
                * saving time, rounding to Calendar.HOUR_OF_DAY will behave as follows.
                * Suppose daylight saving time begins at 02:00 on March 30. Rounding a
                * date that crosses this time would produce the following values:
                * &lt;ul&gt;
                * &lt;li&gt;March 30, 2003 01:10 rounds to March 30, 2003 01:00&lt;/li&gt;
                * &lt;li&gt;March 30, 2003 01:40 rounds to March 30, 2003 03:00&lt;/li&gt;
                * &lt;li&gt;March 30, 2003 02:10 rounds to March 30, 2003 03:00&lt;/li&gt;
                * &lt;li&gt;March 30, 2003 02:40 rounds to March 30, 2003 04:00&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param date the date to work with, either Date or Calendar
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * or &lt;code&gt;SEMI_MONTH&lt;/code&gt;
                * @return the rounded date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;
                * @throws ClassCastException if the object type is not a &lt;code&gt;Date&lt;/code&gt;
                * or &lt;code&gt;Calendar&lt;/code&gt;
                * @throws ArithmeticException if the year is over 280 million
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>round</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                <name>instanceof</name>
                                <name>Date</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name>round</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>Date</name>)
                                                        <name>date</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>field</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>date</name>
                                        <name>instanceof</name>
                                        <name>Calendar</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name>round</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>Calendar</name>)
                                                                <name>date</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>field</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>getTime</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>ClassCastException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Could not round " +
                                                                <name>date</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;Truncate this date, leaving the field specified as the most
                * significant field.&lt;/p&gt;
                *
                * &lt;p&gt;For example, if you had the datetime of 28 Mar 2002
                * 13:45:01.231, if you passed with HOUR, it would return 28 Mar
                * 2002 13:00:00.000. If this was passed with MONTH, it would
                * return 1 Mar 2002 0:00:00.000.&lt;/p&gt;
                *
                * @param date the date to work with
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * or &lt;code&gt;SEMI_MONTH&lt;/code&gt;
                * @return the rounded date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;
                * @throws ArithmeticException if the year is over 280 million
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>truncate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>gval</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>gval</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>modify</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>gval</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>field</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>MODIFY_TRUNCATE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>gval</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Truncate this date, leaving the field specified as the most
                * significant field.&lt;/p&gt;
                *
                * &lt;p&gt;For example, if you had the datetime of 28 Mar 2002
                * 13:45:01.231, if you passed with HOUR, it would return 28 Mar
                * 2002 13:00:00.000. If this was passed with MONTH, it would
                * return 1 Mar 2002 0:00:00.000.&lt;/p&gt;
                *
                * @param date the date to work with
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * or &lt;code&gt;SEMI_MONTH&lt;/code&gt;
                * @return the rounded date (a different object)
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;
                * @throws ArithmeticException if the year is over 280 million
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Calendar</name>
                </type>
                <name>truncate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>truncated</name> =
                            <init>
                                <expr>(<name>Calendar</name>)
                                    <call>
                                        <name><name>date</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>modify</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>truncated</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>field</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>MODIFY_TRUNCATE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>truncated</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Truncate this date, leaving the field specified as the most
                * significant field.&lt;/p&gt;
                *
                * &lt;p&gt;For example, if you had the datetime of 28 Mar 2002
                * 13:45:01.231, if you passed with HOUR, it would return 28 Mar
                * 2002 13:00:00.000. If this was passed with MONTH, it would
                * return 1 Mar 2002 0:00:00.000.&lt;/p&gt;
                *
                * @param date the date to work with, either &lt;code&gt;Date&lt;/code&gt;
                * or &lt;code&gt;Calendar&lt;/code&gt;
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * or &lt;code&gt;SEMI_MONTH&lt;/code&gt;
                * @return the rounded date
                * @throws IllegalArgumentException if the date
                * is &lt;code&gt;null&lt;/code&gt;
                * @throws ClassCastException if the object type is not a
                * &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;Calendar&lt;/code&gt;
                * @throws ArithmeticException if the year is over 280 million
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>truncate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                <name>instanceof</name>
                                <name>Date</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name>truncate</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>Date</name>)
                                                        <name>date</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>field</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>date</name>
                                        <name>instanceof</name>
                                        <name>Calendar</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name>truncate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>Calendar</name>)
                                                                <name>date</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>field</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>getTime</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>ClassCastException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Could not truncate " +
                                                                <name>date</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;Ceil this date, leaving the field specified as the most
                * significant field.&lt;/p&gt;
                *
                * &lt;p&gt;For example, if you had the datetime of 28 Mar 2002
                * 13:45:01.231, if you passed with HOUR, it would return 28 Mar
                * 2002 13:00:00.000. If this was passed with MONTH, it would
                * return 1 Mar 2002 0:00:00.000.&lt;/p&gt;
                *
                * @param date the date to work with
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * or &lt;code&gt;SEMI_MONTH&lt;/code&gt;
                * @return the rounded date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;
                * @throws ArithmeticException if the year is over 280 million
                * @since 2.5
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>ceiling</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>gval</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>gval</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>modify</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>gval</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>field</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>MODIFY_CEILING</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>gval</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Ceil this date, leaving the field specified as the most
                * significant field.&lt;/p&gt;
                *
                * &lt;p&gt;For example, if you had the datetime of 28 Mar 2002
                * 13:45:01.231, if you passed with HOUR, it would return 28 Mar
                * 2002 13:00:00.000. If this was passed with MONTH, it would
                * return 1 Mar 2002 0:00:00.000.&lt;/p&gt;
                *
                * @param date the date to work with
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * or &lt;code&gt;SEMI_MONTH&lt;/code&gt;
                * @return the rounded date (a different object)
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;
                * @throws ArithmeticException if the year is over 280 million
                * @since 2.5
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Calendar</name>
                </type>
                <name>ceiling</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>ceiled</name> =
                            <init>
                                <expr>(<name>Calendar</name>)
                                    <call>
                                        <name><name>date</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>modify</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ceiled</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>field</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>MODIFY_CEILING</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>ceiled</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Ceil this date, leaving the field specified as the most
                * significant field.&lt;/p&gt;
                *
                * &lt;p&gt;For example, if you had the datetime of 28 Mar 2002
                * 13:45:01.231, if you passed with HOUR, it would return 28 Mar
                * 2002 13:00:00.000. If this was passed with MONTH, it would
                * return 1 Mar 2002 0:00:00.000.&lt;/p&gt;
                *
                * @param date the date to work with, either &lt;code&gt;Date&lt;/code&gt;
                * or &lt;code&gt;Calendar&lt;/code&gt;
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * or &lt;code&gt;SEMI_MONTH&lt;/code&gt;
                * @return the rounded date
                * @throws IllegalArgumentException if the date
                * is &lt;code&gt;null&lt;/code&gt;
                * @throws ClassCastException if the object type is not a
                * &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;Calendar&lt;/code&gt;
                * @throws ArithmeticException if the year is over 280 million
                * @since 2.5
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Date</name>
                </type>
                <name>ceiling</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                <name>instanceof</name>
                                <name>Date</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name>ceiling</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>Date</name>)
                                                        <name>date</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>field</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>date</name>
                                        <name>instanceof</name>
                                        <name>Calendar</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name>ceiling</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>Calendar</name>)
                                                                <name>date</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>field</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>getTime</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>ClassCastException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Could not find ceiling of for type: " +
                                                                <call>
                                                                    <name><name>date</name>.
                                                                        <name>getClass</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;Internal calculation method.&lt;/p&gt;
                *
                * @param val the calendar
                * @param field the field constant
                * @param modType type to truncate, round or ceiling
                * @throws ArithmeticException if the year is over 280 million
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>modify</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>val</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>modType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>val</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>Calendar</name>.
                                                    <name>YEAR</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &gt; 280000000
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>ArithmeticException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Calendar value too large for accurate calculations"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>Calendar</name>.
                                    <name>MILLISECOND</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// ----------------- Fix for LANG-59 ---------------------- START
                        ---------------
                    </comment>
                    <comment type="line">// see http://issues.apache.org/jira/browse/LANG-59</comment>
                    <comment type="line">//</comment>
                    <comment type="line">// Manually truncate milliseconds, seconds and minutes, rather than using
                    </comment>
                    <comment type="line">// Calendar methods.</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>val</name>.
                                            <name>getTime</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>time</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>date</name>.
                                            <name>getTime</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>done</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// truncate milliseconds</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>millisecs</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>val</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Calendar</name>.
                                                        <name>MILLISECOND</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>MODIFY_TRUNCATE</name>
                                == <name>modType</name> || <name>millisecs</name> &lt; 500
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>time</name>
                                        = <name>time</name> -
                                        <name>millisecs</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>Calendar</name>.
                                    <name>SECOND</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>done</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// truncate seconds</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>seconds</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>val</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Calendar</name>.
                                                        <name>SECOND</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!<name>done</name> &amp;&amp; (<name>MODIFY_TRUNCATE</name> == <name>modType</name> || <name>
                                seconds
                            </name> &lt; 30)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>time</name>
                                        = <name>time</name> - (<name>seconds</name> * 1000L)
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>Calendar</name>.
                                    <name>MINUTE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>done</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// truncate minutes</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minutes</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>val</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Calendar</name>.
                                                        <name>MINUTE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!<name>done</name> &amp;&amp; (<name>MODIFY_TRUNCATE</name> == <name>modType</name> || <name>
                                minutes
                            </name> &lt; 30)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>time</name>
                                        = <name>time</name> - (<name>minutes</name> * 60000L)
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// reset time</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>date</name>.
                                        <name>getTime</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>time</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>date</name>.
                                                <name>setTime</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>time</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>val</name>.
                                                <name>setTime</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>date</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// ----------------- Fix for LANG-59 ----------------------- END
                        ----------------
                    </comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>roundUp</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>fields</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>j</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>j</name>
                                        &lt;
                                        <name>
                                            <name>fields</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <name>length</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>j</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>
                                                    <name>fields</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                    <index>[
                                                        <expr>
                                                            <name>j</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ==
                                                <name>field</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">//This is our field... we stop looping</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>modType</name>
                                                            == <name>MODIFY_CEILING</name> || (<name>modType</name> == <name>
                                                            MODIFY_ROUND
                                                        </name> &amp;&amp; <name>roundUp</name>)
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>field</name>
                                                                        ==
                                                                        <name><name>DateUtils</name>.
                                                                            <name>SEMI_MONTH</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <comment type="line">//This is a special case
                                                                            that's hard to generalize
                                                                        </comment>
                                                                        <comment type="line">//If the date is 1, we
                                                                            round up to 16, otherwise
                                                                        </comment>
                                                                        <comment type="line">// we subtract 15 days and
                                                                            add 1 month
                                                                        </comment>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>val</name>.
                                                                                            <name>get</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        Calendar</name>.
                                                                                                        <name>DATE
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    == 1
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>val</name>.
                                                                                                    <name>add</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                Calendar</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    DATE
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>15</expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                            <else>else
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>val</name>.
                                                                                                    <name>add</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                Calendar</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    DATE
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>-15</expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>val</name>.
                                                                                                    <name>add</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                Calendar</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    MONTH
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>1</expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </else>
                                                                        </if>
                                                                        <comment type="line">// ----------------- Fix
                                                                            for LANG-440 ---------------------- START
                                                                            ---------------
                                                                        </comment>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>field</name>
                                                                                ==
                                                                                <name><name>Calendar</name>.
                                                                                    <name>AM_PM</name>
                                                                                </name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <comment type="line">// This is a
                                                                                    special case
                                                                                </comment>
                                                                                <comment type="line">// If the time is
                                                                                    0, we round up to 12, otherwise
                                                                                </comment>
                                                                                <comment type="line">// we subtract 12
                                                                                    hours and add 1 day
                                                                                </comment>
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>val</name>.
                                                                                                    <name>get</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                Calendar</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    HOUR_OF_DAY
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                            == 0
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            val</name>.
                                                                                                            <name>add
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            Calendar</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            HOUR_OF_DAY
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    12
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                    <else>else
                                                                                        <block>{
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            val</name>.
                                                                                                            <name>add
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            Calendar</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            HOUR_OF_DAY
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    -12
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            val</name>.
                                                                                                            <name>add
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            Calendar</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            DATE
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    1
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            }
                                                                                        </block>
                                                                                    </else>
                                                                                </if>
                                                                                <comment type="line">//
                                                                                    ----------------- Fix for LANG-440
                                                                                    ---------------------- END
                                                                                    ---------------
                                                                                </comment>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <block>{
                                                                                <comment type="line">//We need at add
                                                                                    one to this field since the
                                                                                </comment>
                                                                                <comment type="line">// last number
                                                                                    causes us to round up
                                                                                </comment>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>val</name>.
                                                                                                <name>add</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                fields
                                                                                                            </name>
                                                                                                            <index>[
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        i
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                                ]
                                                                                                            </index>
                                                                                                            <index>
                                                                                                                [<expr>
                                                                                                                0</expr>]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>1</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <return>return;</return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <comment type="line">//We have various fields that are not easy roundings</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>offset</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>offsetSet</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">//These are special types of fields that require different rounding
                                rules
                            </comment>
                            <switch>switch
                                <condition>(
                                    <expr>
                                        <name>field</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <case>case
                                        <expr>
                                            <name><name>DateUtils</name>.
                                                <name>SEMI_MONTH</name>
                                            </name>
                                        </expr>
                                        :
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>
                                                        <name>fields</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                    ==
                                                    <name><name>Calendar</name>.
                                                        <name>DATE</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">//If we're going to drop the DATE field's
                                                        value,
                                                    </comment>
                                                    <comment type="line">// we want to do this our own way.</comment>
                                                    <comment type="line">//We need to subtrace 1 since the date has a
                                                        minimum of 1
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>offset</name>
                                                            =
                                                            <call>
                                                                <name><name>val</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>Calendar</name>.
                                                                                <name>DATE</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            - 1
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <comment type="line">//If we're above 15 days adjustment, that means
                                                        we're in the
                                                    </comment>
                                                    <comment type="line">// bottom half of the month and should stay
                                                        accordingly.
                                                    </comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>offset</name>
                                                                &gt;= 15
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>offset</name>
                                                                        -= 15
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <comment type="line">//Record whether we're in the top or bottom
                                                        half of that range
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>roundUp</name>
                                                            = <name>offset</name> &gt; 7
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>offsetSet</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <break>break;</break>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>AM_PM</name>
                                            </name>
                                        </expr>
                                        :
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>
                                                        <name>fields</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                    ==
                                                    <name><name>Calendar</name>.
                                                        <name>HOUR_OF_DAY</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">//If we're going to drop the HOUR field's
                                                        value,
                                                    </comment>
                                                    <comment type="line">// we want to do this our own way.</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>offset</name>
                                                            =
                                                            <call>
                                                                <name><name>val</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>Calendar</name>.
                                                                                <name>HOUR_OF_DAY</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>offset</name>
                                                                &gt;= 12
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>offset</name>
                                                                        -= 12
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>roundUp</name>
                                                            = <name>offset</name> &gt;= 6
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>offsetSet</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <break>break;</break>
                                    </case>
                                    }
                                </block>
                            </switch>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <name>offsetSet</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>min</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>val</name>.
                                                                <name>getActualMinimum</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>
                                                                            <name>fields</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                            <index>[<expr>0</expr>]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>max</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>val</name>.
                                                                <name>getActualMaximum</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>
                                                                            <name>fields</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                            <index>[<expr>0</expr>]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <comment type="line">//Calculate the offset from the minimum allowed value
                                        </comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>offset</name>
                                                =
                                                <call>
                                                    <name><name>val</name>.
                                                        <name>get</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>fields</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                -
                                                <name>min</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">//Set roundUp if this is more than half way between the
                                            minimum and maximum
                                        </comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>roundUp</name>
                                                = <name>offset</name> &gt; ((<name>max</name> - <name>min</name>) / 2)
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <comment type="line">//We need to remove this field</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>offset</name>
                                        != 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>val</name>.
                                                        <name>set</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>fields</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>val</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>fields</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                    <index>[<expr>0</expr>]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                -
                                                                <name>offset</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>IllegalArgumentException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"The field " + <name>field</name> + " is not supported"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>

                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;This constructs an &lt;code&gt;Iterator&lt;/code&gt; over each day in a date
                * range defined by a focus date and range style.&lt;/p&gt;
                *
                * &lt;p&gt;For instance, passing Thursday, July 4, 2002 and a
                * &lt;code&gt;RANGE_MONTH_SUNDAY&lt;/code&gt; will return an &lt;code&gt;Iterator&lt;/code&gt;
                * that starts with Sunday, June 30, 2002 and ends with Saturday, August 3,
                * 2002, returning a Calendar instance for each intermediate day.&lt;/p&gt;
                *
                * &lt;p&gt;This method provides an iterator that returns Calendar objects.
                * The days are progressed using {@link Calendar#add(int, int)}.&lt;/p&gt;
                *
                * @param focus the date to work with, not null
                * @param rangeStyle the style constant to use. Must be one of
                * {@link DateUtils#RANGE_MONTH_SUNDAY},
                * {@link DateUtils#RANGE_MONTH_MONDAY},
                * {@link DateUtils#RANGE_WEEK_SUNDAY},
                * {@link DateUtils#RANGE_WEEK_MONDAY},
                * {@link DateUtils#RANGE_WEEK_RELATIVE},
                * {@link DateUtils#RANGE_WEEK_CENTER}
                * @return the date iterator, which always returns Calendar instances
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;
                * @throws IllegalArgumentException if the rangeStyle is invalid
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Iterator</name>
                </type>
                <name>iterator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>focus</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rangeStyle</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>focus</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>gval</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>gval</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>focus</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>iterator</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>gval</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>rangeStyle</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;This constructs an &lt;code&gt;Iterator&lt;/code&gt; over each day in a date
                * range defined by a focus date and range style.&lt;/p&gt;
                *
                * &lt;p&gt;For instance, passing Thursday, July 4, 2002 and a
                * &lt;code&gt;RANGE_MONTH_SUNDAY&lt;/code&gt; will return an &lt;code&gt;Iterator&lt;/code&gt;
                * that starts with Sunday, June 30, 2002 and ends with Saturday, August 3,
                * 2002, returning a Calendar instance for each intermediate day.&lt;/p&gt;
                *
                * &lt;p&gt;This method provides an iterator that returns Calendar objects.
                * The days are progressed using {@link Calendar#add(int, int)}.&lt;/p&gt;
                *
                * @param focus the date to work with
                * @param rangeStyle the style constant to use. Must be one of
                * {@link DateUtils#RANGE_MONTH_SUNDAY},
                * {@link DateUtils#RANGE_MONTH_MONDAY},
                * {@link DateUtils#RANGE_WEEK_SUNDAY},
                * {@link DateUtils#RANGE_WEEK_MONDAY},
                * {@link DateUtils#RANGE_WEEK_RELATIVE},
                * {@link DateUtils#RANGE_WEEK_CENTER}
                * @return the date iterator
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;
                * @throws IllegalArgumentException if the rangeStyle is invalid
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Iterator</name>
                </type>
                <name>iterator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>focus</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rangeStyle</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>focus</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>start</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>end</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>startCutoff</name> =
                            <init>
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>SUNDAY</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>endCutoff</name> =
                            <init>
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>SATURDAY</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>rangeStyle</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>RANGE_MONTH_SUNDAY</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>RANGE_MONTH_MONDAY</name>
                                </expr>
                                :
                                <comment type="line">//Set start to the first of the month</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>start</name>
                                        =
                                        <call>
                                            <name>truncate</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>focus</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>MONTH</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//Set end to the last of the month</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>end</name>
                                        = (<name>Calendar</name>)
                                        <call>
                                            <name><name>start</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>end</name>.
                                                <name>add</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>MONTH</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>1</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>end</name>.
                                                <name>add</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>DATE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>-1</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//Loop start back to the previous sunday or monday</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>rangeStyle</name>
                                            ==
                                            <name>RANGE_MONTH_MONDAY</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>startCutoff</name>
                                                    =
                                                    <name><name>Calendar</name>.
                                                        <name>MONDAY</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>endCutoff</name>
                                                    =
                                                    <name><name>Calendar</name>.
                                                        <name>SUNDAY</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>RANGE_WEEK_SUNDAY</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>RANGE_WEEK_MONDAY</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>RANGE_WEEK_RELATIVE</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>RANGE_WEEK_CENTER</name>
                                </expr>
                                :
                                <comment type="line">//Set start and end to the current date</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>start</name>
                                        =
                                        <call>
                                            <name>truncate</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>focus</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>DATE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>end</name>
                                        =
                                        <call>
                                            <name>truncate</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>focus</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>DATE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <switch>switch
                                    <condition>(
                                        <expr>
                                            <name>rangeStyle</name>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <case>case
                                            <expr>
                                                <name>RANGE_WEEK_SUNDAY</name>
                                            </expr>
                                            :
                                            <comment type="line">//already set by default</comment>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name>RANGE_WEEK_MONDAY</name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>startCutoff</name>
                                                    =
                                                    <name><name>Calendar</name>.
                                                        <name>MONDAY</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>endCutoff</name>
                                                    =
                                                    <name><name>Calendar</name>.
                                                        <name>SUNDAY</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name>RANGE_WEEK_RELATIVE</name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>startCutoff</name>
                                                    =
                                                    <call>
                                                        <name><name>focus</name>.
                                                            <name>get</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Calendar</name>.
                                                                        <name>DAY_OF_WEEK</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>endCutoff</name>
                                                    = <name>startCutoff</name> - 1
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name>RANGE_WEEK_CENTER</name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>startCutoff</name>
                                                    =
                                                    <call>
                                                        <name><name>focus</name>.
                                                            <name>get</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Calendar</name>.
                                                                        <name>DAY_OF_WEEK</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    - 3
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>endCutoff</name>
                                                    =
                                                    <call>
                                                        <name><name>focus</name>.
                                                            <name>get</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Calendar</name>.
                                                                        <name>DAY_OF_WEEK</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    + 3
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        }
                                    </block>
                                </switch>
                                <break>break;</break>
                            </case>
                            <default>default:
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The range style " + <name>rangeStyle</name> + " is not
                                                        valid."
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                            </default>
                            }
                        </block>
                    </switch>
                    <if>if
                        <condition>(
                            <expr>
                                <name>startCutoff</name>
                                &lt;
                                <name><name>Calendar</name>.
                                    <name>SUNDAY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>startCutoff</name>
                                        += 7
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>startCutoff</name>
                                &gt;
                                <name><name>Calendar</name>.
                                    <name>SATURDAY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>startCutoff</name>
                                        -= 7
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>endCutoff</name>
                                &lt;
                                <name><name>Calendar</name>.
                                    <name>SUNDAY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>endCutoff</name>
                                        += 7
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>endCutoff</name>
                                &gt;
                                <name><name>Calendar</name>.
                                    <name>SATURDAY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>endCutoff</name>
                                        -= 7
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>start</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>Calendar</name>.
                                                    <name>DAY_OF_WEEK</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                !=
                                <name>startCutoff</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>start</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Calendar</name>.
                                                        <name>DATE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>-1</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>end</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>Calendar</name>.
                                                    <name>DAY_OF_WEEK</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                !=
                                <name>endCutoff</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>end</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Calendar</name>.
                                                        <name>DATE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <return>return
                        <expr>new
                            <call>
                                <name>DateIterator</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>start</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>end</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;This constructs an &lt;code&gt;Iterator&lt;/code&gt; over each day in a date
                * range defined by a focus date and range style.&lt;/p&gt;
                *
                * &lt;p&gt;For instance, passing Thursday, July 4, 2002 and a
                * &lt;code&gt;RANGE_MONTH_SUNDAY&lt;/code&gt; will return an &lt;code&gt;Iterator&lt;/code&gt;
                * that starts with Sunday, June 30, 2002 and ends with Saturday, August 3,
                * 2002, returning a Calendar instance for each intermediate day.&lt;/p&gt;
                *
                * @param focus the date to work with, either
                * &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;Calendar&lt;/code&gt;
                * @param rangeStyle the style constant to use. Must be one of the range
                * styles listed for the {@link #iterator(Calendar, int)} method.
                * @return the date iterator
                * @throws IllegalArgumentException if the date
                * is &lt;code&gt;null&lt;/code&gt;
                * @throws ClassCastException if the object type is
                * not a &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;Calendar&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Iterator</name>
                </type>
                <name>iterator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>focus</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rangeStyle</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>focus</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>focus</name>
                                <name>instanceof</name>
                                <name>Date</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name>iterator</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>Date</name>)
                                                        <name>focus</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>rangeStyle</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>focus</name>
                                        <name>instanceof</name>
                                        <name>Calendar</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name>iterator</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>Calendar</name>)
                                                                <name>focus</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>rangeStyle</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>ClassCastException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Could not iterate based on " +
                                                                <name>focus</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the number of milliseconds within the
                * fragment. All datefields greater than the fragment will be ignored.&lt;/p&gt;
                *
                * &lt;p&gt;Asking the milliseconds of any date will only return the number of milliseconds
                * of the current second (resulting in a number between 0 and 999). This
                * method will retrieve the number of milliseconds for any fragment.
                * For example, if you want to calculate the number of milliseconds past today,
                * your fragment is Calendar.DATE or Calendar.DAY_OF_YEAR. The result will
                * be all milliseconds of the past hour(s), minutes(s) and second(s).&lt;/p&gt;
                *
                * &lt;p&gt;Valid fragments are: Calendar.YEAR, Calendar.MONTH, both
                * Calendar.DAY_OF_YEAR and Calendar.DATE, Calendar.HOUR_OF_DAY,
                * Calendar.MINUTE, Calendar.SECOND and Calendar.MILLISECOND
                * A fragment less than or equal to a SECOND field will return 0.&lt;/p&gt;
                *
                * &lt;p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.SECOND as fragment will return 538&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.SECOND as fragment will return 538&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.MINUTE as fragment will return 10538 (10*1000 +
                538)&lt;/li&gt;
                * &lt;li&gt;January 16, 2008 7:15:10.538 with Calendar.MILLISECOND as fragment will return 0
                * (a millisecond cannot be split in milliseconds)&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param date the date to work with, not null
                * @param fragment the Calendar field part of date to calculate
                * @return number of milliseconds within the fragment of date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragmentInMilliseconds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFragment</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fragment</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MILLISECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the number of seconds within the
                * fragment. All datefields greater than the fragment will be ignored.&lt;/p&gt;
                *
                * &lt;p&gt;Asking the seconds of any date will only return the number of seconds
                * of the current minute (resulting in a number between 0 and 59). This
                * method will retrieve the number of seconds for any fragment.
                * For example, if you want to calculate the number of seconds past today,
                * your fragment is Calendar.DATE or Calendar.DAY_OF_YEAR. The result will
                * be all seconds of the past hour(s) and minutes(s).&lt;/p&gt;
                *
                * &lt;p&gt;Valid fragments are: Calendar.YEAR, Calendar.MONTH, both
                * Calendar.DAY_OF_YEAR and Calendar.DATE, Calendar.HOUR_OF_DAY,
                * Calendar.MINUTE, Calendar.SECOND and Calendar.MILLISECOND
                * A fragment less than or equal to a SECOND field will return 0.&lt;/p&gt;
                *
                * &lt;p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.MINUTE as fragment will return 10
                * (equivalent to deprecated date.getSeconds())&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.MINUTE as fragment will return 10
                * (equivalent to deprecated date.getSeconds())&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.DAY_OF_YEAR as fragment will return 26110
                * (7*3600 + 15*60 + 10)&lt;/li&gt;
                * &lt;li&gt;January 16, 2008 7:15:10.538 with Calendar.MILLISECOND as fragment will return 0
                * (a millisecond cannot be split in seconds)&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param date the date to work with, not null
                * @param fragment the Calendar field part of date to calculate
                * @return number of seconds within the fragment of date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragmentInSeconds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFragment</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fragment</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>SECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the number of minutes within the
                * fragment. All datefields greater than the fragment will be ignored.&lt;/p&gt;
                *
                * &lt;p&gt;Asking the minutes of any date will only return the number of minutes
                * of the current hour (resulting in a number between 0 and 59). This
                * method will retrieve the number of minutes for any fragment.
                * For example, if you want to calculate the number of minutes past this month,
                * your fragment is Calendar.MONTH. The result will be all minutes of the
                * past day(s) and hour(s).&lt;/p&gt;
                *
                * &lt;p&gt;Valid fragments are: Calendar.YEAR, Calendar.MONTH, both
                * Calendar.DAY_OF_YEAR and Calendar.DATE, Calendar.HOUR_OF_DAY,
                * Calendar.MINUTE, Calendar.SECOND and Calendar.MILLISECOND
                * A fragment less than or equal to a MINUTE field will return 0.&lt;/p&gt;
                *
                * &lt;p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.HOUR_OF_DAY as fragment will return 15
                * (equivalent to deprecated date.getMinutes())&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.HOUR_OF_DAY as fragment will return 15
                * (equivalent to deprecated date.getMinutes())&lt;/li&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.MONTH as fragment will return 15&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.MONTH as fragment will return 435 (7*60 + 15)&lt;/li&gt;
                * &lt;li&gt;January 16, 2008 7:15:10.538 with Calendar.MILLISECOND as fragment will return 0
                * (a millisecond cannot be split in minutes)&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param date the date to work with, not null
                * @param fragment the Calendar field part of date to calculate
                * @return number of minutes within the fragment of date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragmentInMinutes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFragment</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fragment</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MINUTE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the number of hours within the
                * fragment. All datefields greater than the fragment will be ignored.&lt;/p&gt;
                *
                * &lt;p&gt;Asking the hours of any date will only return the number of hours
                * of the current day (resulting in a number between 0 and 23). This
                * method will retrieve the number of hours for any fragment.
                * For example, if you want to calculate the number of hours past this month,
                * your fragment is Calendar.MONTH. The result will be all hours of the
                * past day(s).&lt;/p&gt;
                *
                * &lt;p&gt;Valid fragments are: Calendar.YEAR, Calendar.MONTH, both
                * Calendar.DAY_OF_YEAR and Calendar.DATE, Calendar.HOUR_OF_DAY,
                * Calendar.MINUTE, Calendar.SECOND and Calendar.MILLISECOND
                * A fragment less than or equal to a HOUR field will return 0.&lt;/p&gt;
                *
                * &lt;p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.DAY_OF_YEAR as fragment will return 7
                * (equivalent to deprecated date.getHours())&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.DAY_OF_YEAR as fragment will return 7
                * (equivalent to deprecated date.getHours())&lt;/li&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.MONTH as fragment will return 7&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.MONTH as fragment will return 127 (5*24 + 7)&lt;/li&gt;
                * &lt;li&gt;January 16, 2008 7:15:10.538 with Calendar.MILLISECOND as fragment will return 0
                * (a millisecond cannot be split in hours)&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param date the date to work with, not null
                * @param fragment the Calendar field part of date to calculate
                * @return number of hours within the fragment of date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragmentInHours</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFragment</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fragment</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>HOUR_OF_DAY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the number of days within the
                * fragment. All datefields greater than the fragment will be ignored.&lt;/p&gt;
                *
                * &lt;p&gt;Asking the days of any date will only return the number of days
                * of the current month (resulting in a number between 1 and 31). This
                * method will retrieve the number of days for any fragment.
                * For example, if you want to calculate the number of days past this year,
                * your fragment is Calendar.YEAR. The result will be all days of the
                * past month(s).&lt;/p&gt;
                *
                * &lt;p&gt;Valid fragments are: Calendar.YEAR, Calendar.MONTH, both
                * Calendar.DAY_OF_YEAR and Calendar.DATE, Calendar.HOUR_OF_DAY,
                * Calendar.MINUTE, Calendar.SECOND and Calendar.MILLISECOND
                * A fragment less than or equal to a DAY field will return 0.&lt;/p&gt;
                *
                * &lt;p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;January 28, 2008 with Calendar.MONTH as fragment will return 28
                * (equivalent to deprecated date.getDay())&lt;/li&gt;
                * &lt;li&gt;February 28, 2008 with Calendar.MONTH as fragment will return 28
                * (equivalent to deprecated date.getDay())&lt;/li&gt;
                * &lt;li&gt;January 28, 2008 with Calendar.YEAR as fragment will return 28&lt;/li&gt;
                * &lt;li&gt;February 28, 2008 with Calendar.YEAR as fragment will return 59&lt;/li&gt;
                * &lt;li&gt;January 28, 2008 with Calendar.MILLISECOND as fragment will return 0
                * (a millisecond cannot be split in days)&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param date the date to work with, not null
                * @param fragment the Calendar field part of date to calculate
                * @return number of days within the fragment of date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragmentInDays</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFragment</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fragment</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DAY_OF_YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the number of milliseconds within the
                * fragment. All datefields greater than the fragment will be ignored.&lt;/p&gt;
                *
                * &lt;p&gt;Asking the milliseconds of any date will only return the number of milliseconds
                * of the current second (resulting in a number between 0 and 999). This
                * method will retrieve the number of milliseconds for any fragment.
                * For example, if you want to calculate the number of seconds past today,
                * your fragment is Calendar.DATE or Calendar.DAY_OF_YEAR. The result will
                * be all seconds of the past hour(s), minutes(s) and second(s).&lt;/p&gt;
                *
                * &lt;p&gt;Valid fragments are: Calendar.YEAR, Calendar.MONTH, both
                * Calendar.DAY_OF_YEAR and Calendar.DATE, Calendar.HOUR_OF_DAY,
                * Calendar.MINUTE, Calendar.SECOND and Calendar.MILLISECOND
                * A fragment less than or equal to a MILLISECOND field will return 0.&lt;/p&gt;
                *
                * &lt;p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.SECOND as fragment will return 538
                * (equivalent to calendar.get(Calendar.MILLISECOND))&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.SECOND as fragment will return 538
                * (equivalent to calendar.get(Calendar.MILLISECOND))&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.MINUTE as fragment will return 10538
                * (10*1000 + 538)&lt;/li&gt;
                * &lt;li&gt;January 16, 2008 7:15:10.538 with Calendar.MILLISECOND as fragment will return 0
                * (a millisecond cannot be split in milliseconds)&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param calendar the calendar to work with, not null
                * @param fragment the Calendar field part of calendar to calculate
                * @return number of milliseconds within the fragment of date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragmentInMilliseconds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFragment</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>calendar</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fragment</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MILLISECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * &lt;p&gt;Returns the number of seconds within the
                * fragment. All datefields greater than the fragment will be ignored.&lt;/p&gt;
                *
                * &lt;p&gt;Asking the seconds of any date will only return the number of seconds
                * of the current minute (resulting in a number between 0 and 59). This
                * method will retrieve the number of seconds for any fragment.
                * For example, if you want to calculate the number of seconds past today,
                * your fragment is Calendar.DATE or Calendar.DAY_OF_YEAR. The result will
                * be all seconds of the past hour(s) and minutes(s).&lt;/p&gt;
                *
                * &lt;p&gt;Valid fragments are: Calendar.YEAR, Calendar.MONTH, both
                * Calendar.DAY_OF_YEAR and Calendar.DATE, Calendar.HOUR_OF_DAY,
                * Calendar.MINUTE, Calendar.SECOND and Calendar.MILLISECOND
                * A fragment less than or equal to a SECOND field will return 0.&lt;/p&gt;
                *
                * &lt;p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.MINUTE as fragment will return 10
                * (equivalent to calendar.get(Calendar.SECOND))&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.MINUTE as fragment will return 10
                * (equivalent to calendar.get(Calendar.SECOND))&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.DAY_OF_YEAR as fragment will return 26110
                * (7*3600 + 15*60 + 10)&lt;/li&gt;
                * &lt;li&gt;January 16, 2008 7:15:10.538 with Calendar.MILLISECOND as fragment will return 0
                * (a millisecond cannot be split in seconds)&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param calendar the calendar to work with, not null
                * @param fragment the Calendar field part of calendar to calculate
                * @return number of seconds within the fragment of date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragmentInSeconds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFragment</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>calendar</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fragment</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>SECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the number of minutes within the
                * fragment. All datefields greater than the fragment will be ignored.&lt;/p&gt;
                *
                * &lt;p&gt;Asking the minutes of any date will only return the number of minutes
                * of the current hour (resulting in a number between 0 and 59). This
                * method will retrieve the number of minutes for any fragment.
                * For example, if you want to calculate the number of minutes past this month,
                * your fragment is Calendar.MONTH. The result will be all minutes of the
                * past day(s) and hour(s).&lt;/p&gt;
                *
                * &lt;p&gt;Valid fragments are: Calendar.YEAR, Calendar.MONTH, both
                * Calendar.DAY_OF_YEAR and Calendar.DATE, Calendar.HOUR_OF_DAY,
                * Calendar.MINUTE, Calendar.SECOND and Calendar.MILLISECOND
                * A fragment less than or equal to a MINUTE field will return 0.&lt;/p&gt;
                *
                * &lt;p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.HOUR_OF_DAY as fragment will return 15
                * (equivalent to calendar.get(Calendar.MINUTES))&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.HOUR_OF_DAY as fragment will return 15
                * (equivalent to calendar.get(Calendar.MINUTES))&lt;/li&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.MONTH as fragment will return 15&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.MONTH as fragment will return 435 (7*60 + 15)&lt;/li&gt;
                * &lt;li&gt;January 16, 2008 7:15:10.538 with Calendar.MILLISECOND as fragment will return 0
                * (a millisecond cannot be split in minutes)&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param calendar the calendar to work with, not null
                * @param fragment the Calendar field part of calendar to calculate
                * @return number of minutes within the fragment of date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragmentInMinutes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFragment</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>calendar</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fragment</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MINUTE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the number of hours within the
                * fragment. All datefields greater than the fragment will be ignored.&lt;/p&gt;
                *
                * &lt;p&gt;Asking the hours of any date will only return the number of hours
                * of the current day (resulting in a number between 0 and 23). This
                * method will retrieve the number of hours for any fragment.
                * For example, if you want to calculate the number of hours past this month,
                * your fragment is Calendar.MONTH. The result will be all hours of the
                * past day(s).&lt;/p&gt;
                *
                * &lt;p&gt;Valid fragments are: Calendar.YEAR, Calendar.MONTH, both
                * Calendar.DAY_OF_YEAR and Calendar.DATE, Calendar.HOUR_OF_DAY,
                * Calendar.MINUTE, Calendar.SECOND and Calendar.MILLISECOND
                * A fragment less than or equal to a HOUR field will return 0.&lt;/p&gt;
                *
                * &lt;p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.DAY_OF_YEAR as fragment will return 7
                * (equivalent to calendar.get(Calendar.HOUR_OF_DAY))&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.DAY_OF_YEAR as fragment will return 7
                * (equivalent to calendar.get(Calendar.HOUR_OF_DAY))&lt;/li&gt;
                * &lt;li&gt;January 1, 2008 7:15:10.538 with Calendar.MONTH as fragment will return 7&lt;/li&gt;
                * &lt;li&gt;January 6, 2008 7:15:10.538 with Calendar.MONTH as fragment will return 127 (5*24 + 7)&lt;/li&gt;
                * &lt;li&gt;January 16, 2008 7:15:10.538 with Calendar.MILLISECOND as fragment will return 0
                * (a millisecond cannot be split in hours)&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param calendar the calendar to work with, not null
                * @param fragment the Calendar field part of calendar to calculate
                * @return number of hours within the fragment of date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragmentInHours</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFragment</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>calendar</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fragment</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>HOUR_OF_DAY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the number of days within the
                * fragment. All datefields greater than the fragment will be ignored.&lt;/p&gt;
                *
                * &lt;p&gt;Asking the days of any date will only return the number of days
                * of the current month (resulting in a number between 1 and 31). This
                * method will retrieve the number of days for any fragment.
                * For example, if you want to calculate the number of days past this year,
                * your fragment is Calendar.YEAR. The result will be all days of the
                * past month(s).&lt;/p&gt;
                *
                * &lt;p&gt;Valid fragments are: Calendar.YEAR, Calendar.MONTH, both
                * Calendar.DAY_OF_YEAR and Calendar.DATE, Calendar.HOUR_OF_DAY,
                * Calendar.MINUTE, Calendar.SECOND and Calendar.MILLISECOND
                * A fragment less than or equal to a DAY field will return 0.&lt;/p&gt;
                *
                * &lt;p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;January 28, 2008 with Calendar.MONTH as fragment will return 28
                * (equivalent to calendar.get(Calendar.DAY_OF_MONTH))&lt;/li&gt;
                * &lt;li&gt;February 28, 2008 with Calendar.MONTH as fragment will return 28
                * (equivalent to calendar.get(Calendar.DAY_OF_MONTH))&lt;/li&gt;
                * &lt;li&gt;January 28, 2008 with Calendar.YEAR as fragment will return 28
                * (equivalent to calendar.get(Calendar.DAY_OF_YEAR))&lt;/li&gt;
                * &lt;li&gt;February 28, 2008 with Calendar.YEAR as fragment will return 59
                * (equivalent to calendar.get(Calendar.DAY_OF_YEAR))&lt;/li&gt;
                * &lt;li&gt;January 28, 2008 with Calendar.MILLISECOND as fragment will return 0
                * (a millisecond cannot be split in days)&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @param calendar the calendar to work with, not null
                * @param fragment the Calendar field part of calendar to calculate
                * @return number of days within the fragment of date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragmentInDays</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getFragment</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>calendar</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fragment</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DAY_OF_YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Date-version for fragment-calculation in any unit
                *
                * @param date the date to work with, not null
                * @param fragment the Calendar field part of date to calculate
                * @param unit Calendar field defining the unit
                * @return number of units within the fragment of the date
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>unit</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>date</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>calendar</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>getFragment</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>calendar</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fragment</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>unit</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Calendar-version for fragment-calculation in any unit
                *
                * @param calendar the calendar to work with, not null
                * @param fragment the Calendar field part of calendar to calculate
                * @param unit Calendar field defining the unit
                * @return number of units within the fragment of the calendar
                * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt; or
                * fragment is not supported
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getFragment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fragment</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>unit</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>calendar</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The date must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>millisPerUnit</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getMillisPerUnit</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>unit</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Fragments bigger than a day require a breakdown to days</comment>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>fragment</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>YEAR</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        += (
                                        <call>
                                            <name><name>calendar</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>DAY_OF_YEAR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        * <name>MILLIS_PER_DAY</name>) /
                                        <name>millisPerUnit</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>MONTH</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        += (
                                        <call>
                                            <name><name>calendar</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>DAY_OF_MONTH</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        * <name>MILLIS_PER_DAY</name>) /
                                        <name>millisPerUnit</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>

                    <switch>switch
                        <condition>(
                            <expr>
                                <name>fragment</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <comment type="line">// Number of days already calculated for these cases</comment>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>YEAR</name>
                                    </name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>MONTH</name>
                                    </name>
                                </expr>
                                :

                                <comment type="line">// The rest of the valid cases</comment>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>DAY_OF_YEAR</name>
                                    </name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>DATE</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        += (
                                        <call>
                                            <name><name>calendar</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>HOUR_OF_DAY</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        * <name>MILLIS_PER_HOUR</name>) /
                                        <name>millisPerUnit</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//$FALL-THROUGH$</comment>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>HOUR_OF_DAY</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        += (
                                        <call>
                                            <name><name>calendar</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>MINUTE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        * <name>MILLIS_PER_MINUTE</name>) /
                                        <name>millisPerUnit</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//$FALL-THROUGH$</comment>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>MINUTE</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        += (
                                        <call>
                                            <name><name>calendar</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>SECOND</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        * <name>MILLIS_PER_SECOND</name>) /
                                        <name>millisPerUnit</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//$FALL-THROUGH$</comment>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>SECOND</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        += (
                                        <call>
                                            <name><name>calendar</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>MILLISECOND</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        * 1) /
                                        <name>millisPerUnit</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>MILLISECOND</name>
                                    </name>
                                </expr>
                                :
                                <break>break;</break>
                                <comment type="line">//never useful</comment>
                            </case>
                            <default>default:
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The fragment " + <name>fragment</name> + " is not supported"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                            </default>
                            }
                        </block>
                    </switch>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Determines if two calendars are equal up to no more than the specified
                * most significant field.
                *
                * @param cal1 the first calendar, not &lt;code&gt;null&lt;/code&gt;
                * @param cal2 the second calendar, not &lt;code&gt;null&lt;/code&gt;
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * @return &lt;code&gt;true&lt;/code&gt; if equal; otherwise &lt;code&gt;false&lt;/code&gt;
                * @throws IllegalArgumentException if any argument is &lt;code&gt;null&lt;/code&gt;
                * @see #truncate(Calendar, int)
                * @see #truncatedEquals(Date, Date, int)
                * @since 2.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>truncatedEquals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>truncatedCompareTo</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cal1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cal2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>field</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            == 0
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Determines if two dates are equal up to no more than the specified
                * most significant field.
                *
                * @param date1 the first date, not &lt;code&gt;null&lt;/code&gt;
                * @param date2 the second date, not &lt;code&gt;null&lt;/code&gt;
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * @return &lt;code&gt;true&lt;/code&gt; if equal; otherwise &lt;code&gt;false&lt;/code&gt;
                * @throws IllegalArgumentException if any argument is &lt;code&gt;null&lt;/code&gt;
                * @see #truncate(Date, int)
                * @see #truncatedEquals(Calendar, Calendar, int)
                * @since 2.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>truncatedEquals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>truncatedCompareTo</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>date2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>field</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            == 0
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Determines how two calendars compare up to no more than the specified
                * most significant field.
                *
                * @param cal1 the first calendar, not &lt;code&gt;null&lt;/code&gt;
                * @param cal2 the second calendar, not &lt;code&gt;null&lt;/code&gt;
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * @return a negative integer, zero, or a positive integer as the first
                * calendar is less than, equal to, or greater than the second.
                * @throws IllegalArgumentException if any argument is &lt;code&gt;null&lt;/code&gt;
                * @see #truncate(Calendar, int)
                * @see #truncatedCompareTo(Date, Date, int)
                * @since 2.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>int</name>
                </type>
                <name>truncatedCompareTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>truncatedCal1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>truncate</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>cal1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>field</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>truncatedCal2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>truncate</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>cal2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>field</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>truncatedCal1</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>compareTo</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>truncatedCal2</name>.
                                                    <name>getTime</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Determines how two dates compare up to no more than the specified
                * most significant field.
                *
                * @param date1 the first date, not &lt;code&gt;null&lt;/code&gt;
                * @param date2 the second date, not &lt;code&gt;null&lt;/code&gt;
                * @param field the field from &lt;code&gt;Calendar&lt;/code&gt;
                * @return a negative integer, zero, or a positive integer as the first
                * date is less than, equal to, or greater than the second.
                * @throws IllegalArgumentException if any argument is &lt;code&gt;null&lt;/code&gt;
                * @see #truncate(Calendar, int)
                * @see #truncatedCompareTo(Date, Date, int)
                * @since 2.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>int</name>
                </type>
                <name>truncatedCompareTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>truncatedDate1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>truncate</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>date1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>field</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>truncatedDate2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>truncate</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>date2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>field</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>truncatedDate1</name>.
                                    <name>compareTo</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>truncatedDate2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the number of millis of a datefield, if this is a constant value
                *
                * @param unit A Calendar field which is a valid unit for a fragment
                * @return number of millis
                * @throws IllegalArgumentException if date can't be represented in millisenconds
                * @since 2.4
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getMillisPerUnit</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>unit</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name><name>Long</name>.
                                        <name>MAX_VALUE</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>unit</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>DAY_OF_YEAR</name>
                                    </name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>DATE</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <name>MILLIS_PER_DAY</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>HOUR_OF_DAY</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <name>MILLIS_PER_HOUR</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>MINUTE</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <name>MILLIS_PER_MINUTE</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>SECOND</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <name>MILLIS_PER_SECOND</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Calendar</name>.
                                        <name>MILLISECOND</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        = 1
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <default>default:
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The unit " + <name>unit</name> + " cannot be represented is
                                                        milleseconds"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                            </default>
                            }
                        </block>
                    </switch>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Date iterator.&lt;/p&gt;
                */
            </comment>
            <class>
                <specifier>static</specifier>
                class <name>DateIterator</name>
                <super>
                    <implements>implements
                        <name>Iterator</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>Calendar</name>
                            </type>
                            <name>endFinal</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>Calendar</name>
                            </type>
                            <name>spot</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Constructs a DateIterator that ranges from one date to another.
                        *
                        * @param startFinal start date (inclusive)
                        * @param endFinal end date (not inclusive)
                        */
                    </comment>
                    <constructor>
                        <name>DateIterator</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Calendar</name>
                                    </type>
                                    <name>startFinal</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Calendar</name>
                                    </type>
                                    <name>endFinal</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>endFinal</name>
                                    </name>
                                    =
                                    <name>endFinal</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>spot</name>
                                    =
                                    <name>startFinal</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>spot</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Calendar</name>.
                                                        <name>DATE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>-1</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Has the iterator not reached the end date yet?
                        *
                        * @return &lt;code&gt;true&lt;/code&gt; if the iterator has yet to reach the end date
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>hasNext</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>spot</name>.
                                            <name>before</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>endFinal</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Return the next calendar in the iteration
                        *
                        * @return Object calendar for the next date
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>next</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>spot</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>endFinal</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>NoSuchElementException</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>spot</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Calendar</name>.
                                                        <name>DATE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>spot</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Always throws UnsupportedOperationException.
                        *
                        * @throws UnsupportedOperationException
                        * @see java.util.Iterator#remove()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>remove</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>UnsupportedOperationException</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="line">//-------------------------------------------------------------------------</comment>
            <comment type="line">// Deprecated int constants</comment>
            <comment type="line">// TODO: Remove in 3.0</comment>

            <comment type="javadoc">/**
                * Number of milliseconds in a standard second.
                *
                * @deprecated Use MILLIS_PER_SECOND. This will be removed in Commons Lang 3.0.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MILLIS_IN_SECOND</name> =
                    <init>
                        <expr>1000</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Number of milliseconds in a standard minute.
                *
                * @deprecated Use MILLIS_PER_MINUTE. This will be removed in Commons Lang 3.0.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MILLIS_IN_MINUTE</name> =
                    <init>
                        <expr>60 * 1000</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Number of milliseconds in a standard hour.
                *
                * @deprecated Use MILLIS_PER_HOUR. This will be removed in Commons Lang 3.0.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MILLIS_IN_HOUR</name> =
                    <init>
                        <expr>60 * 60 * 1000</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Number of milliseconds in a standard day.
                *
                * @deprecated Use MILLIS_PER_DAY. This will be removed in Commons Lang 3.0.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MILLIS_IN_DAY</name> =
                    <init>
                        <expr>24 * 60 * 60 * 1000</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            }
        </block>
    </class>
</unit>
