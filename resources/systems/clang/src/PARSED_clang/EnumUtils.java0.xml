<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\clang\src\main\java\org\apache\commons\lang\enums\EnumUtils.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>lang</name>.
            <name>enums</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;Utility class for accessing and manipulating {@link Enum}s.&lt;/p&gt;
        *
        * @see Enum
        * @see ValuedEnum
        * @author Apache Software Foundation
        * @author Gary Gregory
        * @since 2.1 (class existed in enum package from v1.0)
        * @version $Id: EnumUtils.java 905636 2010-02-02 14:03:32Z niallp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>EnumUtils</name>
        <block>{

            <comment type="javadoc">/**
                * Public constructor. This class should not normally be instantiated.
                * @since 2.0
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>EnumUtils</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;Gets an &lt;code&gt;Enum&lt;/code&gt; object by class and name.&lt;/p&gt;
                *
                * @param enumClass the class of the &lt;code&gt;Enum&lt;/code&gt; to get
                * @param name the name of the Enum to get, may be &lt;code&gt;null&lt;/code&gt;
                * @return the enum object
                * @throws IllegalArgumentException if the enum class is &lt;code&gt;null&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Enum</name>
                </type>
                <name>getEnum</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>enumClass</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>Enum</name>.
                                    <name>getEnum</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>enumClass</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Gets a &lt;code&gt;ValuedEnum&lt;/code&gt; object by class and value.&lt;/p&gt;
                *
                * @param enumClass the class of the &lt;code&gt;Enum&lt;/code&gt; to get
                * @param value the value of the &lt;code&gt;Enum&lt;/code&gt; to get
                * @return the enum object, or null if the enum does not exist
                * @throws IllegalArgumentException if the enum class is &lt;code&gt;null&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>ValuedEnum</name>
                </type>
                <name>getEnum</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>enumClass</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>ValuedEnum</name>)
                            <call>
                                <name><name>ValuedEnum</name>.
                                    <name>getEnum</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>enumClass</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Gets the &lt;code&gt;Map&lt;/code&gt; of &lt;code&gt;Enum&lt;/code&gt; objects by
                * name using the &lt;code&gt;Enum&lt;/code&gt; class.&lt;/p&gt;
                *
                * &lt;p&gt;If the requested class has no enum objects an empty
                * &lt;code&gt;Map&lt;/code&gt; is returned. The &lt;code&gt;Map&lt;/code&gt; is unmodifiable.&lt;/p&gt;
                *
                * @param enumClass the class of the &lt;code&gt;Enum&lt;/code&gt; to get
                * @return the enum object Map
                * @throws IllegalArgumentException if the enum class is &lt;code&gt;null&lt;/code&gt;
                * @throws IllegalArgumentException if the enum class is not a subclass
                * of &lt;code&gt;Enum&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Map</name>
                </type>
                <name>getEnumMap</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>enumClass</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>Enum</name>.
                                    <name>getEnumMap</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>enumClass</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Gets the &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;Enum&lt;/code&gt; objects using
                * the &lt;code&gt;Enum&lt;/code&gt; class.&lt;/p&gt;
                *
                * &lt;p&gt;The list is in the order that the objects were created
                * (source code order).&lt;/p&gt;
                *
                * &lt;p&gt;If the requested class has no enum objects an empty
                * &lt;code&gt;List&lt;/code&gt; is returned. The &lt;code&gt;List&lt;/code&gt; is unmodifiable.&lt;/p&gt;
                *
                * @param enumClass the class of the Enum to get
                * @return the enum object Map
                * @throws IllegalArgumentException if the enum class is &lt;code&gt;null&lt;/code&gt;
                * @throws IllegalArgumentException if the enum class is not a subclass
                * of &lt;code&gt;Enum&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>List</name>
                </type>
                <name>getEnumList</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>enumClass</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>Enum</name>.
                                    <name>getEnumList</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>enumClass</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Gets an &lt;code&gt;Iterator&lt;/code&gt; over the &lt;code&gt;Enum&lt;/code&gt; objects
                * in an &lt;code&gt;Enum&lt;/code&gt; class.&lt;/p&gt;
                *
                * &lt;p&gt;The iterator is in the order that the objects were created
                * (source code order).&lt;/p&gt;
                *
                * &lt;p&gt;If the requested class has no enum objects an empty
                * &lt;code&gt;Iterator&lt;/code&gt; is returned. The &lt;code&gt;Iterator&lt;/code&gt;
                * is unmodifiable.&lt;/p&gt;
                *
                * @param enumClass the class of the &lt;code&gt;Enum&lt;/code&gt; to get
                * @return an &lt;code&gt;Iterator&lt;/code&gt; of the &lt;code&gt;Enum&lt;/code&gt; objects
                * @throws IllegalArgumentException if the enum class is &lt;code&gt;null&lt;/code&gt;
                * @throws IllegalArgumentException if the enum class is not a subclass of &lt;code&gt;Enum&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Iterator</name>
                </type>
                <name>iterator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>enumClass</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>Enum</name>.
                                    <name>getEnumList</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>enumClass</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>iterator</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
