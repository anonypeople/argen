<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\clang\src\main\java\org\apache\commons\lang\builder\IDKey.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>lang</name>.
            <name>builder</name>
        </name>
        ;
    </package>

    <comment type="line">// adapted from org.apache.axis.utils.IDKey</comment>

    <comment type="javadoc">/**
        * Wrap an identity key (System.identityHashCode())
        * so that an object can only be equal() to itself.
        *
        * This is necessary to disambiguate the occasional duplicate
        * identityHashCodes that can occur.
        *
        * @author Apache Software Foundation
        */
    </comment>
    <class>
        <specifier>final</specifier>
        class <name>IDKey</name>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>Object</name>
                    </type>
                    <name>value</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>id</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Constructor for IDKey
                * @param _value The value
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>IDKey</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>_value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// This is the Object hashcode</comment>
                    <expr_stmt>
                        <expr>
                            <name>id</name>
                            =
                            <call>
                                <name><name>System</name>.
                                    <name>identityHashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>_value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// There have been some cases (LANG-459) that return the</comment>
                    <comment type="line">// same identity hash code for different objects. So</comment>
                    <comment type="line">// the value is also added to disambiguate these cases.</comment>
                    <expr_stmt>
                        <expr>
                            <name>value</name>
                            =
                            <name>_value</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * returns hashcode - i.e. the system identity hashcode.
                * @return the hashcode
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>id</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * checks if instances are equal
                * @param other The other object to compare to
                * @return if the instances are for the same object
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>other</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!(<name>other</name>
                                <name>instanceof</name>
                                <name>IDKey</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IDKey</name>
                            </type>
                            <name>idKey</name> =
                            <init>
                                <expr>(<name>IDKey</name>)
                                    <name>other</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>id</name>
                                !=
                                <name><name>idKey</name>.
                                    <name>id</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// Note that identity equals is used.</comment>
                    <return>return
                        <expr>
                            <name>value</name>
                            ==
                            <name><name>idKey</name>.
                                <name>value</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
