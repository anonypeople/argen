<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\clang\src\test\java\org\apache\commons\lang\enum\NestReferenced.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>lang</name>.
            <name>
                <name/>
            </name>
        </name>
        enum;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Color enumeration which demonstrates how to provide a view of the constants
        * in a different class to the Enum. This technique is the safest, however it
        * is obviously inconvenient as it involves defining two sets of constants.
        * See NestedLinked for an alternative.
        *
        * @author Apache Software Foundation
        * @version $Id: NestReferenced.java 905636 2010-02-02 14:03:32Z niallp $
        */
    </comment>

    <class>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>NestReferenced</name>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>ColorEnum</name>
                    </type>
                    <name>RED</name> =
                    <init>
                        <expr>
                            <name><name>ColorEnum</name>.
                                <name>RED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>ColorEnum</name>
                    </type>
                    <name>GREEN</name> =
                    <init>
                        <expr>
                            <name><name>ColorEnum</name>.
                                <name>GREEN</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>ColorEnum</name>
                    </type>
                    <name>BLUE</name> =
                    <init>
                        <expr>
                            <name><name>ColorEnum</name>.
                                <name>BLUE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>NestReferenced</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <class>
                <specifier>public</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>ColorEnum</name>
                <super>
                    <extends>extends
                        <name>Enum</name>
                    </extends>
                </super>
                <block>{

                    <comment type="line">// must be defined here, not just in outer class</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>ColorEnum</name>
                            </type>
                            <name>RED</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ColorEnum</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Red"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>ColorEnum</name>
                            </type>
                            <name>GREEN</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ColorEnum</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Green"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>ColorEnum</name>
                            </type>
                            <name>BLUE</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ColorEnum</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Blue"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>private</specifier>
                        <name>ColorEnum</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>color</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>color</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>static</specifier>
                            <name>ColorEnum</name>
                        </type>
                        <name>getEnum</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>color</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>(<name>ColorEnum</name>)
                                    <call>
                                        <name>getEnum</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>ColorEnum</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>color</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>static</specifier>
                            <name>Map</name>
                        </type>
                        <name>getEnumMap</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>getEnumMap</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>ColorEnum</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>static</specifier>
                            <name>List</name>
                        </type>
                        <name>getEnumList</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>getEnumList</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>ColorEnum</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>static</specifier>
                            <name>Iterator</name>
                        </type>
                        <name>iterator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>iterator</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>ColorEnum</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>
            }
        </block>
    </class>
</unit>
