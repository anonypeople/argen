<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cloggin\src\test\java\org\apache\commons\logging\AltHashtableTestCase.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.
            <name>logging</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>junit</name>.<name>framework</name>.
            <name>Test</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>junit</name>.<name>framework</name>.
            <name>TestCase</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Test the ability to force the LogFactory class to use some
        * arbitrary Hashtable implementation to store its mapping from
        * context-classloader -&amp;gt; LogFactory object.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>AltHashtableTestCase</name>
        <super>
            <extends>extends
                <name>TestCase</name>
            </extends>
        </super>
        <block>{

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Test</name>
                </type>
                <name>suite</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>thisClass</name> =
                            <init>
                                <expr>
                                    <name><name>AltHashtableTestCase</name>.
                                        <name>
                                            <name/>
                                        </name>
                                    </name>
                                    class
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>thisClassLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>thisClass</name>.
                                            <name>getClassLoader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PathableClassLoader</name>
                            </type>
                            <name>loader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>PathableClassLoader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>loader</name>.
                                    <name>useExplicitLoader</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"junit."</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>thisClassLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>loader</name>.
                                    <name>addLogicalLib</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"testclasses"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>loader</name>.
                                    <name>addLogicalLib</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"commons-logging"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>testClass</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>loader</name>.
                                            <name>loadClass</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>thisClass</name>.
                                                            <name>getName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>PathableTestSuite</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>testClass</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>loader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Set up before each test.
                * &lt;p&gt;
                * This method ensures that the appropriate system property is defined
                * to force the LogFactory class to use the AltHashtable class as its
                * Hashtable implementation for storing factories in.
                * &lt;p&gt;
                * This does make the assumption that whatever JVM we are running in
                * doesn't initialise classes until they are actually referenced (ie the
                * LogFactory class hasn't been initialised before this method is called).
                * This is true of all JVMs I know of; and if it isn't then this test will
                * fail and someone will tell us.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setUp</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>setProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"org.apache.commons.logging.LogFactory.HashtableImpl"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>AltHashtable</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class.
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Verify that initialising the LogFactory class will cause it
                * to instantiate an object of type specified in system property
                * "org.apache.commons.logging.LogFactory.HashtableImpl".
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Here, the reference to the LogFactory class should cause the</comment>
                    <comment type="line">// class to be loaded and initialised. It will see the property</comment>
                    <comment type="line">// set and use the AltHashtable class. If other tests in this</comment>
                    <comment type="line">// class have already been run within the same classloader then</comment>
                    <comment type="line">// LogFactory will already have been initialised, but that</comment>
                    <comment type="line">// doesn't change the effectiveness of this test.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>LogFactory</name>.
                                                <name>factories</name>
                                            </name>
                                            <name>instanceof</name>
                                            <name>AltHashtable</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Verify that when LogFactory sees a context-classloader for the
                * first time that it creates a new entry in the LogFactory.factories
                * hashmap. In particular, this checks that this process works ok when
                * a system property has been used to specify an alternative Hashtable
                * implementation for LogFactory to use.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testPutCalled</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>AltHashtable</name>.
                                <name>lastKey</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>AltHashtable</name>.
                                <name>lastValue</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>LogFactory</name>.
                                    <name>getLog</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>AltHashtableTestCase</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>contextLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Thread</name>.
                                            <name>currentThread</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getContextClassLoader</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>contextLoader</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>AltHashtable</name>.
                                                <name>lastKey</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>AltHashtable</name>.
                                                <name>lastValue</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
