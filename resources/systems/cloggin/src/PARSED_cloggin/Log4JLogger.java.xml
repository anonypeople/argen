<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\cloggin\src\main\java\org\apache\commons\logging\impl\Log4JLogger.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>logging</name>.
            <name>impl</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>logging</name>.
            <name>Log</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>log4j</name>.
            <name>Logger</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>log4j</name>.
            <name>Priority</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>log4j</name>.
            <name>Level</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Implementation of {@link Log} that maps directly to a
        * &lt;strong&gt;Logger&lt;/strong&gt; for log4J version 1.2.
        * &lt;p&gt;
        * Initial configuration of the corresponding Logger instances should be done
        * in the usual manner, as outlined in the Log4J documentation.
        * &lt;p&gt;
        * The reason this logger is distinct from the 1.3 logger is that in version 1.2
        * of Log4J:
        * &lt;ul&gt;
        * &lt;li&gt;class Logger takes Priority parameters not Level parameters.
        * &lt;li&gt;class Level extends Priority
        * &lt;/ul&gt;
        * Log4J1.3 is expected to change Level so it no longer extends Priority, which is
        * a non-binary-compatible change. The class generated by compiling this code against
        * log4j 1.2 will therefore not run against log4j 1.3.
        *
        * @version $Id: Log4JLogger.java 1448119 2013-02-20 12:28:04Z tn $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>Log4JLogger</name>
        <super>
            <implements>implements <name>Log</name>,
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** Serializable version identifier. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>5160705895411730424L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// ------------------------------------------------------------- Attributes</comment>

            <comment type="javadoc">/** The fully qualified name of the Log4JLogger class. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>FQCN</name> =
                    <init>
                        <expr>
                            <name><name>Log4JLogger</name>.
                                <name>
                                    <name/>
                                </name>
                            </name>
                            class.
                            <call>
                                <name>getName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Log to this logger */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>volatile</name>
                        <name>Logger</name>
                    </type>
                    <name>logger</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Logger name */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>name</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Priority</name>
                    </type>
                    <name>traceLevel</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// ------------------------------------------------------------</comment>
            <comment type="line">// Static Initializer.</comment>
            <comment type="line">//</comment>
            <comment type="line">// Note that this must come after the static variable declarations</comment>
            <comment type="line">// otherwise initialiser expressions associated with those variables</comment>
            <comment type="line">// will override any settings done here.</comment>
            <comment type="line">//</comment>
            <comment type="line">// Verify that log4j is available, and that it is version 1.2.</comment>
            <comment type="line">// If an ExceptionInInitializerError is generated, then LogFactoryImpl</comment>
            <comment type="line">// will treat that as meaning that the appropriate underlying logging</comment>
            <comment type="line">// library is just not present - if discovery is in progress then</comment>
            <comment type="line">// discovery will continue.</comment>
            <comment type="line">// ------------------------------------------------------------</comment>

            static
            <block>{
                <if>if
                    <condition>(
                        <expr>!
                            <name><name>Priority</name>.
                                <name>
                                    <name/>
                                </name>
                            </name>
                            class.
                            <call>
                                <name>isAssignableFrom</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        )
                    </condition>
                    <then>
                        <block>{
                            <comment type="line">// nope, this is log4j 1.3, so force an ExceptionInInitializerError
                            </comment>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>InstantiationError</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Log4J 1.2 not available"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                            }
                        </block>
                    </then>
                </if>

                <comment type="line">// Releases of log4j1.2 &gt;= 1.2.12 have Priority.TRACE available, earlier
                </comment>
                <comment type="line">// versions do not. If TRACE is not available, then we have to map</comment>
                <comment type="line">// calls to Log.trace(...) onto the DEBUG level.</comment>

                <decl_stmt>
                    <decl>
                        <type>
                            <name>Priority</name>
                        </type>
                        <name>_traceLevel</name>
                    </decl>
                    ;
                </decl_stmt>
                <try>try
                    <block>{
                        <expr_stmt>
                            <expr>
                                <name>_traceLevel</name>
                                = (<name>Priority</name>)
                                <name><name>Level</name>.
                                    <name>
                                        <name/>
                                    </name>
                                </name>
                                class.
                                <call>
                                    <name>getDeclaredField</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"TRACE"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                .
                                <call>
                                    <name>get</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            ;
                        </expr_stmt>
                        }
                    </block>
                    <catch>catch(
                        <param>
                            <decl>
                                <type>
                                    <name>Exception</name>
                                </type>
                                <name>ex</name>
                            </decl>
                        </param>
                        )
                        <block>{
                            <comment type="line">// ok, trace not available</comment>
                            <expr_stmt>
                                <expr>
                                    <name>_traceLevel</name>
                                    =
                                    <name><name>Level</name>.
                                        <name>DEBUG</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </catch>
                </try>
                <expr_stmt>
                    <expr>
                        <name>traceLevel</name>
                        =
                        <name>_traceLevel</name>
                    </expr>
                    ;
                </expr_stmt>
                }
            </block>

            <comment type="line">// ------------------------------------------------------------ Constructor</comment>

            <constructor>
                <specifier>public</specifier>
                <name>Log4JLogger</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>name</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Base constructor.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>Log4JLogger</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>name</name>
                            </name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>logger</name>
                            </name>
                            =
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * For use with a log4j factory.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>Log4JLogger</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Logger</name>
                            </type>
                            <name>logger</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>logger</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Warning - null logger in constructor; possible log4j
                                                        misconfiguration."
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>name</name>
                            </name>
                            =
                            <call>
                                <name><name>logger</name>.
                                    <name>getName</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>logger</name>
                            </name>
                            =
                            <name>logger</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.TRACE&lt;/code&gt;.
                * When using a log4j version that does not support the &lt;code&gt;TRACE&lt;/code&gt;
                * level, the message will be logged at the &lt;code&gt;DEBUG&lt;/code&gt; level.
                *
                * @param message to log
                * @see org.apache.commons.logging.Log#trace(Object)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>trace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>traceLevel</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.TRACE&lt;/code&gt;.
                * When using a log4j version that does not support the &lt;code&gt;TRACE&lt;/code&gt;
                * level, the message will be logged at the &lt;code&gt;DEBUG&lt;/code&gt; level.
                *
                * @param message to log
                * @param t log this cause
                * @see org.apache.commons.logging.Log#trace(Object, Throwable)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>trace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>traceLevel</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.DEBUG&lt;/code&gt;.
                *
                * @param message to log
                * @see org.apache.commons.logging.Log#debug(Object)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>debug</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>DEBUG</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.DEBUG&lt;/code&gt;.
                *
                * @param message to log
                * @param t log this cause
                * @see org.apache.commons.logging.Log#debug(Object, Throwable)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>debug</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>DEBUG</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.INFO&lt;/code&gt;.
                *
                * @param message to log
                * @see org.apache.commons.logging.Log#info(Object)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>info</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>INFO</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.INFO&lt;/code&gt;.
                *
                * @param message to log
                * @param t log this cause
                * @see org.apache.commons.logging.Log#info(Object, Throwable)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>info</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>INFO</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.WARN&lt;/code&gt;.
                *
                * @param message to log
                * @see org.apache.commons.logging.Log#warn(Object)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>warn</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>WARN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.WARN&lt;/code&gt;.
                *
                * @param message to log
                * @param t log this cause
                * @see org.apache.commons.logging.Log#warn(Object, Throwable)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>warn</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>WARN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.ERROR&lt;/code&gt;.
                *
                * @param message to log
                * @see org.apache.commons.logging.Log#error(Object)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>error</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>ERROR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.ERROR&lt;/code&gt;.
                *
                * @param message to log
                * @param t log this cause
                * @see org.apache.commons.logging.Log#error(Object, Throwable)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>error</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>ERROR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.FATAL&lt;/code&gt;.
                *
                * @param message to log
                * @see org.apache.commons.logging.Log#fatal(Object)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>fatal</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>FATAL</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Logs a message with &lt;code&gt;org.apache.log4j.Priority.FATAL&lt;/code&gt;.
                *
                * @param message to log
                * @param t log this cause
                * @see org.apache.commons.logging.Log#fatal(Object, Throwable)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>fatal</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>log</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>FQCN</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>FATAL</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return the native Logger instance we are using.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Logger</name>
                </type>
                <name>getLogger</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Logger</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>logger</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <synchronized>synchronized(
                                    <expr>
                                        <name>this</name>
                                    </expr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>result</name>
                                                =
                                                <name>logger</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>result</name>
                                                    ==
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>logger</name>
                                                            = <name>result</name> =
                                                            <call>
                                                                <name><name>Logger</name>.
                                                                    <name>getLogger</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </synchronized>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Check whether the Log4j Logger used is enabled for &lt;code&gt;DEBUG&lt;/code&gt; priority.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isDebugEnabled</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>isDebugEnabled</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Check whether the Log4j Logger used is enabled for &lt;code&gt;ERROR&lt;/code&gt; priority.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isErrorEnabled</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>isEnabledFor</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>ERROR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Check whether the Log4j Logger used is enabled for &lt;code&gt;FATAL&lt;/code&gt; priority.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isFatalEnabled</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>isEnabledFor</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>FATAL</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Check whether the Log4j Logger used is enabled for &lt;code&gt;INFO&lt;/code&gt; priority.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isInfoEnabled</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>isInfoEnabled</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Check whether the Log4j Logger used is enabled for &lt;code&gt;TRACE&lt;/code&gt; priority.
                * When using a log4j version that does not support the TRACE level, this call
                * will report whether &lt;code&gt;DEBUG&lt;/code&gt; is enabled or not.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isTraceEnabled</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>isEnabledFor</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>traceLevel</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Check whether the Log4j Logger used is enabled for &lt;code&gt;WARN&lt;/code&gt; priority.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isWarnEnabled</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getLogger</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>isEnabledFor</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Level</name>.
                                                <name>WARN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
