<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\clogging\src\test\java\org\apache\commons\logging\pathable\ChildFirstTestCase.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>logging</name>.
            <name>pathable</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>URL</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>ArrayList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Arrays</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Enumeration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>HashSet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Set</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>junit</name>.<name>framework</name>.
            <name>Test</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>junit</name>.<name>framework</name>.
            <name>TestCase</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>logging</name>.
            <name>PathableClassLoader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>logging</name>.
            <name>PathableTestSuite</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Tests for the PathableTestSuite and PathableClassLoader functionality,
        * where lookup order for the PathableClassLoader is child-first.
        * &lt;p&gt;
        * These tests assume:
        * &lt;ul&gt;
        * &lt;li&gt;junit is in system classpath
        * &lt;li&gt;nothing else is in system classpath
        * &lt;/ul&gt;
        */
    </comment>

    <class>
        <specifier>public</specifier>
        class <name>ChildFirstTestCase</name>
        <super>
            <extends>extends
                <name>TestCase</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Set up a custom classloader hierarchy for this test case.
                * The hierarchy is:
                * &lt;ul&gt;
                * &lt;li&gt; contextloader: child-first.
                * &lt;li&gt; childloader: child-first, used to load test case.
                * &lt;li&gt; parentloader: child-first, parent is the bootclassloader.
                * &lt;/ul&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Test</name>
                </type>
                <name>suite</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>thisClass</name> =
                            <init>
                                <expr>
                                    <name><name>ChildFirstTestCase</name>.
                                        <name>
                                            <name/>
                                        </name>
                                    </name>
                                    class
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>thisClassLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>thisClass</name>.
                                            <name>getClassLoader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Make the parent a direct child of the bootloader to hide all</comment>
                    <comment type="line">// other classes in the system classpath</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PathableClassLoader</name>
                            </type>
                            <name>parent</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>PathableClassLoader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>parent</name>.
                                    <name>setParentFirst</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Make the junit classes visible as a special case, as junit</comment>
                    <comment type="line">// won't be able to call this class at all without this. The</comment>
                    <comment type="line">// junit classes must be visible from the classloader that loaded</comment>
                    <comment type="line">// this class, so use that as the source for future access to classes</comment>
                    <comment type="line">// from the junit package.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>parent</name>.
                                    <name>useExplicitLoader</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"junit."</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>thisClassLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Make the commons-logging.jar classes visible via the parent</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>parent</name>.
                                    <name>addLogicalLib</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"commons-logging"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Create a child classloader to load the test case through</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PathableClassLoader</name>
                            </type>
                            <name>child</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>PathableClassLoader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>parent</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>child</name>.
                                    <name>setParentFirst</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Obviously, the child classloader needs to have the test classes</comment>
                    <comment type="line">// in its path!</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>child</name>.
                                    <name>addLogicalLib</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"testclasses"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>child</name>.
                                    <name>addLogicalLib</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"commons-logging-adapters"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Create a third classloader to be the context classloader.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PathableClassLoader</name>
                            </type>
                            <name>context</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>PathableClassLoader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>child</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>context</name>.
                                    <name>setParentFirst</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// reload this class via the child classloader</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>testClass</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>child</name>.
                                            <name>loadClass</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>thisClass</name>.
                                                            <name>getName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// and return our custom TestSuite class</comment>
                    <return>return
                        <expr>new
                            <call>
                                <name>PathableTestSuite</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>testClass</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>context</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Utility method to return the set of all classloaders in the
                * parent chain starting from the one that loaded the class for
                * this object instance.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Set</name>
                </type>
                <name>getAncestorCLs</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Set</name>
                            </type>
                            <name>s</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>HashSet</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>cl</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.
                                            <name>getClass</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getClassLoader</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>cl</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>s</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>cl</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>cl</name>
                                    =
                                    <call>
                                        <name><name>cl</name>.
                                            <name>getParent</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <return>return
                        <expr>
                            <name>s</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Test that the classloader hierarchy is as expected, and that
                * calling loadClass() on various classloaders works as expected.
                * Note that for this test case, parent-first classloading is
                * in effect.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testPaths</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// the context classloader is not expected to be null</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>contextLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Thread</name>.
                                            <name>currentThread</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getContextClassLoader</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Context classloader is null"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>contextLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Context classloader has unexpected type"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>PathableClassLoader</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class.
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>contextLoader</name>.
                                                    <name>getClass</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// the classloader that loaded this class is obviously not null</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>thisLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.
                                            <name>getClass</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getClassLoader</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"thisLoader is null"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>thisLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"thisLoader has unexpected type"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>PathableClassLoader</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class.
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>thisLoader</name>.
                                                    <name>getClass</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// the suite method specified that the context classloader's parent</comment>
                    <comment type="line">// is the loader that loaded this test case.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertSame</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Context classloader is not child of thisLoader"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>thisLoader</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>contextLoader</name>.
                                                    <name>getParent</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// thisLoader's parent should be available</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>parentLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>thisLoader</name>.
                                            <name>getParent</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Parent classloader is null"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parentLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Parent classloader has unexpected type"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>PathableClassLoader</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class.
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>parentLoader</name>.
                                                    <name>getClass</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// parent should have a parent of null</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Parent classloader has non-null parent"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>parentLoader</name>.
                                                    <name>getParent</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// getSystemClassloader is not a PathableClassLoader; it's of a</comment>
                    <comment type="line">// built-in type. This also verifies that system classloader is none of
                    </comment>
                    <comment type="line">// (context, child, parent).</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>systemLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>ClassLoader</name>.
                                            <name>getSystemClassLoader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"System classloader is null"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>systemLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertFalse</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"System classloader has unexpected type"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>PathableClassLoader</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class.
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>equals</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>systemLoader</name>.
                                                                    <name>getClass</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>getName</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// junit classes should be visible; their classloader is not</comment>
                    <comment type="line">// in the hierarchy of parent classloaders for this class,</comment>
                    <comment type="line">// though it is accessable due to trickery in the PathableClassLoader.
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>junitTest</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>contextLoader</name>.
                                            <name>loadClass</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"junit.framework.Test"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Set</name>
                            </type>
                            <name>ancestorCLs</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getAncestorCLs</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertFalse</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Junit not loaded by ancestor classloader"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ancestorCLs</name>.
                                                    <name>contains</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>junitTest</name>.
                                                                    <name>getClassLoader</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// jcl api classes should be visible only via the parent</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>logClass</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>contextLoader</name>.
                                            <name>loadClass</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"org.apache.commons.logging.Log"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertSame</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Log class not loaded via parent"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>logClass</name>.
                                                    <name>getClassLoader</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parentLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// jcl adapter classes should be visible via both parent and child. However
                    </comment>
                    <comment type="line">// as the classloaders are child-first we should see the child one.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>log4jClass</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>contextLoader</name>.
                                            <name>loadClass</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"org.apache.commons.logging.impl.Log4JLogger"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertSame</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Log4JLogger not loaded via child"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>log4jClass</name>.
                                                    <name>getClassLoader</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>thisLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// test classes should be visible via the child only</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>testClass</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>contextLoader</name>.
                                            <name>loadClass</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"org.apache.commons.logging.PathableTestSuite"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertSame</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"PathableTestSuite not loaded via child"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>testClass</name>.
                                                    <name>getClassLoader</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>thisLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// test loading of class that is not available</comment>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Class</name>
                                    </type>
                                    <name>noSuchClass</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>contextLoader</name>.
                                                    <name>loadClass</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"no.such.class"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>fail</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Class no.such.class is unexpectedly available"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>assertNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>noSuchClass</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// silence warning about unused var</comment>
                            }
                        </block>
                        <catch>catch(
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassNotFoundException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// ok</comment>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// String class classloader is null</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>stringClass</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>contextLoader</name>.
                                            <name>loadClass</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"java.lang.String"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"String class classloader is not null!"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>stringClass</name>.
                                                    <name>getClassLoader</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Test that the various flavours of ClassLoader.getResource work as expected.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testResource</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URL</name>
                            </type>
                            <name>resource</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>contextLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Thread</name>.
                                            <name>currentThread</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getContextClassLoader</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>childLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>contextLoader</name>.
                                            <name>getParent</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// getResource where it doesn't exist</comment>
                    <expr_stmt>
                        <expr>
                            <name>resource</name>
                            =
                            <call>
                                <name><name>childLoader</name>.
                                    <name>getResource</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"nosuchfile"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Non-null URL returned for invalid resource name"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>resource</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// getResource where it is accessable only to parent classloader</comment>
                    <expr_stmt>
                        <expr>
                            <name>resource</name>
                            =
                            <call>
                                <name><name>childLoader</name>.
                                    <name>getResource</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"org/apache/commons/logging/Log.class"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Unable to locate Log.class resource"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>resource</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// getResource where it is accessable only to child classloader</comment>
                    <expr_stmt>
                        <expr>
                            <name>resource</name>
                            =
                            <call>
                                <name><name>childLoader</name>.
                                    <name>getResource</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"org/apache/commons/logging/PathableTestSuite.class"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Unable to locate PathableTestSuite.class resource"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>resource</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// getResource where it is accessable to both classloaders. The one visible
                    </comment>
                    <comment type="line">// to the child should be returned. The URL returned will be of form</comment>
                    <comment type="line">// jar:file:/x/y.jar!path/to/resource. The filename part should include the
                        jarname
                    </comment>
                    <comment type="line">// of form commons-logging-adapters-nnnn.jar, not commons-logging-nnnn.jar
                    </comment>
                    <expr_stmt>
                        <expr>
                            <name>resource</name>
                            =
                            <call>
                                <name><name>childLoader</name>.
                                    <name>getResource</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"org/apache/commons/logging/impl/Log4JLogger.class"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Unable to locate Log4JLogger.class resource"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>resource</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Incorrect source for Log4JLogger class"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>resource</name>.
                                                    <name>toString</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>indexOf</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"/commons-logging-adapters-1."</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            &gt; 0
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Test that the various flavours of ClassLoader.getResources work as expected.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testResources</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Enumeration</name>
                            </type>
                            <name>resources</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URL</name>
                                <index>[]</index>
                            </type>
                            <name>urls</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// verify the classloader hierarchy</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>contextLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Thread</name>.
                                            <name>currentThread</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getContextClassLoader</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>childLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>contextLoader</name>.
                                            <name>getParent</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>parentLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>childLoader</name>.
                                            <name>getParent</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>bootLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>parentLoader</name>.
                                            <name>getParent</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Unexpected classloader hierarchy"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bootLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// getResources where no instances exist</comment>
                    <expr_stmt>
                        <expr>
                            <name>resources</name>
                            =
                            <call>
                                <name><name>childLoader</name>.
                                    <name>getResources</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"nosuchfile"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>urls</name>
                            =
                            <call>
                                <name>toURLArray</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resources</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Non-null URL returned for invalid resource name"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>urls</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// getResources where the resource only exists in the parent</comment>
                    <expr_stmt>
                        <expr>
                            <name>resources</name>
                            =
                            <call>
                                <name><name>childLoader</name>.
                                    <name>getResources</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"org/apache/commons/logging/Log.class"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>urls</name>
                            =
                            <call>
                                <name>toURLArray</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resources</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Unexpected number of Log.class resources found"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>urls</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// getResources where the resource only exists in the child</comment>
                    <expr_stmt>
                        <expr>
                            <name>resources</name>
                            =
                            <call>
                                <name><name>childLoader</name>.
                                    <name>getResources</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"org/apache/commons/logging/PathableTestSuite.class"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>urls</name>
                            =
                            <call>
                                <name>toURLArray</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resources</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Unexpected number of PathableTestSuite.class resources found"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>urls</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// getResources where the resource exists in both.</comment>
                    <comment type="line">// resources should be returned in order (child-resource, parent-resource).
                    </comment>
                    <comment type="line">//</comment>
                    <comment type="line">// IMPORTANT: due to the fact that in java 1.4 and earlier method</comment>
                    <comment type="line">// ClassLoader.getResources is final it isn't possible for
                        PathableClassLoader
                    </comment>
                    <comment type="line">// to override this. So even when child-first is enabled the resource order
                    </comment>
                    <comment type="line">// is still (parent-resources, child-resources). This test verifies the
                        expected
                    </comment>
                    <comment type="line">// behaviour - even though it's not the desired behaviour.</comment>

                    <expr_stmt>
                        <expr>
                            <name>resources</name>
                            =
                            <call>
                                <name><name>childLoader</name>.
                                    <name>getResources</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"org/apache/commons/logging/impl/Log4JLogger.class"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>urls</name>
                            =
                            <call>
                                <name>toURLArray</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resources</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Unexpected number of Log4JLogger.class resources found"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>urls</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// There is no guarantee about the ordering of results returned from
                        getResources
                    </comment>
                    <comment type="line">// To make this test portable across JVMs, sort the string to give them a known
                        order
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>urlsToStrings</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>String</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>urlsToStrings</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            =
                            <name>
                                <name>urls</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            .
                            <call>
                                <name>toString</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>urlsToStrings</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            =
                            <name>
                                <name>urls</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            .
                            <call>
                                <name>toString</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Arrays</name>.
                                    <name>sort</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>urlsToStrings</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Incorrect source for Log4JLogger class"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>urlsToStrings</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                            .
                                            <call>
                                                <name>indexOf</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"/commons-logging-1."</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            &gt; 0
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Incorrect source for Log4JLogger class"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>urlsToStrings</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                            .
                                            <call>
                                                <name>indexOf</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"/commons-logging-adapters-1."</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            &gt; 0
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Utility method to convert an enumeration-of-URLs into an array of URLs.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>URL</name>
                    <index>[]</index>
                </type>
                <name>toURLArray</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Enumeration</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ArrayList</name>
                            </type>
                            <name>l</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ArrayList</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>e</name>.
                                        <name>hasMoreElements</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>URL</name>
                                    </type>
                                    <name>u</name> =
                                    <init>
                                        <expr>(<name>URL</name>)
                                            <call>
                                                <name><name>e</name>.
                                                    <name>nextElement</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>l</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>u</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URL</name>
                                <index>[]</index>
                            </type>
                            <name>tmp</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>URL</name>
                                        <index>[
                                            <expr>
                                                <call>
                                                    <name><name>l</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(
                            <name>
                                <name>URL</name>
                                <index>[]</index>
                            </name>
                            )
                            <call>
                                <name><name>l</name>.
                                    <name>toArray</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tmp</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Test that getResourceAsStream works.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testResourceAsStream</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>java</name>.<name>io</name>.
                                    <name>InputStream</name>
                                </name>
                            </type>
                            <name>is</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// verify the classloader hierarchy</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>contextLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Thread</name>.
                                            <name>currentThread</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getContextClassLoader</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>childLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>contextLoader</name>.
                                            <name>getParent</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>parentLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>childLoader</name>.
                                            <name>getParent</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>bootLoader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>parentLoader</name>.
                                            <name>getParent</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Unexpected classloader hierarchy"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bootLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// getResourceAsStream where no instances exist</comment>
                    <expr_stmt>
                        <expr>
                            <name>is</name>
                            =
                            <call>
                                <name><name>childLoader</name>.
                                    <name>getResourceAsStream</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"nosuchfile"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Invalid resource returned non-null stream"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>is</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// getResourceAsStream where resource does exist</comment>
                    <expr_stmt>
                        <expr>
                            <name>is</name>
                            =
                            <call>
                                <name><name>childLoader</name>.
                                    <name>getResourceAsStream</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"org/apache/commons/logging/Log.class"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Null returned for valid resource"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>is</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>is</name>.
                                    <name>close</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// It would be nice to test parent-first ordering here, but that would
                        require
                    </comment>
                    <comment type="line">// having a resource with the same name in both the parent and child loaders,
                    </comment>
                    <comment type="line">// but with different contents. That's a little tricky to set up so we'll
                    </comment>
                    <comment type="line">// skip that for now.</comment>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
