<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\clogging\src\test\java\org\apache\commons\logging\jdk14\CustomConfigTestCase.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>logging</name>.
            <name>jdk14</name>
        </name>
        ;
    </package>


    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ByteArrayOutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
            <name>Method</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>logging</name>.
            <name>Handler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>logging</name>.
            <name>Level</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>logging</name>.
            <name>LogManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>logging</name>.
            <name>LogRecord</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>logging</name>.
            <name>Logger</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>junit</name>.<name>framework</name>.
            <name>Test</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>logging</name>.
            <name>DummyException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>logging</name>.
            <name>PathableClassLoader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.<name>logging</name>.
            <name>PathableTestSuite</name>
        </name>
        ;
    </import>


    <comment type="javadoc">/**
        * &lt;p&gt;TestCase for JDK 1.4 logging when running on a JDK 1.4 system with
        * custom configuration, so that JDK 1.4 should be selected and an appropriate
        * logger configured per the configuration properties.&lt;/p&gt;
        *
        * @author Craig R. McClanahan
        * @version $Revision: 1448063 $ $Date: 2013-02-20 11:01:41 +0100 (Wed, 20 Feb 2013) $
        */
    </comment>

    <class>
        <specifier>public</specifier>
        class <name>CustomConfigTestCase</name>
        <super>
            <extends>extends
                <name>DefaultConfigTestCase</name>
            </extends>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>HANDLER_NAME</name> =
                    <init>
                        <expr>"org.apache.commons.logging.jdk14.TestHandler"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// ----------------------------------------------------------- Constructors</comment>


            <comment type="javadoc">/**
                * &lt;p&gt;Construct a new instance of this test case.&lt;/p&gt;
                *
                * @param name Name of the test case
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>CustomConfigTestCase</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>


            <comment type="line">// ----------------------------------------------------- Instance Variables</comment>


            <comment type="javadoc">/**
                * &lt;p&gt;The customized &lt;code&gt;Handler&lt;/code&gt; we will be using.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>TestHandler</name>
                    </type>
                    <name>handler</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * &lt;p&gt;The underlying &lt;code&gt;Handler&lt;/code&gt;s we will be using.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Handler</name>
                    </type>
                    <name>
                        <name>handlers</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * &lt;p&gt;The underlying &lt;code&gt;Logger&lt;/code&gt; we will be using.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Logger</name>
                    </type>
                    <name>logger</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * &lt;p&gt;The underlying &lt;code&gt;LogManager&lt;/code&gt; we will be using.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>LogManager</name>
                    </type>
                    <name>manager</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * &lt;p&gt;The message levels that should have been logged.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Level</name>
                    </type>
                    <name>
                        <name>testLevels</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name><name>Level</name>.
                                        <name>FINE</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Level</name>.
                                        <name>INFO</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Level</name>.
                                        <name>WARNING</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Level</name>.
                                        <name>SEVERE</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Level</name>.
                                        <name>SEVERE</name>
                                    </name>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * &lt;p&gt;The message strings that should have been logged.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>
                        <name>testMessages</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>
                            <block>{ <expr>"debug"</expr>, <expr>"info"</expr>, <expr>"warn"</expr>, <expr>
                                "error"</expr>, <expr>"fatal"</expr> }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="line">// ------------------------------------------- JUnit Infrastructure Methods</comment>


            <comment type="javadoc">/**
                * Given the name of a class that is somewhere in the classpath of the provided
                * classloader, return the contents of the corresponding .class file.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <specifier>static</specifier>
                    <name>byte</name>
                    <index>[]</index>
                </type>
                <name>readClass</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>srcCL</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>resName</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>name</name>.
                                            <name>replace</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'.'</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>'/'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    + ".class"
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>err</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Trying to load resource [" + <name>resName</name> + "]"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>srcCL</name>.
                                            <name>getResourceAsStream</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>resName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayOutputStream</name>
                            </type>
                            <name>baos</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayOutputStream</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>err</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Reading resource [" + <name>resName</name> + "]"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>buf</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[<expr>1000</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for(
                        <init>;</init>
                        <condition>;</condition>
                        <incr/>)
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>read</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>is</name>.
                                                    <name>read</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>buf</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>read</name>
                                        &lt;= 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <break>break;</break>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>baos</name>.
                                            <name>write</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>buf</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>read</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>is</name>.
                                    <name>close</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>baos</name>.
                                    <name>toByteArray</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Make a class available in the system classloader even when its classfile is
                * not present in the classpath configured for that classloader. This only
                * works for classes for which all dependencies are already loaded in
                * that classloader.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>loadTestHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>className</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>targetCL</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>targetCL</name>.
                                            <name>loadClass</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>className</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// fail("Class already in target classloader");</comment>
                            <return>return;</return>
                            }
                        </block>
                        <catch>catch(
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassNotFoundException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// ok, go ahead and load it</comment>
                                }
                            </block>
                        </catch>
                    </try>

                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>srcCL</name> =
                                    <init>
                                        <expr>
                                            <name><name>CustomConfigAPITestCase</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class.
                                            <call>
                                                <name>getClassLoader</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </type>
                                    <name>classData</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>readClass</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>className</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>srcCL</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Class</name>
                                        <index>[]</index>
                                    </type>
                                    <name>params</name> =
                                    <init>
                                        <expr>new
                                            <name>
                                                <name>Class</name>
                                                <index>[]</index>
                                            </name>
                                            <block>{
                                                <expr>
                                                    <name><name>String</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                                ,
                                                <expr>
                                                    <call>
                                                        <name><name>classData</name>.
                                                            <name>getClass</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ,
                                                <expr>
                                                    <name><name>Integer</name>.
                                                        <name>TYPE</name>
                                                    </name>
                                                </expr>
                                                ,
                                                <expr>
                                                    <name><name>Integer</name>.
                                                        <name>TYPE</name>
                                                    </name>
                                                </expr>
                                                }
                                            </block>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Method</name>
                                    </type>
                                    <name>m</name> =
                                    <init>
                                        <expr>
                                            <name><name>ClassLoader</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class.
                                            <call>
                                                <name>getDeclaredMethod</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"defineClass"</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>params</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                        <index>[]</index>
                                    </type>
                                    <name>args</name> =
                                    <init>
                                        <expr>new
                                            <name>
                                                <name>Object</name>
                                                <index>[<expr>4</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>args</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    =
                                    <name>className</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>args</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                    =
                                    <name>classData</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>args</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                    = new
                                    <call>
                                        <name>Integer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>args</name>
                                        <index>[<expr>3</expr>]
                                        </index>
                                    </name>
                                    = new
                                    <call>
                                        <name>Integer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>classData</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>m</name>.
                                            <name>setAccessible</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>m</name>.
                                            <name>invoke</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>targetCL</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>args</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch(
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>e</name>.
                                                <name>printStackTrace</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fail</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Unable to load class " +
                                                        <name>className</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Set up instance variables required by this test case.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setUp</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setUpManager</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"org/apache/commons/logging/jdk14/CustomConfig.properties"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setUpLogger</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>this</name>.
                                                    <name>getClass</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setUpHandlers</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setUpFactory</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setUpLog</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>this</name>.
                                                    <name>getClass</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Return the tests included in this test suite.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Test</name>
                </type>
                <name>suite</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PathableClassLoader</name>
                            </type>
                            <name>cl</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>PathableClassLoader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>cl</name>.
                                    <name>useExplicitLoader</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"junit."</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Test</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class.
                                            <call>
                                                <name>getClassLoader</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// the TestHandler class must be accessable from the System classloader
                    </comment>
                    <comment type="line">// in order for java.util.logging.LogManager.readConfiguration to</comment>
                    <comment type="line">// be able to instantiate it. And this test case must see the same</comment>
                    <comment type="line">// class in order to be able to access its data. Yes this is ugly</comment>
                    <comment type="line">// but the whole jdk14 API is a ******* mess anyway.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>scl</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>ClassLoader</name>.
                                            <name>getSystemClassLoader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>loadTestHandler</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>HANDLER_NAME</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>scl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>cl</name>.
                                    <name>useExplicitLoader</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>HANDLER_NAME</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>scl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>cl</name>.
                                    <name>addLogicalLib</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"commons-logging"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>cl</name>.
                                    <name>addLogicalLib</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"testclasses"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>testClass</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>cl</name>.
                                            <name>loadClass</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>CustomConfigTestCase</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class.
                                                    <call>
                                                        <name>getName</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>PathableTestSuite</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>testClass</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tear down instance variables required by this test case.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>tearDown</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>tearDown</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>handlers</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>logger</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>manager</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="line">// ----------------------------------------------------------- Test Methods</comment>


            <comment type="line">// Test logging message strings with exceptions</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testExceptionMessages</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>logExceptionMessages</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkLogRecords</name>
                                <argument_list>(
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>


            <comment type="line">// Test logging plain message strings</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testPlainMessages</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>logPlainMessages</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkLogRecords</name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>


            <comment type="line">// Test pristine Handlers instances</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testPristineHandlers</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>handlers</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>handlers</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>handlers</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                            <name>instanceof</name>
                                            <name>TestHandler</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>handler</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>


            <comment type="line">// Test pristine Logger instance</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testPristineLogger</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Logger exists"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>logger</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Logger name"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>this</name>.
                                                    <name>getClass</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>logger</name>.
                                                    <name>getName</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Assert which logging levels have been enabled</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>logger</name>.
                                                    <name>isLoggable</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Level</name>.
                                                                <name>SEVERE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>logger</name>.
                                                    <name>isLoggable</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Level</name>.
                                                                <name>WARNING</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>logger</name>.
                                                    <name>isLoggable</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Level</name>.
                                                                <name>INFO</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>logger</name>.
                                                    <name>isLoggable</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Level</name>.
                                                                <name>CONFIG</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>logger</name>.
                                                    <name>isLoggable</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Level</name>.
                                                                <name>FINE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>!
                                            <call>
                                                <name><name>logger</name>.
                                                    <name>isLoggable</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Level</name>.
                                                                <name>FINER</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>!
                                            <call>
                                                <name><name>logger</name>.
                                                    <name>isLoggable</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Level</name>.
                                                                <name>FINEST</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>


            <comment type="line">// Test Serializability of Log instance</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testSerializable</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>testSerializable</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>testExceptionMessages</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>


            <comment type="line">// -------------------------------------------------------- Support Methods</comment>


            <comment type="line">// Check the log instance</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>checkLog</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Log exists"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>log</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Log class"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"org.apache.commons.logging.impl.Jdk14Logger"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>log</name>.
                                                    <name>getClass</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Assert which logging levels have been enabled</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>log</name>.
                                                    <name>isFatalEnabled</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>log</name>.
                                                    <name>isErrorEnabled</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>log</name>.
                                                    <name>isWarnEnabled</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>log</name>.
                                                    <name>isInfoEnabled</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>log</name>.
                                                    <name>isDebugEnabled</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>!
                                            <call>
                                                <name><name>log</name>.
                                                    <name>isTraceEnabled</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>


            <comment type="line">// Check the recorded messages</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>checkLogRecords</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>thrown</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Iterator</name>
                            </type>
                            <name>records</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>handler</name>.
                                            <name>records</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>testMessages</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>assertTrue</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>records</name>.
                                                            <name>hasNext</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>LogRecord</name>
                                    </type>
                                    <name>record</name> =
                                    <init>
                                        <expr>(<name>LogRecord</name>)
                                            <call>
                                                <name><name>records</name>.
                                                    <name>next</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>assertEquals</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"LogRecord level"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>testLevels</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>record</name>.
                                                            <name>getLevel</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>assertEquals</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"LogRecord message"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>testMessages</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>record</name>.
                                                            <name>getMessage</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>assertTrue</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"LogRecord class"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>record</name>.
                                                            <name>getSourceClassName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>startsWith</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"org.apache.commons.logging.jdk14.CustomConfig"
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>thrown</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>assertEquals</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"LogRecord method"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"logExceptionMessages"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>record</name>.
                                                                        <name>getSourceMethodName</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>assertEquals</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"LogRecord method"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"logPlainMessages"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>record</name>.
                                                                        <name>getSourceMethodName</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>thrown</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>assertNotNull</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"LogRecord thrown"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>record</name>.
                                                                        <name>getThrown</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>assertTrue</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"LogRecord thrown type"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>record</name>.
                                                                        <name>getThrown</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                <name>instanceof</name>
                                                                <name>DummyException</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>assertNull</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"LogRecord thrown"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>record</name>.
                                                                        <name>getThrown</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>!
                                            <call>
                                                <name><name>records</name>.
                                                    <name>hasNext</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>handler</name>.
                                    <name>flush</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="line">// Log the messages with exceptions</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>logExceptionMessages</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>DummyException</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>trace</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"trace"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// Should not actually get logged</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>debug</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"debug"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>info</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"info"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>warn</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"warn"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>error</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"error"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>fatal</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"fatal"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="line">// Log the plain messages</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>logPlainMessages</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>trace</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"trace"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// Should not actually get logged</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>debug</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"debug"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>info</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"info"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>warn</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"warn"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>error</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"error"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>log</name>.
                                    <name>fatal</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"fatal"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="line">// Set up handlers instance</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setUpHandlers</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Logger</name>
                            </type>
                            <name>parent</name> =
                            <init>
                                <expr>
                                    <name>logger</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>parent</name>.
                                        <name>getParent</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>parent</name>
                                    =
                                    <call>
                                        <name><name>parent</name>.
                                            <name>getParent</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <expr_stmt>
                        <expr>
                            <name>handlers</name>
                            =
                            <call>
                                <name><name>parent</name>.
                                    <name>getHandlers</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// The CustomConfig.properties file explicitly defines one handler class
                    </comment>
                    <comment type="line">// to be attached to the root logger, so if it isn't there then</comment>
                    <comment type="line">// something is badly wrong...</comment>
                    <comment type="line">//</comment>
                    <comment type="line">// Yes this testing is also done in testPristineHandlers but</comment>
                    <comment type="line">// unfortunately:</comment>
                    <comment type="line">// * we need to set up the handlers variable here,</comment>
                    <comment type="line">// * we don't want that to be set up incorrectly, as that can</comment>
                    <comment type="line">// produce weird error messages in other tests, and</comment>
                    <comment type="line">// * we can't rely on testPristineHandlers being the first</comment>
                    <comment type="line">// test to run.</comment>
                    <comment type="line">// so we need to test things here too.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"No Handlers defined for JDK14 logging"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>handlers</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Unexpected number of handlers for JDK14 logging"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>handlers</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Handler is null"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>handlers</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Handler not of expected type"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>handlers</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                            <name>instanceof</name>
                                            <name>TestHandler</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>handler</name>
                            = (<name>TestHandler</name>)
                            <name>
                                <name>handlers</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="line">// Set up logger instance</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setUpLogger</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>logger</name>
                            =
                            <call>
                                <name><name>Logger</name>.
                                    <name>getLogger</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="line">// Set up LogManager instance</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setUpManager</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>config</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>manager</name>
                            =
                            <call>
                                <name><name>LogManager</name>.
                                    <name>getLogManager</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.
                                            <name>getClass</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getClassLoader</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getResourceAsStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>config</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>manager</name>.
                                    <name>readConfiguration</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>is</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>is</name>.
                                    <name>close</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            }
        </block>
    </class>
</unit>
