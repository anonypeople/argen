<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\clogging\src\test\java\org\apache\commons\logging\LoadTestCase.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.
            <name>logging</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>junit</name>.<name>framework</name>.
            <name>TestCase</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * testcase to emulate container and application isolated from container
        * @author baliuka
        * @version $Id: LoadTestCase.java 1432587 2013-01-13 11:11:32Z tn $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>LoadTestCase</name>
        <super>
            <extends>extends
                <name>TestCase</name>
            </extends>
        </super>
        <block>{
            <comment type="line">//TODO: need some way to add service provider packages</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>
                        <name>LOG_PCKG</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>
                            <block>{<expr>"org.apache.commons.logging"</expr>,
                                <expr>"org.apache.commons.logging.impl"</expr>}
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A custom classloader which "duplicates" logging classes available
                * in the parent classloader into itself.
                * &lt;p&gt;
                * When asked to load a class that is in one of the LOG_PCKG packages,
                * it loads the class itself (child-first). This class doesn't need
                * to be set up with a classpath, as it simply uses the same classpath
                * as the classloader that loaded it.
                */
            </comment>
            <class>
                <specifier>static</specifier>
                class <name>AppClassLoader</name>
                <super>
                    <extends>extends
                        <name>ClassLoader</name>
                    </extends>
                </super>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>java</name>.<name>util</name>.
                                    <name>Map</name>
                                </name>
                            </type>
                            <name>classes</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>java</name>.<name>util</name>.
                                            <name>HashMap</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>AppClassLoader</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>parent</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>parent</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>Class</name>
                        </type>
                        <name>def</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>ClassNotFoundException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Class</name>
                                    </type>
                                    <name>result</name> =
                                    <init>
                                        <expr>(<name>Class</name>)
                                            <call>
                                                <name><name>classes</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>name</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>result</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>result</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>

                            <try>try
                                <block>{

                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>ClassLoader</name>
                                            </type>
                                            <name>cl</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>this</name>.
                                                            <name>getClass</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>getClassLoader</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>String</name>
                                            </type>
                                            <name>classFileName</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>name</name>.
                                                            <name>replace</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>'.'</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>'/'</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    + ".class"
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name><name>java</name>.<name>io</name>.
                                                    <name>InputStream</name>
                                                </name>
                                            </type>
                                            <name>is</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>cl</name>.
                                                            <name>getResourceAsStream</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>classFileName</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name><name>java</name>.<name>io</name>.
                                                    <name>ByteArrayOutputStream</name>
                                                </name>
                                            </type>
                                            <name>out</name> =
                                            <init>
                                                <expr>new
                                                    <call>
                                                        <name><name>java</name>.<name>io</name>.
                                                            <name>ByteArrayOutputStream</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <while>while
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>is</name>.
                                                        <name>available</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                &gt; 0
                                            </expr>
                                            )
                                        </condition>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>out</name>.
                                                            <name>write</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>is</name>.
                                                                            <name>read</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </while>

                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>byte</name>
                                            </type>
                                            <name>
                                                <name>data</name>
                                                <index>[]</index>
                                            </name>
                                            =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>out</name>.
                                                            <name>toByteArray</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <expr_stmt>
                                        <expr>
                                            <name>result</name>
                                            =
                                            <call>
                                                <name><name>super</name>.
                                                    <name>defineClass</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>name</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>data</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>data</name>.
                                                                <name>length</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>classes</name>.
                                                    <name>put</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>name</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>result</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <return>return
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                        ;
                                    </return>

                                    }
                                </block>
                                <catch>catch(
                                    <param>
                                        <decl>
                                            <type>
                                                <name><name>java</name>.<name>io</name>.
                                                    <name>IOException</name>
                                                </name>
                                            </type>
                                            <name>ioe</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{

                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>ClassNotFoundException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                                + " caused by "
                                                                +
                                                                <call>
                                                                    <name><name>ioe</name>.
                                                                        <name>getMessage</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </catch>
                            </try>


                            }
                        </block>
                    </function>

                    <comment type="line">// not very trivial to emulate we must implement "findClass",</comment>
                    <comment type="line">// but it will delegete to junit class loder first</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Class</name>
                        </type>
                        <name>loadClass</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>ClassNotFoundException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{

                            <comment type="line">//isolates all logging classes, application in the same classloader
                                too.
                            </comment>
                            <comment type="line">//filters exeptions to simlify handling in test</comment>
                            <for>for(
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name><name>LOG_PCKG</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>name</name>.
                                                        <name>startsWith</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>LOG_PCKG</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &amp;&amp;
                                                <call>
                                                    <name><name>name</name>.
                                                        <name>indexOf</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Exception"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                == -1
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name>def</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>name</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>loadClass</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    }
                </block>
            </class>


            <comment type="javadoc">/**
                * Call the static setAllowFlawedContext method on the specified class
                * (expected to be a UserClass loaded via a custom classloader), passing
                * it the specified state parameter.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>setAllowFlawedContext</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>state</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                                <index>[]</index>
                            </type>
                            <name>params</name> =
                            <init>
                                <expr>
                                    <block>{
                                        <expr>
                                            <name><name>String</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                        }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
                                    <name>Method</name>
                                </name>
                            </type>
                            <name>m</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>c</name>.
                                            <name>getDeclaredMethod</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"setAllowFlawedContext"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>params</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>m</name>.
                                    <name>invoke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <name>
                                                <name>Object</name>
                                                <index>[]</index>
                                            </name>
                                            <block>{
                                                <expr>
                                                    <name>state</name>
                                                </expr>
                                                }
                                            </block>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Test what happens when we play various classloader tricks like those
                * that happen in web and j2ee containers.
                * &lt;p&gt;
                * Note that this test assumes that commons-logging.jar and log4j.jar
                * are available via the system classpath.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>testInContainer</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">//problem can be in this step (broken app container or missconfiguration)
                    </comment>
                    <comment type="line">//1.
                        Thread.currentThread().setContextClassLoader(ClassLoader.getSystemClassLoader());
                    </comment>
                    <comment type="line">//2.
                        Thread.currentThread().setContextClassLoader(this.getClass().getClassLoader());
                    </comment>
                    <comment type="line">// we expect this :</comment>
                    <comment type="line">// 1. Thread.currentThread().setContextClassLoader(appLoader);</comment>
                    <comment type="line">// 2. Thread.currentThread().setContextClassLoader(null);</comment>

                    <comment type="line">// Context classloader is same as class calling into log</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>cls</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>reload</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Thread</name>.
                                    <name>currentThread</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>setContextClassLoader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>cls</name>.
                                                    <name>getClassLoader</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>execute</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cls</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Context classloader is the "bootclassloader". This is technically</comment>
                    <comment type="line">// bad, but LogFactoryImpl.ALLOW_FLAWED_CONTEXT defaults to true so</comment>
                    <comment type="line">// this test should pass.</comment>
                    <expr_stmt>
                        <expr>
                            <name>cls</name>
                            =
                            <call>
                                <name>reload</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Thread</name>.
                                    <name>currentThread</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>setContextClassLoader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>execute</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cls</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Context classloader is the "bootclassloader". This is same as above
                    </comment>
                    <comment type="line">// except that ALLOW_FLAWED_CONTEXT is set to false; an error should</comment>
                    <comment type="line">// now be reported.</comment>
                    <expr_stmt>
                        <expr>
                            <name>cls</name>
                            =
                            <call>
                                <name>reload</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Thread</name>.
                                    <name>currentThread</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>setContextClassLoader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>setAllowFlawedContext</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>cls</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"false"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>execute</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>cls</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>fail</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Logging config succeeded when context classloader was null!"
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch(
                            <param>
                                <decl>
                                    <type>
                                        <name>LogConfigurationException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// expected; the boot classloader doesn't *have* JCL available
                                </comment>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Context classloader is the system classloader.</comment>
                    <comment type="line">//</comment>
                    <comment type="line">// This is expected to cause problems, as LogFactoryImpl will attempt</comment>
                    <comment type="line">// to use the system classloader to load the Log4JLogger class, which</comment>
                    <comment type="line">// will then be unable to cast that object to the Log interface loaded
                    </comment>
                    <comment type="line">// via the child classloader. However as ALLOW_FLAWED_CONTEXT defaults
                    </comment>
                    <comment type="line">// to true this test should pass.</comment>
                    <expr_stmt>
                        <expr>
                            <name>cls</name>
                            =
                            <call>
                                <name>reload</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Thread</name>.
                                    <name>currentThread</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>setContextClassLoader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ClassLoader</name>.
                                                    <name>getSystemClassLoader</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>execute</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cls</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Context classloader is the system classloader. This is the same</comment>
                    <comment type="line">// as above except that ALLOW_FLAWED_CONTEXT is set to false; an error
                    </comment>
                    <comment type="line">// should now be reported.</comment>
                    <expr_stmt>
                        <expr>
                            <name>cls</name>
                            =
                            <call>
                                <name>reload</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Thread</name>.
                                    <name>currentThread</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>setContextClassLoader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ClassLoader</name>.
                                                    <name>getSystemClassLoader</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>setAllowFlawedContext</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>cls</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"false"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>execute</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>cls</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>fail</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Error: somehow downcast a Logger loaded via system classloader"
                                                    + " to the Log interface loaded via a custom classloader"
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch(
                            <param>
                                <decl>
                                    <type>
                                        <name>LogConfigurationException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// expected</comment>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Load class UserClass via a temporary classloader which is a child of
                * the classloader used to load this test class.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Class</name>
                </type>
                <name>reload</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>testObjCls</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AppClassLoader</name>
                            </type>
                            <name>appLoader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>AppClassLoader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>this</name>.
                                                            <name>getClass</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>getClassLoader</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{

                            <expr_stmt>
                                <expr>
                                    <name>testObjCls</name>
                                    =
                                    <call>
                                        <name><name>appLoader</name>.
                                            <name>loadClass</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>UserClass</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class.
                                                    <call>
                                                        <name>getName</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            }
                        </block>
                        <catch>catch(
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassNotFoundException</name>
                                    </type>
                                    <name>cnfe</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>
                                        <name>cnfe</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch(
                            <param>
                                <decl>
                                    <type>
                                        <name>Throwable</name>
                                    </type>
                                    <name>t</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>t</name>.
                                                <name>printStackTrace</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fail</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"AppClassLoader failed "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertTrue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"app isolated"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>testObjCls</name>.
                                                    <name>getClassLoader</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name>appLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>


                    <return>return
                        <expr>
                            <name>testObjCls</name>
                        </expr>
                        ;
                    </return>


                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>execute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>cls</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>cls</name>.
                                    <name>newInstance</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setUp</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// save state before test starts so we can restore it when test ends</comment>
                    <expr_stmt>
                        <expr>
                            <name>origContextClassLoader</name>
                            =
                            <call>
                                <name><name>Thread</name>.
                                    <name>currentThread</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getContextClassLoader</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>tearDown</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// restore original state so a test can't stuff up later tests.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Thread</name>.
                                    <name>currentThread</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>setContextClassLoader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>origContextClassLoader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ClassLoader</name>
                    </type>
                    <name>origContextClassLoader</name>
                </decl>
                ;
            </decl_stmt>
            }
        </block>
    </class>
</unit>
