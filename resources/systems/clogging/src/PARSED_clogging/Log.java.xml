<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\clogging\src\main\java\org\apache\commons\logging\Log.java">
    <comment type="block">/*
        * Licensed to the Apache Software Foundation (ASF) under one or more
        * contributor license agreements. See the NOTICE file distributed with
        * this work for additional information regarding copyright ownership.
        * The ASF licenses this file to You under the Apache License, Version 2.0
        * (the "License"); you may not use this file except in compliance with
        * the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>commons</name>.
            <name>logging</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * A simple logging interface abstracting logging APIs. In order to be
        * instantiated successfully by {@link LogFactory}, classes that implement
        * this interface must have a constructor that takes a single String
        * parameter representing the "name" of this Log.
        * &lt;p&gt;
        * The six logging levels used by &lt;code&gt;Log&lt;/code&gt; are (in order):
        * &lt;ol&gt;
        * &lt;li&gt;trace (the least serious)&lt;/li&gt;
        * &lt;li&gt;debug&lt;/li&gt;
        * &lt;li&gt;info&lt;/li&gt;
        * &lt;li&gt;warn&lt;/li&gt;
        * &lt;li&gt;error&lt;/li&gt;
        * &lt;li&gt;fatal (the most serious)&lt;/li&gt;
        * &lt;/ol&gt;
        * The mapping of these log levels to the concepts used by the underlying
        * logging system is implementation dependent.
        * The implementation should ensure, though, that this ordering behaves
        * as expected.
        * &lt;p&gt;
        * Performance is often a logging concern.
        * By examining the appropriate property,
        * a component can avoid expensive operations (producing information
        * to be logged).
        * &lt;p&gt;
        * For example,
        * &lt;code&gt;&lt;pre&gt;
        * if (log.isDebugEnabled()) {
        * ... do something expensive ...
        * log.debug(theResult);
        * }
        * &lt;/pre&gt;&lt;/code&gt;
        * &lt;p&gt;
        * Configuration of the underlying logging system will generally be done
        * external to the Logging APIs, through whatever mechanism is supported by
        * that system.
        *
        * @version $Id: Log.java 1432663 2013-01-13 17:24:18Z tn $
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Log</name>
        <block>{

            <comment type="line">// ----------------------------------------------------- Logging Properties</comment>

            <comment type="javadoc">/**
                * Is debug logging currently enabled?
                * &lt;p&gt;
                * Call this method to prevent having to perform expensive operations
                * (for example, &lt;code&gt;String&lt;/code&gt; concatenation)
                * when the log level is more than debug.
                *
                * @return true if debug is enabled in the underlying logger.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isDebugEnabled</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Is error logging currently enabled?
                * &lt;p&gt;
                * Call this method to prevent having to perform expensive operations
                * (for example, &lt;code&gt;String&lt;/code&gt; concatenation)
                * when the log level is more than error.
                *
                * @return true if error is enabled in the underlying logger.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isErrorEnabled</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Is fatal logging currently enabled?
                * &lt;p&gt;
                * Call this method to prevent having to perform expensive operations
                * (for example, &lt;code&gt;String&lt;/code&gt; concatenation)
                * when the log level is more than fatal.
                *
                * @return true if fatal is enabled in the underlying logger.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isFatalEnabled</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Is info logging currently enabled?
                * &lt;p&gt;
                * Call this method to prevent having to perform expensive operations
                * (for example, &lt;code&gt;String&lt;/code&gt; concatenation)
                * when the log level is more than info.
                *
                * @return true if info is enabled in the underlying logger.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isInfoEnabled</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Is trace logging currently enabled?
                * &lt;p&gt;
                * Call this method to prevent having to perform expensive operations
                * (for example, &lt;code&gt;String&lt;/code&gt; concatenation)
                * when the log level is more than trace.
                *
                * @return true if trace is enabled in the underlying logger.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isTraceEnabled</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Is warn logging currently enabled?
                * &lt;p&gt;
                * Call this method to prevent having to perform expensive operations
                * (for example, &lt;code&gt;String&lt;/code&gt; concatenation)
                * when the log level is more than warn.
                *
                * @return true if warn is enabled in the underlying logger.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isWarnEnabled</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="line">// -------------------------------------------------------- Logging Methods</comment>

            <comment type="javadoc">/**
                * Log a message with trace log level.
                *
                * @param message log this message
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>trace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Log an error with trace log level.
                *
                * @param message log this message
                * @param t log this cause
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>trace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Log a message with debug log level.
                *
                * @param message log this message
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>debug</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Log an error with debug log level.
                *
                * @param message log this message
                * @param t log this cause
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>debug</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Log a message with info log level.
                *
                * @param message log this message
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>info</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Log an error with info log level.
                *
                * @param message log this message
                * @param t log this cause
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>info</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Log a message with warn log level.
                *
                * @param message log this message
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>warn</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Log an error with warn log level.
                *
                * @param message log this message
                * @param t log this cause
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>warn</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Log a message with error log level.
                *
                * @param message log this message
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>error</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Log an error with error log level.
                *
                * @param message log this message
                * @param t log this cause
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>error</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Log a message with fatal log level.
                *
                * @param message log this message
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>fatal</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Log an error with fatal log level.
                *
                * @param message log this message
                * @param t log this cause
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>fatal</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Throwable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            }
        </block>
    </class>
</unit>
