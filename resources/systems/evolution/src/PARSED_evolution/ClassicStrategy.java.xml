<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\thesisCode\git\biorimp\BIO-RIMP\test_data\code\evolution\src\unalcol\evolution\ga\ClassicStrategy.java">
    <package>package
        <name><name>unalcol</name>.<name>evolution</name>.
            <name>ga</name>
        </name>
        ;
    </package>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>solution</name>.
            <name>Solution</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>selection</name>.
            <name>Selection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>operators</name>.
            <name>ArityOne</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>operators</name>.
            <name>RefiningOperator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>operators</name>.
            <name>ArityTwo</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.
            <name>evolution</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>random</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.
            <name>vector</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>unalcol</name>.
            <name>clone</name>
        </name>
        .*;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;Title: ClassicStrategy&lt;/p&gt;
        *
        * &lt;p&gt;Description: The classic genetic algorithm offspring generation strategy&lt;/p&gt;
        *
        * &lt;p&gt;Copyright: Copyright (c) 2010&lt;/p&gt;
        *
        * @author Jonatan Gomez
        * @version 1.0
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>
            <name>ClassicStrategy</name>
            <argument_list>&lt;
                <argument>
                    <name>G</name>
                </argument>
                ,
                <argument>
                    <name>P</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <super>
            <extends>extends
                <name>
                    <name>OffspringGeneration</name>
                    <argument_list>&lt;
                        <argument>
                            <name>G</name>
                        </argument>
                        ,
                        <argument>
                            <name>P</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>
                            <name>Selection</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>P</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>parent_selection</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>RefiningOperator</name>
                    </type>
                    <name>operator</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>BooleanGenerator</name>
                    </type>
                    <name>generator</name>
                </decl>
                ;
            </decl_stmt>
            <constructor>
                <specifier>public</specifier>
                <name>ClassicStrategy</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Selection</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>P</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>parent_sel</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>GrowingFunction</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>G</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>P</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>grow</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>ArityOne</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>G</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>mutation</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>ArityTwo</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>G</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>xover</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>probability</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>parent_sel</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>grow</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>RefiningOperator</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>xover</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>mutation</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>probability</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <constructor>
                <specifier>public</specifier>
                <name>ClassicStrategy</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Selection</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>P</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>parent_sel</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>GrowingFunction</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>G</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>P</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>grow</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>RefiningOperator</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>G</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>operator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>probability</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>grow</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>parent_selection</name>
                            =
                            <name>parent_sel</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>operator</name>
                            </name>
                            =
                            <name>operator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>generator</name>
                            = new
                            <call>
                                <name>BooleanGenerator</name>
                                <argument_list>(
                                    <argument>
                                        <expr>1.0 -
                                            <name>probability</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Vector</name>
                        <argument_list>&lt;
                            <argument>
                                <name>
                                    <name>Solution</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>P</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>apply</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Vector</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Solution</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>P</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>population</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>population</name>
                            =
                            <call>
                                <name><name>parent_selection</name>.
                                    <name>apply</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>population</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>population</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>population</name>.
                                    <name>shuffle</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>buffer</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Vector</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>n</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>operator</name>.
                                            <name>getArity</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>m</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>population</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    /
                                    <name>n</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>k</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>j</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>j</name>
                                &lt;
                                <name>m</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>j</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Vector</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Solution</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>P</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>offspring</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>Vector</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for(
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>=
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>i</name>&lt;
                                        <name>n</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>offspring</name>.
                                                    <name>add</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>population</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr><name>k</name>+
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>generator</name>.
                                                <name>next</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>offspring</name>
                                                =
                                                <call>
                                                    <name><name>grow</name>.
                                                        <name>apply</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>operator</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>offspring</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <try>try
                                            <block>{
                                                <for>for (
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>i</name> =
                                                            <init>
                                                                <expr>0</expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>i</name>
                                                            &lt;
                                                            <name>n</name>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>i</name>++
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>offspring</name>.
                                                                        <name>set</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>(
                                                                                <name>
                                                                                    <name>Solution</name>
                                                                                    <argument_list>&lt;
                                                                                        <argument>
                                                                                            <name>P</name>
                                                                                        </argument>
                                                                                        &gt;
                                                                                    </argument_list>
                                                                                </name>
                                                                                )
                                                                                <call>
                                                                                    <name><name>Clone</name>.
                                                                                        <name>get</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        offspring</name>
                                                                                                        .
                                                                                                        <name>get</name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    i
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </for>
                                                }
                                            </block>
                                            <catch>catch(
                                                <param>
                                                    <decl>
                                                        <type>
                                                            <name>Exception</name>
                                                        </type>
                                                        <name>e</name>
                                                    </decl>
                                                </param>
                                                )
                                                <block>{}</block>
                                            </catch>
                                        </try>
                                        }
                                    </block>
                                </else>
                            </if>
                            <for>for(
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>=
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>i</name>&lt;
                                        <call>
                                            <name><name>offspring</name>.
                                                <name>size</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>add</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>offspring</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <expr_stmt>
                                <expr>
                                    <name>k</name>
                                    +=
                                    <name>n</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>buffer</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
