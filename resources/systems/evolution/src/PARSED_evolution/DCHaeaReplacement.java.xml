<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\thesisCode\git\biorimp\BIO-RIMP\test_data\code\evolution\src\unalcol\evolution\haea\DCHaeaReplacement.java">
    <package>package
        <name><name>unalcol</name>.<name>evolution</name>.
            <name>haea</name>
        </name>
        ;
    </package>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>solution</name>.
            <name>Solution</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>math</name>.
            <name>metric</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>vector</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;Title: DCHaeaReplacement&lt;/p&gt;
        * &lt;p&gt;Description: The Deterministic Crowding Replacement Strategy for the HAEA Algorithm.&lt;/p&gt;
        * &lt;p&gt;Copyright: Copyright (c) 2010&lt;/p&gt;
        * @author Jonatan Gomez
        * @version 1.0
        *
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>
            <name>DCHaeaReplacement</name>
            <argument_list>&lt;
                <argument>
                    <name>T</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <super>
            <extends>extends
                <name>
                    <name>HaeaReplacement</name>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>
                            <name>QuasiMetric</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>T</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>metric</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>DCHaeaReplacement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>HaeaOperators</name>
                            </type>
                            <name>operators</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>QuasiMetric</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>T</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>metric</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>operators</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>metric</name>
                            </name>
                            =
                            <name>metric</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Adds a subpopulation of parents and associated offsprings to the replacement strategy.
                * These method chooses between parents and offspring in order to define the individuals that
                * will be maintained into the next generation using the HAEA mechanism
                * @param parents Parents
                * @param children
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>Vector</name>
                        <argument_list>&lt;
                            <argument>
                                <name>
                                    <name>Solution</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>T</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>apply</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Vector</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Solution</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>T</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>parents</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Vector</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Solution</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>T</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>offspring</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>k</name>=
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Vector</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Solution</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>T</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>buffer</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Vector</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <call>
                                    <name><name>parents</name>.
                                        <name>size</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Solution</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>T</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>parent</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>parents</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Solution</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>T</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>child</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>offspring</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>k</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>d</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>metric</name>.
                                                    <name>apply</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>parent</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>child</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr><name>k</name>++
                                </expr>
                                ;
                            </expr_stmt>
                            <for>for(
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>h</name>=
                                        <init>
                                            <expr>1</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>h</name>&lt;
                                        <call>
                                            <name><name>operators</name>.
                                                <name>getSizeOffspring</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>h</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Solution</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>T</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>child2</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>offspring</name>.
                                                            <name>get</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>k</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>double</name>
                                            </type>
                                            <name>d2</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>metric</name>.
                                                            <name>apply</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>parent</name>.
                                                                            <name>get</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>child</name>.
                                                                            <name>get</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>d2</name>
                                                &gt;
                                                <name>d</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>child</name>
                                                        =
                                                        <name>child2</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>d</name>
                                                        =
                                                        <name>d2</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr><name>k</name>++
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>parent</name>.
                                                <name>value</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &lt;
                                        <call>
                                            <name><name>child</name>.
                                                <name>value</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>operators</name>.
                                                        <name>reward</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>operators</name>.
                                                        <name>punish</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>parent</name>.
                                                <name>value</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &lt;
                                        <call>
                                            <name><name>child</name>.
                                                <name>value</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>child</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>parent</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>buffer</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
