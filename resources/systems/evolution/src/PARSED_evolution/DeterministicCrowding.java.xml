<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\thesisCode\git\biorimp\BIO-RIMP\test_data\code\evolution\src\unalcol\evolution\util\DeterministicCrowding.java">
    <package>package
        <name><name>unalcol</name>.<name>evolution</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>replacement</name>.
            <name>Replacement</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.
            <name>evolution</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>math</name>.<name>metric</name>.
            <name>QuasiMetric</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.
            <name>vector</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>unalcol</name>.
            <name>clone</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>solution</name>.
            <name>Solution</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;Title: DeterministicCrowding&lt;/p&gt;
        * &lt;p&gt;Description: The Deterministic Crowding Approach proposed by Mahfoud for niching&lt;/p&gt;
        * &lt;p&gt;Copyright: Copyright (c) 2010&lt;/p&gt;
        * &lt;p&gt;Company: Prion&lt;/p&gt;
        * @author Jonatan Gomez
        * @version 1.0
        *
        */
    </comment>

    <class>
        <specifier>public</specifier>
        class
        <name>
            <name>DeterministicCrowding</name>
            <argument_list>&lt;
                <argument>
                    <name>T</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <super>
            <extends>extends
                <name>
                    <name>Replacement</name>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{
            <comment type="javadoc">/**
                * Distance between individuals
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>QuasiMetric</name>
                    </type>
                    <name>metric</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a Simple Genetic Algorithm Transformation function, with the given
                * selection scheme, and simple crossover, and simple gen mutation operators. The
                * operators have the given probability to be applied
                * @param _metric Distance between individuals
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>DeterministicCrowding</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QuasiMetric</name>
                            </type>
                            <name>_metric</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>metric</name>
                            =
                            <call>
                                <name><name>IndividualMetric</name>.
                                    <name>generate</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>_metric</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Vector</name>
                        <argument_list>&lt;
                            <argument>
                                <name>
                                    <name>Solution</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>T</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>apply</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Vector</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Solution</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>T</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Vector</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Solution</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>T</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>offspring</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Vector</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Solution</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>T</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>buffer</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>
                                                    <name>Vector</name>
                                                    <argument_list>&lt;&gt;</argument_list>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for(
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>=
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>i</name>&lt;
                                        <call>
                                            <name><name>parent</name>.
                                                <name>size</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>+=2
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Solution</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>T</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>P1</name>, <name>P2</name>, <name>C1</name>,
                                            <name>C2</name>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>P1</name>
                                            = (
                                            <name>
                                                <name>Solution</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>T</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                            )
                                            <call>
                                                <name><name>parent</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>P2</name>
                                            = (
                                            <name>
                                                <name>Solution</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>T</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                            )
                                            <call>
                                                <name><name>parent</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>i</name>+1
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>C1</name>
                                            = (
                                            <name>
                                                <name>Solution</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>T</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                            )
                                            <call>
                                                <name><name>offspring</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>C2</name>
                                            = (<name>Individual</name>)
                                            <call>
                                                <name><name>offspring</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>i</name>+1
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>metric</name>.
                                                        <name>apply</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>P1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>C1</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                +
                                                <call>
                                                    <name><name>metric</name>.
                                                        <name>apply</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>P2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>C2</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;=
                                                <call>
                                                    <name><name>metric</name>.
                                                        <name>apply</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>P1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>C2</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                +
                                                <call>
                                                    <name><name>metric</name>.
                                                        <name>apply</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>P2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>C1</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>
                                                                <name>Solution</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>T</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>temp</name> =
                                                        <init>
                                                            <expr>
                                                                <name>C1</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>C1</name>
                                                        =
                                                        <name>C2</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>C2</name>
                                                        =
                                                        <name>temp</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>C1</name>.
                                                        <name>value</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                &lt;
                                                <call>
                                                    <name><name>P1</name>.
                                                        <name>value</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>C1</name>
                                                        = (<name>Individual</name>)
                                                        <call>
                                                            <name><name>Clone</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>P1</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>C2</name>.
                                                        <name>value</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                &lt;
                                                <call>
                                                    <name><name>P2</name>.
                                                        <name>value</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>C2</name>
                                                        = (<name>Individual</name>)
                                                        <call>
                                                            <name><name>Clone</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>P2</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>add</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>C1</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>add</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>C2</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <return>return
                                <expr>
                                    <name>buffer</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch(
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>e</name>.
                                                <name>printStackTrace</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
