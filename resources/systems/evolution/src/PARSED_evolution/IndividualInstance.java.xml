<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\thesisCode\git\biorimp\BIO-RIMP\test_data\code\evolution\src\unalcol\evolution\IndividualInstance.java">
    <comment type="block">/*
        * To change this template, choose Tools | Templates
        * and open the template in the editor.
        */
    </comment>
    <package>package
        <name><name>unalcol</name>.
            <name>evolution</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>unalcol</name>.<name>instance</name>.
            <name>InstanceProvider</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>solution</name>.
            <name>Solution</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>solution</name>.
            <name>SolutionInstance</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        *
        * @author jgomez
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>IndividualInstance</name>
        <super>
            <extends>extends
                <name>SolutionInstance</name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>GrowingFunction</name>
                    </type>
                    <name>grow</name>
                </decl>
                ;
            </decl_stmt>
            <constructor>
                <specifier>public</specifier>
                <name>IndividualInstance</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>GrowingFunction</name>
                            </type>
                            <name>grow</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>grow</name>
                            </name>
                            =
                            <name>grow</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>Solution</name>
                </type>
                <name>get</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Solution</name>
                            </type>
                            <name>sol</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>genome</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>InstanceProvider</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>((<name>Individual</name>)<name>sol</name>).
                                                    <call>
                                                        <name>genome</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>Individual</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>genome</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>grow</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>genome</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>owner</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>Individual</name>.
                                <name>
                                    <name/>
                                </name>
                            </name>
                            class
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
