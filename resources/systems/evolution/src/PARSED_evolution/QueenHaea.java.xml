<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\thesisCode\git\biorimp\BIO-RIMP\test_data\code\evolution\src\unalcol\evolution\util\QueenHaea.java">
    <comment type="block">/*
        * To change this template, choose Tools | Templates
        * and open the template in the editor.
        */
    </comment>
    <package>package
        <name><name>unalcol</name>.<name>evolution</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>unalcol</name>.<name>algorithm</name>.<name>iterative</name>.
            <name>ForLoopCondition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>evolution</name>.
            <name>GrowingFunction</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>evolution</name>.
            <name>Individual</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>evolution</name>.
            <name>IndividualInstance</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>evolution</name>.<name>haea</name>.
            <name>HAEA</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>evolution</name>.<name>haea</name>.
            <name>HaeaOperators</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>evolution</name>.<name>haea</name>.
            <name>SimpleHaeaOperators</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>instance</name>.
            <name>InstanceProvider</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>instance</name>.
            <name>InstanceService</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>io</name>.
            <name>WriteService</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>math</name>.<name>logic</name>.
            <name>Predicate</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.
            <name>OptimizationFunction</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.
            <name>PopulationOptimizer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>iterative</name>.
            <name>IterativePopulationOptimizer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>operators</name>.
            <name>ArityOne</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>operators</name>.
            <name>ArityTwo</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>operators</name>.
            <name>Operator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>selection</name>.
            <name>Selection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>selection</name>.
            <name>Tournament</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>solution</name>.
            <name>Solution</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>solution</name>.
            <name>SolutionInstance</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>transformation</name>.
            <name>Transformation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>reflect</name>.<name>service</name>.
            <name>ServiceProvider</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>reflect</name>.<name>util</name>.
            <name>ReflectUtil</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>tracer</name>.
            <name>ConsoleTracer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>tracer</name>.
            <name>FileTracer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>tracer</name>.
            <name>Tracer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>tracer</name>.
            <name>TracerProvider</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>vector</name>.
            <name>Vector</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>types</name>.<name>integer</name>.<name>array</name>.
            <name>IntArraySimplePersistent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>types</name>.<name>real</name>.<name>array</name>.
            <name>DoubleArraySimpleWriteService</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        *
        * @author Jonatan
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>QueenHaea</name>
        <block>{
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>main</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>args</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// Reflection</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ServiceProvider</name>
                            </type>
                            <name>provider</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>ReflectUtil</name>.
                                            <name>getProvider</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"services/"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DoubleArraySimpleWriteService</name>
                            </type>
                            <name>key</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>DoubleArraySimpleWriteService</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>','</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>provider</name>.
                                    <name>register</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>provider</name>.
                                    <name>setDefault_service</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>WriteService</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>double</name>
                                                <index>[]</index>
                                            </name>
                                            .class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IntArraySimplePersistent</name>
                            </type>
                            <name>iskey</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>IntArraySimplePersistent</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>','</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>provider</name>.
                                    <name>register</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>iskey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>provider</name>.
                                    <name>setDefault_service</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>WriteService</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>int</name>
                                                <index>[]</index>
                                            </name>
                                            .class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>iskey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>


                    <comment type="line">// Search Space</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>DIMENSION</name> =
                            <init>
                                <expr>8</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InstanceService</name>
                            </type>
                            <name>ikey</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>IntArrayInstance</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>DIMENSION</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>provider</name>.
                                    <name>register</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ikey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>provider</name>.
                                    <name>setDefault_service</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>InstanceService</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>int</name>
                                                <index>[]</index>
                                            </name>
                                            .class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>ikey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Solution Space</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>x</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[
                                            <expr>
                                                <name>DIMENSION</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Solution</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>int</name>
                                            <index>[]</index>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>solution</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>
                                            <name>Individual</name>
                                            <argument_list>&lt;&gt;</argument_list>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>x</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>x</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>GrowingFunction</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>int</name>
                                            <index>[]</index>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>int</name>
                                            <index>[]</index>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>grow</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>GrowingFunction</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SolutionInstance</name>
                            </type>
                            <name>skey</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>IndividualInstance</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>grow</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>provider</name>.
                                    <name>register</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>skey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>provider</name>.
                                    <name>setDefault_service</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>InstanceService</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Solution</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>skey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>


                    <comment type="line">// Initial population</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>POPSIZE</name> =
                            <init>
                                <expr>100</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Vector</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Solution</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>int</name>
                                                        <index>[]</index>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>pop</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>InstanceProvider</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>solution</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>POPSIZE</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Function being optimized</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>OptimizationFunction</name>
                            </type>
                            <name>function</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>QueenFitness</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Evaluating the fitness of the initial population</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Solution</name>.
                                    <name>evaluate</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>Vector</name>)
                                            <name>pop</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>function</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ArityOne</name>
                            </type>
                            <name>mutation</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>MutationIntArray</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>DIMENSION</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ArityTwo</name>
                            </type>
                            <name>xover</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XOverIntArray</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// ArityOne transposition = new RTransposition();</comment>

                    <comment type="line">// Genetic operators</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Operator</name>
                                <index>[]</index>
                            </type>
                            <name>opers</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>Operator</name>
                                        <index>[]</index>
                                    </name>
                                    <block>{
                                        <expr>
                                            <name>mutation</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>xover</name>
                                        </expr>
                                        }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>HaeaOperators</name>
                            </type>
                            <name>haeaOperators</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SimpleHaeaOperators</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>opers</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Extra parent selection mechanism</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Selection</name>
                            </type>
                            <name>selection</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Tournament</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>4</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Genetic Algorithm Transformation</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Transformation</name>
                            </type>
                            <name>transformation</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>HAEA</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>haeaOperators</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>grow</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>selection</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Evolution generations</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>MAXITER</name> =
                            <init>
                                <expr>1000</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Predicate</name>
                            </type>
                            <name>condition</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ForLoopCondition</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>MAXITER</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Evolutionary algorithm (is a population optimizer)</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PopulationOptimizer</name>
                            </type>
                            <name>ea</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>IterativePopulationOptimizer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>condition</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>transformation</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>pop</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>tracing</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>tracing</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// A console set tracer</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Tracer</name>
                                        </type>
                                        <name>tracer</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>ConsoleTracer</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ea</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">// Adding the tracer collection to the given population optimizer
                                    (evolutionary algorithm)
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>provider</name>.
                                                <name>register</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>tracer</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>tracer</name>
                                        = new
                                        <call>
                                            <name>FileTracer</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ea</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"haea-q.txt"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>provider</name>.
                                                <name>register</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>tracer</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// running the population optimizer (the evolutionary algorithm)</comment>
                    <expr_stmt>
                        <expr>
                            <name>pop</name>
                            = (
                            <name>
                                <name>Vector</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Solution</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>int</name>
                                                        <index>[]</index>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                            )
                            <call>
                                <name><name>ea</name>.
                                    <name>apply</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>function</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Tracer</name>
                            </type>
                            <name>tracer</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ConsoleTracer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>pop</name>.
                                                            <name>get</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>get</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>out</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>XOverIntArray</name>.
                                                    <name>toStringInt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>pop</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>0</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>get</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>TracerProvider</name>.
                                    <name>close</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ea</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
