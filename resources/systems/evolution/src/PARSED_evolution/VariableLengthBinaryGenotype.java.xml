<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\thesisCode\git\biorimp\BIO-RIMP\test_data\code\evolution\src\unalcol\evolution\genotype\binary\varlength\VariableLengthBinaryGenotype.java">
    <package>package
        <name><name>unalcol</name>.<name>evolution</name>.<name>genotype</name>.<name>binary</name>.
            <name>varlength</name>
        </name>
        ;
    </package>
    <import>import
        <name><name>unalcol</name>.<name>evolution</name>.<name>genotype</name>.
            <name>binary</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>random</name>.
            <name>integer</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>bitarray</name>.
            <name>BitArray</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;Title: BinaryGenome&lt;/p&gt;
        * &lt;p&gt;Description: Interface for getting the bitarray from an Individual&lt;/p&gt;
        * &lt;p&gt;Copyright: Copyright (c) 2010&lt;/p&gt;
        * @author Jonatan Gomez
        * @version 1.0
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>VariableLengthBinaryGenotype</name>
        <super>
            <extends>extends
                <name>BinaryGenotype</name>
            </extends>
        </super>
        <block>{
            <comment type="javadoc">/**
                * Maximum number of genes
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>max_length</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Delta lenght
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>delta_length</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The final limit of the random number generator range
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>max_delta</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Generator of new genes
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>UniformIntegerGenerator</name>
                    </type>
                    <name>extra_genes</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>VariableLengthBinaryGenotype</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>_min</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>_max_length</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>_delta_length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>_min</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>delta_length</name>
                            =
                            <name>_delta_length</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>max_delta</name>
                            = (<name>_max_length</name> - <name>length</name>) /
                            <name>delta_length</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>extra_genes</name>
                            = new
                            <call>
                                <name>UniformIntegerGenerator</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>max_delta</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>max_length</name>
                            = <name>length</name> + <name>max_delta</name> *
                            <name>delta_length</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a new genome of the given genotype
                * @return Object The new genome
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>BitArray</name>
                </type>
                <name>get</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>n</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>extra_genes</name>.
                                            <name>next</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>BitArray</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>length</name>
                                            + <name>n</name> *
                                            <name>delta_length</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the number of genes in the individual's genome
                * @return Number of genes in the individual's genome
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>size</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>genome</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>((
                            <call>
                                <name><name>genome</name>.
                                    <name>size</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            - <name>length</name>) / <name>delta_length</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns lenght
                * @return The lenght
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getMinLength</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>length</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns Max_Lenght
                * @return The maximum number of genes
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getMaxLength</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>max_length</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns DeltaLength
                * @return DeltaLenght
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getDeltaLength</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>delta_length</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns MaxDelta
                * @return The final limit of the random number generator range
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getMaxDelta</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>max_delta</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
