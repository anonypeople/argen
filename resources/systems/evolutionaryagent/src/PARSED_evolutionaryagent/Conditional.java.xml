<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\evolutionaryagent\src\evolutionaryagent\evolution\agent\teseo\statement\Conditional.java">
    <comment type="block">/*
        * To change this license header, choose License Headers in Project Properties.
        * To change this template file, choose Tools | Templates
        * and open the template in the editor.
        */
    </comment>
    <package>package
        <name><name>evolutionaryagent</name>.<name>evolution</name>.<name>agent</name>.<name>teseo</name>.
            <name>statement</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>evolutionaryagent</name>.<name>evolution</name>.<name>agent</name>.<name>teseo</name>.
            <name>AgentSquareData</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>evolutionaryagent</name>.<name>evolution</name>.<name>agent</name>.<name>teseo</name>.
            <name>TeseoMemory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>evolutionaryagent</name>.<name>evolution</name>.<name>agent</name>.<name>teseo</name>.<name>
            interpreter</name>.
            <name>TeseoInterpreter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>evolutionaryagent</name>.<name>types</name>.<name>statement</name>.
            <name>Statement</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.
            <name>Percept</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        *
        * @author Camilo Alaguna
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>Conditional</name>
        <super>
            <implements>implements
                <name>Statement</name>
            </implements>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>TeseoMemory</name>
                    </type>
                    <name>memory</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>TeseoInterpreter</name>
                    </type>
                    <name>interpreter</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>start</name>,
                    <name>end</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>Conditional</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>TeseoMemory</name>
                            </type>
                            <name>memory</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>TeseoInterpreter</name>
                            </type>
                            <name>interpreter</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>memory</name>
                            </name>
                            =
                            <name>memory</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>interpreter</name>
                            </name>
                            =
                            <name>interpreter</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>start</name>
                            </name>
                            =
                            <name><name>this</name>.
                                <name>end</name>
                            </name>
                            =
                            <name>start</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isAccommplished</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Percept</name>
                            </type>
                            <name>prcpt</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ConditionResult</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>evaluate</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>prcpt</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>end</name>
                            </name>
                            =
                            <name><name>result</name>.
                                <name>end</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name><name>result</name>.
                                <name>result</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getEnd</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>end</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Class</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Conditional</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>Conditional</name>.
                                <name>
                                    <name/>
                                </name>
                            </name>
                            class
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ConditionResult</name>
                </type>
                <name>evaluate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Percept</name>
                            </type>
                            <name>prcpt</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>evaluateCondition</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>prcpt</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>start</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ConditionResult</name>
                </type>
                <name>evaluateCondition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Percept</name>
                            </type>
                            <name>prcpt</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>head</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>areEnoughBits</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>head</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>2</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>interpreter</name>.
                                                    <name>getInstructions</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>get</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>head</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>interpreter</name>.
                                                            <name>getInstructions</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>get</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>head</name>
                                                                    + 1
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name>isPossibleRath</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>prcpt</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>head</name>
                                                                        + 2
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                            </then>
                                            <else>else
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name>areEquals</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>prcpt</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>head</name>
                                                                        + 2
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                            </else>
                                        </if>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>interpreter</name>.
                                                            <name>getInstructions</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>get</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>head</name>
                                                                    + 1
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name>orOperator</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>prcpt</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>head</name>
                                                                        + 2
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                            </then>
                                            <else>else
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name>andOperator</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>prcpt</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>head</name>
                                                                        + 2
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>ConditionResult</name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>head</name>
                                            + 2
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>areEnoughBits</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>head</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>size</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>head</name>
                            + <name>size</name> &lt;
                            <call>
                                <name><name>interpreter</name>.
                                    <name>getInstructions</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>size</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ConditionResult</name>
                </type>
                <name>isPossibleRath</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Percept</name>
                            </type>
                            <name>prcpt</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>head</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>areEnoughBits</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>head</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>4</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>numberOfDirections</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>interpreter</name>.
                                                        <name>readNumber</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>head</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>4</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>areEnoughBits</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>head</name>
                                                            + 4
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>numberOfDirections</name>
                                                            &lt;&lt; 1
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>end</name> =
                                                    <init>
                                                        <expr>
                                                            <name>head</name>
                                                            + 4 + (<name>numberOfDirections</name> &lt;&lt; 1)
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <return>return
                                                <expr>new
                                                    <call>
                                                        <name>ConditionResult</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>arePossibleMovements</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>head</name>
                                                                                    + 4
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>end</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>end</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>ConditionResult</name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>interpreter</name>.
                                                    <name>getInstructions</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>size</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>arePossibleMovements</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>head</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AgentSquareData</name>
                            </type>
                            <name>position</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>memory</name>.
                                            <name>getActualAgentSquareData</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for(<init>;</init>
                        <condition>
                            <expr>
                                <name>head</name>
                                &lt;
                                <name>end</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>
                                <name>head</name>
                                += 2
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>position</name>
                                    =
                                    <name><name>position</name>.
                                        <name>neighbours</name>
                                        <index>[
                                            <expr>
                                                <call>
                                                    <name>getDirection</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>head</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>position</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return <expr>false</expr>;
                                    </return>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getDirection</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>head</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <call>
                                <name><name>interpreter</name>.
                                    <name>getInstructions</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>get</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>head</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ? 2:0)
                            + (
                            <call>
                                <name><name>interpreter</name>.
                                    <name>getInstructions</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>get</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>head</name>
                                            + 1
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ? 1:0)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ConditionResult</name>
                </type>
                <name>areEquals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Percept</name>
                            </type>
                            <name>prcpt</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>head</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>areEnoughBits</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>head</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>4</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for(
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt; 4
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>interpreter</name>.
                                                        <name>getPerception</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>prcpt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                !=
                                                <call>
                                                    <name><name>interpreter</name>.
                                                        <name>getInstructions</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>get</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>head</name>
                                                                +
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <return>return
                                                <expr>new
                                                    <call>
                                                        <name>ConditionResult</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>head</name>
                                                                    + 4
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                        </then>
                                    </if>
                                </for>
                                <return>return
                                    <expr>new
                                        <call>
                                            <name>ConditionResult</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>head</name>
                                                        + 4
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>ConditionResult</name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>head</name>
                                            + 4
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ConditionResult</name>
                </type>
                <name>andOperator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Percept</name>
                            </type>
                            <name>prcpt</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>head</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ConditionResult</name>
                            </type>
                            <name>left</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>evaluateCondition</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>prcpt</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>head</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ConditionResult</name>
                            </type>
                            <name>right</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>evaluateCondition</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>prcpt</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>left</name>.
                                                        <name>end</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>ConditionResult</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>left</name>.
                                                <name>result</name>
                                            </name>
                                            &amp;&amp;
                                            <name><name>right</name>.
                                                <name>result</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>right</name>.
                                                <name>end</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ConditionResult</name>
                </type>
                <name>orOperator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Percept</name>
                            </type>
                            <name>prcpt</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>head</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ConditionResult</name>
                            </type>
                            <name>left</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>evaluateCondition</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>prcpt</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>head</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ConditionResult</name>
                            </type>
                            <name>right</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>evaluateCondition</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>prcpt</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>left</name>.
                                                        <name>end</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>ConditionResult</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>left</name>.
                                                <name>result</name>
                                            </name>
                                            ||
                                            <name><name>right</name>.
                                                <name>result</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>right</name>.
                                                <name>end</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
