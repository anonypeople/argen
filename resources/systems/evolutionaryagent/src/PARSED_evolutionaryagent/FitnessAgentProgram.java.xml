<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\evolutionaryagent\src\evolutionaryagent\evolution\FitnessAgentProgram.java">
    <comment type="block">/*
        * To change this license header, choose License Headers in Project Properties.
        * To change this template file, choose Tools | Templates
        * and open the template in the editor.
        */
    </comment>
    <package>package
        <name><name>evolutionaryagent</name>.
            <name>evolution</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>ArrayList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>logging</name>.
            <name>Level</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>logging</name>.
            <name>Logger</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>JFileChooser</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>evolutionaryagent</name>.<name>environtment</name>.
            <name>SimpleTestArena</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>evolutionaryagent</name>.<name>environtment</name>.
            <name>TestArena</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>evolutionaryagent</name>.<name>evolution</name>.<name>agent</name>.
            <name>EvolutionaryAgentProgram</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>evolutionaryagent</name>.<name>types</name>.
            <name>Pair</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.
            <name>Agent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.<name>examples</name>.<name>labyrinth</name>.
            <name>Labyrinth</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.<name>examples</name>.<name>labyrinth</name>.
            <name>LabyrinthDrawer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.<name>examples</name>.<name>labyrinth</name>.<name>
            teseoeater</name>.
            <name>TeseoEaterLanguage</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.<name>simulate</name>.<name>util</name>.
            <name>SimpleLanguage</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.
            <name>OptimizationFunction</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        *
        * @author Camilo Alaguna
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>FitnessAgentProgram</name>
        <super>
            <extends>extends
                <name>
                    <name>OptimizationFunction</name>
                    <argument_list>&lt;
                        <argument>
                            <name>EvolutionaryAgentProgram</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>JFileChooser</name>
                    </type>
                    <name>file</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>
                            <name>ArrayList</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Pair</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>Integer</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>Integer</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>initialPositions</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>FitnessAgentProgram</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>file</name>
                            = new
                            <call>
                                <name>JFileChooser</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"."</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>file</name>.
                                    <name>showOpenDialog</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>file</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>initialPositions</name>
                            = new
                            <call>
                                <name>
                                    <name>ArrayList</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Pair</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>Integer</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>Integer</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addInitialPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>x</name>
                                &gt;= 0 &amp;&amp; <name>y</name> &gt;= 0 &amp;&amp; <name>x</name> &lt; 15 &amp;&amp; <name>
                                y
                            </name> &lt; 15
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>initialPositions</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>
                                                            <name>Pair</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>Integer</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>Integer</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>x</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>y</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>Double</name>
                </type>
                <name>apply</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>EvolutionaryAgentProgram</name>
                            </type>
                            <name>program</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Agent</name>
                                    </type>
                                    <name>agent</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>Agent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>program</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>TestArena</name>
                                    </type>
                                    <name>frame</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>builtArena</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>agent</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>frame</name>.
                                            <name>setVisible</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>fitness</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for(
                                <init>
                                    <decl>
                                        <type>
                                            <name>
                                                <name>Pair</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>Integer</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>Integer</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </type>
                                        <name>pos</name> :
                                        <range>
                                            <expr>
                                                <name>initialPositions</name>
                                            </expr>
                                        </range>
                                    </decl>
                                </init>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>frame</name>.
                                                    <name>changeAgentPosition</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>pos</name>.
                                                                <name>first</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>pos</name>.
                                                                <name>second</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>frame</name>.
                                                    <name>runTest</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>fitness</name>
                                            +=
                                            <call>
                                                <name><name>program</name>.
                                                    <name>getFitness</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>frame</name>.
                                            <name>dispose</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>fitness</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>InterruptedException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>Logger</name>.
                                                <name>getLogger</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>FitnessAgentProgram</name>.
                                                            <name>
                                                                <name/>
                                                            </name>
                                                        </name>
                                                        class.
                                                        <call>
                                                            <name>getName</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>log</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Level</name>.
                                                            <name>SEVERE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>ex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return
                                    <expr>
                                        <name><name>Double</name>.
                                            <name>MIN_VALUE</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>TestArena</name>
                </type>
                <name>builtArena</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Agent</name>
                            </type>
                            <name>agent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InterruptedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>TestArena</name>
                            </type>
                            <name>frame</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SimpleTestArena</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>agent</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getLanguage</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>file</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>LabyrinthDrawer</name>.
                                <name>DRAW_AREA_SIZE</name>
                            </name>
                            = 600
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>LabyrinthDrawer</name>.
                                <name>CELL_SIZE</name>
                            </name>
                            = 40
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>Labyrinth</name>.
                                <name>DEFAULT_SIZE</name>
                            </name>
                            = 15
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>frame</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>SimpleLanguage</name>
                </type>
                <name>getLanguage</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>TeseoEaterLanguage</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <name>
                                                <name>String</name>
                                                <index>[]</index>
                                            </name>
                                            <block>{<expr>"front"</expr>, <expr>"right"</expr>, <expr>
                                                "back"</expr>, <expr>"left"</expr>, <expr>"treasure"</expr>,
                                                <expr>"resource"</expr>, <expr>"resource-color"</expr>, <expr>
                                                    "resource-shape"</expr>, <expr>"resource-size"</expr>,
                                                <expr>"resource-weight"</expr>, <expr>"resource-type"</expr>, <expr>
                                                    "energy_level"
                                                </expr> }
                                            </block>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <name>
                                                <name>String</name>
                                                <index>[]</index>
                                            </name>
                                            <block>{<expr>"no_op"</expr>, <expr>"die"</expr>, <expr>
                                                "advance"</expr>, <expr>"rotate"</expr>, <expr>"eat"</expr>}
                                            </block>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
