<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\evolutionaryagent\src\evolutionaryagent\evolution\GrowCompilerTeseoAgentProgram.java">
    <comment type="block">/*
        * To change this license header, choose License Headers in Project Properties.
        * To change this template file, choose Tools | Templates
        * and open the template in the editor.
        */
    </comment>
    <package>package
        <name><name>evolutionaryagent</name>.
            <name>evolution</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>evolutionaryagent</name>.<name>evolution</name>.<name>agent</name>.<name>teseo</name>.
            <name>InterpreterTeseoAgentProgram</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>evolutionaryagent</name>.<name>evolution</name>.<name>agent</name>.<name>teseo</name>.<name>
            interpreter</name>.
            <name>BitArrayTeseoInterpreterManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>evolutionaryagent</name>.<name>evolution</name>.<name>agent</name>.<name>teseo</name>.<name>
            interpreter</name>.
            <name>TeseoInterpreter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.<name>simulate</name>.<name>util</name>.
            <name>SimpleLanguage</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>evolution</name>.
            <name>GrowingFunction</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>bitarray</name>.
            <name>BitArray</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        *
        * @author Camilo Alaguna
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>GrowCompilerTeseoAgentProgram</name>
        <super>
            <extends>extends
                <name>
                    <name>GrowingFunction</name>
                    <argument_list>&lt;
                        <argument>
                            <name>BitArray</name>
                        </argument>
                        ,
                        <argument>
                            <name>InterpreterTeseoAgentProgram</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>InterpreterTeseoAgentProgram</name>
                </type>
                <name>get</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>genome</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InterpreterTeseoAgentProgram</name>
                            </type>
                            <name>program</name>
                            =
                            <init>
                                <expr>new
                                    <call>
                                        <name>InterpreterTeseoAgentProgram</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>BitArrayTeseoInterpreterManager</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>TeseoInterpreter</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>genome</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>program</name>.
                                    <name>setLanguage</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getLanguage</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>program</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>SimpleLanguage</name>
                </type>
                <name>getLanguage</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>SimpleLanguage</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <name>
                                                <name>String</name>
                                                <index>[]</index>
                                            </name>
                                            <block>{<expr>"front"</expr>, <expr>"right"</expr>, <expr>
                                                "back"</expr>, <expr>"left"</expr>, <expr>"treasure"</expr>,
                                                <expr>"afront"</expr>, <expr>"aright"</expr>, <expr>
                                                    "aback"</expr>, <expr>"aleft"</expr>}
                                            </block>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <name>
                                                <name>String</name>
                                                <index>[]</index>
                                            </name>
                                            <block>{<expr>"no_op"</expr>, <expr>"die"</expr>, <expr>
                                                "advance"</expr>, <expr>"rotate"</expr>}
                                            </block>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>BitArray</name>
                </type>
                <name>set</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InterpreterTeseoAgentProgram</name>
                            </type>
                            <name>thing</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>thing</name>.
                                    <name>getInstructions</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
