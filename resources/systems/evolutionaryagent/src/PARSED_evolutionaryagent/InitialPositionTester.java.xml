<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\evolutionaryagent\src\test\InitialPositionTester.java">
    <package>package <name>test</name>;
    </package>

    <import>import
        <name><name>evolutionaryagent</name>.<name>evolution</name>.<name>agent</name>.<name>teseo</name>.
            <name>InterpreterTeseoAgentProgram</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>evolutionaryagent</name>.<name>evolution</name>.<name>agent</name>.<name>teseo</name>.<name>
            interpreter</name>.
            <name>BitArrayTeseoInterpreterManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>evolutionaryagent</name>.<name>evolution</name>.<name>agent</name>.<name>teseo</name>.<name>
            interpreter</name>.
            <name>TeseoInterpreter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.
            <name>Agent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.<name>examples</name>.<name>labyrinth</name>.
            <name>Labyrinth</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.<name>examples</name>.<name>labyrinth</name>.
            <name>LabyrinthDrawer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.<name>examples</name>.<name>labyrinth</name>.<name>teseo</name>.
            <name>TeseoMainFrame</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>agents</name>.<name>simulate</name>.<name>util</name>.
            <name>SimpleLanguage</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>bitarray</name>.
            <name>BitArray</name>
        </name>
        ;
    </import>

    <class>
        <specifier>public</specifier>
        class <name>InitialPositionTester</name>
        <block>{

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>SimpleLanguage</name>
                </type>
                <name>getLanguage</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>SimpleLanguage</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <name>
                                                <name>String</name>
                                                <index>[]</index>
                                            </name>
                                            <block>{<expr>"front"</expr>, <expr>"right"</expr>, <expr>
                                                "back"</expr>, <expr>"left"</expr>, <expr>"exit"</expr>,
                                                <expr>"afront"</expr>, <expr>"aright"</expr>, <expr>
                                                    "aback"</expr>, <expr>"aleft"</expr>}
                                            </block>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <name>
                                                <name>String</name>
                                                <index>[]</index>
                                            </name>
                                            <block>{<expr>"no_op"</expr>, <expr>"die"</expr>, <expr>
                                                "advance"</expr>, <expr>"rotate"</expr>}
                                            </block>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>main</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>argv</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>instructions</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>BitArray</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    "110101111111101000110110011001000011111001110101101110001110001010101010100001011111110100100001110100010101101110001011111100110010101010001111011100010110001110000111111110100001010101010101010101000010111111101001000011101000101"
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>out</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>instructions</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InterpreterTeseoAgentProgram</name>
                            </type>
                            <name>program</name>
                            =
                            <init>
                                <expr>new
                                    <call>
                                        <name>InterpreterTeseoAgentProgram</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>BitArrayTeseoInterpreterManager</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>TeseoInterpreter</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>instructions</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>program</name>.
                                    <name>setLanguage</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getLanguage</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>program</name>.
                                    <name>init</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>LabyrinthDrawer</name>.
                                <name>DRAW_AREA_SIZE</name>
                            </name>
                            = 600
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>LabyrinthDrawer</name>.
                                <name>CELL_SIZE</name>
                            </name>
                            = 40
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>Labyrinth</name>.
                                <name>DEFAULT_SIZE</name>
                            </name>
                            = 15
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Agent</name>
                            </type>
                            <name>agent</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Agent</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>program</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>TeseoMainFrame</name>
                            </type>
                            <name>frame</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>TeseoMainFrame</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>agent</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getLanguage</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>frame</name>.
                                    <name>setVisible</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
