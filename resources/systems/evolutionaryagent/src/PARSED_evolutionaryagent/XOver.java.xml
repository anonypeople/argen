<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\evolutionaryagent\src\evolutionaryagent\operators\binary\XOver.java">
    <comment type="block">/*
        * To change this license header, choose License Headers in Project Properties.
        * To change this template file, choose RandomTool | Templates
        * and open the template in the editor.
        */
    </comment>
    <package>package
        <name><name>evolutionaryagent</name>.<name>operators</name>.
            <name>binary</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>unalcol</name>.<name>clone</name>.
            <name>Clone</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>optimization</name>.<name>operators</name>.<name>binary</name>.
            <name>BinaryArityTwo</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>random</name>.
            <name>Random</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>bitarray</name>.
            <name>BitArray</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>vector</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        *
        * @author Camilo Alaguna
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XOver</name>
        <super>
            <extends>extends
                <name>BinaryArityTwo</name>
            </extends>
        </super>
        <block>{

            <constructor>
                <specifier>public</specifier>
                <name>XOver</name>
                <parameter_list>()</parameter_list>
                <block>{}</block>
            </constructor>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Vector</name>
                        <argument_list>&lt;
                            <argument>
                                <name>BitArray</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>generates</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>parent1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>parent2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>BitArray</name>
                                    </type>
                                    <name>x</name> =
                                    <init>
                                        <expr>(<name>BitArray</name>)
                                            <call>
                                                <name><name>Clone</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>parent1</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>BitArray</name>
                                    </type>
                                    <name>y</name> =
                                    <init>
                                        <expr>(<name>BitArray</name>)
                                            <call>
                                                <name><name>Clone</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>parent2</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>xoverpoint1</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Random</name>.
                                                    <name>nextInt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>x</name>.
                                                                    <name>size</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>xoverpoint2</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Random</name>.
                                                    <name>nextInt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>y</name>.
                                                                    <name>size</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>BitArray</name>
                                    </type>
                                    <name>child1</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>BitArray</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>xoverpoint1</name>
                                                            +
                                                            <call>
                                                                <name><name>y</name>.
                                                                    <name>size</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            -
                                                            <name>xoverpoint2</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>false</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>BitArray</name>
                                    </type>
                                    <name>child2</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>BitArray</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>xoverpoint2</name>
                                                            +
                                                            <call>
                                                                <name><name>x</name>.
                                                                    <name>size</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            -
                                                            <name>xoverpoint1</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>false</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>distribute</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>x</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>y</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>child1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>child2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>xoverpoint1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>xoverpoint2</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Vector</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>BitArray</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>ret</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>
                                                    <name>Vector</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>BitArray</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>ret</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>BitArray</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>child1</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>ret</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>BitArray</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>child2</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>ret</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch(
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{ }</block>
                        </catch>
                    </try>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>shareOut</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>values</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>child1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>child2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>point1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>point2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <call>
                                    <name><name>values</name>.
                                        <name>size</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name>point1</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>child1</name>.
                                                        <name>set</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>values</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>child2</name>.
                                                        <name>set</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>point2</name>
                                                                + <name>i</name> -
                                                                <name>point1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>values</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <empty_stmt>;</empty_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>distribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>child1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BitArray</name>
                            </type>
                            <name>child2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>xoverpoint1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>xoverpoint2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>shareOut</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>x</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>child1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>child2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xoverpoint1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xoverpoint2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>shareOut</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>y</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>child2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>child1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xoverpoint2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xoverpoint1</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
