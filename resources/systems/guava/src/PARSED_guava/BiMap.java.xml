<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\collect\BiMap.java">
    <comment type="block">/*
        * Copyright (C) 2007 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>collect</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtCompatible</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Set</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>annotation</name>.
            <name>Nullable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A bimap (or "bidirectional map") is a map that preserves the uniqueness of
        * its values as well as that of its keys. This constraint enables bimaps to
        * support an "inverse view", which is another bimap containing the same entries
        * as this bimap but with reversed keys and values.
        *
        * &lt;p&gt;See the Guava User Guide article on &lt;a href=
        * "https://github.com/google/guava/wiki/NewCollectionTypesExplained#bimap"&gt;
        * {@code BiMap}&lt;/a&gt;.
        *
        * @author Kevin Bourrillion
        * @since 2.0
        */
    </comment>
    <class type="interface">
        <annotation>@
            <name>GwtCompatible</name>
        </annotation>
        <specifier>public</specifier>
        interface
        <name>
            <name>BiMap</name>
            <argument_list>&lt;
                <argument>
                    <name>K</name>
                </argument>
                ,
                <argument>
                    <name>V</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <super>
            <extends>extends
                <name>
                    <name>Map</name>
                    <argument_list>&lt;
                        <argument>
                            <name>K</name>
                        </argument>
                        ,
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{
            <comment type="line">// Modification Operations</comment>

            <comment type="javadoc">/**
                * {@inheritDoc}
                *
                * @throws IllegalArgumentException if the given value is already bound to a
                * different key in this bimap. The bimap will remain unmodified in this
                * event. To avoid this exception, call {@link #forcePut} instead.
                */
            </comment>
            <function_decl>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <annotation>@
                        <name>Nullable</name>
                    </annotation>
                    <name>V</name>
                </type>
                <name>put</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>K</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>V</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * An alternate form of {@code put} that silently removes any existing entry
                * with the value {@code value} before proceeding with the {@link #put}
                * operation. If the bimap previously contained the provided key-value
                * mapping, this method has no effect.
                *
                * &lt;p&gt;Note that a successful call to this method could cause the size of the
                * bimap to increase by one, stay the same, or even decrease by one.
                *
                * &lt;p&gt;&lt;b&gt;Warning:&lt;/b&gt; If an existing entry with this value is removed, the key
                * for that entry is discarded and not returned.
                *
                * @param key the key with which the specified value is to be associated
                * @param value the value to be associated with the specified key
                * @return the value which was previously associated with the key, which may
                * be {@code null}, or {@code null} if there was no previous entry
                */
            </comment>
            <function_decl>
                <type>
                    <annotation>@
                        <name>Nullable</name>
                    </annotation>
                    <name>V</name>
                </type>
                <name>forcePut</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>K</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>V</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// Bulk Operations</comment>

            <comment type="javadoc">/**
                * {@inheritDoc}
                *
                * &lt;p&gt;&lt;b&gt;Warning:&lt;/b&gt; the results of calling this method may vary depending on
                * the iteration order of {@code map}.
                *
                * @throws IllegalArgumentException if an attempt to {@code put} any
                * entry fails. Note that some map entries may have been added to the
                * bimap before the exception was thrown.
                */
            </comment>
            <function_decl>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <name>void</name>
                </type>
                <name>putAll</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                            <extends>extends
                                                <name>K</name>
                                            </extends>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>?</name>
                                            <extends>extends
                                                <name>V</name>
                                            </extends>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>map</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// Views</comment>

            <comment type="javadoc">/**
                * {@inheritDoc}
                *
                * &lt;p&gt;Because a bimap has unique values, this method returns a {@link Set},
                * instead of the {@link java.util.Collection} specified in the {@link Map}
                * interface.
                */
            </comment>
            <function_decl>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <name>
                        <name>Set</name>
                        <argument_list>&lt;
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>values</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the inverse view of this bimap, which maps each of this bimap's
                * values to its associated key. The two bimaps are backed by the same data;
                * any changes to one will appear in the other.
                *
                * &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;There is no guaranteed correspondence between the iteration
                * order of a bimap and that of its inverse.
                *
                * @return the inverse view of this bimap
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>BiMap</name>
                        <argument_list>&lt;
                            <argument>
                                <name>V</name>
                            </argument>
                            ,
                            <argument>
                                <name>K</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>inverse</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            }
        </block>
    </class>
</unit>
