<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\reflect\ClassPath.java">
    <comment type="block">/*
        * Copyright (C) 2012 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>reflect</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkNotNull</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>Beta</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>VisibleForTesting</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>CharMatcher</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Predicate</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Splitter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>FluentIterable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>ImmutableMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>ImmutableSet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>Maps</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>MultimapBuilder</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>SetMultimap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>Sets</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>j2objc</name>.<name>annotations</name>.
            <name>J2ObjCIncompatible</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>File</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>MalformedURLException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>URL</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>URLClassLoader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Enumeration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>LinkedHashMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>NoSuchElementException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Set</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>jar</name>.
            <name>Attributes</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>jar</name>.
            <name>JarEntry</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>jar</name>.
            <name>JarFile</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>jar</name>.
            <name>Manifest</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>logging</name>.
            <name>Logger</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>annotation</name>.
            <name>Nullable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Scans the source of a {@link ClassLoader} and finds all loadable classes and resources.
        *
        * @author Ben Yu
        * @since 14.0
        */
    </comment>
    <class>
        <annotation>@
            <name>Beta</name>
        </annotation>
        <annotation>@
            <name>J2ObjCIncompatible</name>
        </annotation>
        <comment type="line">// java.util.jar</comment>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>ClassPath</name>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Logger</name>
                    </type>
                    <name>logger</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>Logger</name>.
                                    <name>getLogger</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>ClassPath</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class.
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>Predicate</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>ClassInfo</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>IS_TOP_LEVEL</name> =
                    <init>
                        <expr>new
                            <class>
                                <super>
                                    <name>
                                        <name>Predicate</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>ClassInfo</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </super>
                                <argument_list>()</argument_list>
                                <block>{
                                    <function>
                                        <type>
                                            <annotation>@
                                                <name>Override</name>
                                            </annotation>
                                            <specifier>public</specifier>
                                            <name>boolean</name>
                                        </type>
                                        <name>apply</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>ClassInfo</name>
                                                    </type>
                                                    <name>info</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>info</name>.<name>className</name>.
                                                            <name>indexOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>'$'</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    == -1
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    }
                                </block>
                            </class>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Separator for the Class-Path manifest attribute value in jar files. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Splitter</name>
                    </type>
                    <name>CLASS_PATH_ATTRIBUTE_SEPARATOR</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>Splitter</name>.
                                    <name>on</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>" "</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>omitEmptyStrings</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>CLASS_FILE_NAME_EXTENSION</name> =
                    <init>
                        <expr>".class"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>ImmutableSet</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>ResourceInfo</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>resources</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>private</specifier>
                <name>ClassPath</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>ImmutableSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>ResourceInfo</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>resources</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>resources</name>
                            </name>
                            =
                            <name>resources</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns a {@code ClassPath} representing all classes and resources loadable from {@code
                * classloader} and its parent class loaders.
                *
                * &lt;p&gt;Currently only {@link URLClassLoader} and only {@code file://} urls are supported.
                *
                * @throws IOException if the attempt to read class path resources (jar files or directories)
                * failed.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>ClassPath</name>
                </type>
                <name>from</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ClassLoader</name>
                            </type>
                            <name>classloader</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DefaultScanner</name>
                            </type>
                            <name>scanner</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>DefaultScanner</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>scanner</name>.
                                    <name>scan</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>classloader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>ClassPath</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>scanner</name>.
                                                    <name>getResources</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns all resources loadable from the current class path, including the class files of all
                * loadable classes but excluding the "META-INF/MANIFEST.MF" file.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>ImmutableSet</name>
                        <argument_list>&lt;
                            <argument>
                                <name>ResourceInfo</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getResources</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>resources</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns all classes loadable from the current class path.
                *
                * @since 16.0
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>ImmutableSet</name>
                        <argument_list>&lt;
                            <argument>
                                <name>ClassInfo</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getAllClasses</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>FluentIterable</name>.
                                    <name>from</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resources</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>filter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>ClassInfo</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>toSet</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Returns all top level classes loadable from the current class path. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>ImmutableSet</name>
                        <argument_list>&lt;
                            <argument>
                                <name>ClassInfo</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getTopLevelClasses</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>FluentIterable</name>.
                                    <name>from</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resources</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>filter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>ClassInfo</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>filter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>IS_TOP_LEVEL</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>toSet</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Returns all top level classes whose package name is {@code packageName}. */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>ImmutableSet</name>
                        <argument_list>&lt;
                            <argument>
                                <name>ClassInfo</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getTopLevelClasses</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>packageName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>packageName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>ImmutableSet</name>.
                                    <name>
                                        <name>Builder</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>ClassInfo</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </name>
                            </type>
                            <name>builder</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>ImmutableSet</name>.
                                            <name>builder</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>ClassInfo</name>
                                </type>
                                <name>classInfo</name> :
                                <range>
                                    <expr>
                                        <call>
                                            <name>getTopLevelClasses</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>classInfo</name>.
                                                <name>getPackageName</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>packageName</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>builder</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>classInfo</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <call>
                                <name><name>builder</name>.
                                    <name>build</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns all top level classes whose package name is {@code packageName} or starts with
                * {@code packageName} followed by a '.'.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>ImmutableSet</name>
                        <argument_list>&lt;
                            <argument>
                                <name>ClassInfo</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getTopLevelClassesRecursive</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>packageName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>packageName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>packagePrefix</name> =
                            <init>
                                <expr>
                                    <name>packageName</name>
                                    + '.'
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>ImmutableSet</name>.
                                    <name>
                                        <name>Builder</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>ClassInfo</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </name>
                            </type>
                            <name>builder</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>ImmutableSet</name>.
                                            <name>builder</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>ClassInfo</name>
                                </type>
                                <name>classInfo</name> :
                                <range>
                                    <expr>
                                        <call>
                                            <name>getTopLevelClasses</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>classInfo</name>.
                                                <name>getName</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>startsWith</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>packagePrefix</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>builder</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>classInfo</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <call>
                                <name><name>builder</name>.
                                    <name>build</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Represents a class path resource that can be either a class file or any other resource file
                * loadable from the class path.
                *
                * @since 14.0
                */
            </comment>
            <class>
                <annotation>@
                    <name>Beta</name>
                </annotation>
                <specifier>public</specifier>
                <specifier>static</specifier> class <name>ResourceInfo</name>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>resourceName</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>ClassLoader</name>
                            </type>
                            <name>loader</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <function>
                        <type>
                            <specifier>static</specifier>
                            <name>ResourceInfo</name>
                        </type>
                        <name>of</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>resourceName</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>loader</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>resourceName</name>.
                                                <name>endsWith</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>CLASS_FILE_NAME_EXTENSION</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>new
                                                <call>
                                                    <name>ClassInfo</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>resourceName</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>loader</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <return>return
                                            <expr>new
                                                <call>
                                                    <name>ResourceInfo</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>resourceName</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>loader</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </function>

                    <constructor>
                        <name>ResourceInfo</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>resourceName</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>loader</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>resourceName</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>resourceName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>loader</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>loader</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Returns the url identifying the resource.
                        *
                        * &lt;p&gt;See {@link ClassLoader#getResource}
                        * @throws NoSuchElementException if the resource cannot be loaded through the class loader,
                        * despite physically existing in the class path.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>final</specifier>
                            <name>URL</name>
                        </type>
                        <name>url</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>NoSuchElementException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>URL</name>
                                    </type>
                                    <name>url</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>loader</name>.
                                                    <name>getResource</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>resourceName</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>url</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>NoSuchElementException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>resourceName</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>url</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/** Returns the fully qualified name of the resource. Such as
                        "com/mycomp/foo/bar.txt". */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>final</specifier>
                            <name>String</name>
                        </type>
                        <name>getResourceName</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>resourceName</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>hashCode</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>resourceName</name>.
                                            <name>hashCode</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>equals</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>obj</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>obj</name>
                                        <name>instanceof</name>
                                        <name>ResourceInfo</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>ResourceInfo</name>
                                                </type>
                                                <name>that</name> =
                                                <init>
                                                    <expr>(<name>ResourceInfo</name>)
                                                        <name>obj</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>resourceName</name>.
                                                        <name>equals</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>that</name>.
                                                                    <name>resourceName</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &amp;&amp; <name>loader</name> ==
                                                <name><name>that</name>.
                                                    <name>loader</name>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// Do not change this arbitrarily. We rely on it for sorting ResourceInfo.
                    </comment>
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>resourceName</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * Represents a class that can be loaded through {@link #load}.
                *
                * @since 14.0
                */
            </comment>
            <class>
                <annotation>@
                    <name>Beta</name>
                </annotation>
                <specifier>public</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>ClassInfo</name>
                <super>
                    <extends>extends
                        <name>ResourceInfo</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>className</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>ClassInfo</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>resourceName</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>loader</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>resourceName</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>loader</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>className</name>
                                    </name>
                                    =
                                    <call>
                                        <name>getClassName</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>resourceName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Returns the package name of the class, without attempting to load the class.
                        *
                        * &lt;p&gt;Behaves identically to {@link Package#getName()} but does not require the class (or
                        * package) to be loaded.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getPackageName</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Reflection</name>.
                                            <name>getPackageName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>className</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Returns the simple name of the underlying class as given in the source code.
                        *
                        * &lt;p&gt;Behaves identically to {@link Class#getSimpleName()} but does not require the class
                        to be
                        * loaded.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getSimpleName</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>lastDollarSign</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>className</name>.
                                                    <name>lastIndexOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>'$'</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>lastDollarSign</name>
                                        != -1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>innerClassName</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>className</name>.
                                                                <name>substring</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>lastDollarSign</name>
                                                                        + 1
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <comment type="line">// local and anonymous classes are prefixed with number
                                            (1,2,3...), anonymous classes are
                                        </comment>
                                        <comment type="line">// entirely numeric whereas local classes have the user
                                            supplied name as a suffix
                                        </comment>
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>CharMatcher</name>.<name>DIGIT</name>.
                                                        <name>trimLeadingFrom</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>innerClassName</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>packageName</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getPackageName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>packageName</name>.
                                                <name>isEmpty</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>className</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// Since this is a top level class, its simple name is always the part
                                after package name.
                            </comment>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>className</name>.
                                            <name>substring</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>packageName</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + 1
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Returns the fully qualified name of the class.
                        *
                        * &lt;p&gt;Behaves identically to {@link Class#getName()} but does not require the class to be
                        * loaded.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getName</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>className</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Loads (but doesn't link or initialize) the class.
                        *
                        * @throws LinkageError when there were errors in loading classes that this class depends on.
                        * For example, {@link NoClassDefFoundError}.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>
                                <name>Class</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>?</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>load</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <try>try
                                <block>{
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>loader</name>.
                                                    <name>loadClass</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>className</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>ClassNotFoundException</name>
                                            </type>
                                            <name>e</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <comment type="line">// Shouldn't happen, since the class name is read from the
                                            class path.
                                        </comment>
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalStateException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>e</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </catch>
                            </try>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>className</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * Abstract class that scans through the class path represented by a {@link ClassLoader} and calls
                * {@link #scanDirectory} and {@link #scanJarFile} for directories and jar files on the class path
                * respectively.
                */
            </comment>
            <class>
                <specifier>abstract</specifier>
                <specifier>static</specifier> class <name>Scanner</name>
                <block>{

                    <comment type="line">// We only scan each file once independent of the classloader that resource
                        might be associated
                    </comment>
                    <comment type="line">// with.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>Set</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>File</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>scannedUris</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Sets</name>.
                                            <name>newHashSet</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>final</specifier>
                            <name>void</name>
                        </type>
                        <name>scan</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>classloader</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name><name>Map</name>.
                                                <name>
                                                    <name>Entry</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>File</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>ClassLoader</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </name>
                                        </type>
                                        <name>entry</name> :
                                        <range>
                                            <expr>
                                                <call>
                                                    <name>getClassPathEntries</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>classloader</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>entrySet</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </range>
                                    </decl>
                                </init>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>scan</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>entry</name>.
                                                                    <name>getKey</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>entry</name>.
                                                                    <name>getValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/** Called when a directory is scanned for resource files. */</comment>
                    <function_decl>
                        <type>
                            <specifier>protected</specifier>
                            <specifier>abstract</specifier>
                            <name>void</name>
                        </type>
                        <name>scanDirectory</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>loader</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>File</name>
                                    </type>
                                    <name>directory</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        ;
                    </function_decl>

                    <comment type="javadoc">/** Called when a jar file is scanned for resource entries. */</comment>
                    <function_decl>
                        <type>
                            <specifier>protected</specifier>
                            <specifier>abstract</specifier>
                            <name>void</name>
                        </type>
                        <name>scanJarFile</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>loader</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>JarFile</name>
                                    </type>
                                    <name>file</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        ;
                    </function_decl>

                    <function>
                        <type>
                            <annotation>@
                                <name>VisibleForTesting</name>
                            </annotation>
                            <specifier>final</specifier>
                            <name>void</name>
                        </type>
                        <name>scan</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>File</name>
                                    </type>
                                    <name>file</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>classloader</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>scannedUris</name>.
                                                <name>add</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>file</name>.
                                                                <name>getCanonicalFile</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>scanFrom</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>file</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>classloader</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>scanFrom</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>File</name>
                                    </type>
                                    <name>file</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>classloader</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>file</name>.
                                                <name>exists</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>file</name>.
                                                <name>isDirectory</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>scanDirectory</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>classloader</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>file</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>scanJar</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>file</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>classloader</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>scanJar</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>File</name>
                                    </type>
                                    <name>file</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>classloader</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>JarFile</name>
                                    </type>
                                    <name>jarFile</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>jarFile</name>
                                            = new
                                            <call>
                                                <name>JarFile</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>file</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>IOException</name>
                                            </type>
                                            <name>e</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <comment type="line">// Not a jar file</comment>
                                        <return>return;</return>
                                        }
                                    </block>
                                </catch>
                            </try>
                            <try>try
                                <block>{
                                    <for>for (
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>File</name>
                                                </type>
                                                <name>path</name> :
                                                <range>
                                                    <expr>
                                                        <call>
                                                            <name>getClassPathFromManifest</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>file</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>jarFile</name>.
                                                                                <name>getManifest</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </range>
                                            </decl>
                                        </init>
                                        )
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>scan</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>path</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>classloader</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </for>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>scanJarFile</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>classloader</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>jarFile</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <finally>finally
                                    <block>{
                                        <try>try
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>jarFile</name>.
                                                                <name>close</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                            <catch>catch (
                                                <param>
                                                    <decl>
                                                        <type>
                                                            <name>IOException</name>
                                                        </type>
                                                        <name>ignored</name>
                                                    </decl>
                                                </param>
                                                )
                                                <block>{}</block>
                                            </catch>
                                        </try>
                                        }
                                    </block>
                                </finally>
                            </try>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Returns the class path URIs specified by the {@code Class-Path} manifest attribute, according
                        * to
                        * &lt;a
                        href="http://docs.oracle.com/javase/8/docs/technotes/guides/jar/jar.html#Main_Attributes"&gt;
                        * JAR File Specification&lt;/a&gt;. If {@code manifest} is null, it means the jar file has no
                        * manifest, and an empty set will be returned.
                        */
                    </comment>
                    <function>
                        <type>
                            <annotation>@
                                <name>VisibleForTesting</name>
                            </annotation>
                            <specifier>static</specifier>
                            <name>
                                <name>ImmutableSet</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>File</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>getClassPathFromManifest</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>File</name>
                                    </type>
                                    <name>jarFile</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Manifest</name>
                                    </type>
                                    <name>manifest</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>manifest</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>ImmutableSet</name>.
                                                        <name>of</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name><name>ImmutableSet</name>.
                                            <name>
                                                <name>Builder</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>File</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </name>
                                    </type>
                                    <name>builder</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>ImmutableSet</name>.
                                                    <name>builder</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>classpathAttribute</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>manifest</name>.
                                                    <name>getMainAttributes</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getValue</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>Attributes</name>.<name>Name</name>.<name>
                                                                    CLASS_PATH</name>.
                                                                    <name>toString</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>classpathAttribute</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>path</name> :
                                                    <range>
                                                        <expr>
                                                            <call>
                                                                <name><name>CLASS_PATH_ATTRIBUTE_SEPARATOR</name>.
                                                                    <name>split</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>classpathAttribute</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </range>
                                                </decl>
                                            </init>
                                            )
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>URL</name>
                                                        </type>
                                                        <name>url</name>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <try>try
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>url</name>
                                                                =
                                                                <call>
                                                                    <name>getClassPathEntry</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>jarFile</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>path</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                    <catch>catch (
                                                        <param>
                                                            <decl>
                                                                <type>
                                                                    <name>MalformedURLException</name>
                                                                </type>
                                                                <name>e</name>
                                                            </decl>
                                                        </param>
                                                        )
                                                        <block>{
                                                            <comment type="line">// Ignore bad entry</comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>logger</name>.
                                                                            <name>warning</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"Invalid Class-Path entry: " +
                                                                                    <name>path</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <continue>continue;</continue>
                                                            }
                                                        </block>
                                                    </catch>
                                                </try>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>url</name>.
                                                                    <name>getProtocol</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>equals</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"file"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>builder</name>.
                                                                            <name>add</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>new
                                                                                    <call>
                                                                                        <name>File</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            url</name>.
                                                                                                            <name>
                                                                                                                getFile
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>
                                                                                                            ()
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </for>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>builder</name>.
                                            <name>build</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>VisibleForTesting</name>
                            </annotation>
                            <specifier>static</specifier>
                            <name>
                                <name>ImmutableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>File</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>ClassLoader</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>getClassPathEntries</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>classloader</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>LinkedHashMap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>File</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>ClassLoader</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>entries</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Maps</name>.
                                                    <name>newLinkedHashMap</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// Search parent first, since it's the order ClassLoader#loadClass()
                                uses.
                            </comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>parent</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>classloader</name>.
                                                    <name>getParent</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>parent</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>entries</name>.
                                                        <name>putAll</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>getClassPathEntries</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>parent</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>classloader</name>
                                        <name>instanceof</name>
                                        <name>URLClassLoader</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>URLClassLoader</name>
                                                </type>
                                                <name>urlClassLoader</name> =
                                                <init>
                                                    <expr>(<name>URLClassLoader</name>)
                                                        <name>classloader</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>URL</name>
                                                    </type>
                                                    <name>entry</name> :
                                                    <range>
                                                        <expr>
                                                            <call>
                                                                <name><name>urlClassLoader</name>.
                                                                    <name>getURLs</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </range>
                                                </decl>
                                            </init>
                                            )
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>entry</name>.
                                                                    <name>getProtocol</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>equals</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"file"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>File</name>
                                                                    </type>
                                                                    <name>file</name> =
                                                                    <init>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>File</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>entry</name>
                                                                                                    .
                                                                                                    <name>getFile</name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>!
                                                                        <call>
                                                                            <name><name>entries</name>.
                                                                                <name>containsKey</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>file</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>entries</name>.
                                                                                        <name>put</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>file</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>classloader</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </for>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>ImmutableMap</name>.
                                            <name>copyOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>entries</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Returns the absolute uri of the Class-Path entry value as specified in
                        * &lt;a
                        href="http://docs.oracle.com/javase/8/docs/technotes/guides/jar/jar.html#Main_Attributes"&gt;
                        * JAR File Specification&lt;/a&gt;. Even though the specification only talks about relative
                        urls,
                        * absolute urls are actually supported too (for example, in Maven surefire plugin).
                        */
                    </comment>
                    <function>
                        <type>
                            <annotation>@
                                <name>VisibleForTesting</name>
                            </annotation>
                            <specifier>static</specifier>
                            <name>URL</name>
                        </type>
                        <name>getClassPathEntry</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>File</name>
                                    </type>
                                    <name>jarFile</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>path</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>MalformedURLException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>URL</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>jarFile</name>.
                                                            <name>toURI</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>toURL</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>path</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <annotation>@
                    <name>VisibleForTesting</name>
                </annotation>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>DefaultScanner</name>
                <super>
                    <extends>extends
                        <name>Scanner</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>SetMultimap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>ClassLoader</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>String</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>resources</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>MultimapBuilder</name>.
                                            <name>hashKeys</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>linkedHashSetValues</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>build</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <function>
                        <type>
                            <name>
                                <name>ImmutableSet</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>ResourceInfo</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>getResources</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name><name>ImmutableSet</name>.
                                            <name>
                                                <name>Builder</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>ResourceInfo</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </name>
                                    </type>
                                    <name>builder</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>ImmutableSet</name>.
                                                    <name>builder</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name><name>Map</name>.
                                                <name>
                                                    <name>Entry</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>ClassLoader</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>String</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </name>
                                        </type>
                                        <name>entry</name> :
                                        <range>
                                            <expr>
                                                <call>
                                                    <name><name>resources</name>.
                                                        <name>entries</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </range>
                                    </decl>
                                </init>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>builder</name>.
                                                    <name>add</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>ResourceInfo</name>.
                                                                    <name>of</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>entry</name>.
                                                                                    <name>getValue</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>entry</name>.
                                                                                    <name>getKey</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>builder</name>.
                                            <name>build</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>protected</specifier>
                            <name>void</name>
                        </type>
                        <name>scanJarFile</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>classloader</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>JarFile</name>
                                    </type>
                                    <name>file</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Enumeration</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>JarEntry</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>entries</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>file</name>.
                                                    <name>entries</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>entries</name>.
                                                <name>hasMoreElements</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>JarEntry</name>
                                            </type>
                                            <name>entry</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>entries</name>.
                                                            <name>nextElement</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>entry</name>.
                                                        <name>isDirectory</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                ||
                                                <call>
                                                    <name><name>entry</name>.
                                                        <name>getName</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>equals</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>JarFile</name>.
                                                                    <name>MANIFEST_NAME</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <continue>continue;</continue>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>resources</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>classloader</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>add</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>entry</name>.
                                                                    <name>getName</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>protected</specifier>
                            <name>void</name>
                        </type>
                        <name>scanDirectory</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>classloader</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>File</name>
                                    </type>
                                    <name>directory</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>scanDirectory</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>directory</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>classloader</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>""</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>scanDirectory</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>File</name>
                                    </type>
                                    <name>directory</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassLoader</name>
                                    </type>
                                    <name>classloader</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>packagePrefix</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>File</name>
                                        <index>[]</index>
                                    </type>
                                    <name>files</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>directory</name>.
                                                    <name>listFiles</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>files</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>logger</name>.
                                                        <name>warning</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Cannot read directory " +
                                                                <name>directory</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// IO error, just skip the directory</comment>
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>File</name>
                                        </type>
                                        <name>f</name> :
                                        <range>
                                            <expr>
                                                <name>files</name>
                                            </expr>
                                        </range>
                                    </decl>
                                </init>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>String</name>
                                            </type>
                                            <name>name</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>f</name>.
                                                            <name>getName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>f</name>.
                                                        <name>isDirectory</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>scanDirectory</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>f</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>classloader</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>packagePrefix</name>
                                                                        + <name>name</name> + "/"
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>String</name>
                                                        </type>
                                                        <name>resourceName</name> =
                                                        <init>
                                                            <expr>
                                                                <name>packagePrefix</name>
                                                                +
                                                                <name>name</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>!
                                                            <call>
                                                                <name><name>resourceName</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>JarFile</name>.
                                                                                <name>MANIFEST_NAME</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>resources</name>.
                                                                            <name>get</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>classloader</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>add</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>resourceName</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <function>
                <type>
                    <annotation>@
                        <name>VisibleForTesting</name>
                    </annotation>
                    <specifier>static</specifier>
                    <name>String</name>
                </type>
                <name>getClassName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>filename</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>classNameEnd</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>filename</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    -
                                    <call>
                                        <name><name>CLASS_FILE_NAME_EXTENSION</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>filename</name>.
                                    <name>substring</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>classNameEnd</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>replace</name>
                                <argument_list>(
                                    <argument>
                                        <expr>'/'</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>'.'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
