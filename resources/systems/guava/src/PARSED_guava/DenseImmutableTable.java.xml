<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\collect\DenseImmutableTable.java">
    <comment type="block">/*
        * Copyright (C) 2009 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
        * in compliance with the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software distributed under the License
        * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
        * or implied. See the License for the specific language governing permissions and limitations under
        * the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>collect</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkArgument</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtCompatible</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.<name>ImmutableMap</name>.
            <name>IteratorBasedImmutableMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>j2objc</name>.<name>annotations</name>.
            <name>WeakOuter</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>Map</name>.
            <name>Entry</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>annotation</name>.
            <name>Nullable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>annotation</name>.<name>concurrent</name>.
            <name>Immutable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A {@code RegularImmutableTable} optimized for dense data.
        */
    </comment>
    <class>
        <annotation>@
            <name>GwtCompatible</name>
        </annotation>
        <annotation>@
            <name>Immutable</name>
        </annotation>
        <specifier>final</specifier>
        class
        <name>
            <name>DenseImmutableTable</name>
            <argument_list>&lt;
                <argument>
                    <name>R</name>
                </argument>
                ,
                <argument>
                    <name>C</name>
                </argument>
                ,
                <argument>
                    <name>V</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <super>
            <extends>extends
                <name>
                    <name>RegularImmutableTable</name>
                    <argument_list>&lt;
                        <argument>
                            <name>R</name>
                        </argument>
                        ,
                        <argument>
                            <name>C</name>
                        </argument>
                        ,
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>ImmutableMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>R</name>
                                </argument>
                                ,
                                <argument>
                                    <name>Integer</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>rowKeyToIndex</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>ImmutableMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                ,
                                <argument>
                                    <name>Integer</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>columnKeyToIndex</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>ImmutableMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>R</name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Map</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>rowMap</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>ImmutableMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Map</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>R</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>columnMap</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>rowCounts</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>columnCounts</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>V</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>values</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>iterationOrderRow</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>iterationOrderColumn</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <name>DenseImmutableTable</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>ImmutableList</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cell</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>R</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>cellList</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>ImmutableSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>R</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>rowSpace</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>ImmutableSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>columnSpace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>SuppressWarnings</name>
                                    <argument_list>("unchecked")</argument_list>
                                </annotation>
                                <name>V</name>
                                <index>[]</index>
                                <index>[]</index>
                            </type>
                            <name>array</name> =
                            <init>
                                <expr>(
                                    <name>
                                        <name>V</name>
                                        <index>[]</index>
                                        <index>[]</index>
                                    </name>
                                    ) new
                                    <name>
                                        <name>Object</name>
                                        <index>[
                                            <expr>
                                                <call>
                                                    <name><name>rowSpace</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <call>
                                                    <name><name>columnSpace</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>values</name>
                            </name>
                            =
                            <name>array</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>rowKeyToIndex</name>
                            </name>
                            =
                            <call>
                                <name><name>Maps</name>.
                                    <name>indexMap</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rowSpace</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>columnKeyToIndex</name>
                            </name>
                            =
                            <call>
                                <name><name>Maps</name>.
                                    <name>indexMap</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>columnSpace</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>rowCounts</name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <call>
                                            <name><name>rowKeyToIndex</name>.
                                                <name>size</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>columnCounts</name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <call>
                                            <name><name>columnKeyToIndex</name>.
                                                <name>size</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>iterationOrderRow</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[
                                            <expr>
                                                <call>
                                                    <name><name>cellList</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>iterationOrderColumn</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[
                                            <expr>
                                                <call>
                                                    <name><name>cellList</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <call>
                                    <name><name>cellList</name>.
                                        <name>size</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cell</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>R</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>cell</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>cellList</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>R</name>
                                    </type>
                                    <name>rowKey</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>cell</name>.
                                                    <name>getRowKey</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>C</name>
                                    </type>
                                    <name>columnKey</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>cell</name>.
                                                    <name>getColumnKey</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>rowIndex</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>rowKeyToIndex</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>rowKey</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>columnIndex</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>columnKeyToIndex</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>columnKey</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>V</name>
                                    </type>
                                    <name>existingValue</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>values</name>
                                                <index>[
                                                    <expr>
                                                        <name>rowIndex</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>columnIndex</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkArgument</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>existingValue</name>
                                                    ==
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"duplicate key: (%s, %s)"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>rowKey</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>columnKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>values</name>
                                        <index>[
                                            <expr>
                                                <name>rowIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <name>columnIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <call>
                                        <name><name>cell</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>rowCounts</name>
                                        <index>[
                                            <expr>
                                                <name>rowIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    ++
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>columnCounts</name>
                                        <index>[
                                            <expr>
                                                <name>columnIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    ++
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>iterationOrderRow</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>rowIndex</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>iterationOrderColumn</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>columnIndex</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>iterationOrderRow</name>
                            </name>
                            =
                            <name>iterationOrderRow</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>iterationOrderColumn</name>
                            </name>
                            =
                            <name>iterationOrderColumn</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>rowMap</name>
                            </name>
                            = new
                            <call>
                                <name>RowMap</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>columnMap</name>
                            </name>
                            = new
                            <call>
                                <name>ColumnMap</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * An immutable map implementation backed by an indexed nullable array.
                */
            </comment>
            <class>
                <specifier>private</specifier>
                <specifier>abstract</specifier>
                <specifier>static</specifier> class
                <name>
                    <name>ImmutableArrayMap</name>
                    <argument_list>&lt;
                        <argument>
                            <name>K</name>
                        </argument>
                        ,
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <extends>extends
                        <name>
                            <name>IteratorBasedImmutableMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>K</name>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>size</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>ImmutableArrayMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>size</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>size</name>
                                    </name>
                                    =
                                    <name>size</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function_decl>
                        <type>
                            <specifier>abstract</specifier>
                            <name>
                                <name>ImmutableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Integer</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>keyToIndex</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>

                    <comment type="line">// True if getValue never returns null.</comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isFull</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>size</name>
                                    ==
                                    <call>
                                        <name>keyToIndex</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>size</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <name>K</name>
                        </type>
                        <name>getKey</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>index</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>keyToIndex</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>keySet</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>asList</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>get</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function_decl>
                        <type>
                            <annotation>@
                                <name>Nullable</name>
                            </annotation>
                            <specifier>abstract</specifier>
                            <name>V</name>
                        </type>
                        <name>getValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>keyIndex</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        ;
                    </function_decl>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>ImmutableSet</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>createKeySet</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>isFull</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    ?
                                    <call>
                                        <name>keyToIndex</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>keySet</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    :
                                    <call>
                                        <name><name>super</name>.
                                            <name>createKeySet</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>size</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>size</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>V</name>
                        </type>
                        <name>get</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Integer</name>
                                    </type>
                                    <name>keyIndex</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>keyToIndex</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>get</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>key</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>(<name>keyIndex</name> == <name>null</name>) ? <name>null</name> :
                                    <call>
                                        <name>getValue</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>keyIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>UnmodifiableIterator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>K</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>entryIterator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>AbstractIterator</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>
                                                            <name>Entry</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>K</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <specifier>private</specifier>
                                                        <name>int</name>
                                                    </type>
                                                    <name>index</name> =
                                                    <init>
                                                        <expr>-1</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <specifier>private</specifier>
                                                        <specifier>final</specifier>
                                                        <name>int</name>
                                                    </type>
                                                    <name>maxIndex</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name>keyToIndex</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>size</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>

                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>protected</specifier>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>K</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>computeNext</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <for>for (
                                                        <init>
                                                            <expr><name>index</name>++
                                                            </expr>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>index</name>
                                                                &lt;
                                                                <name>maxIndex</name>
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>index</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>V</name>
                                                                    </type>
                                                                    <name>value</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name>getValue</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>index</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>value</name>
                                                                        !=
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <return>return
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>Maps</name>.
                                                                                        <name>immutableEntry</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name>getKey</name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    index
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>value</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </return>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </for>
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name>endOfData</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <specifier>private</specifier>
                <specifier>final</specifier> class <name>Row</name>
                <super>
                    <extends>extends
                        <name>
                            <name>ImmutableArrayMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>rowIndex</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>Row</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>rowIndex</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>rowCounts</name>
                                                        <index>[
                                                            <expr>
                                                                <name>rowIndex</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>rowIndex</name>
                                    </name>
                                    =
                                    <name>rowIndex</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>ImmutableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Integer</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>keyToIndex</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>columnKeyToIndex</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>V</name>
                        </type>
                        <name>getValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>keyIndex</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>
                                        <name>values</name>
                                        <index>[
                                            <expr>
                                                <name>rowIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <name>keyIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>boolean</name>
                        </type>
                        <name>isPartialView</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return <expr>true</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <specifier>private</specifier>
                <specifier>final</specifier> class <name>Column</name>
                <super>
                    <extends>extends
                        <name>
                            <name>ImmutableArrayMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>R</name>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>columnIndex</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>Column</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>columnIndex</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>columnCounts</name>
                                                        <index>[
                                                            <expr>
                                                                <name>columnIndex</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>columnIndex</name>
                                    </name>
                                    =
                                    <name>columnIndex</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>ImmutableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>R</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Integer</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>keyToIndex</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>rowKeyToIndex</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>V</name>
                        </type>
                        <name>getValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>keyIndex</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>
                                        <name>values</name>
                                        <index>[
                                            <expr>
                                                <name>keyIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <name>columnIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>boolean</name>
                        </type>
                        <name>isPartialView</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return <expr>true</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <annotation>@
                    <name>WeakOuter</name>
                </annotation>
                <specifier>private</specifier>
                <specifier>final</specifier> class <name>RowMap</name>
                <super>
                    <extends>extends
                        <name>
                            <name>ImmutableArrayMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>R</name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Map</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <constructor>
                        <specifier>private</specifier>
                        <name>RowMap</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>rowCounts</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>ImmutableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>R</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Integer</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>keyToIndex</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>rowKeyToIndex</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Map</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>getValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>keyIndex</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>Row</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>keyIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>boolean</name>
                        </type>
                        <name>isPartialView</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <annotation>@
                    <name>WeakOuter</name>
                </annotation>
                <specifier>private</specifier>
                <specifier>final</specifier> class <name>ColumnMap</name>
                <super>
                    <extends>extends
                        <name>
                            <name>ImmutableArrayMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Map</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>R</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <constructor>
                        <specifier>private</specifier>
                        <name>ColumnMap</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>columnCounts</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>ImmutableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Integer</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>keyToIndex</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>columnKeyToIndex</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Map</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>R</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>getValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>keyIndex</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>Column</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>keyIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>boolean</name>
                        </type>
                        <name>isPartialView</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>ImmutableMap</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            ,
                            <argument>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>R</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>columnMap</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>columnMap</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>ImmutableMap</name>
                        <argument_list>&lt;
                            <argument>
                                <name>R</name>
                            </argument>
                            ,
                            <argument>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>rowMap</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>rowMap</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>V</name>
                </type>
                <name>get</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>rowKey</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>columnKey</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Integer</name>
                            </type>
                            <name>rowIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>rowKeyToIndex</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rowKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Integer</name>
                            </type>
                            <name>columnIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>columnKeyToIndex</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>columnKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>((<name>rowIndex</name> == <name>null</name>) || (<name>columnIndex</name> == <name>
                            null</name>))
                            ?
                            <name>null</name>
                            :
                            <name>
                                <name>values</name>
                                <index>[
                                    <expr>
                                        <name>rowIndex</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>columnIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>size</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>iterationOrderRow</name>.
                                <name>length</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <name>
                        <name>Cell</name>
                        <argument_list>&lt;
                            <argument>
                                <name>R</name>
                            </argument>
                            ,
                            <argument>
                                <name>C</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getCell</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rowIndex</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>iterationOrderRow</name>
                                        <index>[
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>columnIndex</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>iterationOrderColumn</name>
                                        <index>[
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>R</name>
                            </type>
                            <name>rowKey</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>rowKeySet</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>asList</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>get</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rowIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>C</name>
                            </type>
                            <name>columnKey</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>columnKeySet</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>asList</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>get</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>columnIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>V</name>
                            </type>
                            <name>value</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>values</name>
                                        <index>[
                                            <expr>
                                                <name>rowIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <name>columnIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>cellOf</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rowKey</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>columnKey</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <name>V</name>
                </type>
                <name>getValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>
                                <name>values</name>
                                <index>[
                                    <expr>
                                        <name>
                                            <name>iterationOrderRow</name>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>
                                            <name>iterationOrderColumn</name>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
