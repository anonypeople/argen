<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\net\HostAndPort.java">
    <comment type="block">/*
        * Copyright (C) 2011 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>net</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkArgument</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkNotNull</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkState</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>Beta</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtCompatible</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Objects</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Strings</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>annotation</name>.
            <name>Nullable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>annotation</name>.<name>concurrent</name>.
            <name>Immutable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * An immutable representation of a host and port.
        *
        * &lt;p&gt;Example usage:
        * &lt;pre&gt;
        * HostAndPort hp = HostAndPort.fromString("[2001:db8::1]")
        * .withDefaultPort(80)
        * .requireBracketsForIPv6();
        * hp.getHostText(); // returns "2001:db8::1"
        * hp.getPort(); // returns 80
        * hp.toString(); // returns "[2001:db8::1]:80"
        * &lt;/pre&gt;
        *
        * &lt;p&gt;Here are some examples of recognized formats:
        * &lt;ul&gt;
        * &lt;li&gt;example.com
        * &lt;li&gt;example.com:80
        * &lt;li&gt;192.0.2.1
        * &lt;li&gt;192.0.2.1:80
        * &lt;li&gt;[2001:db8::1] - {@link #getHostText()} omits brackets
        * &lt;li&gt;[2001:db8::1]:80 - {@link #getHostText()} omits brackets
        * &lt;li&gt;2001:db8::1 - Use {@link #requireBracketsForIPv6()} to prohibit this
        * &lt;/ul&gt;
        *
        * &lt;p&gt;Note that this is not an exhaustive list, because these methods are only
        * concerned with brackets, colons, and port numbers. Full validation of the
        * host field (if desired) is the caller's responsibility.
        *
        * @author Paul Marks
        * @since 10.0
        */
    </comment>
    <class>
        <annotation>@
            <name>Beta</name>
        </annotation>
        <annotation>@
            <name>Immutable</name>
        </annotation>
        <annotation>@
            <name>GwtCompatible</name>
        </annotation>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>HostAndPort</name>
        <super>
            <implements>implements
                <name>Serializable</name>
            </implements>
        </super>
        <block>{
            <comment type="javadoc">/** Magic value indicating the absence of a port number. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>NO_PORT</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Hostname, IPv4/IPv6 literal, or unvalidated nonsense. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>host</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Validated port number in the range [0..65535], or NO_PORT */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>port</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** True if the parsed host has colons, but no surrounding brackets. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>hasBracketlessColons</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>private</specifier>
                <name>HostAndPort</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>host</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>port</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>hasBracketlessColons</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>host</name>
                            </name>
                            =
                            <name>host</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>port</name>
                            </name>
                            =
                            <name>port</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>hasBracketlessColons</name>
                            </name>
                            =
                            <name>hasBracketlessColons</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the portion of this {@code HostAndPort} instance that should
                * represent the hostname or IPv4/IPv6 literal.
                *
                * &lt;p&gt;A successful parse does not imply any degree of sanity in this field.
                * For additional validation, see the {@link HostSpecifier} class.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getHostText</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>host</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Return true if this instance has a defined port. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>hasPort</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>port</name>
                            &gt;= 0
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Get the current port number, failing if no port is defined.
                *
                * @return a validated port number, in the range [0..65535]
                * @throws IllegalStateException if no port is defined. You can use
                * {@link #withDefaultPort(int)} to prevent this from occurring.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getPort</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkState</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>hasPort</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>port</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the current port number, with a default if no port is defined.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getPortOrDefault</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>defaultPort</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>hasPort</name>
                                <argument_list>()</argument_list>
                            </call>
                            ? <name>port</name> :
                            <name>defaultPort</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Build a HostAndPort instance from separate host and port values.
                *
                * &lt;p&gt;Note: Non-bracketed IPv6 literals are allowed.
                * Use {@link #requireBracketsForIPv6()} to prohibit these.
                *
                * @param host the host string to parse. Must not contain a port number.
                * @param port a port number from [0..65535]
                * @return if parsing was successful, a populated HostAndPort object.
                * @throws IllegalArgumentException if {@code host} contains a port number,
                * or {@code port} is out of range.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>HostAndPort</name>
                </type>
                <name>fromParts</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>host</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>port</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkArgument</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>isValidPort</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>port</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Port out of range: %s"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>port</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>HostAndPort</name>
                            </type>
                            <name>parsedHost</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>fromString</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>host</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkArgument</name>
                                <argument_list>(
                                    <argument>
                                        <expr>!
                                            <call>
                                                <name><name>parsedHost</name>.
                                                    <name>hasPort</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Host has a port: %s"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>host</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>HostAndPort</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>parsedHost</name>.
                                                <name>host</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>port</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>parsedHost</name>.
                                                <name>hasBracketlessColons</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Build a HostAndPort instance from a host only.
                *
                * &lt;p&gt;Note: Non-bracketed IPv6 literals are allowed.
                * Use {@link #requireBracketsForIPv6()} to prohibit these.
                *
                * @param host the host-only string to parse. Must not contain a port number.
                * @return if parsing was successful, a populated HostAndPort object.
                * @throws IllegalArgumentException if {@code host} contains a port number.
                * @since 17.0
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>HostAndPort</name>
                </type>
                <name>fromHost</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>host</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>HostAndPort</name>
                            </type>
                            <name>parsedHost</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>fromString</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>host</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkArgument</name>
                                <argument_list>(
                                    <argument>
                                        <expr>!
                                            <call>
                                                <name><name>parsedHost</name>.
                                                    <name>hasPort</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Host has a port: %s"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>host</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>parsedHost</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Split a freeform string into a host and port, without strict validation.
                *
                * Note that the host-only formats will leave the port field undefined. You
                * can use {@link #withDefaultPort(int)} to patch in a default value.
                *
                * @param hostPortString the input string to parse.
                * @return if parsing was successful, a populated HostAndPort object.
                * @throws IllegalArgumentException if nothing meaningful could be parsed.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>HostAndPort</name>
                </type>
                <name>fromString</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>hostPortString</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>hostPortString</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>host</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>portString</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>hasBracketlessColons</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>hostPortString</name>.
                                        <name>startsWith</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"["</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                            <index>[]</index>
                                        </type>
                                        <name>hostAndPort</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getHostAndPortFromBracketedHost</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>hostPortString</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>host</name>
                                        =
                                        <name>
                                            <name>hostAndPort</name>
                                            <index>[<expr>0</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>portString</name>
                                        =
                                        <name>
                                            <name>hostAndPort</name>
                                            <index>[<expr>1</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>colonPos</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>hostPortString</name>.
                                                        <name>indexOf</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>':'</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>colonPos</name>
                                            &gt;= 0 &amp;&amp;
                                            <call>
                                                <name><name>hostPortString</name>.
                                                    <name>indexOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>':'</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>colonPos</name>
                                                            + 1
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            == -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Exactly 1 colon. Split into host:port.</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>host</name>
                                                    =
                                                    <call>
                                                        <name><name>hostPortString</name>.
                                                            <name>substring</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>colonPos</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>portString</name>
                                                    =
                                                    <call>
                                                        <name><name>hostPortString</name>.
                                                            <name>substring</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>colonPos</name>
                                                                    + 1
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// 0 or 2+ colons. Bare hostname or IPv6 literal.
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>host</name>
                                                    =
                                                    <name>hostPortString</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>hasBracketlessColons</name>
                                                    = (<name>colonPos</name> &gt;= 0)
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>port</name> =
                            <init>
                                <expr>
                                    <name>NO_PORT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>Strings</name>.
                                        <name>isNullOrEmpty</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>portString</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Try to parse the whole port string as a number.</comment>
                                <comment type="line">// JDK7 accepts leading plus signs. We don't want to.</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>checkArgument</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>!
                                                        <call>
                                                            <name><name>portString</name>.
                                                                <name>startsWith</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"+"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"Unparseable port number: %s"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>hostPortString</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>port</name>
                                                =
                                                <call>
                                                    <name><name>Integer</name>.
                                                        <name>parseInt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>portString</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>NumberFormatException</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>IllegalArgumentException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Unparseable port number: " +
                                                                    <name>hostPortString</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>checkArgument</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>isValidPort</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>port</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"Port number out of range: %s"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>hostPortString</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>new
                            <call>
                                <name>HostAndPort</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>host</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>port</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hasBracketlessColons</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Parses a bracketed host-port string, throwing IllegalArgumentException if parsing fails.
                *
                * @param hostPortString the full bracketed host-port specification. Post might not be specified.
                * @return an array with 2 strings: host and port, in that order.
                * @throws IllegalArgumentException if parsing the bracketed host-port string fails.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getHostAndPortFromBracketedHost</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>hostPortString</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>colonIndex</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>closeBracketIndex</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkArgument</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>hostPortString</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            == '['
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Bracketed host-port string must start with a bracket: %s"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hostPortString</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>colonIndex</name>
                            =
                            <call>
                                <name><name>hostPortString</name>.
                                    <name>indexOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>':'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>closeBracketIndex</name>
                            =
                            <call>
                                <name><name>hostPortString</name>.
                                    <name>lastIndexOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>']'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkArgument</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>colonIndex</name>
                                            &gt; -1 &amp;&amp; <name>closeBracketIndex</name> &gt;
                                            <name>colonIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Invalid bracketed host/port: %s"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hostPortString</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>host</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>hostPortString</name>.
                                            <name>substring</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>closeBracketIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>closeBracketIndex</name>
                                + 1 ==
                                <call>
                                    <name><name>hostPortString</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>String</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{
                                            <expr>
                                                <name>host</name>
                                            </expr>
                                            , <expr>""</expr> }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>checkArgument</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>hostPortString</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>closeBracketIndex</name>
                                                                        + 1
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        == ':'
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"Only a colon may follow a close bracket: %s"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>hostPortString</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <name>closeBracketIndex</name>
                                                    + 2
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <call>
                                                <name><name>hostPortString</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>checkArgument</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>Character</name>.
                                                                        <name>isDigit</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>hostPortString</name>.
                                                                                        <name>charAt</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"Port must be numeric: %s"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>hostPortString</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>String</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{
                                            <expr>
                                                <name>host</name>
                                            </expr>
                                            ,
                                            <expr>
                                                <call>
                                                    <name><name>hostPortString</name>.
                                                        <name>substring</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>closeBracketIndex</name>
                                                                + 2
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Provide a default port if the parsed string contained only a host.
                *
                * You can chain this after {@link #fromString(String)} to include a port in
                * case the port was omitted from the input string. If a port was already
                * provided, then this method is a no-op.
                *
                * @param defaultPort a port number, from [0..65535]
                * @return a HostAndPort instance, guaranteed to have a defined port.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>HostAndPort</name>
                </type>
                <name>withDefaultPort</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>defaultPort</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkArgument</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>isValidPort</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>defaultPort</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>hasPort</name>
                                    <argument_list>()</argument_list>
                                </call>
                                || <name>port</name> ==
                                <name>defaultPort</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>this</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>HostAndPort</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>host</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>defaultPort</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hasBracketlessColons</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Generate an error if the host might be a non-bracketed IPv6 literal.
                *
                * &lt;p&gt;URI formatting requires that IPv6 literals be surrounded by brackets,
                * like "[2001:db8::1]". Chain this call after {@link #fromString(String)}
                * to increase the strictness of the parser, and disallow IPv6 literals
                * that don't contain these brackets.
                *
                * &lt;p&gt;Note that this parser identifies IPv6 literals solely based on the
                * presence of a colon. To perform actual validation of IP addresses, see
                * the {@link InetAddresses#forString(String)} method.
                *
                * @return {@code this}, to enable chaining of calls.
                * @throws IllegalArgumentException if bracketless IPv6 is detected.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>HostAndPort</name>
                </type>
                <name>requireBracketsForIPv6</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkArgument</name>
                                <argument_list>(
                                    <argument>
                                        <expr>!
                                            <name>hasBracketlessColons</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Possible bracketless IPv6 literal: %s"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>host</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>other</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>this</name>
                                ==
                                <name>other</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>other</name>
                                <name>instanceof</name>
                                <name>HostAndPort</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>HostAndPort</name>
                                        </type>
                                        <name>that</name> =
                                        <init>
                                            <expr>(<name>HostAndPort</name>)
                                                <name>other</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>Objects</name>.
                                                <name>equal</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>host</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>that</name>.
                                                            <name>host</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp;
                                        <name><name>this</name>.
                                            <name>port</name>
                                        </name>
                                        ==
                                        <name><name>that</name>.
                                            <name>port</name>
                                        </name>
                                        &amp;&amp;
                                        <name><name>this</name>.
                                            <name>hasBracketlessColons</name>
                                        </name>
                                        ==
                                        <name><name>that</name>.
                                            <name>hasBracketlessColons</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>Objects</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>host</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>port</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hasBracketlessColons</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Rebuild the host:port string, including brackets if necessary. */</comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// "[]:12345" requires 8 extra bytes.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuilder</name>
                            </type>
                            <name>builder</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuilder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>host</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + 8
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>host</name>.
                                        <name>indexOf</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>':'</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &gt;= 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>builder</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>'['</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>append</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>host</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>append</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>']'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>builder</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>host</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>hasPort</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>builder</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>':'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>append</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>port</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>builder</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Return true for valid port numbers. */</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isValidPort</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>port</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>port</name>
                            &gt;= 0 &amp;&amp; <name>port</name> &lt;= 65535
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            }
        </block>
    </class>
</unit>
