<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\collect\ImmutableSortedMultisetFauxverideShim.java">
    <comment type="block">/*
        * Copyright (C) 2011 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
        * in compliance with the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software distributed under the
        * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
        * express or implied. See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>collect</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * "Overrides" the {@link ImmutableMultiset} static methods that lack
        * {@link ImmutableSortedMultiset} equivalents with deprecated, exception-throwing versions. This
        * prevents accidents like the following:
        *
        * &lt;pre&gt; {@code
        *
        * List&lt;Object&gt; objects = ...;
        * // Sort them:
        * Set&lt;Object&gt; sorted = ImmutableSortedMultiset.copyOf(objects);
        * // BAD CODE! The returned multiset is actually an unsorted ImmutableMultiset!}&lt;/pre&gt;
        *
        * &lt;p&gt;While we could put the overrides in {@link ImmutableSortedMultiset} itself, it seems clearer
        * to separate these "do not call" methods from those intended for normal use.
        *
        * @author Louis Wasserman
        */
    </comment>
    <class>
        <specifier>abstract</specifier>
        class
        <name>
            <name>ImmutableSortedMultisetFauxverideShim</name>
            <argument_list>&lt;
                <argument>
                    <name>E</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <super>
            <extends>extends
                <name>
                    <name>ImmutableMultiset</name>
                    <argument_list>&lt;
                        <argument>
                            <name>E</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{
            <comment type="javadoc">/**
                * Not supported. Use {@link ImmutableSortedMultiset#naturalOrder}, which offers better
                * type-safety, instead. This method exists only to hide {@link ImmutableMultiset#builder} from
                * consumers of {@code ImmutableSortedMultiset}.
                *
                * @throws UnsupportedOperationException always
                * @deprecated Use {@link ImmutableSortedMultiset#naturalOrder}, which offers better type-safety.
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Deprecated</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>E</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name><name>ImmutableSortedMultiset</name>.
                        <name>
                            <name>Builder</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>E</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </name>
                </type>
                <name>builder</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>UnsupportedOperationException</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Not supported. &lt;b&gt;You are attempting to create a multiset that may contain a non-{@code
                * Comparable} element.&lt;/b&gt; Proper calls will resolve to the version in {@code
                * ImmutableSortedMultiset}, not this dummy version.
                *
                * @throws UnsupportedOperationException always
                * @deprecated &lt;b&gt;Pass a parameter of type {@code Comparable} to use
                * {@link ImmutableSortedMultiset#of(Comparable)}.&lt;/b&gt;
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Deprecated</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>E</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>ImmutableSortedMultiset</name>
                        <argument_list>&lt;
                            <argument>
                                <name>E</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>of</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>UnsupportedOperationException</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Not supported. &lt;b&gt;You are attempting to create a multiset that may contain a non-{@code
                * Comparable} element.&lt;/b&gt; Proper calls will resolve to the version in {@code
                * ImmutableSortedMultiset}, not this dummy version.
                *
                * @throws UnsupportedOperationException always
                * @deprecated &lt;b&gt;Pass the parameters of type {@code Comparable} to use
                * {@link ImmutableSortedMultiset#of(Comparable, Comparable)}.&lt;/b&gt;
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Deprecated</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>E</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>ImmutableSortedMultiset</name>
                        <argument_list>&lt;
                            <argument>
                                <name>E</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>of</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>UnsupportedOperationException</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Not supported. &lt;b&gt;You are attempting to create a multiset that may contain a non-{@code
                * Comparable} element.&lt;/b&gt; Proper calls will resolve to the version in {@code
                * ImmutableSortedMultiset}, not this dummy version.
                *
                * @throws UnsupportedOperationException always
                * @deprecated &lt;b&gt;Pass the parameters of type {@code Comparable} to use
                * {@link ImmutableSortedMultiset#of(Comparable, Comparable, Comparable)}.&lt;/b&gt;
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Deprecated</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>E</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>ImmutableSortedMultiset</name>
                        <argument_list>&lt;
                            <argument>
                                <name>E</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>of</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e3</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>UnsupportedOperationException</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Not supported. &lt;b&gt;You are attempting to create a multiset that may contain a non-{@code
                * Comparable} element.&lt;/b&gt; Proper calls will resolve to the version in {@code
                * ImmutableSortedMultiset}, not this dummy version.
                *
                * @throws UnsupportedOperationException always
                * @deprecated &lt;b&gt;Pass the parameters of type {@code Comparable} to use {@link
                * ImmutableSortedMultiset#of(Comparable, Comparable, Comparable, Comparable)}. &lt;/b&gt;
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Deprecated</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>E</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>ImmutableSortedMultiset</name>
                        <argument_list>&lt;
                            <argument>
                                <name>E</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>of</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e3</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e4</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>UnsupportedOperationException</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Not supported. &lt;b&gt;You are attempting to create a multiset that may contain a non-{@code
                * Comparable} element.&lt;/b&gt; Proper calls will resolve to the version in {@code
                * ImmutableSortedMultiset}, not this dummy version.
                *
                * @throws UnsupportedOperationException always
                * @deprecated &lt;b&gt;Pass the parameters of type {@code Comparable} to use {@link
                * ImmutableSortedMultiset#of(Comparable, Comparable, Comparable, Comparable,
                * Comparable)} . &lt;/b&gt;
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Deprecated</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>E</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>ImmutableSortedMultiset</name>
                        <argument_list>&lt;
                            <argument>
                                <name>E</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>of</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e3</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e4</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e5</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>UnsupportedOperationException</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Not supported. &lt;b&gt;You are attempting to create a multiset that may contain a non-{@code
                * Comparable} element.&lt;/b&gt; Proper calls will resolve to the version in {@code
                * ImmutableSortedMultiset}, not this dummy version.
                *
                * @throws UnsupportedOperationException always
                * @deprecated &lt;b&gt;Pass the parameters of type {@code Comparable} to use {@link
                * ImmutableSortedMultiset#of(Comparable, Comparable, Comparable, Comparable,
                * Comparable, Comparable, Comparable...)} . &lt;/b&gt;
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Deprecated</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>E</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>ImmutableSortedMultiset</name>
                        <argument_list>&lt;
                            <argument>
                                <name>E</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>of</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e3</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e4</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e5</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>e6</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type><name>E</name>...
                            </type>
                            <name>remaining</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>UnsupportedOperationException</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Not supported. &lt;b&gt;You are attempting to create a multiset that may contain non-{@code
                * Comparable} elements.&lt;/b&gt; Proper calls will resolve to the version in {@code
                * ImmutableSortedMultiset}, not this dummy version.
                *
                * @throws UnsupportedOperationException always
                * @deprecated &lt;b&gt;Pass parameters of type {@code Comparable} to use
                * {@link ImmutableSortedMultiset#copyOf(Comparable[])}.&lt;/b&gt;
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Deprecated</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>E</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>ImmutableSortedMultiset</name>
                        <argument_list>&lt;
                            <argument>
                                <name>E</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>copyOf</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>E</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>elements</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>UnsupportedOperationException</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="block">/*
                * We would like to include an unsupported "&lt;E&gt; copyOf(Iterable&lt;E&gt;)" here, providing only the
                * properly typed "&lt;E extends Comparable&lt;E&gt;&gt; copyOf(Iterable&lt;E&gt;)" in
                ImmutableSortedMultiset (and
                * likewise for the Iterator equivalent). However, due to a change in Sun's interpretation of the
                * JLS (as described at http://bugs.sun.com/view_bug.do?bug_id=6182950), the OpenJDK 7 compiler
                * available as of this writing rejects our attempts. To maintain compatibility with that version
                * and with any other compilers that interpret the JLS similarly, there is no definition of
                * copyOf() here, and the definition in ImmutableSortedMultiset matches that in
                * ImmutableMultiset.
                *
                * The result is that ImmutableSortedMultiset.copyOf() may be called on non-Comparable elements.
                * We have not discovered a better solution. In retrospect, the static factory methods should
                * have gone in a separate class so that ImmutableSortedMultiset wouldn't "inherit"
                * too-permissive factory methods from ImmutableMultiset.
                */
            </comment>
            }
        </block>
    </class>
</unit>
