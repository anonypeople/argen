<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\collect\Interner.java">
    <comment type="block">/*
        * Copyright (C) 2007 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>collect</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>Beta</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Provides equivalent behavior to {@link String#intern} for other immutable
        * types.
        *
        * @author Kevin Bourrillion
        * @since 3.0
        */
    </comment>
    <class type="interface">
        <annotation>@
            <name>Beta</name>
        </annotation>
        <specifier>public</specifier>
        interface
        <name>
            <name>Interner</name>
            <argument_list>&lt;
                <argument>
                    <name>E</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <block>{
            <comment type="javadoc">/**
                * Chooses and returns the representative instance for any of a collection of
                * instances that are equal to each other. If two {@linkplain Object#equals
                * equal} inputs are given to this method, both calls will return the same
                * instance. That is, {@code intern(a).equals(a)} always holds, and {@code
                * intern(a) == intern(b)} if and only if {@code a.equals(b)}. Note that
                * {@code intern(a)} is permitted to return one instance now and a different
                * instance later if the original interned instance was garbage-collected.
                *
                * &lt;p&gt;&lt;b&gt;Warning:&lt;/b&gt; do not use with mutable objects.
                *
                * @throws NullPointerException if {@code sample} is null
                */
            </comment>
            <function_decl>
                <type>
                    <name>E</name>
                </type>
                <name>intern</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>E</name>
                            </type>
                            <name>sample</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            }
        </block>
    </class>
</unit>
