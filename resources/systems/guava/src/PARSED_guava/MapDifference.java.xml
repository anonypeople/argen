<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\collect\MapDifference.java">
    <comment type="block">/*
        * Copyright (C) 2007 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>collect</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtCompatible</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>annotation</name>.
            <name>Nullable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * An object representing the differences between two maps.
        *
        * @author Kevin Bourrillion
        * @since 2.0
        */
    </comment>
    <class type="interface">
        <annotation>@
            <name>GwtCompatible</name>
        </annotation>
        <specifier>public</specifier>
        interface
        <name>
            <name>MapDifference</name>
            <argument_list>&lt;
                <argument>
                    <name>K</name>
                </argument>
                ,
                <argument>
                    <name>V</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <block>{
            <comment type="javadoc">/**
                * Returns {@code true} if there are no differences between the two maps;
                * that is, if the maps are equal.
                */
            </comment>
            <function_decl>
                <type>
                    <name>boolean</name>
                </type>
                <name>areEqual</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns an unmodifiable map containing the entries from the left map whose
                * keys are not present in the right map.
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>entriesOnlyOnLeft</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns an unmodifiable map containing the entries from the right map whose
                * keys are not present in the left map.
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>entriesOnlyOnRight</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns an unmodifiable map containing the entries that appear in both
                * maps; that is, the intersection of the two maps.
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>entriesInCommon</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns an unmodifiable map describing keys that appear in both maps, but
                * with different values.
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K</name>
                            </argument>
                            ,
                            <argument>
                                <name>
                                    <name>ValueDifference</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>entriesDiffering</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Compares the specified object with this instance for equality. Returns
                * {@code true} if the given object is also a {@code MapDifference} and the
                * values returned by the {@link #entriesOnlyOnLeft()}, {@link
                * #entriesOnlyOnRight()}, {@link #entriesInCommon()} and {@link
                * #entriesDiffering()} of the two instances are equal.
                */
            </comment>
            <function_decl>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>object</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the hash code for this instance. This is defined as the hash code
                * of &lt;pre&gt; {@code
                *
                * Arrays.asList(entriesOnlyOnLeft(), entriesOnlyOnRight(),
                * entriesInCommon(), entriesDiffering())}&lt;/pre&gt;
                */
            </comment>
            <function_decl>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * A difference between the mappings from two maps with the same key. The
                * {@link #leftValue} and {@link #rightValue} are not equal, and one but not
                * both of them may be null.
                *
                * @since 2.0
                */
            </comment>
            <class type="interface">interface
                <name>
                    <name>ValueDifference</name>
                    <argument_list>&lt;
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <block>{
                    <comment type="javadoc">/**
                        * Returns the value from the left map (possibly null).
                        */
                    </comment>
                    <function_decl>
                        <type>
                            <name>V</name>
                        </type>
                        <name>leftValue</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>

                    <comment type="javadoc">/**
                        * Returns the value from the right map (possibly null).
                        */
                    </comment>
                    <function_decl>
                        <type>
                            <name>V</name>
                        </type>
                        <name>rightValue</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>

                    <comment type="javadoc">/**
                        * Two instances are considered equal if their {@link #leftValue()}
                        * values are equal and their {@link #rightValue()} values are also equal.
                        */
                    </comment>
                    <function_decl>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>boolean</name>
                        </type>
                        <name>equals</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Object</name>
                                    </type>
                                    <name>other</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        ;
                    </function_decl>

                    <comment type="javadoc">/**
                        * The hash code equals the value
                        * {@code Arrays.asList(leftValue(), rightValue()).hashCode()}.
                        */
                    </comment>
                    <function_decl>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>int</name>
                        </type>
                        <name>hashCode</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>
                    }
                </block>
            </class>

            }
        </block>
    </class>
</unit>
