<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\base\MoreObjects.java">
    <comment type="block">/*
        * Copyright (C) 2014 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>base</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkNotNull</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtCompatible</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Arrays</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>annotation</name>.
            <name>CheckReturnValue</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>annotation</name>.
            <name>Nullable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Helper functions that operate on any {@code Object}, and are not already provided in
        * {@link java.util.Objects}.
        *
        * &lt;p&gt;See the Guava User Guide on &lt;a
        * href="https://github.com/google/guava/wiki/CommonObjectUtilitiesExplained"&gt;writing
        * {@code Object} methods with {@code MoreObjects}&lt;/a&gt;.
        *
        * @author Laurence Gonsalves
        * @since 18.0 (since 2.0 as {@code Objects})
        */
    </comment>
    <class>
        <annotation>@
            <name>GwtCompatible</name>
        </annotation>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>MoreObjects</name>
        <block>{
            <comment type="javadoc">/**
                * Returns the first of two given parameters that is not {@code null}, if either is, or otherwise
                * throws a {@link NullPointerException}.
                *
                * &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; if {@code first} is represented as an {@link Optional}, this can be
                * accomplished with {@link Optional#or(Object) first.or(second)}. That approach also allows for
                * lazy evaluation of the fallback instance, using {@link Optional#or(Supplier)
                * first.or(supplier)}.
                *
                * @return {@code first} if it is non-null; otherwise {@code second} if it is non-null
                * @throws NullPointerException if both {@code first} and {@code second} are null
                * @since 18.0 (since 3.0 as {@code Objects.firstNonNull()}).
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>CheckReturnValue</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                </type>
                <name>firstNonNull</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>T</name>
                            </type>
                            <name>first</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>T</name>
                            </type>
                            <name>second</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>first</name>
                            != <name>null</name> ? <name>first</name> :
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>second</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates an instance of {@link ToStringHelper}.
                *
                * &lt;p&gt;This is helpful for implementing {@link Object#toString()}.
                * Specification by example: &lt;pre&gt; {@code
                * // Returns "ClassName{}"
                * MoreObjects.toStringHelper(this)
                * .toString();
                *
                * // Returns "ClassName{x=1}"
                * MoreObjects.toStringHelper(this)
                * .add("x", 1)
                * .toString();
                *
                * // Returns "MyObject{x=1}"
                * MoreObjects.toStringHelper("MyObject")
                * .add("x", 1)
                * .toString();
                *
                * // Returns "ClassName{x=1, y=foo}"
                * MoreObjects.toStringHelper(this)
                * .add("x", 1)
                * .add("y", "foo")
                * .toString();
                *
                * // Returns "ClassName{x=1}"
                * MoreObjects.toStringHelper(this)
                * .omitNullValues()
                * .add("x", 1)
                * .add("y", null)
                * .toString();
                * }}&lt;/pre&gt;
                *
                * &lt;p&gt;Note that in GWT, class names are often obfuscated.
                *
                * @param self the object to generate the string for (typically {@code this}), used only for its
                * class name
                * @since 18.0 (since 2.0 as {@code Objects.toStringHelper()}).
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>CheckReturnValue</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>ToStringHelper</name>
                </type>
                <name>toStringHelper</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>self</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ToStringHelper</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>self</name>.
                                                    <name>getClass</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getSimpleName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates an instance of {@link ToStringHelper} in the same manner as {@link
                * #toStringHelper(Object)}, but using the simple name of {@code clazz} instead of using an
                * instance's {@link Object#getClass()}.
                *
                * &lt;p&gt;Note that in GWT, class names are often obfuscated.
                *
                * @param clazz the {@link Class} of the instance
                * @since 18.0 (since 7.0 as {@code Objects.toStringHelper()}).
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>CheckReturnValue</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>ToStringHelper</name>
                </type>
                <name>toStringHelper</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Class</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>clazz</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ToStringHelper</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>clazz</name>.
                                                    <name>getSimpleName</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates an instance of {@link ToStringHelper} in the same manner as {@link
                * #toStringHelper(Object)}, but using {@code className} instead of using an instance's {@link
                * Object#getClass()}.
                *
                * @param className the name of the instance type
                * @since 18.0 (since 7.0 as {@code Objects.toStringHelper()}).
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>CheckReturnValue</name>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>ToStringHelper</name>
                </type>
                <name>toStringHelper</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>className</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ToStringHelper</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>className</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Support class for {@link MoreObjects#toStringHelper}.
                *
                * @author Jason Lee
                * @since 18.0 (since 2.0 as {@code Objects.ToStringHelper}).
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>ToStringHelper</name>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>className</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>ValueHolder</name>
                            </type>
                            <name>holderHead</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ValueHolder</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>ValueHolder</name>
                            </type>
                            <name>holderTail</name> =
                            <init>
                                <expr>
                                    <name>holderHead</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>boolean</name>
                            </type>
                            <name>omitNullValues</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Use {@link MoreObjects#toStringHelper(Object)} to create an instance.
                        */
                    </comment>
                    <constructor>
                        <specifier>private</specifier>
                        <name>ToStringHelper</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>className</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>className</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>className</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Configures the {@link ToStringHelper} so {@link #toString()} will ignore
                        * properties with null value. The order of calling this method, relative
                        * to the {@code add()}/{@code addValue()} methods, is not significant.
                        *
                        * @since 18.0 (since 12.0 as {@code Objects.ToStringHelper.omitNullValues()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>omitNullValues</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>omitNullValues</name>
                                    = true
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>this</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds a name/value pair to the formatted output in {@code name=value}
                        * format. If {@code value} is {@code null}, the string {@code "null"}
                        * is used, unless {@link #omitNullValues()} is called, in which case this
                        * name/value pair will not be added.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>add</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Object</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds a name/value pair to the formatted output in {@code name=value}
                        * format.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.add()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>add</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds a name/value pair to the formatted output in {@code name=value}
                        * format.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.add()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>add</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds a name/value pair to the formatted output in {@code name=value}
                        * format.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.add()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>add</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds a name/value pair to the formatted output in {@code name=value}
                        * format.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.add()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>add</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds a name/value pair to the formatted output in {@code name=value}
                        * format.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.add()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>add</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds a name/value pair to the formatted output in {@code name=value}
                        * format.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.add()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>add</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds an unnamed value to the formatted output.
                        *
                        * &lt;p&gt;It is strongly encouraged to use {@link #add(String, Object)} instead
                        * and give value a readable name.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>addValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Object</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds an unnamed value to the formatted output.
                        *
                        * &lt;p&gt;It is strongly encouraged to use {@link #add(String, boolean)} instead
                        * and give value a readable name.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.addValue()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>addValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds an unnamed value to the formatted output.
                        *
                        * &lt;p&gt;It is strongly encouraged to use {@link #add(String, char)} instead
                        * and give value a readable name.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.addValue()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>addValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds an unnamed value to the formatted output.
                        *
                        * &lt;p&gt;It is strongly encouraged to use {@link #add(String, double)} instead
                        * and give value a readable name.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.addValue()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>addValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds an unnamed value to the formatted output.
                        *
                        * &lt;p&gt;It is strongly encouraged to use {@link #add(String, float)} instead
                        * and give value a readable name.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.addValue()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>addValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds an unnamed value to the formatted output.
                        *
                        * &lt;p&gt;It is strongly encouraged to use {@link #add(String, int)} instead
                        * and give value a readable name.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.addValue()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>addValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Adds an unnamed value to the formatted output.
                        *
                        * &lt;p&gt;It is strongly encouraged to use {@link #add(String, long)} instead
                        * and give value a readable name.
                        *
                        * @since 18.0 (since 11.0 as {@code Objects.ToStringHelper.addValue()}).
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>addValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>addHolder</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>String</name>.
                                                            <name>valueOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Returns a string in the format specified by
                        * {@link MoreObjects#toStringHelper(Object)}.
                        *
                        * &lt;p&gt;After calling this method, you can keep adding more properties to later
                        * call toString() again and get a more complete representation of the
                        * same object; but properties cannot be removed, so this only allows
                        * limited reuse of the helper instance. The helper allows duplication of
                        * properties (multiple name/value pairs with the same name can be added).
                        */
                    </comment>
                    <function>
                        <type>
                            <annotation>@
                                <name>CheckReturnValue</name>
                            </annotation>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// create a copy to keep it consistent in case value changes</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>omitNullValuesSnapshot</name> =
                                    <init>
                                        <expr>
                                            <name>omitNullValues</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>nextSeparator</name> =
                                    <init>
                                        <expr>""</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>StringBuilder</name>
                                    </type>
                                    <name>builder</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>StringBuilder</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>32</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>append</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>className</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>append</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>'{'</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>ValueHolder</name>
                                        </type>
                                        <name>valueHolder</name> =
                                        <init>
                                            <expr>
                                                <name><name>holderHead</name>.
                                                    <name>next</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>valueHolder</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr>
                                        <name>valueHolder</name>
                                        =
                                        <name><name>valueHolder</name>.
                                            <name>next</name>
                                        </name>
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>value</name> =
                                            <init>
                                                <expr>
                                                    <name><name>valueHolder</name>.
                                                        <name>value</name>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>!<name>omitNullValuesSnapshot</name> || <name>value</name> !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>builder</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>nextSeparator</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>nextSeparator</name>
                                                        = ", "
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name><name>valueHolder</name>.
                                                                <name>name</name>
                                                            </name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>builder</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>valueHolder</name>.
                                                                                        <name>name</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>append</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>'='</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>value</name>
                                                            != <name>null</name> &amp;&amp;
                                                            <call>
                                                                <name><name>value</name>.
                                                                    <name>getClass</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>isArray</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </type>
                                                                    <name>objectArray</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>value</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>String</name>
                                                                    </type>
                                                                    <name>arrayString</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>Arrays</name>.
                                                                                    <name>deepToString</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>objectArray</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>builder</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>arrayString</name>.
                                                                                            <name>substring</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>1</expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            arrayString</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                length
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>
                                                                                                            ()
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                    - 1
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>builder</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>value</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>builder</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'}'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>toString</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>ValueHolder</name>
                        </type>
                        <name>addHolder</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ValueHolder</name>
                                    </type>
                                    <name>valueHolder</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>ValueHolder</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>holderTail</name>
                                    =
                                    <name><name>holderTail</name>.
                                        <name>next</name>
                                    </name>
                                    =
                                    <name>valueHolder</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>valueHolder</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>addHolder</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Object</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ValueHolder</name>
                                    </type>
                                    <name>valueHolder</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>addHolder</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>valueHolder</name>.
                                        <name>value</name>
                                    </name>
                                    =
                                    <name>value</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>this</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>ToStringHelper</name>
                        </type>
                        <name>addHolder</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Object</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ValueHolder</name>
                                    </type>
                                    <name>valueHolder</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>addHolder</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>valueHolder</name>.
                                        <name>value</name>
                                    </name>
                                    =
                                    <name>value</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>valueHolder</name>.
                                        <name>name</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>this</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <class>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier> class <name>ValueHolder</name>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ValueHolder</name>
                                    </type>
                                    <name>next</name>
                                </decl>
                                ;
                            </decl_stmt>
                            }
                        </block>
                    </class>
                    }
                </block>
            </class>

            <constructor>
                <specifier>private</specifier>
                <name>MoreObjects</name>
                <parameter_list>()</parameter_list>
                <block>{}</block>
            </constructor>
            }
        </block>
    </class>
</unit>
