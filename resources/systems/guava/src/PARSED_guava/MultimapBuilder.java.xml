<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\collect\MultimapBuilder.java">
    <comment type="block">/*
        * Copyright (C) 2013 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>collect</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkNotNull</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.<name>
            CollectPreconditions</name>.
            <name>checkNonnegative</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.<name>Maps</name>.
            <name>newLinkedHashMapWithExpectedSize</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>Beta</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtCompatible</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Supplier</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>ArrayList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Collection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Comparator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>EnumMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>EnumSet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>HashMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>HashSet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>LinkedHashMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>LinkedHashSet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>LinkedList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Set</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>SortedSet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>TreeMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>TreeSet</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>annotation</name>.
            <name>CheckReturnValue</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A builder for a multimap implementation that allows customization of the backing map and value
        * collection implementations used in a particular multimap.
        *
        * &lt;p&gt;This can be used to easily configure multimap data structure implementations not provided
        * explicitly in {@code com.google.common.collect}, for example:
        *
        * &lt;pre&gt; {@code
        * ListMultimap&lt;String, Integer&gt; treeListMultimap =
        * MultimapBuilder.treeKeys().arrayListValues().build();
        * SetMultimap&lt;Integer, MyEnum&gt; hashEnumMultimap =
        * MultimapBuilder.hashKeys().enumSetValues(MyEnum.class).build();}&lt;/pre&gt;
        *
        * &lt;p&gt;{@code MultimapBuilder} instances are immutable. Invoking a configuration method has no
        * effect on the receiving instance; you must store and use the new builder instance it returns
        * instead.
        *
        * &lt;p&gt;The generated multimaps are serializable if the key and value types are serializable,
        * unless stated otherwise in one of the configuration methods.
        *
        * @author Louis Wasserman
        * @param &lt;K0&gt; An upper bound on the key type of the generated multimap.
        * @param &lt;V0&gt; An upper bound on the value type of the generated multimap.
        * @since 16.0
        */
    </comment>
    <class>
        <annotation>@
            <name>Beta</name>
        </annotation>
        <annotation>@
            <name>GwtCompatible</name>
        </annotation>
        <annotation>@
            <name>CheckReturnValue</name>
        </annotation>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class
        <name>
            <name>MultimapBuilder</name>
            <argument_list>&lt;
                <argument>
                    <name>K0</name>
                </argument>
                ,
                <argument>
                    <name>V0</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <block>{
            <comment type="block">/*
                * Leaving K and V as upper bounds rather than the actual key and value types allows type
                * parameters to be left implicit more often. CacheBuilder uses the same technique.
                */
            </comment>

            <constructor>
                <specifier>private</specifier>
                <name>MultimapBuilder</name>
                <parameter_list>()</parameter_list>
                <block>{}</block>
            </constructor>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DEFAULT_EXPECTED_KEYS</name> =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Uses a {@link HashMap} to map keys to value collections.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>
                        <name>MultimapBuilderWithKeys</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Object</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>hashKeys</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>hashKeys</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>DEFAULT_EXPECTED_KEYS</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Uses a {@link HashMap} to map keys to value collections, initialized to expect the specified
                * number of keys.
                *
                * @throws IllegalArgumentException if {@code expectedKeys &lt; 0}
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>
                        <name>MultimapBuilderWithKeys</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Object</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>hashKeys</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>expectedKeys</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNonnegative</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>expectedKeys</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"expectedKeys"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <class>
                                <super>
                                    <name>
                                        <name>MultimapBuilderWithKeys</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>Object</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </super>
                                <argument_list>()</argument_list>
                                <block>{
                                    <function>
                                        <type>
                                            <annotation>@
                                                <name>
                                                    <name>Override</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>K</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </annotation>
                                            <name>
                                                <name>Map</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>
                                                            <name>Collection</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </type>
                                        <name>createMap</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>Maps</name>.
                                                            <name>newHashMapWithExpectedSize</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>expectedKeys</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    }
                                </block>
                            </class>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Uses a {@link LinkedHashMap} to map keys to value collections.
                *
                * &lt;p&gt;The collections returned by {@link Multimap#keySet()}, {@link Multimap#keys()}, and
                * {@link Multimap#asMap()} will iterate through the keys in the order that they were first added
                * to the multimap, save that if all values associated with a key are removed and then the key is
                * added back into the multimap, that key will come last in the key iteration order.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>
                        <name>MultimapBuilderWithKeys</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Object</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>linkedHashKeys</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>linkedHashKeys</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>DEFAULT_EXPECTED_KEYS</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Uses a {@link LinkedHashMap} to map keys to value collections, initialized to expect the
                * specified number of keys.
                *
                * &lt;p&gt;The collections returned by {@link Multimap#keySet()}, {@link Multimap#keys()}, and
                * {@link Multimap#asMap()} will iterate through the keys in the order that they were first added
                * to the multimap, save that if all values associated with a key are removed and then the key is
                * added back into the multimap, that key will come last in the key iteration order.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>
                        <name>MultimapBuilderWithKeys</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Object</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>linkedHashKeys</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>expectedKeys</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNonnegative</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>expectedKeys</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"expectedKeys"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <class>
                                <super>
                                    <name>
                                        <name>MultimapBuilderWithKeys</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>Object</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </super>
                                <argument_list>()</argument_list>
                                <block>{
                                    <function>
                                        <type>
                                            <annotation>@
                                                <name>
                                                    <name>Override</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>K</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </annotation>
                                            <name>
                                                <name>Map</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>
                                                            <name>Collection</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </type>
                                        <name>createMap</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name>newLinkedHashMapWithExpectedSize</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>expectedKeys</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    }
                                </block>
                            </class>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Uses a naturally-ordered {@link TreeMap} to map keys to value collections.
                *
                * &lt;p&gt;The collections returned by {@link Multimap#keySet()}, {@link Multimap#keys()}, and
                * {@link Multimap#asMap()} will iterate through the keys in sorted order.
                *
                * &lt;p&gt;For all multimaps generated by the resulting builder, the {@link Multimap#keySet()} can be
                * safely cast to a {@link java.util.SortedSet}, and the {@link Multimap#asMap()} can safely be
                * cast to a {@link java.util.SortedMap}.
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>SuppressWarnings</name>
                        <argument_list>("rawtypes")</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>
                        <name>MultimapBuilderWithKeys</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Comparable</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>treeKeys</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>treeKeys</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Ordering</name>.
                                                    <name>natural</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Uses a {@link TreeMap} sorted by the specified comparator to map keys to value collections.
                *
                * &lt;p&gt;The collections returned by {@link Multimap#keySet()}, {@link Multimap#keys()}, and
                * {@link Multimap#asMap()} will iterate through the keys in sorted order.
                *
                * &lt;p&gt;For all multimaps generated by the resulting builder, the {@link Multimap#keySet()} can be
                * safely cast to a {@link java.util.SortedSet}, and the {@link Multimap#asMap()} can safely be
                * cast to a {@link java.util.SortedMap}.
                *
                * &lt;p&gt;Multimaps generated by the resulting builder will not be serializable if {@code comparator}
                * is not serializable.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>K0</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>MultimapBuilderWithKeys</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K0</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>treeKeys</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>
                                    <name>Comparator</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>K0</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>comparator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>comparator</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <class>
                                <super>
                                    <name>
                                        <name>MultimapBuilderWithKeys</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>K0</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </super>
                                <argument_list>()</argument_list>
                                <block>{
                                    <function>
                                        <type>
                                            <annotation>@
                                                <name>
                                                    <name>Override</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>K</name>
                                                            <extends>extends
                                                                <name>K0</name>
                                                            </extends>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </annotation>
                                            <name>
                                                <name>Map</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>
                                                            <name>Collection</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </type>
                                        <name>createMap</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return
                                                <expr>new
                                                    <call>
                                                        <name>
                                                            <name>TreeMap</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>K</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>
                                                                        <name>Collection</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>V</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>comparator</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    }
                                </block>
                            </class>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Uses an {@link EnumMap} to map keys to value collections.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>K0</name>
                            <extends>extends
                                <name>
                                    <name>Enum</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>K0</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>MultimapBuilderWithKeys</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K0</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>enumKeys</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>
                                    <name>Class</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>K0</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>keyClass</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>keyClass</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <class>
                                <super>
                                    <name>
                                        <name>MultimapBuilderWithKeys</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>K0</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </super>
                                <argument_list>()</argument_list>
                                <block>{
                                    <function>
                                        <type>
                                            <annotation>@
                                                <name>SuppressWarnings</name>
                                                <argument_list>("unchecked")</argument_list>
                                            </annotation>
                                            <annotation>@
                                                <name>
                                                    <name>Override</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>K</name>
                                                            <extends>extends
                                                                <name>K0</name>
                                                            </extends>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </annotation>
                                            <name>
                                                <name>Map</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>
                                                            <name>Collection</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </type>
                                        <name>createMap</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <comment type="line">// K must actually be K0, since enums are effectively
                                                final
                                            </comment>
                                            <comment type="line">// (their subclasses are inaccessible)</comment>
                                            <return>return
                                                <expr>(
                                                    <name>
                                                        <name>Map</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>K</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>
                                                                    <name>Collection</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>V</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                    ) new
                                                    <call>
                                                        <name>
                                                            <name>EnumMap</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>K0</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>
                                                                        <name>Collection</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>V</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>keyClass</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    }
                                </block>
                            </class>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class
                <name>
                    <name>ArrayListSupplier</name>
                    <argument_list>&lt;
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <implements>implements
                        <name>
                            <name>Supplier</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>List</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                        ,
                        <name>Serializable</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>expectedValuesPerKey</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>ArrayListSupplier</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>expectedValuesPerKey</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>expectedValuesPerKey</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNonnegative</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>expectedValuesPerKey</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"expectedValuesPerKey"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>List</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>get</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>
                                            <name>ArrayList</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>expectedValuesPerKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <enum>
                <specifier>private</specifier>
                enum <name>LinkedListSupplier</name>
                <super>
                    <implements>implements
                        <name>
                            <name>Supplier</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>List</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>Object</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </implements>
                </super>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>INSTANCE</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>static</specifier>
                            <argument_list>&lt;
                                <argument>
                                    <name>V</name>
                                </argument>
                                &gt;
                            </argument_list>
                            <name>
                                <name>Supplier</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>List</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>instance</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// Each call generates a fresh LinkedList, which can serve as a List&lt;V&gt;
                                for any V.
                            </comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>SuppressWarnings</name>
                                            <argument_list>({"rawtypes", "unchecked"})</argument_list>
                                        </annotation>
                                        <name>
                                            <name>Supplier</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>List</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>result</name> =
                                    <init>
                                        <expr>(<name>Supplier</name>)
                                            <name>INSTANCE</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>
                                    <name>result</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>List</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>Object</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>get</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>
                                            <name>LinkedList</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>Object</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </enum>

            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class
                <name>
                    <name>HashSetSupplier</name>
                    <argument_list>&lt;
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <implements>implements
                        <name>
                            <name>Supplier</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Set</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                        ,
                        <name>Serializable</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>expectedValuesPerKey</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>HashSetSupplier</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>expectedValuesPerKey</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>expectedValuesPerKey</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNonnegative</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>expectedValuesPerKey</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"expectedValuesPerKey"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Set</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>get</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Sets</name>.
                                            <name>newHashSetWithExpectedSize</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>expectedValuesPerKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class
                <name>
                    <name>LinkedHashSetSupplier</name>
                    <argument_list>&lt;
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <implements>implements
                        <name>
                            <name>Supplier</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Set</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                        ,
                        <name>Serializable</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>expectedValuesPerKey</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>LinkedHashSetSupplier</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>expectedValuesPerKey</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>expectedValuesPerKey</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNonnegative</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>expectedValuesPerKey</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"expectedValuesPerKey"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Set</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>get</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Sets</name>.
                                            <name>newLinkedHashSetWithExpectedSize</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>expectedValuesPerKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class
                <name>
                    <name>TreeSetSupplier</name>
                    <argument_list>&lt;
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <implements>implements
                        <name>
                            <name>Supplier</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>SortedSet</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                        ,
                        <name>Serializable</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>Comparator</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                            <super>super
                                                <name>V</name>
                                            </super>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>comparator</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>TreeSetSupplier</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Comparator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>?</name>
                                                    <super>super
                                                        <name>V</name>
                                                    </super>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>comparator</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>comparator</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>comparator</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>SortedSet</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>get</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>
                                            <name>TreeSet</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>comparator</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class
                <name>
                    <name>EnumSetSupplier</name>
                    <argument_list>&lt;
                        <argument>
                            <name>V</name>
                            <extends>extends
                                <name>
                                    <name>Enum</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <implements>implements
                        <name>
                            <name>Supplier</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Set</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                        ,
                        <name>Serializable</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>Class</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>clazz</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>EnumSetSupplier</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Class</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>clazz</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>clazz</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>clazz</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Set</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>get</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>EnumSet</name>.
                                            <name>noneOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>clazz</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * An intermediate stage in a {@link MultimapBuilder} in which the key-value collection map
                * implementation has been specified, but the value collection implementation has not.
                *
                * @param &lt;K0&gt; The upper bound on the key type of the generated multimap.
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>abstract</specifier>
                <specifier>static</specifier> class
                <name>
                    <name>MultimapBuilderWithKeys</name>
                    <argument_list>&lt;
                        <argument>
                            <name>K0</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>DEFAULT_EXPECTED_VALUES_PER_KEY</name> =
                            <init>
                                <expr>2</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>MultimapBuilderWithKeys</name>
                        <parameter_list>()</parameter_list>
                        <block>{}</block>
                    </constructor>

                    <function_decl>
                        <type>
                            <specifier>abstract</specifier>
                            <argument_list>&lt;
                                <argument>
                                    <name>K</name>
                                    <extends>extends
                                        <name>K0</name>
                                    </extends>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                </argument>
                                &gt;
                            </argument_list>
                            <name>
                                <name>Map</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Collection</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>createMap</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>

                    <comment type="javadoc">/**
                        * Uses an {@link ArrayList} to store value collections.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>
                                <name>ListMultimapBuilder</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K0</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Object</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>arrayListValues</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>arrayListValues</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>DEFAULT_EXPECTED_VALUES_PER_KEY</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Uses an {@link ArrayList} to store value collections, initialized to expect the specified
                        * number of values per key.
                        *
                        * @throws IllegalArgumentException if {@code expectedValuesPerKey &lt; 0}
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>
                                <name>ListMultimapBuilder</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K0</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Object</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>arrayListValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>int</name>
                                    </type>
                                    <name>expectedValuesPerKey</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNonnegative</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>expectedValuesPerKey</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"expectedValuesPerKey"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>ListMultimapBuilder</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K0</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>Object</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>public</specifier>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>K</name>
                                                            <extends>extends
                                                                <name>K0</name>
                                                            </extends>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                    <name>
                                                        <name>ListMultimap</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>K</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>build</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>Multimaps</name>.
                                                                    <name>newListMultimap</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>MultimapBuilderWithKeys</name>
                                                                                .<name>this</name>.
                                                                                <name>
                                                                                    <name/>
                                                                                </name>
                                                                            </name>
                                                                            &lt;
                                                                            <name>K</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr><name>V</name>&gt;
                                                                            <call>
                                                                                <name>createMap</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>
                                                                                    <name>ArrayListSupplier</name>
                                                                                    <argument_list>&lt;
                                                                                        <argument>
                                                                                            <name>V</name>
                                                                                        </argument>
                                                                                        &gt;
                                                                                    </argument_list>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>expectedValuesPerKey
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Uses a {@link LinkedList} to store value collections.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>
                                <name>ListMultimapBuilder</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K0</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Object</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>linkedListValues</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>ListMultimapBuilder</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K0</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>Object</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>public</specifier>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>K</name>
                                                            <extends>extends
                                                                <name>K0</name>
                                                            </extends>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                    <name>
                                                        <name>ListMultimap</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>K</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>build</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>Multimaps</name>.
                                                                    <name>newListMultimap</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>MultimapBuilderWithKeys</name>
                                                                                .<name>this</name>.
                                                                                <name>
                                                                                    <name/>
                                                                                </name>
                                                                            </name>
                                                                            &lt;
                                                                            <name>K</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr><name>V</name>&gt;
                                                                            <call>
                                                                                <name>createMap</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>LinkedListSupplier</name>.
                                                                                <name>
                                                                                    <name/>
                                                                                </name>
                                                                            </name>
                                                                            &lt;<name>V</name>&gt;
                                                                            <call>
                                                                                <name>instance</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Uses a {@link HashSet} to store value collections.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>
                                <name>SetMultimapBuilder</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K0</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Object</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>hashSetValues</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>hashSetValues</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>DEFAULT_EXPECTED_VALUES_PER_KEY</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Uses a {@link HashSet} to store value collections, initialized to expect the specified number
                        * of values per key.
                        *
                        * @throws IllegalArgumentException if {@code expectedValuesPerKey &lt; 0}
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>
                                <name>SetMultimapBuilder</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K0</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Object</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>hashSetValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>int</name>
                                    </type>
                                    <name>expectedValuesPerKey</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNonnegative</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>expectedValuesPerKey</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"expectedValuesPerKey"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>SetMultimapBuilder</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K0</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>Object</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>public</specifier>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>K</name>
                                                            <extends>extends
                                                                <name>K0</name>
                                                            </extends>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                    <name>
                                                        <name>SetMultimap</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>K</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>build</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>Multimaps</name>.
                                                                    <name>newSetMultimap</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>MultimapBuilderWithKeys</name>
                                                                                .<name>this</name>.
                                                                                <name>
                                                                                    <name/>
                                                                                </name>
                                                                            </name>
                                                                            &lt;
                                                                            <name>K</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr><name>V</name>&gt;
                                                                            <call>
                                                                                <name>createMap</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>
                                                                                    <name>HashSetSupplier</name>
                                                                                    <argument_list>&lt;
                                                                                        <argument>
                                                                                            <name>V</name>
                                                                                        </argument>
                                                                                        &gt;
                                                                                    </argument_list>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>expectedValuesPerKey
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Uses a {@link LinkedHashSet} to store value collections.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>
                                <name>SetMultimapBuilder</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K0</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Object</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>linkedHashSetValues</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>linkedHashSetValues</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>DEFAULT_EXPECTED_VALUES_PER_KEY</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Uses a {@link LinkedHashSet} to store value collections, initialized to expect the specified
                        * number of values per key.
                        *
                        * @throws IllegalArgumentException if {@code expectedValuesPerKey &lt; 0}
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>
                                <name>SetMultimapBuilder</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K0</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Object</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>linkedHashSetValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>int</name>
                                    </type>
                                    <name>expectedValuesPerKey</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNonnegative</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>expectedValuesPerKey</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"expectedValuesPerKey"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>SetMultimapBuilder</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K0</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>Object</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>public</specifier>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>K</name>
                                                            <extends>extends
                                                                <name>K0</name>
                                                            </extends>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                    <name>
                                                        <name>SetMultimap</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>K</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>build</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>Multimaps</name>.
                                                                    <name>newSetMultimap</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>MultimapBuilderWithKeys</name>
                                                                                .<name>this</name>.
                                                                                <name>
                                                                                    <name/>
                                                                                </name>
                                                                            </name>
                                                                            &lt;
                                                                            <name>K</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr><name>V</name>&gt;
                                                                            <call>
                                                                                <name>createMap</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>
                                                                                    <name>LinkedHashSetSupplier</name>
                                                                                    <argument_list>&lt;
                                                                                        <argument>
                                                                                            <name>V</name>
                                                                                        </argument>
                                                                                        &gt;
                                                                                    </argument_list>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>expectedValuesPerKey
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Uses a naturally-ordered {@link TreeSet} to store value collections.
                        */
                    </comment>
                    <function>
                        <type>
                            <annotation>@
                                <name>SuppressWarnings</name>
                                <argument_list>("rawtypes")</argument_list>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>SortedSetMultimapBuilder</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K0</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Comparable</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>treeSetValues</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>treeSetValues</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Ordering</name>.
                                                            <name>natural</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Uses a {@link TreeSet} ordered by the specified comparator to store value collections.
                        *
                        * &lt;p&gt;Multimaps generated by the resulting builder will not be serializable if
                        * {@code comparator} is not serializable.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <argument_list>&lt;
                                <argument>
                                    <name>V0</name>
                                </argument>
                                &gt;
                            </argument_list>
                            <name>
                                <name>SortedSetMultimapBuilder</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K0</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V0</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>treeSetValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>Comparator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>V0</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>comparator</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>comparator</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"comparator"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>SortedSetMultimapBuilder</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K0</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V0</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>public</specifier>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>K</name>
                                                            <extends>extends
                                                                <name>K0</name>
                                                            </extends>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                            <extends>extends
                                                                <name>V0</name>
                                                            </extends>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                    <name>
                                                        <name>SortedSetMultimap</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>K</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>build</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>Multimaps</name>.
                                                                    <name>newSortedSetMultimap</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>MultimapBuilderWithKeys</name>
                                                                                .<name>this</name>.
                                                                                <name>
                                                                                    <name/>
                                                                                </name>
                                                                            </name>
                                                                            &lt;
                                                                            <name>K</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr><name>V</name>&gt;
                                                                            <call>
                                                                                <name>createMap</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>
                                                                                    <name>TreeSetSupplier</name>
                                                                                    <argument_list>&lt;
                                                                                        <argument>
                                                                                            <name>V</name>
                                                                                        </argument>
                                                                                        &gt;
                                                                                    </argument_list>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>comparator</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Uses an {@link EnumSet} to store value collections.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <argument_list>&lt;
                                <argument>
                                    <name>V0</name>
                                    <extends>extends
                                        <name>
                                            <name>Enum</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>V0</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </extends>
                                </argument>
                                &gt;
                            </argument_list>
                            <name>
                                <name>SetMultimapBuilder</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K0</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V0</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>enumSetValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>Class</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>V0</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>valueClass</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>valueClass</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"valueClass"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>SetMultimapBuilder</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K0</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V0</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>public</specifier>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>K</name>
                                                            <extends>extends
                                                                <name>K0</name>
                                                            </extends>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                            <extends>extends
                                                                <name>V0</name>
                                                            </extends>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                    <name>
                                                        <name>SetMultimap</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>K</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>build</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <comment type="line">// V must actually be V0, since enums are
                                                        effectively final
                                                    </comment>
                                                    <comment type="line">// (their subclasses are inaccessible)
                                                    </comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <annotation>@
                                                                    <name>SuppressWarnings</name>
                                                                    <argument_list>({"unchecked", "rawtypes"})
                                                                    </argument_list>
                                                                </annotation>
                                                                <name>
                                                                    <name>Supplier</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>
                                                                                <name>Set</name>
                                                                                <argument_list>&lt;
                                                                                    <argument>
                                                                                        <name>V</name>
                                                                                    </argument>
                                                                                    &gt;
                                                                                </argument_list>
                                                                            </name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </type>
                                                            <name>factory</name> =
                                                            <init>
                                                                <expr>(<name>Supplier</name>) new
                                                                    <call>
                                                                        <name>
                                                                            <name>EnumSetSupplier</name>
                                                                            <argument_list>&lt;
                                                                                <argument>
                                                                                    <name>V0</name>
                                                                                </argument>
                                                                                &gt;
                                                                            </argument_list>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>valueClass</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>Multimaps</name>.
                                                                    <name>newSetMultimap</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>MultimapBuilderWithKeys</name>
                                                                                .<name>this</name>.
                                                                                <name>
                                                                                    <name/>
                                                                                </name>
                                                                            </name>
                                                                            &lt;
                                                                            <name>K</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr><name>V</name>&gt;
                                                                            <call>
                                                                                <name>createMap</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>factory</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * Returns a new, empty {@code Multimap} with the specified implementation.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>K</name>
                            <extends>extends
                                <name>K0</name>
                            </extends>
                        </argument>
                        ,
                        <argument>
                            <name>V</name>
                            <extends>extends
                                <name>V0</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>Multimap</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>build</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a {@code Multimap} with the specified implementation, initialized with the entries of
                * {@code multimap}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>K</name>
                            <extends>extends
                                <name>K0</name>
                            </extends>
                        </argument>
                        ,
                        <argument>
                            <name>V</name>
                            <extends>extends
                                <name>V0</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>Multimap</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>build</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Multimap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                            <extends>extends
                                                <name>K</name>
                                            </extends>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>?</name>
                                            <extends>extends
                                                <name>V</name>
                                            </extends>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>multimap</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Multimap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>K</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>build</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>result</name>.
                                    <name>putAll</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>multimap</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A specialization of {@link MultimapBuilder} that generates {@link ListMultimap} instances.
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>abstract</specifier>
                <specifier>static</specifier> class
                <name>
                    <name>ListMultimapBuilder</name>
                    <argument_list>&lt;
                        <argument>
                            <name>K0</name>
                        </argument>
                        ,
                        <argument>
                            <name>V0</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <extends>extends
                        <name>
                            <name>MultimapBuilder</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>K0</name>
                                </argument>
                                ,
                                <argument>
                                    <name>V0</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <constructor>
                        <name>ListMultimapBuilder</name>
                        <parameter_list>()</parameter_list>
                        <block>{}</block>
                    </constructor>

                    <function_decl>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <specifier>abstract</specifier>
                            <argument_list>&lt;
                                <argument>
                                    <name>K</name>
                                    <extends>extends
                                        <name>K0</name>
                                    </extends>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                    <extends>extends
                                        <name>V0</name>
                                    </extends>
                                </argument>
                                &gt;
                            </argument_list>
                            <name>
                                <name>ListMultimap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>build</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <argument_list>&lt;
                                <argument>
                                    <name>K</name>
                                    <extends>extends
                                        <name>K0</name>
                                    </extends>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                    <extends>extends
                                        <name>V0</name>
                                    </extends>
                                </argument>
                                &gt;
                            </argument_list>
                            <name>
                                <name>ListMultimap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>build</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Multimap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>?</name>
                                                    <extends>extends
                                                        <name>K</name>
                                                    </extends>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>?</name>
                                                    <extends>extends
                                                        <name>V</name>
                                                    </extends>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>multimap</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>(
                                    <name>
                                        <name>ListMultimap</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>K</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                    )
                                    <call>
                                        <name><name>super</name>.
                                            <name>build</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>multimap</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * A specialization of {@link MultimapBuilder} that generates {@link SetMultimap} instances.
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>abstract</specifier>
                <specifier>static</specifier> class
                <name>
                    <name>SetMultimapBuilder</name>
                    <argument_list>&lt;
                        <argument>
                            <name>K0</name>
                        </argument>
                        ,
                        <argument>
                            <name>V0</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <extends>extends
                        <name>
                            <name>MultimapBuilder</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>K0</name>
                                </argument>
                                ,
                                <argument>
                                    <name>V0</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <constructor>
                        <name>SetMultimapBuilder</name>
                        <parameter_list>()</parameter_list>
                        <block>{}</block>
                    </constructor>

                    <function_decl>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <specifier>abstract</specifier>
                            <argument_list>&lt;
                                <argument>
                                    <name>K</name>
                                    <extends>extends
                                        <name>K0</name>
                                    </extends>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                    <extends>extends
                                        <name>V0</name>
                                    </extends>
                                </argument>
                                &gt;
                            </argument_list>
                            <name>
                                <name>SetMultimap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>build</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <argument_list>&lt;
                                <argument>
                                    <name>K</name>
                                    <extends>extends
                                        <name>K0</name>
                                    </extends>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                    <extends>extends
                                        <name>V0</name>
                                    </extends>
                                </argument>
                                &gt;
                            </argument_list>
                            <name>
                                <name>SetMultimap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>build</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Multimap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>?</name>
                                                    <extends>extends
                                                        <name>K</name>
                                                    </extends>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>?</name>
                                                    <extends>extends
                                                        <name>V</name>
                                                    </extends>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>multimap</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>(
                                    <name>
                                        <name>SetMultimap</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>K</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                    )
                                    <call>
                                        <name><name>super</name>.
                                            <name>build</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>multimap</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * A specialization of {@link MultimapBuilder} that generates {@link SortedSetMultimap} instances.
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>abstract</specifier>
                <specifier>static</specifier> class
                <name>
                    <name>SortedSetMultimapBuilder</name>
                    <argument_list>&lt;
                        <argument>
                            <name>K0</name>
                        </argument>
                        ,
                        <argument>
                            <name>V0</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <extends>extends
                        <name>
                            <name>SetMultimapBuilder</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>K0</name>
                                </argument>
                                ,
                                <argument>
                                    <name>V0</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <constructor>
                        <name>SortedSetMultimapBuilder</name>
                        <parameter_list>()</parameter_list>
                        <block>{}</block>
                    </constructor>

                    <function_decl>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <specifier>abstract</specifier>
                            <argument_list>&lt;
                                <argument>
                                    <name>K</name>
                                    <extends>extends
                                        <name>K0</name>
                                    </extends>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                    <extends>extends
                                        <name>V0</name>
                                    </extends>
                                </argument>
                                &gt;
                            </argument_list>
                            <name>
                                <name>SortedSetMultimap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>build</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <argument_list>&lt;
                                <argument>
                                    <name>K</name>
                                    <extends>extends
                                        <name>K0</name>
                                    </extends>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                    <extends>extends
                                        <name>V0</name>
                                    </extends>
                                </argument>
                                &gt;
                            </argument_list>
                            <name>
                                <name>SortedSetMultimap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>build</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Multimap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>?</name>
                                                    <extends>extends
                                                        <name>K</name>
                                                    </extends>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>?</name>
                                                    <extends>extends
                                                        <name>V</name>
                                                    </extends>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>multimap</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>(
                                    <name>
                                        <name>SortedSetMultimap</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>K</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                    )
                                    <call>
                                        <name><name>super</name>.
                                            <name>build</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>multimap</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>
            }
        </block>
    </class>
</unit>
