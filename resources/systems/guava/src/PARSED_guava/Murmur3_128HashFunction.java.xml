<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\hash\Murmur3_128HashFunction.java">
    <comment type="block">/*
        * Copyright (C) 2011 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
        * in compliance with the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software distributed under the License
        * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
        * or implied. See the License for the specific language governing permissions and limitations under
        * the License.
        */
    </comment>

    <comment type="block">/*
        * MurmurHash3 was written by Austin Appleby, and is placed in the public
        * domain. The author hereby disclaims copyright to this source code.
        */
    </comment>

    <comment type="block">/*
        * Source:
        * http://code.google.com/p/smhasher/source/browse/trunk/MurmurHash3.cpp
        * (Modified to adapt to Guava coding conventions and to use the HashFunction interface)
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>hash</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>primitives</name>.<name>
            UnsignedBytes</name>.
            <name>toInt</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>nio</name>.
            <name>ByteBuffer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>nio</name>.
            <name>ByteOrder</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>annotation</name>.
            <name>Nullable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * See http://smhasher.googlecode.com/svn/trunk/MurmurHash3.cpp
        * MurmurHash3_x64_128
        *
        * @author Austin Appleby
        * @author Dimitris Andreou
        */
    </comment>
    <class>
        <specifier>final</specifier>
        class <name>Murmur3_128HashFunction</name>
        <super>
            <extends>extends
                <name>AbstractStreamingHashFunction</name>
            </extends>
            <implements>implements
                <name>Serializable</name>
            </implements>
        </super>
        <block>{
            <comment type="line">// TODO(user): when the shortcuts are implemented, update BloomFilterStrategies
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>seed</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <name>Murmur3_128HashFunction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>seed</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>seed</name>
                            </name>
                            =
                            <name>seed</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>bits</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>128</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>Hasher</name>
                </type>
                <name>newHasher</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>Murmur3_128Hasher</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>seed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>"Hashing.murmur3_128(" + <name>seed</name> + ")"
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>object</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>object</name>
                                <name>instanceof</name>
                                <name>Murmur3_128HashFunction</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Murmur3_128HashFunction</name>
                                        </type>
                                        <name>other</name> =
                                        <init>
                                            <expr>(<name>Murmur3_128HashFunction</name>)
                                                <name>object</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <return>return
                                    <expr>
                                        <name>seed</name>
                                        ==
                                        <name><name>other</name>.
                                            <name>seed</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getClass</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>hashCode</name>
                                <argument_list>()</argument_list>
                            </call>
                            ^
                            <name>seed</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>Murmur3_128Hasher</name>
                <super>
                    <extends>extends
                        <name>AbstractStreamingHasher</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>CHUNK_SIZE</name> =
                            <init>
                                <expr>16</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>long</name>
                            </type>
                            <name>C1</name> =
                            <init>
                                <expr>0x87c37b91114253d5L</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>long</name>
                            </type>
                            <name>C2</name> =
                            <init>
                                <expr>0x4cf5ad432745937fL</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>long</name>
                            </type>
                            <name>h1</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>long</name>
                            </type>
                            <name>h2</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>length</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>Murmur3_128Hasher</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>seed</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>CHUNK_SIZE</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>h1</name>
                                    </name>
                                    =
                                    <name>seed</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>h2</name>
                                    </name>
                                    =
                                    <name>seed</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>length</name>
                                    </name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>protected</specifier>
                            <name>void</name>
                        </type>
                        <name>process</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ByteBuffer</name>
                                    </type>
                                    <name>bb</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>k1</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>bb</name>.
                                                    <name>getLong</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>k2</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>bb</name>.
                                                    <name>getLong</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>bmix64</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>k1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>k2</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>length</name>
                                    +=
                                    <name>CHUNK_SIZE</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>bmix64</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>k1</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>k2</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>h1</name>
                                    ^=
                                    <call>
                                        <name>mixK1</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>k1</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name>h1</name>
                                    =
                                    <call>
                                        <name><name>Long</name>.
                                            <name>rotateLeft</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>h1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>27</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>h1</name>
                                    +=
                                    <name>h2</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>h1</name>
                                    = <name>h1</name> * 5 + 0x52dce729
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name>h2</name>
                                    ^=
                                    <call>
                                        <name>mixK2</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>k2</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name>h2</name>
                                    =
                                    <call>
                                        <name><name>Long</name>.
                                            <name>rotateLeft</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>h2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>31</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>h2</name>
                                    +=
                                    <name>h1</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>h2</name>
                                    = <name>h2</name> * 5 + 0x38495ab5
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>protected</specifier>
                            <name>void</name>
                        </type>
                        <name>processRemaining</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ByteBuffer</name>
                                    </type>
                                    <name>bb</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>k1</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>k2</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>length</name>
                                    +=
                                    <call>
                                        <name><name>bb</name>.
                                            <name>remaining</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <switch>switch
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>bb</name>.
                                                <name>remaining</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <case>case <expr>15</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k2</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>14</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 48
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>14</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k2</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>13</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 40
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>13</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k2</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>12</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 32
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>12</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k2</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>11</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 24
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>11</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k2</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>10</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 16
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>10</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k2</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>9</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 8
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>9</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k2</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>8</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>8</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k1</name>
                                                ^=
                                                <call>
                                                    <name><name>bb</name>.
                                                        <name>getLong</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>7</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k1</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>6</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 48
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>6</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k1</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>5</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 40
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>5</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k1</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>4</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 32
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>4</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k1</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>3</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 24
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>3</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k1</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>2</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 16
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>2</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k1</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>1</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt;&lt; 8
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// fall through</comment>
                                    </case>
                                    <case>case <expr>1</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <name>k1</name>
                                                ^= (<name>long</name>)
                                                <call>
                                                    <name>toInt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>bb</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>0</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <default>default:
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>AssertionError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Should never get here."</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                    </default>
                                    }
                                </block>
                            </switch>
                            <expr_stmt>
                                <expr>
                                    <name>h1</name>
                                    ^=
                                    <call>
                                        <name>mixK1</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>k1</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>h2</name>
                                    ^=
                                    <call>
                                        <name>mixK2</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>k2</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>HashCode</name>
                        </type>
                        <name>makeHash</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>h1</name>
                                    ^=
                                    <name>length</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>h2</name>
                                    ^=
                                    <name>length</name>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name>h1</name>
                                    +=
                                    <name>h2</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>h2</name>
                                    +=
                                    <name>h1</name>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name>h1</name>
                                    =
                                    <call>
                                        <name>fmix64</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>h1</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>h2</name>
                                    =
                                    <call>
                                        <name>fmix64</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>h2</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name>h1</name>
                                    +=
                                    <name>h2</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>h2</name>
                                    +=
                                    <name>h1</name>
                                </expr>
                                ;
                            </expr_stmt>

                            <return>return
                                <expr>
                                    <call>
                                        <name><name>HashCode</name>.
                                            <name>fromBytesNoCopy</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>ByteBuffer</name>.
                                                            <name>wrap</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>byte</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>CHUNK_SIZE</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>order</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>ByteOrder</name>.
                                                                        <name>LITTLE_ENDIAN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>putLong</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>h1</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>putLong</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>h2</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>array</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <specifier>static</specifier>
                            <name>long</name>
                        </type>
                        <name>fmix64</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>k</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>k</name>
                                    ^= <name>k</name> &gt;&gt;&gt; 33
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>k</name>
                                    *= 0xff51afd7ed558ccdL
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>k</name>
                                    ^= <name>k</name> &gt;&gt;&gt; 33
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>k</name>
                                    *= 0xc4ceb9fe1a85ec53L
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>k</name>
                                    ^= <name>k</name> &gt;&gt;&gt; 33
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>k</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <specifier>static</specifier>
                            <name>long</name>
                        </type>
                        <name>mixK1</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>k1</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>k1</name>
                                    *=
                                    <name>C1</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>k1</name>
                                    =
                                    <call>
                                        <name><name>Long</name>.
                                            <name>rotateLeft</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>k1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>31</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>k1</name>
                                    *=
                                    <name>C2</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>k1</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <specifier>static</specifier>
                            <name>long</name>
                        </type>
                        <name>mixK2</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>k2</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>k2</name>
                                    *=
                                    <name>C2</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>k2</name>
                                    =
                                    <call>
                                        <name><name>Long</name>.
                                            <name>rotateLeft</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>k2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>33</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>k2</name>
                                    *=
                                    <name>C1</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>k2</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>0L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            }
        </block>
    </class>
</unit>
