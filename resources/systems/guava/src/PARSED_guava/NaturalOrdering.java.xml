<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\collect\NaturalOrdering.java">
    <comment type="block">/*
        * Copyright (C) 2007 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>collect</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkNotNull</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtCompatible</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/** An ordering that uses the natural order of the values. */</comment>
    <class>
        <annotation>@
            <name>GwtCompatible</name>
            <argument_list>(serializable = true)</argument_list>
        </annotation>
        <annotation>@
            <name>SuppressWarnings</name>
            <argument_list>("unchecked")</argument_list>
        </annotation>
        <comment type="line">// TODO(kevinb): the right way to explain this??</comment>
        <specifier>final</specifier>
        class
        <name>NaturalOrdering</name>
        <super>
            <extends>extends
                <name>
                    <name>Ordering</name>
                    <argument_list>&lt;
                        <argument>
                            <name>Comparable</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
            <implements>implements
                <name>Serializable</name>
            </implements>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>NaturalOrdering</name>
                    </type>
                    <name>INSTANCE</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>NaturalOrdering</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>compare</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Comparable</name>
                            </type>
                            <name>left</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Comparable</name>
                            </type>
                            <name>right</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>left</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// for GWT</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>right</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>left</name>.
                                    <name>compareTo</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>right</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>S</name>
                            <extends>extends
                                <name>Comparable</name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>Ordering</name>
                        <argument_list>&lt;
                            <argument>
                                <name>S</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>reverse</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name>
                                <name>Ordering</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>S</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                            )
                            <name><name>ReverseNaturalOrdering</name>.
                                <name>INSTANCE</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// preserving singleton-ness gives equals()/hashCode() for free</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Object</name>
                </type>
                <name>readResolve</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>INSTANCE</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>"Ordering.natural()"</expr>;
                    </return>
                    }
                </block>
            </function>

            <constructor>
                <specifier>private</specifier>
                <name>NaturalOrdering</name>
                <parameter_list>()</parameter_list>
                <block>{}</block>
            </constructor>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            }
        </block>
    </class>
</unit>
