<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\net\PercentEscaper.java">
    <comment type="block">/*
        * Copyright (C) 2008 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>net</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkNotNull</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>Beta</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtCompatible</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>escape</name>.
            <name>UnicodeEscaper</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A {@code UnicodeEscaper} that escapes some set of Java characters using a
        * UTF-8 based percent encoding scheme. The set of safe characters (those which
        * remain unescaped) can be specified on construction.
        *
        * &lt;p&gt;This class is primarily used for creating URI escapers in {@link
        * UrlEscapers} but can be used directly if required. While URI escapers impose
        * specific semantics on which characters are considered 'safe', this class has
        * a minimal set of restrictions.
        *
        * &lt;p&gt;When escaping a String, the following rules apply:
        * &lt;ul&gt;
        * &lt;li&gt;All specified safe characters remain unchanged.
        * &lt;li&gt;If {@code plusForSpace} was specified, the space character " " is
        * converted into a plus sign {@code "+"}.
        * &lt;li&gt;All other characters are converted into one or more bytes using UTF-8
        * encoding and each byte is then represented by the 3-character string
        * "%XX", where "XX" is the two-digit, uppercase, hexadecimal representation
        * of the byte value.
        * &lt;/ul&gt;
        *
        * &lt;p&gt;For performance reasons the only currently supported character encoding of
        * this class is UTF-8.
        *
        * &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This escaper produces uppercase hexadecimal sequences. From
        * &lt;a href="http://www.ietf.org/rfc/rfc3986.txt"&gt;RFC 3986&lt;/a&gt;:&lt;br&gt;
        * &lt;i&gt;"URI producers and normalizers should use uppercase hexadecimal digits
        * for all percent-encodings."&lt;/i&gt;
        *
        * @author David Beaumont
        * @since 15.0
        */
    </comment>
    <class>
        <annotation>@
            <name>Beta</name>
        </annotation>
        <annotation>@
            <name>GwtCompatible</name>
        </annotation>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>PercentEscaper</name>
        <super>
            <extends>extends
                <name>UnicodeEscaper</name>
            </extends>
        </super>
        <block>{

            <comment type="line">// In some escapers spaces are escaped to '+'</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>char</name>
                        <index>[]</index>
                    </type>
                    <name>PLUS_SIGN</name> =
                    <init>
                        <expr>
                            <block>{ <expr>'+'</expr> }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Percent escapers output upper case hex digits (uri escapers require this).</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>char</name>
                        <index>[]</index>
                    </type>
                    <name>UPPER_HEX_DIGITS</name> =
                    <init>
                        <expr>"0123456789ABCDEF".
                            <call>
                                <name>toCharArray</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * If true we should convert space to the {@code +} character.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>plusForSpace</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * An array of flags where for any {@code char c} if {@code safeOctets[c]} is
                * true then {@code c} should remain unmodified in the output. If
                * {@code c &gt; safeOctets.length} then it should be escaped.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                        <index>[]</index>
                    </type>
                    <name>safeOctets</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Constructs a percent escaper with the specified safe characters and
                * optional handling of the space character.
                *
                * &lt;p&gt;Not that it is allowed, but not necessarily desirable to specify {@code %}
                * as a safe character. This has the effect of creating an escaper which has no
                * well defined inverse but it can be useful when escaping additional characters.
                *
                * @param safeChars a non null string specifying additional safe characters
                * for this escaper (the ranges 0..9, a..z and A..Z are always safe and
                * should not be specified here)
                * @param plusForSpace true if ASCII space should be escaped to {@code +}
                * rather than {@code %20}
                * @throws IllegalArgumentException if any of the parameters were invalid
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>PercentEscaper</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>safeChars</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>plusForSpace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// TODO(user): Switch to static factory methods for creation now that class is
                        final.
                    </comment>
                    <comment type="line">// TODO(user): Support escapers where alphanumeric chars are not safe.
                    </comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>safeChars</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// eager for GWT.</comment>
                    <comment type="line">// Avoid any misunderstandings about the behavior of this escaper</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>safeChars</name>.
                                        <name>matches</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>".*[0-9A-Za-z].*"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Alphanumeric characters are always 'safe' and should not be "
                                                        +
                                                        "explicitly specified"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>safeChars</name>
                            += "abcdefghijklmnopqrstuvwxyz" +
                            "ABCDEFGHIJKLMNOPQRSTUVWXYZ" +
                            "0123456789"
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// Avoid ambiguous parameters. Safe characters are never modified so if
                    </comment>
                    <comment type="line">// space is a safe character then setting plusForSpace is meaningless.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>plusForSpace</name>
                                &amp;&amp;
                                <call>
                                    <name><name>safeChars</name>.
                                        <name>contains</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>" "</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"plusForSpace cannot be specified when space is a 'safe'
                                                        character"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>plusForSpace</name>
                            </name>
                            =
                            <name>plusForSpace</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>safeOctets</name>
                            </name>
                            =
                            <call>
                                <name>createSafeOctets</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>safeChars</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a boolean array with entries corresponding to the character values
                * specified in safeChars set to true. The array is as small as is required to
                * hold the given character information.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                    <index>[]</index>
                </type>
                <name>createSafeOctets</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>safeChars</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>maxChar</name> =
                            <init>
                                <expr>-1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                                <index>[]</index>
                            </type>
                            <name>safeCharArray</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>safeChars</name>.
                                            <name>toCharArray</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>char</name>
                                </type>
                                <name>c</name> :
                                <range>
                                    <expr>
                                        <name>safeCharArray</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>maxChar</name>
                                    =
                                    <call>
                                        <name><name>Math</name>.
                                            <name>max</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>c</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>maxChar</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                                <index>[]</index>
                            </type>
                            <name>octets</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>boolean</name>
                                        <index>[
                                            <expr>
                                                <name>maxChar</name>
                                                + 1
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>char</name>
                                </type>
                                <name>c</name> :
                                <range>
                                    <expr>
                                        <name>safeCharArray</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>octets</name>
                                        <index>[
                                            <expr>
                                                <name>c</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = true
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>octets</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="block">/*
                * Overridden for performance. For unescaped strings this improved the
                * performance of the uri escaper from ~760ns to ~400ns as measured by
                * {@link CharEscapersBenchmark}.
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>nextEscapeIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CharSequence</name>
                            </type>
                            <name>csq</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>csq</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (<init>;</init>
                        <condition>
                            <expr>
                                <name>index</name>
                                &lt;
                                <name>end</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>index</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>c</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>csq</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>index</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        &gt;=
                                        <name><name>safeOctets</name>.
                                            <name>length</name>
                                        </name>
                                        || !
                                        <name>
                                            <name>safeOctets</name>
                                            <index>[
                                                <expr>
                                                    <name>c</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <break>break;</break>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>index</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="block">/*
                * Overridden for performance. For unescaped strings this improved the
                * performance of the uri escaper from ~400ns to ~170ns as measured by
                * {@link CharEscapersBenchmark}.
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>escape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>s</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>slen</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>s</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>index</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>index</name>
                                &lt;
                                <name>slen</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>index</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>c</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>s</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>index</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        &gt;=
                                        <name><name>safeOctets</name>.
                                            <name>length</name>
                                        </name>
                                        || !
                                        <name>
                                            <name>safeOctets</name>
                                            <index>[
                                                <expr>
                                                    <name>c</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name>escapeSlow</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>s</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>index</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>s</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Escapes the given Unicode code point in UTF-8.
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>protected</specifier>
                    <name>char</name>
                    <index>[]</index>
                </type>
                <name>escape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>cp</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// We should never get negative values here but if we do it will throw an
                    </comment>
                    <comment type="line">// IndexOutOfBoundsException, so at least it will get spotted.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>cp</name>
                                &lt;
                                <name><name>safeOctets</name>.
                                    <name>length</name>
                                </name>
                                &amp;&amp;
                                <name>
                                    <name>safeOctets</name>
                                    <index>[
                                        <expr>
                                            <name>cp</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>cp</name>
                                        == ' ' &amp;&amp;
                                        <name>plusForSpace</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>PLUS_SIGN</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>cp</name>
                                                &lt;= 0x7F
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// Single byte UTF-8 characters</comment>
                                                <comment type="line">// Start with "%--" and fill in the blanks
                                                </comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>char</name>
                                                            <index>[]</index>
                                                        </type>
                                                        <name>dest</name> =
                                                        <init>
                                                            <expr>new
                                                                <name>
                                                                    <name>char</name>
                                                                    <index>[<expr>3</expr>]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>dest</name>
                                                            <index>[<expr>0</expr>]
                                                            </index>
                                                        </name>
                                                        = '%'
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>dest</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>
                                                            <name>UPPER_HEX_DIGITS</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>cp</name>
                                                                    &amp; 0xF
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>dest</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>
                                                            <name>UPPER_HEX_DIGITS</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>cp</name>
                                                                    &gt;&gt;&gt; 4
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <return>return
                                                    <expr>
                                                        <name>dest</name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>cp</name>
                                                        &lt;= 0x7ff
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// Two byte UTF-8 characters [cp &gt;= 0x80
                                                            &amp;&amp; cp &lt;= 0x7ff]
                                                        </comment>
                                                        <comment type="line">// Start with "%--%--" and fill in the
                                                            blanks
                                                        </comment>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>char</name>
                                                                    <index>[]</index>
                                                                </type>
                                                                <name>dest</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>char</name>
                                                                            <index>[<expr>6</expr>]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>dest</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                                = '%'
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>dest</name>
                                                                    <index>[<expr>3</expr>]
                                                                    </index>
                                                                </name>
                                                                = '%'
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>dest</name>
                                                                    <index>[<expr>5</expr>]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <name>
                                                                    <name>UPPER_HEX_DIGITS</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>cp</name>
                                                                            &amp; 0xF
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>cp</name>
                                                                &gt;&gt;&gt;= 4
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>dest</name>
                                                                    <index>[<expr>4</expr>]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <name>
                                                                    <name>UPPER_HEX_DIGITS</name>
                                                                    <index>[
                                                                        <expr>0x8 | (<name>cp</name> &amp; 0x3)
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>cp</name>
                                                                &gt;&gt;&gt;= 2
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>dest</name>
                                                                    <index>[<expr>2</expr>]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <name>
                                                                    <name>UPPER_HEX_DIGITS</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>cp</name>
                                                                            &amp; 0xF
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>cp</name>
                                                                &gt;&gt;&gt;= 4
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>dest</name>
                                                                    <index>[<expr>1</expr>]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <name>
                                                                    <name>UPPER_HEX_DIGITS</name>
                                                                    <index>[
                                                                        <expr>0xC |
                                                                            <name>cp</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <return>return
                                                            <expr>
                                                                <name>dest</name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>cp</name>
                                                                &lt;= 0xffff
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// Three byte UTF-8 characters [cp
                                                                    &gt;= 0x800 &amp;&amp; cp &lt;= 0xffff]
                                                                </comment>
                                                                <comment type="line">// Start with "%E-%--%--" and fill
                                                                    in the blanks
                                                                </comment>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>char</name>
                                                                            <index>[]</index>
                                                                        </type>
                                                                        <name>dest</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>char</name>
                                                                                    <index>[<expr>9</expr>]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>dest</name>
                                                                            <index>[<expr>0</expr>]
                                                                            </index>
                                                                        </name>
                                                                        = '%'
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>dest</name>
                                                                            <index>[<expr>1</expr>]
                                                                            </index>
                                                                        </name>
                                                                        = 'E'
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>dest</name>
                                                                            <index>[<expr>3</expr>]
                                                                            </index>
                                                                        </name>
                                                                        = '%'
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>dest</name>
                                                                            <index>[<expr>6</expr>]
                                                                            </index>
                                                                        </name>
                                                                        = '%'
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>dest</name>
                                                                            <index>[<expr>8</expr>]
                                                                            </index>
                                                                        </name>
                                                                        =
                                                                        <name>
                                                                            <name>UPPER_HEX_DIGITS</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>cp</name>
                                                                                    &amp; 0xF
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>cp</name>
                                                                        &gt;&gt;&gt;= 4
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>dest</name>
                                                                            <index>[<expr>7</expr>]
                                                                            </index>
                                                                        </name>
                                                                        =
                                                                        <name>
                                                                            <name>UPPER_HEX_DIGITS</name>
                                                                            <index>[
                                                                                <expr>0x8 | (<name>cp</name> &amp; 0x3)
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>cp</name>
                                                                        &gt;&gt;&gt;= 2
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>dest</name>
                                                                            <index>[<expr>5</expr>]
                                                                            </index>
                                                                        </name>
                                                                        =
                                                                        <name>
                                                                            <name>UPPER_HEX_DIGITS</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>cp</name>
                                                                                    &amp; 0xF
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>cp</name>
                                                                        &gt;&gt;&gt;= 4
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>dest</name>
                                                                            <index>[<expr>4</expr>]
                                                                            </index>
                                                                        </name>
                                                                        =
                                                                        <name>
                                                                            <name>UPPER_HEX_DIGITS</name>
                                                                            <index>[
                                                                                <expr>0x8 | (<name>cp</name> &amp; 0x3)
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>cp</name>
                                                                        &gt;&gt;&gt;= 2
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>dest</name>
                                                                            <index>[<expr>2</expr>]
                                                                            </index>
                                                                        </name>
                                                                        =
                                                                        <name>
                                                                            <name>UPPER_HEX_DIGITS</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>cp</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <return>return
                                                                    <expr>
                                                                        <name>dest</name>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>cp</name>
                                                                        &lt;= 0x10ffff
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>char</name>
                                                                                    <index>[]</index>
                                                                                </type>
                                                                                <name>dest</name> =
                                                                                <init>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>char</name>
                                                                                            <index>[<expr>12</expr>]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <comment type="line">// Four byte UTF-8
                                                                            characters [cp &gt;= 0xffff &amp;&amp; cp
                                                                            &lt;= 0x10ffff]
                                                                        </comment>
                                                                        <comment type="line">// Start with
                                                                            "%F-%--%--%--" and fill in the blanks
                                                                        </comment>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>0</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                = '%'
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>1</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                = 'F'
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>3</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                = '%'
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>6</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                = '%'
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>9</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                = '%'
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>11</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                =
                                                                                <name>
                                                                                    <name>UPPER_HEX_DIGITS</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>cp</name>
                                                                                            &amp; 0xF
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>cp</name>
                                                                                &gt;&gt;&gt;= 4
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>10</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                =
                                                                                <name>
                                                                                    <name>UPPER_HEX_DIGITS</name>
                                                                                    <index>[
                                                                                        <expr>0x8 | (<name>cp</name> &amp;
                                                                                            0x3)
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>cp</name>
                                                                                &gt;&gt;&gt;= 2
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>8</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                =
                                                                                <name>
                                                                                    <name>UPPER_HEX_DIGITS</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>cp</name>
                                                                                            &amp; 0xF
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>cp</name>
                                                                                &gt;&gt;&gt;= 4
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>7</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                =
                                                                                <name>
                                                                                    <name>UPPER_HEX_DIGITS</name>
                                                                                    <index>[
                                                                                        <expr>0x8 | (<name>cp</name> &amp;
                                                                                            0x3)
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>cp</name>
                                                                                &gt;&gt;&gt;= 2
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>5</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                =
                                                                                <name>
                                                                                    <name>UPPER_HEX_DIGITS</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>cp</name>
                                                                                            &amp; 0xF
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>cp</name>
                                                                                &gt;&gt;&gt;= 4
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>4</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                =
                                                                                <name>
                                                                                    <name>UPPER_HEX_DIGITS</name>
                                                                                    <index>[
                                                                                        <expr>0x8 | (<name>cp</name> &amp;
                                                                                            0x3)
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>cp</name>
                                                                                &gt;&gt;&gt;= 2
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>dest</name>
                                                                                    <index>[<expr>2</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                =
                                                                                <name>
                                                                                    <name>UPPER_HEX_DIGITS</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>cp</name>
                                                                                            &amp; 0x7
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <return>return
                                                                            <expr>
                                                                                <name>dest</name>
                                                                            </expr>
                                                                            ;
                                                                        </return>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <comment type="line">// If this ever happens it
                                                                            is due to bug in UnicodeEscaper, not bad
                                                                            input.
                                                                        </comment>
                                                                        <throw>throw
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>IllegalArgumentException
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"Invalid unicode
                                                                                                character value " +
                                                                                                <name>cp</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </throw>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
