<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\collect\Platform.java">
    <comment type="block">/*
        * Copyright (C) 2008 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>collect</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtCompatible</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Function</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Predicate</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.<name>Maps</name>.
            <name>EntryTransformer</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
            <name>Array</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Collections</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>NavigableMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>NavigableSet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Set</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>SortedMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>SortedSet</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Methods factored out so that they can be emulated differently in GWT.
        *
        * @author Hayward Chan
        */
    </comment>
    <class>
        <annotation>@
            <name>GwtCompatible</name>
            <argument_list>(emulated = true)</argument_list>
        </annotation>
        <specifier>final</specifier>
        class <name>Platform</name>
        <block>{
            <comment type="javadoc">/**
                * Returns a new array of the given length with the same type as a reference
                * array.
                *
                * @param reference any array of the desired type
                * @param length the length of the new array
                */
            </comment>
            <function>
                <type>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>T</name>
                    <index>[]</index>
                </type>
                <name>newArray</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>T</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>reference</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Class</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>reference</name>.
                                            <name>getClass</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getComponentType</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// the cast is safe because</comment>
                    <comment type="line">// result.getClass() == reference.getClass().getComponentType()</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>SuppressWarnings</name>
                                    <argument_list>("unchecked")</argument_list>
                                </annotation>
                                <name>T</name>
                                <index>[]</index>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>(
                                    <name>
                                        <name>T</name>
                                        <index>[]</index>
                                    </name>
                                    )
                                    <call>
                                        <name><name>Array</name>.
                                            <name>newInstance</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>type</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>length</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>E</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>Set</name>
                        <argument_list>&lt;
                            <argument>
                                <name>E</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>newSetFromMap</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>E</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Boolean</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>map</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>Collections</name>.
                                    <name>newSetFromMap</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>map</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Configures the given map maker to use weak keys, if possible; does nothing
                * otherwise (i.e., in GWT). This is sometimes acceptable, when only
                * server-side code could generate enough volume that reclamation becomes
                * important.
                */
            </comment>
            <function>
                <type>
                    <specifier>static</specifier>
                    <name>MapMaker</name>
                </type>
                <name>tryWeakKeys</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>MapMaker</name>
                            </type>
                            <name>mapMaker</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>mapMaker</name>.
                                    <name>weakKeys</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>K</name>
                        </argument>
                        ,
                        <argument>
                            <name>V1</name>
                        </argument>
                        ,
                        <argument>
                            <name>V2</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>SortedMap</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K</name>
                            </argument>
                            ,
                            <argument>
                                <name>V2</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>mapsTransformEntriesSortedMap</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>SortedMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>K</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V1</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>fromMap</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>EntryTransformer</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                            <super>super
                                                <name>K</name>
                                            </super>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>?</name>
                                            <super>super
                                                <name>V1</name>
                                            </super>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V2</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>transformer</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>fromMap</name>
                            <name>instanceof</name>
                            <name>NavigableMap</name>)
                            ?
                            <call>
                                <name><name>Maps</name>.
                                    <name>transformEntries</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name>
                                                <name>NavigableMap</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V1</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                            )
                                            <name>fromMap</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>transformer</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <call>
                                <name><name>Maps</name>.
                                    <name>transformEntriesIgnoreNavigable</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fromMap</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>transformer</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>K</name>
                        </argument>
                        ,
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>SortedMap</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>mapsAsMapSortedSet</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>SortedSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>K</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>set</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Function</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                            <super>super
                                                <name>K</name>
                                            </super>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>function</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>set</name>
                            <name>instanceof</name>
                            <name>NavigableSet</name>)
                            ?
                            <call>
                                <name><name>Maps</name>.
                                    <name>asMap</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name>
                                                <name>NavigableSet</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                            )
                                            <name>set</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>function</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <call>
                                <name><name>Maps</name>.
                                    <name>asMapSortedIgnoreNavigable</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>set</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>function</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>E</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>SortedSet</name>
                        <argument_list>&lt;
                            <argument>
                                <name>E</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>setsFilterSortedSet</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>SortedSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>E</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>set</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Predicate</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                            <super>super
                                                <name>E</name>
                                            </super>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>predicate</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>set</name>
                            <name>instanceof</name>
                            <name>NavigableSet</name>)
                            ?
                            <call>
                                <name><name>Sets</name>.
                                    <name>filter</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name>
                                                <name>NavigableSet</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>E</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                            )
                                            <name>set</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>predicate</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <call>
                                <name><name>Sets</name>.
                                    <name>filterSortedIgnoreNavigable</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>set</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>predicate</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>K</name>
                        </argument>
                        ,
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>SortedMap</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>mapsFilterSortedMap</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>SortedMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>K</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>map</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Predicate</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                            <super>super <name>Map</name>.
                                                <name>
                                                    <name>Entry</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>K</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </super>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>predicate</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>map</name>
                            <name>instanceof</name>
                            <name>NavigableMap</name>)
                            ?
                            <call>
                                <name><name>Maps</name>.
                                    <name>filterEntries</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name>
                                                <name>NavigableMap</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                            )
                                            <name>map</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>predicate</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <call>
                                <name><name>Maps</name>.
                                    <name>filterSortedIgnoreNavigable</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>map</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>predicate</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <constructor>
                <specifier>private</specifier>
                <name>Platform</name>
                <parameter_list>()</parameter_list>
                <block>{}</block>
            </constructor>
            }
        </block>
    </class>
</unit>
