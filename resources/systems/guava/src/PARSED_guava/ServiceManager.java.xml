<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\util\concurrent\ServiceManager.java">
    <comment type="block">/*
        * Copyright (C) 2012 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>util</name>.
            <name>concurrent</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkArgument</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkNotNull</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkState</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Predicates</name>.
            <name>equalTo</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Predicates</name>.
            <name>in</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Predicates</name>.
            <name>instanceOf</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Predicates</name>.
            <name>not</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>util</name>.<name>concurrent</name>.<name>
            MoreExecutors</name>.
            <name>directExecutor</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>util</name>.<name>concurrent</name>.<name>
            Service</name>.<name>State</name>.
            <name>FAILED</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>util</name>.<name>concurrent</name>.<name>
            Service</name>.<name>State</name>.
            <name>NEW</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>util</name>.<name>concurrent</name>.<name>
            Service</name>.<name>State</name>.
            <name>RUNNING</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>util</name>.<name>concurrent</name>.<name>
            Service</name>.<name>State</name>.
            <name>STARTING</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>util</name>.<name>concurrent</name>.<name>
            Service</name>.<name>State</name>.
            <name>STOPPING</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>util</name>.<name>concurrent</name>.<name>
            Service</name>.<name>State</name>.
            <name>TERMINATED</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>java</name>.<name>util</name>.<name>concurrent</name>.<name>TimeUnit</name>.
            <name>MILLISECONDS</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>Beta</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Function</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>MoreObjects</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Stopwatch</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>Collections2</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>ImmutableCollection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>ImmutableList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>ImmutableMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>ImmutableMultimap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>ImmutableSet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>ImmutableSetMultimap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>Lists</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>Maps</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>MultimapBuilder</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>Multimaps</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>Multiset</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>Ordering</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.
            <name>SetMultimap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>util</name>.<name>concurrent</name>.<name>
            ListenerCallQueue</name>.
            <name>Callback</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>util</name>.<name>concurrent</name>.<name>
            Service</name>.
            <name>State</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>lang</name>.<name>ref</name>.
            <name>WeakReference</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>ArrayList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Collections</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>EnumSet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>Map</name>.
            <name>Entry</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>concurrent</name>.
            <name>Executor</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>concurrent</name>.
            <name>TimeUnit</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>concurrent</name>.
            <name>TimeoutException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>logging</name>.
            <name>Level</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>logging</name>.
            <name>Logger</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>annotation</name>.<name>concurrent</name>.
            <name>GuardedBy</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A manager for monitoring and controlling a set of {@linkplain Service services}. This class
        * provides methods for {@linkplain #startAsync() starting}, {@linkplain #stopAsync() stopping} and
        * {@linkplain #servicesByState inspecting} a collection of {@linkplain Service services}.
        * Additionally, users can monitor state transitions with the {@linkplain Listener listener}
        * mechanism.
        *
        * &lt;p&gt;While it is recommended that service lifecycles be managed via this class, state transitions
        * initiated via other mechanisms do not impact the correctness of its methods. For example, if the
        * services are started by some mechanism besides {@link #startAsync}, the listeners will be invoked
        * when appropriate and {@link #awaitHealthy} will still work as expected.
        *
        * &lt;p&gt;Here is a simple example of how to use a {@code ServiceManager} to start a server.
        * &lt;pre&gt; {@code
        * class Server {
        * public static void main(String[] args) {
        * Set&lt;Service&gt; services = ...;
        * ServiceManager manager = new ServiceManager(services);
        * manager.addListener(new Listener() {
        * public void stopped() {}
        * public void healthy() {
        * // Services have been initialized and are healthy, start accepting requests...
        * }
        * public void failure(Service service) {
        * // Something failed, at this point we could log it, notify a load balancer, or take
        * // some other action. For now we will just exit.
        * System.exit(1);
        * }
        * },
        * MoreExecutors.directExecutor());
        *
        * Runtime.getRuntime().addShutdownHook(new Thread() {
        * public void run() {
        * // Give the services 5 seconds to stop to ensure that we are responsive to shutdown
        * // requests.
        * try {
        * manager.stopAsync().awaitStopped(5, TimeUnit.SECONDS);
        * } catch (TimeoutException timeout) {
        * // stopping timed out
        * }
        * }
        * });
        * manager.startAsync(); // start all the services asynchronously
        * }
        * }}&lt;/pre&gt;
        *
        * &lt;p&gt;This class uses the ServiceManager's methods to start all of its services, to respond to
        * service failure and to ensure that when the JVM is shutting down all the services are stopped.
        *
        * @author Luke Sandberg
        * @since 14.0
        */
    </comment>
    <class>
        <annotation>@
            <name>Beta</name>
        </annotation>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>ServiceManager</name>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Logger</name>
                    </type>
                    <name>logger</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>Logger</name>.
                                    <name>getLogger</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>ServiceManager</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class.
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>Callback</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>Listener</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>HEALTHY_CALLBACK</name> =
                    <init>
                        <expr>new
                            <class>
                                <super>
                                    <name>
                                        <name>Callback</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>Listener</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </super>
                                <argument_list>(
                                    <argument>
                                        <expr>"healthy()"</expr>
                                    </argument>
                                    )
                                </argument_list>
                                <block>{
                                    <function>
                                        <type>
                                            <annotation>@
                                                <name>Override</name>
                                            </annotation>
                                            <name>void</name>
                                        </type>
                                        <name>call</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>Listener</name>
                                                    </type>
                                                    <name>listener</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>listener</name>.
                                                            <name>healthy</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </function>
                                    }
                                </block>
                            </class>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>Callback</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>Listener</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>STOPPED_CALLBACK</name> =
                    <init>
                        <expr>new
                            <class>
                                <super>
                                    <name>
                                        <name>Callback</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>Listener</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </super>
                                <argument_list>(
                                    <argument>
                                        <expr>"stopped()"</expr>
                                    </argument>
                                    )
                                </argument_list>
                                <block>{
                                    <function>
                                        <type>
                                            <annotation>@
                                                <name>Override</name>
                                            </annotation>
                                            <name>void</name>
                                        </type>
                                        <name>call</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>Listener</name>
                                                    </type>
                                                    <name>listener</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>listener</name>.
                                                            <name>stopped</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </function>
                                    }
                                </block>
                            </class>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A listener for the aggregate state changes of the services that are under management. Users
                * that need to listen to more fine-grained events (such as when each particular {@linkplain
                * Service service} starts, or terminates), should attach {@linkplain Service.Listener service
                * listeners} to each individual service.
                *
                * @author Luke Sandberg
                * @since 15.0 (present as an interface in 14.0)
                */
            </comment>
            <class>
                <annotation>@
                    <name>Beta</name>
                </annotation>
                <comment type="line">// Should come out of Beta when ServiceManager does</comment>
                <specifier>public</specifier>
                <specifier>abstract</specifier>
                <specifier>static</specifier> class <name>Listener</name>
                <block>{
                    <comment type="javadoc">/**
                        * Called when the service initially becomes healthy.
                        *
                        * &lt;p&gt;This will be called at most once after all the services have entered the
                        * {@linkplain State#RUNNING running} state. If any services fail during start up or
                        * {@linkplain State#FAILED fail}/{@linkplain State#TERMINATED terminate} before all other
                        * services have started {@linkplain State#RUNNING running} then this method will not be called.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>healthy</name>
                        <parameter_list>()</parameter_list>
                        <block>{}</block>
                    </function>

                    <comment type="javadoc">/**
                        * Called when the all of the component services have reached a terminal state, either
                        * {@linkplain State#TERMINATED terminated} or {@linkplain State#FAILED failed}.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>stopped</name>
                        <parameter_list>()</parameter_list>
                        <block>{}</block>
                    </function>

                    <comment type="javadoc">/**
                        * Called when a component service has {@linkplain State#FAILED failed}.
                        *
                        * @param service The service that failed.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>failure</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Service</name>
                                    </type>
                                    <name>service</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{}</block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * An encapsulation of all of the state that is accessed by the {@linkplain ServiceListener
                * service listeners}. This is extracted into its own object so that {@link ServiceListener}
                * could be made {@code static} and its instances can be safely constructed and added in the
                * {@link ServiceManager} constructor without having to close over the partially constructed
                * {@link ServiceManager} instance (i.e. avoid leaking a pointer to {@code this}).
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>ServiceManagerState</name>
                    </type>
                    <name>state</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>ImmutableList</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>Service</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>services</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Constructs a new instance for managing the given services.
                *
                * @param services The services to manage
                *
                * @throws IllegalArgumentException if not all services are {@linkplain State#NEW new} or if there
                * are any duplicate services.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>ServiceManager</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Iterable</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                            <extends>extends
                                                <name>Service</name>
                                            </extends>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>services</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>ImmutableList</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Service</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>copy</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>ImmutableList</name>.
                                            <name>copyOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>services</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>copy</name>.
                                        <name>isEmpty</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Having no services causes the manager to behave strangely.
                                    Notably, listeners are never
                                </comment>
                                <comment type="line">// fired. To avoid this we substitute a placeholder service.
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>logger</name>.
                                                <name>log</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Level</name>.
                                                            <name>WARNING</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"ServiceManager configured with no services. Is your
                                                        application configured properly?"
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>EmptyServiceManagerWarning</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>copy</name>
                                        =
                                        <name><name>ImmutableList</name>.
                                            <name>
                                                <name/>
                                            </name>
                                        </name>
                                        &lt;<name>Service</name>&gt;
                                        <call>
                                            <name>of</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>NoOpService</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>state</name>
                            </name>
                            = new
                            <call>
                                <name>ServiceManagerState</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>copy</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>services</name>
                            </name>
                            =
                            <name>copy</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>WeakReference</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>ServiceManagerState</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>stateReference</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>
                                            <name>WeakReference</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>ServiceManagerState</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>state</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>Service</name>
                                </type>
                                <name>service</name> :
                                <range>
                                    <expr>
                                        <name>copy</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>service</name>.
                                            <name>addListener</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>ServiceListener</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>service</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>stateReference</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>directExecutor</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// We check the state after adding the listener as a way to ensure that
                                our listener was added
                            </comment>
                            <comment type="line">// to a NEW service.</comment>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkArgument</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>service</name>.
                                                            <name>state</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    ==
                                                    <name>NEW</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"Can only manage NEW services, %s"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>service</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <comment type="line">// We have installed all of our listeners and after this point any state
                        transition should be
                    </comment>
                    <comment type="line">// correct.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>state</name>.
                                    <name>markReady</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Registers a {@link Listener} to be {@linkplain Executor#execute executed} on the given
                * executor. The listener will not have previous state changes replayed, so it is
                * suggested that listeners are added before any of the managed services are
                * {@linkplain Service#startAsync started}.
                *
                * &lt;p&gt;{@code addListener} guarantees execution ordering across calls to a given listener but not
                * across calls to multiple listeners. Specifically, a given listener will have its callbacks
                * invoked in the same order as the underlying service enters those states. Additionally, at most
                * one of the listener's callbacks will execute at once. However, multiple listeners' callbacks
                * may execute concurrently, and listeners may execute in an order different from the one in which
                * they were registered.
                *
                * &lt;p&gt;RuntimeExceptions thrown by a listener will be caught and logged. Any exception thrown
                * during {@code Executor.execute} (e.g., a {@code RejectedExecutionException}) will be caught and
                * logged.
                *
                * &lt;p&gt; For fast, lightweight listeners that would be safe to execute in any thread, consider
                * calling {@link #addListener(Listener)}.
                *
                * @param listener the listener to run when the manager changes state
                * @param executor the executor in which the listeners callback methods will be run.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Listener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Executor</name>
                            </type>
                            <name>executor</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>state</name>.
                                    <name>addListener</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>listener</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>executor</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Registers a {@link Listener} to be run when this {@link ServiceManager} changes state. The
                * listener will not have previous state changes replayed, so it is suggested that listeners are
                * added before any of the managed services are {@linkplain Service#startAsync started}.
                *
                * &lt;p&gt;{@code addListener} guarantees execution ordering across calls to a given listener but not
                * across calls to multiple listeners. Specifically, a given listener will have its callbacks
                * invoked in the same order as the underlying service enters those states. Additionally, at most
                * one of the listener's callbacks will execute at once. However, multiple listeners' callbacks
                * may execute concurrently, and listeners may execute in an order different from the one in which
                * they were registered.
                *
                * &lt;p&gt;RuntimeExceptions thrown by a listener will be caught and logged.
                *
                * @param listener the listener to run when the manager changes state
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Listener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>state</name>.
                                    <name>addListener</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>listener</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>directExecutor</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Initiates service {@linkplain Service#startAsync startup} on all the services being managed.
                * It is only valid to call this method if all of the services are {@linkplain State#NEW new}.
                *
                * @return this
                * @throws IllegalStateException if any of the Services are not {@link State#NEW new} when the
                * method is called.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ServiceManager</name>
                </type>
                <name>startAsync</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>Service</name>
                                </type>
                                <name>service</name> :
                                <range>
                                    <expr>
                                        <name>services</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>State</name>
                                    </type>
                                    <name>state</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>service</name>.
                                                    <name>state</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkState</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>state</name>
                                                    ==
                                                    <name>NEW</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"Service %s is %s, cannot start it."</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>service</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>state</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>Service</name>
                                </type>
                                <name>service</name> :
                                <range>
                                    <expr>
                                        <name>services</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>state</name>.
                                                    <name>tryStartTiming</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>service</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>service</name>.
                                                    <name>startAsync</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>IllegalStateException</name>
                                            </type>
                                            <name>e</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <comment type="line">// This can happen if the service has already been started
                                            or stopped (e.g. by another
                                        </comment>
                                        <comment type="line">// service or listener). Our contract says it is safe to
                                            call this method if
                                        </comment>
                                        <comment type="line">// all services were NEW when it was called, and this has
                                            already been verified above, so we
                                        </comment>
                                        <comment type="line">// don't propagate the exception.</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>logger</name>.
                                                        <name>log</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>Level</name>.
                                                                    <name>WARNING</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"Unable to start Service " +
                                                                <name>service</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>e</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </catch>
                            </try>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Waits for the {@link ServiceManager} to become {@linkplain #isHealthy() healthy}. The manager
                * will become healthy after all the component services have reached the {@linkplain State#RUNNING
                * running} state.
                *
                * @throws IllegalStateException if the service manager reaches a state from which it cannot
                * become {@linkplain #isHealthy() healthy}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>awaitHealthy</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>state</name>.
                                    <name>awaitHealthy</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Waits for the {@link ServiceManager} to become {@linkplain #isHealthy() healthy} for no more
                * than the given time. The manager will become healthy after all the component services have
                * reached the {@linkplain State#RUNNING running} state.
                *
                * @param timeout the maximum time to wait
                * @param unit the time unit of the timeout argument
                * @throws TimeoutException if not all of the services have finished starting within the deadline
                * @throws IllegalStateException if the service manager reaches a state from which it cannot
                * become {@linkplain #isHealthy() healthy}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>awaitHealthy</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>timeout</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>TimeUnit</name>
                            </type>
                            <name>unit</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>TimeoutException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>state</name>.
                                    <name>awaitHealthy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>timeout</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>unit</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Initiates service {@linkplain Service#stopAsync shutdown} if necessary on all the services
                * being managed.
                *
                * @return this
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ServiceManager</name>
                </type>
                <name>stopAsync</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>Service</name>
                                </type>
                                <name>service</name> :
                                <range>
                                    <expr>
                                        <name>services</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>service</name>.
                                            <name>stopAsync</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Waits for the all the services to reach a terminal state. After this method returns all
                * services will either be {@linkplain Service.State#TERMINATED terminated} or {@linkplain
                * Service.State#FAILED failed}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>awaitStopped</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>state</name>.
                                    <name>awaitStopped</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Waits for the all the services to reach a terminal state for no more than the given time. After
                * this method returns all services will either be {@linkplain Service.State#TERMINATED
                * terminated} or {@linkplain Service.State#FAILED failed}.
                *
                * @param timeout the maximum time to wait
                * @param unit the time unit of the timeout argument
                * @throws TimeoutException if not all of the services have stopped within the deadline
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>awaitStopped</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>timeout</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>TimeUnit</name>
                            </type>
                            <name>unit</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>TimeoutException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>state</name>.
                                    <name>awaitStopped</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>timeout</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>unit</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if all services are currently in the {@linkplain State#RUNNING running} state.
                *
                * &lt;p&gt;Users who want more detailed information should use the {@link #servicesByState} method to
                * get detailed information about which services are not running.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isHealthy</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>Service</name>
                                </type>
                                <name>service</name> :
                                <range>
                                    <expr>
                                        <name>services</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>service</name>.
                                                <name>isRunning</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Provides a snapshot of the current state of all the services under management.
                *
                * &lt;p&gt;N.B. This snapshot is guaranteed to be consistent, i.e. the set of states returned will
                * correspond to a point in time view of the services.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>ImmutableMultimap</name>
                        <argument_list>&lt;
                            <argument>
                                <name>State</name>
                            </argument>
                            ,
                            <argument>
                                <name>Service</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>servicesByState</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>state</name>.
                                    <name>servicesByState</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the service load times. This value will only return startup times for services that
                * have finished starting.
                *
                * @return Map of services and their corresponding startup time in millis, the map entries will be
                * ordered by startup time.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>ImmutableMap</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Service</name>
                            </argument>
                            ,
                            <argument>
                                <name>Long</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>startupTimes</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>state</name>.
                                    <name>startupTimes</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>MoreObjects</name>.
                                    <name>toStringHelper</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>ServiceManager</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"services"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Collections2</name>.
                                                    <name>filter</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>services</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>not</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>instanceOf</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                NoOpService</name>.
                                                                                                <name>
                                                                                                    <name/>
                                                                                                </name>
                                                                                            </name>
                                                                                            class
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>toString</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * An encapsulation of all the mutable state of the {@link ServiceManager} that needs to be
                * accessed by instances of {@link ServiceListener}.
                */
            </comment>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>ServiceManagerState</name>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>Monitor</name>
                            </type>
                            <name>monitor</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Monitor</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>GuardedBy</name>
                                    <argument_list>("monitor")</argument_list>
                                </annotation>
                                <specifier>final</specifier>
                                <name>
                                    <name>SetMultimap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>State</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Service</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>servicesByState</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>MultimapBuilder</name>.
                                            <name>enumKeys</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>State</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>linkedHashSetValues</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>build</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>GuardedBy</name>
                                    <argument_list>("monitor")</argument_list>
                                </annotation>
                                <specifier>final</specifier>
                                <name>
                                    <name>Multiset</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>State</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>states</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>servicesByState</name>.
                                            <name>keys</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>GuardedBy</name>
                                    <argument_list>("monitor")</argument_list>
                                </annotation>
                                <specifier>final</specifier>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Service</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Stopwatch</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>startupTimers</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Maps</name>.
                                            <name>newIdentityHashMap</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * These two booleans are used to mark the state as ready to start.
                        * {@link #ready}: is set by {@link #markReady} to indicate that all listeners have been
                        * correctly installed
                        * {@link #transitioned}: is set by {@link #transitionService} to indicate that some transition
                        * has been performed.
                        *
                        * &lt;p&gt;Together, they allow us to enforce that all services have their listeners installed
                        prior
                        * to any service performing a transition, then we can fail in the ServiceManager constructor
                        * rather than in a Service.Listener callback.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>GuardedBy</name>
                                    <argument_list>("monitor")</argument_list>
                                </annotation>
                                <name>boolean</name>
                            </type>
                            <name>ready</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>GuardedBy</name>
                                    <argument_list>("monitor")</argument_list>
                                </annotation>
                                <name>boolean</name>
                            </type>
                            <name>transitioned</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>numberOfServices</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Controls how long to wait for all the services to either become healthy or reach a
                        * state from which it is guaranteed that it can never become healthy.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name><name>Monitor</name>.
                                    <name>Guard</name>
                                </name>
                            </type>
                            <name>awaitHealthGuard</name> =
                            <init>
                                <expr>new
                                    <class>
                                        <super>
                                            <name><name>Monitor</name>.
                                                <name>Guard</name>
                                            </name>
                                        </super>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>monitor</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>public</specifier>
                                                    <name>boolean</name>
                                                </type>
                                                <name>isSatisfied</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <comment type="line">// All services have started or some service
                                                        has terminated/failed.
                                                    </comment>
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>states</name>.
                                                                    <name>count</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>RUNNING</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ==
                                                            <name>numberOfServices</name>
                                                            ||
                                                            <call>
                                                                <name><name>states</name>.
                                                                    <name>contains</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>STOPPING</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ||
                                                            <call>
                                                                <name><name>states</name>.
                                                                    <name>contains</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>TERMINATED</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ||
                                                            <call>
                                                                <name><name>states</name>.
                                                                    <name>contains</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>FAILED</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Controls how long to wait for all services to reach a terminal state.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name><name>Monitor</name>.
                                    <name>Guard</name>
                                </name>
                            </type>
                            <name>stoppedGuard</name> =
                            <init>
                                <expr>new
                                    <class>
                                        <super>
                                            <name><name>Monitor</name>.
                                                <name>Guard</name>
                                            </name>
                                        </super>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>monitor</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>public</specifier>
                                                    <name>boolean</name>
                                                </type>
                                                <name>isSatisfied</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>states</name>.
                                                                    <name>count</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>TERMINATED</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            +
                                                            <call>
                                                                <name><name>states</name>.
                                                                    <name>count</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>FAILED</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ==
                                                            <name>numberOfServices</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** The listeners to notify during a state transition. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>GuardedBy</name>
                                    <argument_list>("monitor")</argument_list>
                                </annotation>
                                <specifier>final</specifier>
                                <name>
                                    <name>List</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>ListenerCallQueue</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>Listener</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>listeners</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Collections</name>.
                                            <name>synchronizedList</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>
                                                            <name>ArrayList</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>
                                                                        <name>ListenerCallQueue</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>Listener</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * It is implicitly assumed that all the services are NEW and that they will all remain NEW
                        * until all the Listeners are installed and {@link #markReady()} is called. It is our caller's
                        * responsibility to only call {@link #markReady()} if all services were new at the time this
                        * method was called and when all the listeners were installed.
                        */
                    </comment>
                    <constructor>
                        <name>ServiceManagerState</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>ImmutableCollection</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>Service</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>services</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>numberOfServices</name>
                                    </name>
                                    =
                                    <call>
                                        <name><name>services</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>servicesByState</name>.
                                            <name>putAll</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>NEW</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>services</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Attempts to start the timer immediately prior to the service being started via
                        * {@link Service#startAsync()}.
                        */
                    </comment>
                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>tryStartTiming</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Service</name>
                                    </type>
                                    <name>service</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>monitor</name>.
                                            <name>enter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <try>try
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Stopwatch</name>
                                            </type>
                                            <name>stopwatch</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>startupTimers</name>.
                                                            <name>get</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>service</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>stopwatch</name>
                                                ==
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>startupTimers</name>.
                                                                <name>put</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>service</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>Stopwatch</name>.
                                                                                <name>createStarted</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                                <finally>finally
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>monitor</name>.
                                                        <name>leave</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </finally>
                            </try>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Marks the {@link State} as ready to receive transitions. Returns true if no transitions have
                        * been observed yet.
                        */
                    </comment>
                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>markReady</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>monitor</name>.
                                            <name>enter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <try>try
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <name>transitioned</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// nothing has transitioned since construction,
                                                    good.
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ready</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <comment type="line">// This should be an extremely rare race
                                                    condition.
                                                </comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>
                                                                <name>List</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>Service</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>servicesInBadStates</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>Lists</name>.
                                                                        <name>newArrayList</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <for>for (
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>Service</name>
                                                            </type>
                                                            <name>service</name> :
                                                            <range>
                                                                <expr>
                                                                    <call>
                                                                        <name>servicesByState</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>values</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </range>
                                                        </decl>
                                                    </init>
                                                    )
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>service</name>.
                                                                            <name>state</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    !=
                                                                    <name>NEW</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>servicesInBadStates</name>.
                                                                                    <name>add</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>service</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </for>
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name>IllegalArgumentException</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"Services started transitioning asynchronously
                                                                        before "
                                                                        + "the ServiceManager was constructed: " +
                                                                        <name>servicesInBadStates</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    }
                                </block>
                                <finally>finally
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>monitor</name>.
                                                        <name>leave</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </finally>
                            </try>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>addListener</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Listener</name>
                                    </type>
                                    <name>listener</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Executor</name>
                                    </type>
                                    <name>executor</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>listener</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"listener"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>executor</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"executor"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>monitor</name>.
                                            <name>enter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <try>try
                                <block>{
                                    <comment type="line">// no point in adding a listener that will never be called
                                    </comment>
                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <call>
                                                    <name><name>stoppedGuard</name>.
                                                        <name>isSatisfied</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>listeners</name>.
                                                                <name>add</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>
                                                                                <name>ListenerCallQueue</name>
                                                                                <argument_list>&lt;
                                                                                    <argument>
                                                                                        <name>Listener</name>
                                                                                    </argument>
                                                                                    &gt;
                                                                                </argument_list>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>listener</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>executor</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                                <finally>finally
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>monitor</name>.
                                                        <name>leave</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </finally>
                            </try>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>awaitHealthy</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>monitor</name>.
                                            <name>enterWhenUninterruptibly</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>awaitHealthGuard</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>checkHealthy</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <finally>finally
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>monitor</name>.
                                                        <name>leave</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </finally>
                            </try>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>awaitHealthy</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>timeout</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>TimeUnit</name>
                                    </type>
                                    <name>unit</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>TimeoutException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>monitor</name>.
                                            <name>enter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <try>try
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <call>
                                                    <name><name>monitor</name>.
                                                        <name>waitForUninterruptibly</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>awaitHealthGuard</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>timeout</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>unit</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name>TimeoutException</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"Timeout waiting for the services to become
                                                                        healthy. The "
                                                                        + "following services have not started: "
                                                                        +
                                                                        <call>
                                                                            <name><name>Multimaps</name>.
                                                                                <name>filterKeys</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>servicesByState</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>in</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                ImmutableSet</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    of
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            NEW
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                ,
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            STARTING
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>checkHealthy</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <finally>finally
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>monitor</name>.
                                                        <name>leave</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </finally>
                            </try>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>awaitStopped</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>monitor</name>.
                                            <name>enterWhenUninterruptibly</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>stoppedGuard</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>monitor</name>.
                                            <name>leave</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>awaitStopped</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>timeout</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>TimeUnit</name>
                                    </type>
                                    <name>unit</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>TimeoutException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>monitor</name>.
                                            <name>enter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <try>try
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <call>
                                                    <name><name>monitor</name>.
                                                        <name>waitForUninterruptibly</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>stoppedGuard</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>timeout</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>unit</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name>TimeoutException</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"Timeout waiting for the services to stop. The
                                                                        following "
                                                                        + "services have not stopped: "
                                                                        +
                                                                        <call>
                                                                            <name><name>Multimaps</name>.
                                                                                <name>filterKeys</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>servicesByState</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>not</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name>in
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <call>
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    EnumSet</name>
                                                                                                                                .
                                                                                                                                <name>
                                                                                                                                    of
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                            <argument_list>
                                                                                                                                (
                                                                                                                                <argument>
                                                                                                                                    <expr>
                                                                                                                                        <name>
                                                                                                                                            TERMINATED
                                                                                                                                        </name>
                                                                                                                                    </expr>
                                                                                                                                </argument>
                                                                                                                                ,
                                                                                                                                <argument>
                                                                                                                                    <expr>
                                                                                                                                        <name>
                                                                                                                                            FAILED
                                                                                                                                        </name>
                                                                                                                                    </expr>
                                                                                                                                </argument>
                                                                                                                                )
                                                                                                                            </argument_list>
                                                                                                                        </call>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                                <finally>finally
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>monitor</name>.
                                                        <name>leave</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </finally>
                            </try>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <name>
                                <name>ImmutableMultimap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>State</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Service</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>servicesByState</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name><name>ImmutableSetMultimap</name>.
                                            <name>
                                                <name>Builder</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>State</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>Service</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </name>
                                    </type>
                                    <name>builder</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>ImmutableSetMultimap</name>.
                                                    <name>builder</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>monitor</name>.
                                            <name>enter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <try>try
                                <block>{
                                    <for>for (
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>State</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>Service</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>entry</name> :
                                                <range>
                                                    <expr>
                                                        <call>
                                                            <name><name>servicesByState</name>.
                                                                <name>entries</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </range>
                                            </decl>
                                        </init>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>!(
                                                        <call>
                                                            <name><name>entry</name>.
                                                                <name>getValue</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        <name>instanceof</name>
                                                        <name>NoOpService</name>)
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>builder</name>.
                                                                        <name>put</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>entry</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </for>
                                    }
                                </block>
                                <finally>finally
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>monitor</name>.
                                                        <name>leave</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </finally>
                            </try>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>builder</name>.
                                            <name>build</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <name>
                                <name>ImmutableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>Service</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>Long</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>startupTimes</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>List</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>Service</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>Long</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>loadTimes</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>monitor</name>.
                                            <name>enter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>loadTimes</name>
                                            =
                                            <call>
                                                <name><name>Lists</name>.
                                                    <name>newArrayListWithCapacity</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>startupTimers</name>.
                                                                    <name>size</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">// N.B. There will only be an entry in the map if the service
                                        has started
                                    </comment>
                                    <for>for (
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>Service</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>Stopwatch</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>entry</name> :
                                                <range>
                                                    <expr>
                                                        <call>
                                                            <name><name>startupTimers</name>.
                                                                <name>entrySet</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </range>
                                            </decl>
                                        </init>
                                        )
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Service</name>
                                                    </type>
                                                    <name>service</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>entry</name>.
                                                                    <name>getKey</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Stopwatch</name>
                                                    </type>
                                                    <name>stopWatch</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>entry</name>.
                                                                    <name>getValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <call>
                                                            <name><name>stopWatch</name>.
                                                                <name>isRunning</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        &amp;&amp; !(<name>service</name>
                                                        <name>instanceof</name>
                                                        <name>NoOpService</name>)
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>loadTimes</name>.
                                                                        <name>add</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>Maps</name>.
                                                                                        <name>immutableEntry</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>service</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        stopWatch</name>
                                                                                                        .
                                                                                                        <name>elapsed
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    MILLISECONDS
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </for>
                                    }
                                </block>
                                <finally>finally
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>monitor</name>.
                                                        <name>leave</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </finally>
                            </try>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>Collections</name>.
                                            <name>sort</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>loadTimes</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Ordering</name>.
                                                            <name>natural</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>onResultOf</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <class>
                                                                        <super>
                                                                            <name>
                                                                                <name>Function</name>
                                                                                <argument_list>&lt;
                                                                                    <argument>
                                                                                        <name>
                                                                                            <name>Entry</name>
                                                                                            <argument_list>&lt;
                                                                                                <argument>
                                                                                                    <name>Service</name>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <name>Long</name>
                                                                                                </argument>
                                                                                                &gt;
                                                                                            </argument_list>
                                                                                        </name>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <name>Long</name>
                                                                                    </argument>
                                                                                    &gt;
                                                                                </argument_list>
                                                                            </name>
                                                                        </super>
                                                                        <argument_list>()</argument_list>
                                                                        <block>{
                                                                            <function>
                                                                                <type>
                                                                                    <annotation>@
                                                                                        <name>Override</name>
                                                                                    </annotation>
                                                                                    <specifier>public</specifier>
                                                                                    <name>Long</name>
                                                                                </type>
                                                                                <name>apply</name>
                                                                                <parameter_list>(
                                                                                    <param>
                                                                                        <decl>
                                                                                            <type>
                                                                                                <name><name>Map</name>.
                                                                                                    <name>
                                                                                                        <name>Entry
                                                                                                        </name>
                                                                                                        <argument_list>
                                                                                                            &lt;
                                                                                                            <argument>
                                                                                                                <name>
                                                                                                                    Service
                                                                                                                </name>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <name>
                                                                                                                    Long
                                                                                                                </name>
                                                                                                            </argument>
                                                                                                            &gt;
                                                                                                        </argument_list>
                                                                                                    </name>
                                                                                                </name>
                                                                                            </type>
                                                                                            <name>input</name>
                                                                                        </decl>
                                                                                    </param>
                                                                                    )
                                                                                </parameter_list>
                                                                                <block>{
                                                                                    <return>return
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>input</name>
                                                                                                    .
                                                                                                    <name>getValue
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </return>
                                                                                    }
                                                                                </block>
                                                                            </function>
                                                                            }
                                                                        </block>
                                                                    </class>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>ImmutableMap</name>.
                                            <name>copyOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>loadTimes</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Updates the state with the given service transition.
                        *
                        * &lt;p&gt;This method performs the main logic of ServiceManager in the following steps.
                        * &lt;ol&gt;
                        * &lt;li&gt;Update the {@link #servicesByState()}
                        * &lt;li&gt;Update the {@link #startupTimers}
                        * &lt;li&gt;Based on the new state queue listeners to run
                        * &lt;li&gt;Run the listeners (outside of the lock)
                        * &lt;/ol&gt;
                        */
                    </comment>
                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>transitionService</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>Service</name>
                                    </type>
                                    <name>service</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>State</name>
                                    </type>
                                    <name>from</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>State</name>
                                    </type>
                                    <name>to</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>service</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkArgument</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>from</name>
                                                    !=
                                                    <name>to</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>monitor</name>.
                                            <name>enter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>transitioned</name>
                                            = true
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <name>ready</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return;</return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <comment type="line">// Update state.</comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>checkState</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>servicesByState</name>.
                                                                    <name>remove</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>from</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>service</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>"Service %s not at the expected location in the state map
                                                            %s"
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>service</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>from</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>checkState</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>servicesByState</name>.
                                                                    <name>put</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>to</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>service</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>"Service %s in the state map unexpectedly at %s"</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>service</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>to</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">// Update the timer</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Stopwatch</name>
                                            </type>
                                            <name>stopwatch</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>startupTimers</name>.
                                                            <name>get</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>service</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>stopwatch</name>
                                                ==
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// This means the service was started by some means
                                                    other than ServiceManager.startAsync
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>stopwatch</name>
                                                        =
                                                        <call>
                                                            <name><name>Stopwatch</name>.
                                                                <name>createStarted</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>startupTimers</name>.
                                                                <name>put</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>service</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>stopwatch</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>to</name>.
                                                        <name>compareTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>RUNNING</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &gt;= 0 &amp;&amp;
                                                <call>
                                                    <name><name>stopwatch</name>.
                                                        <name>isRunning</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// N.B. if we miss the STARTING event then we may
                                                    never record a startup time.
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>stopwatch</name>.
                                                                <name>stop</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>!(<name>service</name>
                                                            <name>instanceof</name>
                                                            <name>NoOpService</name>)
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>logger</name>.
                                                                            <name>log</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>Level</name>.
                                                                                        <name>FINE</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"Started {0} in {1}."</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>service</name>
                                                                                        </expr>
                                                                                        ,
                                                                                        <expr>
                                                                                            <name>stopwatch</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <comment type="line">// Queue our listeners</comment>

                                    <comment type="line">// Did a service fail?</comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>to</name>
                                                ==
                                                <name>FAILED</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>fireFailedListeners</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>service</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>states</name>.
                                                        <name>count</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>RUNNING</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ==
                                                <name>numberOfServices</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// This means that the manager is currently
                                                    healthy. N.B. If other threads call isHealthy
                                                </comment>
                                                <comment type="line">// they are not guaranteed to get 'true', because
                                                    any service could fail right now.
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>fireHealthyListeners</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>states</name>.
                                                                <name>count</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>TERMINATED</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        +
                                                        <call>
                                                            <name><name>states</name>.
                                                                <name>count</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>FAILED</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        ==
                                                        <name>numberOfServices</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>fireStoppedListeners</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                    }
                                </block>
                                <finally>finally
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>monitor</name>.
                                                        <name>leave</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// Run our executors outside of the lock</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>executeListeners</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </finally>
                            </try>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>GuardedBy</name>
                                <argument_list>("monitor")</argument_list>
                            </annotation>
                            <name>void</name>
                        </type>
                        <name>fireStoppedListeners</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>STOPPED_CALLBACK</name>.
                                            <name>enqueueOn</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>listeners</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>GuardedBy</name>
                                <argument_list>("monitor")</argument_list>
                            </annotation>
                            <name>void</name>
                        </type>
                        <name>fireHealthyListeners</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>HEALTHY_CALLBACK</name>.
                                            <name>enqueueOn</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>listeners</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>GuardedBy</name>
                                <argument_list>("monitor")</argument_list>
                            </annotation>
                            <name>void</name>
                        </type>
                        <name>fireFailedListeners</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>Service</name>
                                    </type>
                                    <name>service</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>Callback</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>Listener</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>(
                                            <argument>
                                                <expr>"failed({service=" + <name>service</name> + "})"
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <name>void</name>
                                                </type>
                                                <name>call</name>
                                                <parameter_list>(
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>Listener</name>
                                                            </type>
                                                            <name>listener</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                </parameter_list>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>listener</name>.
                                                                    <name>failure</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>service</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                    .
                                    <call>
                                        <name>enqueueOn</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>listeners</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/** Attempts to execute all the listeners in {@link #listeners}. */
                    </comment>
                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>executeListeners</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkState</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>!
                                                    <call>
                                                        <name><name>monitor</name>.
                                                            <name>isOccupiedByCurrentThread</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"It is incorrect to execute listeners with the monitor held."
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// iterate by index to avoid concurrent modification exceptions
                            </comment>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <call>
                                            <name><name>listeners</name>.
                                                <name>size</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>listeners</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>execute</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>GuardedBy</name>
                                <argument_list>("monitor")</argument_list>
                            </annotation>
                            <name>void</name>
                        </type>
                        <name>checkHealthy</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>states</name>.
                                                <name>count</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>RUNNING</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        !=
                                        <name>numberOfServices</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>IllegalStateException</name>
                                                </type>
                                                <name>exception</name> =
                                                <init>
                                                    <expr>new
                                                        <call>
                                                            <name>IllegalStateException</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"Expected to be healthy after starting. The
                                                                        following services are not running: "
                                                                        +
                                                                        <call>
                                                                            <name><name>Multimaps</name>.
                                                                                <name>filterKeys</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>servicesByState</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>not</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                equalTo
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            RUNNING
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <throw>throw
                                            <expr>
                                                <name>exception</name>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * A {@link Service} that wraps another service and times how long it takes for it to start and
                * also calls the {@link ServiceManagerState#transitionService(Service, State, State)},
                * to record the state transitions.
                */
            </comment>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>ServiceListener</name>
                <super>
                    <extends>extends <name>Service</name>.
                        <name>Listener</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>Service</name>
                            </type>
                            <name>service</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// We store the state in a weak reference to ensure that if something went
                        wrong while
                    </comment>
                    <comment type="line">// constructing the ServiceManager we don't pointlessly keep updating the
                        state.
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>
                                    <name>WeakReference</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>ServiceManagerState</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>ServiceListener</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Service</name>
                                    </type>
                                    <name>service</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>WeakReference</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>ServiceManagerState</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>state</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>service</name>
                                    </name>
                                    =
                                    <name>service</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>state</name>
                                    </name>
                                    =
                                    <name>state</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>starting</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ServiceManagerState</name>
                                    </type>
                                    <name>state</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>this</name>.<name>state</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>state</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>state</name>.
                                                        <name>transitionService</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>service</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>NEW</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>STARTING</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>!(<name>service</name>
                                                    <name>instanceof</name>
                                                    <name>NoOpService</name>)
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>logger</name>.
                                                                    <name>log</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>Level</name>.
                                                                                <name>FINE</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"Starting {0}."</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>service</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>running</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ServiceManagerState</name>
                                    </type>
                                    <name>state</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>this</name>.<name>state</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>state</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>state</name>.
                                                        <name>transitionService</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>service</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>STARTING</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>RUNNING</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>stopping</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>State</name>
                                    </type>
                                    <name>from</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ServiceManagerState</name>
                                    </type>
                                    <name>state</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>this</name>.<name>state</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>state</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>state</name>.
                                                        <name>transitionService</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>service</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>from</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>STOPPING</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>terminated</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>State</name>
                                    </type>
                                    <name>from</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ServiceManagerState</name>
                                    </type>
                                    <name>state</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>this</name>.<name>state</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>state</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>!(<name>service</name>
                                                    <name>instanceof</name>
                                                    <name>NoOpService</name>)
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>logger</name>.
                                                                    <name>log</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>Level</name>.
                                                                                <name>FINE</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"Service {0} has terminated. Previous
                                                                            state was: {1}"
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>service</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>from</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>state</name>.
                                                        <name>transitionService</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>service</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>from</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>TERMINATED</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>failed</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>State</name>
                                    </type>
                                    <name>from</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Throwable</name>
                                    </type>
                                    <name>failure</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ServiceManagerState</name>
                                    </type>
                                    <name>state</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>this</name>.<name>state</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>state</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// Log before the transition, so that if the process exits
                                            in response to server failure,
                                        </comment>
                                        <comment type="line">// there is a higher likelihood that the cause will be in
                                            the logs.
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>!(<name>service</name>
                                                    <name>instanceof</name>
                                                    <name>NoOpService</name>)
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>logger</name>.
                                                                    <name>log</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>Level</name>.
                                                                                <name>SEVERE</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"Service " + <name>service</name> + " has
                                                                            failed in the " + <name>from</name> + "
                                                                            state."
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>failure</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>state</name>.
                                                        <name>transitionService</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>service</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>from</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>FAILED</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * A {@link Service} instance that does nothing. This is only useful as a placeholder to
                * ensure that the {@link ServiceManager} functions properly even when it is managing no services.
                *
                * &lt;p&gt;The use of this class is considered an implementation detail of ServiceManager and as such
                * it is excluded from {@link #servicesByState}, {@link #startupTimes}, {@link #toString} and all
                * logging statements.
                */
            </comment>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>NoOpService</name>
                <super>
                    <extends>extends
                        <name>AbstractService</name>
                    </extends>
                </super>
                <block>{
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>protected</specifier>
                            <name>void</name>
                        </type>
                        <name>doStart</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>notifyStarted</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>protected</specifier>
                            <name>void</name>
                        </type>
                        <name>doStop</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>notifyStopped</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/** This is never thrown but only used for logging. */</comment>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>EmptyServiceManagerWarning</name>
                <super>
                    <extends>extends
                        <name>Throwable</name>
                    </extends>
                </super>
                <block>{}</block>
            </class>
            }
        </block>
    </class>
</unit>
