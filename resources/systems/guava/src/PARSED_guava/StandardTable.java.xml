<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\collect\StandardTable.java">
    <comment type="block">/*
        * Copyright (C) 2008 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>collect</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkNotNull</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Predicates</name>.
            <name>alwaysTrue</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Predicates</name>.
            <name>equalTo</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Predicates</name>.
            <name>in</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Predicates</name>.
            <name>not</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.<name>Maps</name>.
            <name>safeContainsKey</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.<name>Maps</name>.
            <name>safeGet</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtCompatible</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Function</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Predicate</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>Supplier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.<name>Maps</name>.
            <name>IteratorBasedAbstractMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.<name>Maps</name>.
            <name>ViewCachingAbstractMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>collect</name>.<name>Sets</name>.
            <name>ImprovedAbstractSet</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>j2objc</name>.<name>annotations</name>.
            <name>WeakOuter</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Collection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>LinkedHashMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>Map</name>.
            <name>Entry</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Set</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>annotation</name>.
            <name>Nullable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * {@link Table} implementation backed by a map that associates row keys with
        * column key / value secondary maps. This class provides rapid access to
        * records by the row key alone or by both keys, but not by just the column key.
        *
        * &lt;p&gt;The views returned by {@link #column}, {@link #columnKeySet()}, and {@link
        * #columnMap()} have iterators that don't support {@code remove()}. Otherwise,
        * all optional operations are supported. Null row keys, columns keys, and
        * values are not supported.
        *
        * &lt;p&gt;Lookups by row key are often faster than lookups by column key, because
        * the data is stored in a {@code Map&lt;R, Map&lt;C, V&gt;&gt;}. A method call like {@code
        * column(columnKey).get(rowKey)} still runs quickly, since the row key is
        * provided. However, {@code column(columnKey).size()} takes longer, since an
        * iteration across all row keys occurs.
        *
        * &lt;p&gt;Note that this implementation is not synchronized. If multiple threads
        * access this table concurrently and one of the threads modifies the table, it
        * must be synchronized externally.
        *
        * @author Jared Levy
        */
    </comment>
    <class>
        <annotation>@
            <name>GwtCompatible</name>
        </annotation>
        class
        <name>
            <name>StandardTable</name>
            <argument_list>&lt;
                <argument>
                    <name>R</name>
                </argument>
                ,
                <argument>
                    <name>C</name>
                </argument>
                ,
                <argument>
                    <name>V</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <super>
            <extends>extends
                <name>
                    <name>AbstractTable</name>
                    <argument_list>&lt;
                        <argument>
                            <name>R</name>
                        </argument>
                        ,
                        <argument>
                            <name>C</name>
                        </argument>
                        ,
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
            <implements>implements
                <name>Serializable</name>
            </implements>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <annotation>@
                            <name>GwtTransient</name>
                        </annotation>
                        <specifier>final</specifier>
                        <name>
                            <name>Map</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>R</name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Map</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>backingMap</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <annotation>@
                            <name>GwtTransient</name>
                        </annotation>
                        <specifier>final</specifier>
                        <name>
                            <name>Supplier</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>?</name>
                                    <extends>extends
                                        <name>
                                            <name>Map</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </extends>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>factory</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <name>StandardTable</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>R</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Map</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>backingMap</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Supplier</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                            <extends>extends
                                                <name>
                                                    <name>Map</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>C</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </extends>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>factory</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>backingMap</name>
                            </name>
                            =
                            <name>backingMap</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>factory</name>
                            </name>
                            =
                            <name>factory</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">// Accessors</comment>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>contains</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>rowKey</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>columnKey</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>rowKey</name>
                            != <name>null</name> &amp;&amp; <name>columnKey</name> != <name>null</name> &amp;&amp;
                            <call>
                                <name><name>super</name>.
                                    <name>contains</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rowKey</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>columnKey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>containsColumn</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>columnKey</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>columnKey</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>
                                        <name>Map</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </type>
                                <name>map</name> :
                                <range>
                                    <expr>
                                        <call>
                                            <name><name>backingMap</name>.
                                                <name>values</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>safeContainsKey</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>map</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>columnKey</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>true</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>containsRow</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>rowKey</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>rowKey</name>
                            != <name>null</name> &amp;&amp;
                            <call>
                                <name>safeContainsKey</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>backingMap</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>rowKey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>containsValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>value</name>
                            != <name>null</name> &amp;&amp;
                            <call>
                                <name><name>super</name>.
                                    <name>containsValue</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>V</name>
                </type>
                <name>get</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>rowKey</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>columnKey</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>rowKey</name> == <name>null</name> || <name>columnKey</name> == <name>null</name>)
                            ?
                            <name>null</name>
                            :
                            <call>
                                <name><name>super</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rowKey</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>columnKey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isEmpty</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>backingMap</name>.
                                    <name>isEmpty</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>size</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>size</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>
                                        <name>Map</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </type>
                                <name>map</name> :
                                <range>
                                    <expr>
                                        <call>
                                            <name><name>backingMap</name>.
                                                <name>values</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>size</name>
                                    +=
                                    <call>
                                        <name><name>map</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>size</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// Mutators</comment>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>clear</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>backingMap</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>getOrCreate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>R</name>
                            </type>
                            <name>rowKey</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>map</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>backingMap</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rowKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>map</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>map</name>
                                        =
                                        <call>
                                            <name><name>factory</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>backingMap</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>rowKey</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>map</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>map</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>V</name>
                </type>
                <name>put</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>R</name>
                            </type>
                            <name>rowKey</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>C</name>
                            </type>
                            <name>columnKey</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>V</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rowKey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>columnKey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>getOrCreate</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rowKey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>put</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>columnKey</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>V</name>
                </type>
                <name>remove</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>rowKey</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <annotation>@
                                    <name>Nullable</name>
                                </annotation>
                                <name>Object</name>
                            </type>
                            <name>columnKey</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>(<name>rowKey</name> == <name>null</name>) || (<name>columnKey</name> == <name>
                                null</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>map</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>safeGet</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>backingMap</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>rowKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>map</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>V</name>
                            </type>
                            <name>value</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>map</name>.
                                            <name>remove</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>columnKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>map</name>.
                                        <name>isEmpty</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>backingMap</name>.
                                                <name>remove</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>rowKey</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>value</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>R</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>removeColumn</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>R</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>output</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>
                                            <name>LinkedHashMap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>R</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Iterator</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Entry</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>R</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>
                                                            <name>Map</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>C</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>iterator</name>
                            =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>backingMap</name>.
                                            <name>entrySet</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>iterator</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>iterator</name>.
                                        <name>hasNext</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>R</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Map</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>entry</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>iterator</name>.
                                                    <name>next</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>V</name>
                                    </type>
                                    <name>value</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>entry</name>.
                                                    <name>getValue</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>remove</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>column</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>value</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>output</name>.
                                                        <name>put</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>entry</name>.
                                                                        <name>getKey</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>entry</name>.
                                                            <name>getValue</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>isEmpty</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>iterator</name>.
                                                                    <name>remove</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <return>return
                        <expr>
                            <name>output</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>containsMapping</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>rowKey</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>columnKey</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>value</name>
                            != <name>null</name> &amp;&amp;
                            <call>
                                <name><name>value</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>get</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>rowKey</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>columnKey</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Remove a row key / column key / value mapping, if present. */</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>removeMapping</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>rowKey</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>columnKey</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>containsMapping</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>rowKey</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>columnKey</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>value</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>remove</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>rowKey</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>columnKey</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// Views</comment>

            <comment type="javadoc">/**
                * Abstract set whose {@code isEmpty()} returns whether the table is empty and
                * whose {@code clear()} clears all table mappings.
                */
            </comment>
            <class>
                <annotation>@
                    <name>WeakOuter</name>
                </annotation>
                <specifier>private</specifier>
                <specifier>abstract</specifier> class
                <name>
                    <name>TableSet</name>
                    <argument_list>&lt;
                        <argument>
                            <name>T</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <extends>extends
                        <name>
                            <name>ImprovedAbstractSet</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>T</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isEmpty</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>backingMap</name>.
                                            <name>isEmpty</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>clear</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>backingMap</name>.
                                            <name>clear</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * {@inheritDoc}
                *
                * &lt;p&gt;The set's iterator traverses the mappings for the first row, the
                * mappings for the second row, and so on.
                *
                * &lt;p&gt;Each cell is an immutable snapshot of a row key / column key / value
                * mapping, taken at the time the cell is returned by a method call to the
                * set or its iterator.
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Set</name>
                        <argument_list>&lt;
                            <argument>
                                <name>
                                    <name>Cell</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>R</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>cellSet</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>cellSet</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <name>
                        <name>Iterator</name>
                        <argument_list>&lt;
                            <argument>
                                <name>
                                    <name>Cell</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>R</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>cellIterator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>CellIterator</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <specifier>private</specifier>
                class <name>CellIterator</name>
                <super>
                    <implements>implements
                        <name>
                            <name>Iterator</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Cell</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>R</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>
                                    <name>Iterator</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Entry</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>R</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>
                                                            <name>Map</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>C</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>rowIterator</name>
                            =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>backingMap</name>.
                                            <name>entrySet</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>iterator</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Entry</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>R</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Map</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>rowEntry</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Iterator</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Entry</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>columnIterator</name>
                            =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Iterators</name>.
                                            <name>emptyModifiableIterator</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>hasNext</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>rowIterator</name>.
                                            <name>hasNext</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    ||
                                    <call>
                                        <name><name>columnIterator</name>.
                                            <name>hasNext</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Cell</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>R</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>next</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>columnIterator</name>.
                                                <name>hasNext</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>rowEntry</name>
                                                =
                                                <call>
                                                    <name><name>rowIterator</name>.
                                                        <name>next</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>columnIterator</name>
                                                =
                                                <call>
                                                    <name><name>rowEntry</name>.
                                                        <name>getValue</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>entrySet</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>iterator</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>columnEntry</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>columnIterator</name>.
                                                    <name>next</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Tables</name>.
                                            <name>immutableCell</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>rowEntry</name>.
                                                            <name>getKey</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>columnEntry</name>.
                                                            <name>getKey</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>columnEntry</name>.
                                                            <name>getValue</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>remove</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>columnIterator</name>.
                                            <name>remove</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>rowEntry</name>.
                                                <name>getValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>isEmpty</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>rowIterator</name>.
                                                        <name>remove</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>row</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>R</name>
                            </type>
                            <name>rowKey</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>Row</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rowKey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>class <name>Row</name>
                <super>
                    <extends>extends
                        <name>
                            <name>IteratorBasedAbstractMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>R</name>
                            </type>
                            <name>rowKey</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>Row</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>R</name>
                                    </type>
                                    <name>rowKey</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>rowKey</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rowKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>backingRowMap</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <function>
                        <type>
                            <name>
                                <name>Map</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>backingRowMap</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>(<name>backingRowMap</name> ==
                                    <name>null</name>
                                    || (
                                    <call>
                                        <name><name>backingRowMap</name>.
                                            <name>isEmpty</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    &amp;&amp;
                                    <call>
                                        <name><name>backingMap</name>.
                                            <name>containsKey</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rowKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ))
                                    ? <name>backingRowMap</name> =
                                    <call>
                                        <name>computeBackingRowMap</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    :
                                    <name>backingRowMap</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <name>
                                <name>Map</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>computeBackingRowMap</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>backingMap</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rowKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// Call this every time we perform a removal.</comment>
                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>maintainEmptyInvariant</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>backingRowMap</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>backingRowMap</name>.
                                                <name>isEmpty</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>backingMap</name>.
                                                        <name>remove</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>rowKey</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>backingRowMap</name>
                                                =
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>containsKey</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Map</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>backingRowMap</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>backingRowMap</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>(<name>key</name> != <name>null</name> &amp;&amp; <name>backingRowMap
                                </name> != <name>null</name>)
                                    &amp;&amp;
                                    <call>
                                        <name><name>Maps</name>.
                                            <name>safeContainsKey</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>backingRowMap</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>V</name>
                        </type>
                        <name>get</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Map</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>backingRowMap</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>backingRowMap</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>(<name>key</name> != <name>null</name> &amp;&amp; <name>backingRowMap
                                </name> != <name>null</name>)
                                    ?
                                    <call>
                                        <name><name>Maps</name>.
                                            <name>safeGet</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>backingRowMap</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    :
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>V</name>
                        </type>
                        <name>put</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>C</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>V</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>backingRowMap</name>
                                        != <name>null</name> &amp;&amp; !
                                        <call>
                                            <name><name>backingRowMap</name>.
                                                <name>isEmpty</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>backingRowMap</name>.
                                                        <name>put</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>key</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>StandardTable</name>.<name>this</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rowKey</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>V</name>
                        </type>
                        <name>remove</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Map</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>backingRowMap</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>backingRowMap</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>backingRowMap</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>V</name>
                                    </type>
                                    <name>result</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Maps</name>.
                                                    <name>safeRemove</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>backingRowMap</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>key</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>maintainEmptyInvariant</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>result</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>clear</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Map</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>backingRowMap</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>backingRowMap</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>backingRowMap</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>backingRowMap</name>.
                                                        <name>clear</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>maintainEmptyInvariant</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>size</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Map</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>map</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>backingRowMap</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>(<name>map</name> == <name>null</name>) ? 0 :
                                    <call>
                                        <name><name>map</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Iterator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>entryIterator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>Map</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>map</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>backingRowMap</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>map</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>Iterators</name>.
                                                        <name>emptyModifiableIterator</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>iterator</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>map</name>.
                                                    <name>entrySet</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>iterator</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>Iterator</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>
                                                            <name>Entry</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>C</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>public</specifier>
                                                    <name>boolean</name>
                                                </type>
                                                <name>hasNext</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>iterator</name>.
                                                                    <name>hasNext</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>public</specifier>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>next</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <specifier>final</specifier>
                                                                <name>
                                                                    <name>Entry</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <name>V</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </type>
                                                            <name>entry</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>iterator</name>.
                                                                            <name>next</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <return>return
                                                        <expr>new
                                                            <class>
                                                                <super>
                                                                    <name>
                                                                        <name>ForwardingMapEntry</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <name>V</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </super>
                                                                <argument_list>()</argument_list>
                                                                <block>{
                                                                    <function>
                                                                        <type>
                                                                            <annotation>@
                                                                                <name>Override</name>
                                                                            </annotation>
                                                                            <specifier>protected</specifier>
                                                                            <name>
                                                                                <name>Entry</name>
                                                                                <argument_list>&lt;
                                                                                    <argument>
                                                                                        <name>C</name>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <name>V</name>
                                                                                    </argument>
                                                                                    &gt;
                                                                                </argument_list>
                                                                            </name>
                                                                        </type>
                                                                        <name>delegate</name>
                                                                        <parameter_list>()</parameter_list>
                                                                        <block>{
                                                                            <return>return
                                                                                <expr>
                                                                                    <name>entry</name>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>
                                                                    <function>
                                                                        <type>
                                                                            <annotation>@
                                                                                <name>Override</name>
                                                                            </annotation>
                                                                            <specifier>public</specifier>
                                                                            <name>V</name>
                                                                        </type>
                                                                        <name>setValue</name>
                                                                        <parameter_list>(
                                                                            <param>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>V</name>
                                                                                    </type>
                                                                                    <name>value</name>
                                                                                </decl>
                                                                            </param>
                                                                            )
                                                                        </parameter_list>
                                                                        <block>{
                                                                            <return>return
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>super</name>.
                                                                                            <name>setValue</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            checkNotNull
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        value
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>
                                                                    <function>
                                                                        <type>
                                                                            <annotation>@
                                                                                <name>Override</name>
                                                                            </annotation>
                                                                            <specifier>public</specifier>
                                                                            <name>boolean</name>
                                                                        </type>
                                                                        <name>equals</name>
                                                                        <parameter_list>(
                                                                            <param>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>Object</name>
                                                                                    </type>
                                                                                    <name>object</name>
                                                                                </decl>
                                                                            </param>
                                                                            )
                                                                        </parameter_list>
                                                                        <block>{
                                                                            <comment type="line">// TODO(lowasser):
                                                                                identify why this affects GWT tests
                                                                            </comment>
                                                                            <return>return
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>standardEquals</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>object</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>
                                                                    }
                                                                </block>
                                                            </class>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>

                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>public</specifier>
                                                    <name>void</name>
                                                </type>
                                                <name>remove</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>iterator</name>.
                                                                    <name>remove</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>maintainEmptyInvariant</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * {@inheritDoc}
                *
                * &lt;p&gt;The returned map's views have iterators that don't support
                * {@code remove()}.
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>R</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>column</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>C</name>
                            </type>
                            <name>columnKey</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>Column</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>columnKey</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <specifier>private</specifier>
                class <name>Column</name>
                <super>
                    <extends>extends
                        <name>
                            <name>ViewCachingAbstractMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>R</name>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>C</name>
                            </type>
                            <name>columnKey</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>Column</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>C</name>
                                    </type>
                                    <name>columnKey</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>columnKey</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>columnKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>V</name>
                        </type>
                        <name>put</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>R</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>V</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>StandardTable</name>.<name>this</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>columnKey</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>V</name>
                        </type>
                        <name>get</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>StandardTable</name>.<name>this</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>columnKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>containsKey</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>StandardTable</name>.<name>this</name>.
                                            <name>contains</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>columnKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>V</name>
                        </type>
                        <name>remove</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>StandardTable</name>.<name>this</name>.
                                            <name>remove</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>columnKey</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Removes all {@code Column} mappings whose row key and value satisfy the
                        * given predicate.
                        */
                    </comment>
                    <function>
                        <type>
                            <name>boolean</name>
                        </type>
                        <name>removeFromColumnIf</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Predicate</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>?</name>
                                                    <super>super
                                                        <name>
                                                            <name>Entry</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>R</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </super>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>predicate</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>changed</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>R</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>
                                                                    <name>Map</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <name>V</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>iterator</name>
                                    =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>backingMap</name>.
                                                    <name>entrySet</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>iterator</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>iterator</name>.
                                                <name>hasNext</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Entry</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>R</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>
                                                                <name>Map</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>C</name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>V</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>entry</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>iterator</name>.
                                                            <name>next</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Map</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>C</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>map</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>entry</name>.
                                                            <name>getValue</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>V</name>
                                            </type>
                                            <name>value</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>map</name>.
                                                            <name>get</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>columnKey</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>value</name>
                                                !=
                                                <name>null</name>
                                                &amp;&amp;
                                                <call>
                                                    <name><name>predicate</name>.
                                                        <name>apply</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>Maps</name>.
                                                                        <name>immutableEntry</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>entry</name>.
                                                                                        <name>getKey</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>value</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>map</name>.
                                                                <name>remove</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>columnKey</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>changed</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>map</name>.
                                                                    <name>isEmpty</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>iterator</name>.
                                                                            <name>remove</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </while>
                            <return>return
                                <expr>
                                    <name>changed</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Set</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>R</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>createEntrySet</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>EntrySet</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <class>
                        <annotation>@
                            <name>WeakOuter</name>
                        </annotation>
                        <specifier>private</specifier>
                        class <name>EntrySet</name>
                        <super>
                            <extends>extends
                                <name>
                                    <name>ImprovedAbstractSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Entry</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>R</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </super>
                        <block>{
                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>
                                        <name>Iterator</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>
                                                    <name>Entry</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>R</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </type>
                                <name>iterator</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <return>return
                                        <expr>new
                                            <call>
                                                <name>EntrySetIterator</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>int</name>
                                </type>
                                <name>size</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>size</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <for>for (
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>
                                                        <name>Map</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>map</name> :
                                                <range>
                                                    <expr>
                                                        <call>
                                                            <name><name>backingMap</name>.
                                                                <name>values</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </range>
                                            </decl>
                                        </init>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>map</name>.
                                                                <name>containsKey</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>columnKey</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr><name>size</name>++
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </for>
                                    <return>return
                                        <expr>
                                            <name>size</name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>isEmpty</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <return>return
                                        <expr>!
                                            <call>
                                                <name>containsColumn</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>columnKey</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>void</name>
                                </type>
                                <name>clear</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>removeFromColumnIf</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>alwaysTrue</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>contains</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>o</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>o</name>
                                                <name>instanceof</name>
                                                <name>Entry</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>
                                                                <name>Entry</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>entry</name> =
                                                        <init>
                                                            <expr>(
                                                                <name>
                                                                    <name>Entry</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                                )
                                                                <name>o</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name>containsMapping</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>entry</name>.
                                                                                <name>getKey</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>columnKey</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>entry</name>.
                                                                                <name>getValue</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <return>return <expr>false</expr>;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>remove</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>obj</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>obj</name>
                                                <name>instanceof</name>
                                                <name>Entry</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>
                                                                <name>Entry</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>entry</name> =
                                                        <init>
                                                            <expr>(
                                                                <name>
                                                                    <name>Entry</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                                )
                                                                <name>obj</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name>removeMapping</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>entry</name>.
                                                                                <name>getKey</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>columnKey</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>entry</name>.
                                                                                <name>getValue</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <return>return <expr>false</expr>;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>retainAll</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Collection</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>?</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>c</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <call>
                                                <name>removeFromColumnIf</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>not</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>in</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>c</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>
                            }
                        </block>
                    </class>

                    <class>
                        <specifier>private</specifier>
                        class <name>EntrySetIterator</name>
                        <super>
                            <extends>extends
                                <name>
                                    <name>AbstractIterator</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Entry</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>R</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </super>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>R</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>
                                                                    <name>Map</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <name>V</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>iterator</name>
                                    =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>backingMap</name>.
                                                    <name>entrySet</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>iterator</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>protected</specifier>
                                    <name>
                                        <name>Entry</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>R</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </type>
                                <name>computeNext</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <while>while
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>iterator</name>.
                                                        <name>hasNext</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <specifier>final</specifier>
                                                        <name>
                                                            <name>Entry</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>R</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>
                                                                        <name>Map</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <name>V</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </type>
                                                    <name>entry</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>iterator</name>.
                                                                    <name>next</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>entry</name>.
                                                                <name>getValue</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>containsKey</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>columnKey</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <class>
                                                            <annotation>@
                                                                <name>WeakOuter</name>
                                                            </annotation>
                                                            class <name>EntryImpl</name>
                                                            <super>
                                                                <extends>extends
                                                                    <name>
                                                                        <name>AbstractMapEntry</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>R</name>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <name>V</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </extends>
                                                            </super>
                                                            <block>{
                                                                <function>
                                                                    <type>
                                                                        <annotation>@
                                                                            <name>Override</name>
                                                                        </annotation>
                                                                        <specifier>public</specifier>
                                                                        <name>R</name>
                                                                    </type>
                                                                    <name>getKey</name>
                                                                    <parameter_list>()</parameter_list>
                                                                    <block>{
                                                                        <return>return
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>entry</name>.
                                                                                        <name>getKey</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </return>
                                                                        }
                                                                    </block>
                                                                </function>
                                                                <function>
                                                                    <type>
                                                                        <annotation>@
                                                                            <name>Override</name>
                                                                        </annotation>
                                                                        <specifier>public</specifier>
                                                                        <name>V</name>
                                                                    </type>
                                                                    <name>getValue</name>
                                                                    <parameter_list>()</parameter_list>
                                                                    <block>{
                                                                        <return>return
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>entry</name>.
                                                                                        <name>getValue</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>get</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>columnKey</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </return>
                                                                        }
                                                                    </block>
                                                                </function>
                                                                <function>
                                                                    <type>
                                                                        <annotation>@
                                                                            <name>Override</name>
                                                                        </annotation>
                                                                        <specifier>public</specifier>
                                                                        <name>V</name>
                                                                    </type>
                                                                    <name>setValue</name>
                                                                    <parameter_list>(
                                                                        <param>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>V</name>
                                                                                </type>
                                                                                <name>value</name>
                                                                            </decl>
                                                                        </param>
                                                                        )
                                                                    </parameter_list>
                                                                    <block>{
                                                                        <return>return
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>entry</name>.
                                                                                        <name>getValue</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>put</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>columnKey</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name>checkNotNull
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    value
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </return>
                                                                        }
                                                                    </block>
                                                                </function>
                                                                }
                                                            </block>
                                                        </class>
                                                        <return>return
                                                            <expr>new
                                                                <call>
                                                                    <name>EntryImpl</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </while>
                                    <return>return
                                        <expr>
                                            <call>
                                                <name>endOfData</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>
                            }
                        </block>
                    </class>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Set</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>R</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>createKeySet</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>KeySet</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <class>
                        <annotation>@
                            <name>WeakOuter</name>
                        </annotation>
                        <specifier>private</specifier>
                        class <name>KeySet</name>
                        <super>
                            <extends>extends <name>Maps</name>.
                                <name>
                                    <name>KeySet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>R</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </super>
                        <block>{
                            <constructor>
                                <name>KeySet</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>super</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Column</name>.
                                                                <name>this</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </constructor>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>contains</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>obj</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>StandardTable</name>.<name>this</name>.
                                                    <name>contains</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>obj</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>columnKey</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>remove</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>obj</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>StandardTable</name>.<name>this</name>.
                                                    <name>remove</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>obj</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>columnKey</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>retainAll</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <specifier>final</specifier>
                                                <name>
                                                    <name>Collection</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>?</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>c</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <call>
                                                <name>removeFromColumnIf</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Maps</name>.
                                                                <name>
                                                                    <name/>
                                                                </name>
                                                            </name>
                                                            &lt;<name>R</name>&gt;
                                                            <call>
                                                                <name>keyPredicateOnEntries</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>not</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>in</name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>c
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>
                            }
                        </block>
                    </class>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Collection</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>createValues</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>Values</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <class>
                        <annotation>@
                            <name>WeakOuter</name>
                        </annotation>
                        <specifier>private</specifier>
                        class <name>Values</name>
                        <super>
                            <extends>extends <name>Maps</name>.
                                <name>
                                    <name>Values</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>R</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </super>
                        <block>{
                            <constructor>
                                <name>Values</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>super</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Column</name>.
                                                                <name>this</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </constructor>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>remove</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>obj</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <name>obj</name>
                                            != <name>null</name> &amp;&amp;
                                            <call>
                                                <name>removeFromColumnIf</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Maps</name>.
                                                                <name>
                                                                    <name/>
                                                                </name>
                                                            </name>
                                                            &lt;<name>V</name>&gt;
                                                            <call>
                                                                <name>valuePredicateOnEntries</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>equalTo</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>obj</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>removeAll</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <specifier>final</specifier>
                                                <name>
                                                    <name>Collection</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>?</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>c</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <call>
                                                <name>removeFromColumnIf</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Maps</name>.
                                                                <name>
                                                                    <name/>
                                                                </name>
                                                            </name>
                                                            &lt;<name>V</name>&gt;
                                                            <call>
                                                                <name>valuePredicateOnEntries</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>in</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>c</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>retainAll</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <specifier>final</specifier>
                                                <name>
                                                    <name>Collection</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>?</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>c</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <call>
                                                <name>removeFromColumnIf</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Maps</name>.
                                                                <name>
                                                                    <name/>
                                                                </name>
                                                            </name>
                                                            &lt;<name>V</name>&gt;
                                                            <call>
                                                                <name>valuePredicateOnEntries</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>not</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>in</name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>c
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>
                            }
                        </block>
                    </class>
                    }
                </block>
            </class>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Set</name>
                        <argument_list>&lt;
                            <argument>
                                <name>R</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>rowKeySet</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>rowMap</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>keySet</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>
                            <name>Set</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>columnKeySet</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * {@inheritDoc}
                *
                * &lt;p&gt;The returned set has an iterator that does not support {@code remove()}.
                *
                * &lt;p&gt;The set's iterator traverses the columns of the first row, the
                * columns of the second row, etc., skipping any columns that have
                * appeared previously.
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Set</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>columnKeySet</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Set</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>columnKeySet</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(<name>result</name> == <name>null</name>) ? <name>columnKeySet</name> = new
                            <call>
                                <name>ColumnKeySet</name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <annotation>@
                    <name>WeakOuter</name>
                </annotation>
                <specifier>private</specifier>
                class <name>ColumnKeySet</name>
                <super>
                    <extends>extends
                        <name>
                            <name>TableSet</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Iterator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>iterator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>createColumnKeyIterator</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>size</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Iterators</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>iterator</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>remove</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>obj</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>obj</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>changed</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Map</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>iterator</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>backingMap</name>.
                                                    <name>values</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>iterator</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>iterator</name>.
                                                <name>hasNext</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Map</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>C</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>map</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>iterator</name>.
                                                            <name>next</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>map</name>.
                                                        <name>keySet</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>remove</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>obj</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>changed</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>map</name>.
                                                                    <name>isEmpty</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>iterator</name>.
                                                                            <name>remove</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </while>
                            <return>return
                                <expr>
                                    <name>changed</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>removeAll</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Collection</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>?</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>c</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>c</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>changed</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Map</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>iterator</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>backingMap</name>.
                                                    <name>values</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>iterator</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>iterator</name>.
                                                <name>hasNext</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Map</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>C</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>map</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>iterator</name>.
                                                            <name>next</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <comment type="line">// map.keySet().removeAll(c) can throw a NPE when map is a
                                        TreeMap with
                                    </comment>
                                    <comment type="line">// natural ordering and c contains a null.</comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>Iterators</name>.
                                                        <name>removeAll</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>map</name>.
                                                                        <name>keySet</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                .
                                                                <call>
                                                                    <name>iterator</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>c</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>changed</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>map</name>.
                                                                    <name>isEmpty</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>iterator</name>.
                                                                            <name>remove</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </while>
                            <return>return
                                <expr>
                                    <name>changed</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>retainAll</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Collection</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>?</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>c</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>c</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>changed</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Map</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>iterator</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>backingMap</name>.
                                                    <name>values</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>iterator</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>iterator</name>.
                                                <name>hasNext</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Map</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>C</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>V</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>map</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>iterator</name>.
                                                            <name>next</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>map</name>.
                                                        <name>keySet</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>retainAll</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>c</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>changed</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>map</name>.
                                                                    <name>isEmpty</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>iterator</name>.
                                                                            <name>remove</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </while>
                            <return>return
                                <expr>
                                    <name>changed</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>contains</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>obj</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>containsColumn</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>obj</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * Creates an iterator that returns each column value with duplicates
                * omitted.
                */
            </comment>
            <function>
                <type>
                    <name>
                        <name>Iterator</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>createColumnKeyIterator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ColumnKeyIterator</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <specifier>private</specifier>
                class <name>ColumnKeyIterator</name>
                <super>
                    <extends>extends
                        <name>
                            <name>AbstractIterator</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <comment type="line">// Use the same map type to support TreeMaps with comparators that aren't
                    </comment>
                    <comment type="line">// consistent with equals().</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>seen</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>factory</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>
                                    <name>Iterator</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Map</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>mapIterator</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>backingMap</name>.
                                            <name>values</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>iterator</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Iterator</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Entry</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>entryIterator</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Iterators</name>.
                                            <name>emptyIterator</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>protected</specifier>
                            <name>C</name>
                        </type>
                        <name>computeNext</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <while>while
                                <condition>(<expr>true</expr>)
                                </condition>
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>entryIterator</name>.
                                                        <name>hasNext</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>
                                                                <name>Entry</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>C</name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>V</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>entry</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>entryIterator</name>.
                                                                        <name>next</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>!
                                                            <call>
                                                                <name><name>seen</name>.
                                                                    <name>containsKey</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>entry</name>.
                                                                                    <name>getKey</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>seen</name>.
                                                                            <name>put</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>entry</name>.
                                                                                            <name>getKey</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>entry</name>.
                                                                                            <name>getValue</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <return>return
                                                                <expr>
                                                                    <call>
                                                                        <name><name>entry</name>.
                                                                            <name>getKey</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>mapIterator</name>.
                                                                <name>hasNext</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>entryIterator</name>
                                                                =
                                                                <call>
                                                                    <name><name>mapIterator</name>.
                                                                        <name>next</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                .
                                                                <call>
                                                                    <name>entrySet</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                .
                                                                <call>
                                                                    <name>iterator</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <return>return
                                                            <expr>
                                                                <call>
                                                                    <name>endOfData</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                    }
                                </block>
                            </while>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * {@inheritDoc}
                *
                * &lt;p&gt;The collection's iterator traverses the values for the first row,
                * the values for the second row, and so on.
                */
            </comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Collection</name>
                        <argument_list>&lt;
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>values</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>values</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>
                            <name>Map</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>R</name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Map</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>rowMap</name>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>R</name>
                            </argument>
                            ,
                            <argument>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>rowMap</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>R</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Map</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>rowMap</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(<name>result</name> == <name>null</name>) ? <name>rowMap</name> =
                            <call>
                                <name>createRowMap</name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>R</name>
                            </argument>
                            ,
                            <argument>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>createRowMap</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>RowMap</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <annotation>@
                    <name>WeakOuter</name>
                </annotation>
                class <name>RowMap</name>
                <super>
                    <extends>extends
                        <name>
                            <name>ViewCachingAbstractMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>R</name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Map</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>containsKey</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>containsRow</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// performing cast only when key is in backing map and has the correct type
                    </comment>
                    <function>
                        <type>
                            <annotation>@
                                <name>SuppressWarnings</name>
                                <argument_list>("unchecked")</argument_list>
                            </annotation>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Map</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>get</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>containsRow</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ?
                                    <call>
                                        <name>row</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>R</name>)
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    :
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Map</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>remove</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>(<name>key</name> == <name>null</name>) ? <name>null</name> :
                                    <call>
                                        <name><name>backingMap</name>.
                                            <name>remove</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>protected</specifier>
                            <name>
                                <name>Set</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>R</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Map</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>createEntrySet</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>EntrySet</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <class>
                        <annotation>@
                            <name>WeakOuter</name>
                        </annotation>
                        class <name>EntrySet</name>
                        <super>
                            <extends>extends
                                <name>
                                    <name>TableSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Entry</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>R</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>
                                                            <name>Map</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>C</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </super>
                        <block>{
                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>
                                        <name>Iterator</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>
                                                    <name>Entry</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>R</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>
                                                                <name>Map</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>C</name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>V</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </type>
                                <name>iterator</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>Maps</name>.
                                                    <name>asMapEntryIterator</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>backingMap</name>.
                                                                    <name>keySet</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>new
                                                            <class>
                                                                <super>
                                                                    <name>
                                                                        <name>Function</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>R</name>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <name>
                                                                                    <name>Map</name>
                                                                                    <argument_list>&lt;
                                                                                        <argument>
                                                                                            <name>C</name>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <name>V</name>
                                                                                        </argument>
                                                                                        &gt;
                                                                                    </argument_list>
                                                                                </name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </super>
                                                                <argument_list>()</argument_list>
                                                                <block>{
                                                                    <function>
                                                                        <type>
                                                                            <annotation>@
                                                                                <name>Override</name>
                                                                            </annotation>
                                                                            <specifier>public</specifier>
                                                                            <name>
                                                                                <name>Map</name>
                                                                                <argument_list>&lt;
                                                                                    <argument>
                                                                                        <name>C</name>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <name>V</name>
                                                                                    </argument>
                                                                                    &gt;
                                                                                </argument_list>
                                                                            </name>
                                                                        </type>
                                                                        <name>apply</name>
                                                                        <parameter_list>(
                                                                            <param>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>R</name>
                                                                                    </type>
                                                                                    <name>rowKey</name>
                                                                                </decl>
                                                                            </param>
                                                                            )
                                                                        </parameter_list>
                                                                        <block>{
                                                                            <return>return
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>row</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>rowKey</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>
                                                                    }
                                                                </block>
                                                            </class>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>int</name>
                                </type>
                                <name>size</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>backingMap</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>contains</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>obj</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>obj</name>
                                                <name>instanceof</name>
                                                <name>Entry</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>
                                                                <name>Entry</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>entry</name> =
                                                        <init>
                                                            <expr>(
                                                                <name>
                                                                    <name>Entry</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                                )
                                                                <name>obj</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name><name>entry</name>.
                                                                <name>getKey</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name>null</name>
                                                        &amp;&amp;
                                                        <call>
                                                            <name><name>entry</name>.
                                                                <name>getValue</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        <name>instanceof</name>
                                                        <name>Map</name>
                                                        &amp;&amp;
                                                        <call>
                                                            <name><name>Collections2</name>.
                                                                <name>safeContains</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>backingMap</name>.
                                                                                <name>entrySet</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>entry</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <return>return <expr>false</expr>;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>remove</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>obj</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>obj</name>
                                                <name>instanceof</name>
                                                <name>Entry</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>
                                                                <name>Entry</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>entry</name> =
                                                        <init>
                                                            <expr>(
                                                                <name>
                                                                    <name>Entry</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                                )
                                                                <name>obj</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name><name>entry</name>.
                                                                <name>getKey</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name>null</name>
                                                        &amp;&amp;
                                                        <call>
                                                            <name><name>entry</name>.
                                                                <name>getValue</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        <name>instanceof</name>
                                                        <name>Map</name>
                                                        &amp;&amp;
                                                        <call>
                                                            <name><name>backingMap</name>.
                                                                <name>entrySet</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>remove</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>entry</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <return>return <expr>false</expr>;
                                    </return>
                                    }
                                </block>
                            </function>
                            }
                        </block>
                    </class>
                    }
                </block>
            </class>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>ColumnMap</name>
                    </type>
                    <name>columnMap</name>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            ,
                            <argument>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>R</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>columnMap</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ColumnMap</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>columnMap</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(<name>result</name> == <name>null</name>) ? <name>columnMap</name> = new
                            <call>
                                <name>ColumnMap</name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <annotation>@
                    <name>WeakOuter</name>
                </annotation>
                <specifier>private</specifier>
                class <name>ColumnMap</name>
                <super>
                    <extends>extends
                        <name>
                            <name>ViewCachingAbstractMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Map</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>R</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <comment type="line">// The cast to C occurs only when the key is in the map, implying that it
                    </comment>
                    <comment type="line">// has the correct type.</comment>
                    <function>
                        <type>
                            <annotation>@
                                <name>SuppressWarnings</name>
                                <argument_list>("unchecked")</argument_list>
                            </annotation>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Map</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>R</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>get</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>containsColumn</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ?
                                    <call>
                                        <name>column</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>C</name>)
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    :
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>containsKey</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>containsColumn</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Map</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>R</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>remove</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>containsColumn</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ?
                                    <call>
                                        <name>removeColumn</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    :
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Set</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Map</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>R</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>createEntrySet</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>ColumnMapEntrySet</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Set</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>keySet</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>columnKeySet</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Collection</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Map</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>R</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>createValues</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>ColumnMapValues</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <class>
                        <annotation>@
                            <name>WeakOuter</name>
                        </annotation>
                        class <name>ColumnMapEntrySet</name>
                        <super>
                            <extends>extends
                                <name>
                                    <name>TableSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Entry</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>
                                                            <name>Map</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>R</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </super>
                        <block>{
                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>
                                        <name>Iterator</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>
                                                    <name>Entry</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>C</name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>
                                                                <name>Map</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>R</name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>V</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </type>
                                <name>iterator</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>Maps</name>.
                                                    <name>asMapEntryIterator</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>columnKeySet</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>new
                                                            <class>
                                                                <super>
                                                                    <name>
                                                                        <name>Function</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <name>
                                                                                    <name>Map</name>
                                                                                    <argument_list>&lt;
                                                                                        <argument>
                                                                                            <name>R</name>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <name>V</name>
                                                                                        </argument>
                                                                                        &gt;
                                                                                    </argument_list>
                                                                                </name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </super>
                                                                <argument_list>()</argument_list>
                                                                <block>{
                                                                    <function>
                                                                        <type>
                                                                            <annotation>@
                                                                                <name>Override</name>
                                                                            </annotation>
                                                                            <specifier>public</specifier>
                                                                            <name>
                                                                                <name>Map</name>
                                                                                <argument_list>&lt;
                                                                                    <argument>
                                                                                        <name>R</name>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <name>V</name>
                                                                                    </argument>
                                                                                    &gt;
                                                                                </argument_list>
                                                                            </name>
                                                                        </type>
                                                                        <name>apply</name>
                                                                        <parameter_list>(
                                                                            <param>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>C</name>
                                                                                    </type>
                                                                                    <name>columnKey</name>
                                                                                </decl>
                                                                            </param>
                                                                            )
                                                                        </parameter_list>
                                                                        <block>{
                                                                            <return>return
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>column</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>columnKey
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>
                                                                    }
                                                                </block>
                                                            </class>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>int</name>
                                </type>
                                <name>size</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <call>
                                                <name>columnKeySet</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>size</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>contains</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>obj</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>obj</name>
                                                <name>instanceof</name>
                                                <name>Entry</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>
                                                                <name>Entry</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>entry</name> =
                                                        <init>
                                                            <expr>(
                                                                <name>
                                                                    <name>Entry</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                                )
                                                                <name>obj</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name>containsColumn</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>entry</name>.
                                                                                    <name>getKey</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// The cast to C occurs only when the
                                                                key is in the map, implying
                                                            </comment>
                                                            <comment type="line">// that it has the correct type.
                                                            </comment>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <annotation>@
                                                                            <name>SuppressWarnings</name>
                                                                            <argument_list>("unchecked")</argument_list>
                                                                        </annotation>
                                                                        <name>C</name>
                                                                    </type>
                                                                    <name>columnKey</name> =
                                                                    <init>
                                                                        <expr>(<name>C</name>)
                                                                            <call>
                                                                                <name><name>entry</name>.
                                                                                    <name>getKey</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <return>return
                                                                <expr>
                                                                    <call>
                                                                        <name>get</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>columnKey</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>equals</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>entry</name>.
                                                                                            <name>getValue</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <return>return <expr>false</expr>;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>remove</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>obj</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name>contains</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>obj</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>
                                                                <name>Entry</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>?</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>entry</name> =
                                                        <init>
                                                            <expr>(
                                                                <name>
                                                                    <name>Entry</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <name>?</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                                )
                                                                <name>obj</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>removeColumn</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>entry</name>.
                                                                                <name>getKey</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <return>return <expr>true</expr>;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <return>return <expr>false</expr>;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>removeAll</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Collection</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>?</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>c</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <comment type="block">/*
                                        * We can't inherit the normal implementation (which calls
                                        * Sets.removeAllImpl(Set, *Collection*) because, under some
                                        * circumstances, it attempts to call columnKeySet().iterator().remove,
                                        * which is unsupported.
                                        */
                                    </comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>checkNotNull</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>c</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>Sets</name>.
                                                    <name>removeAllImpl</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>c</name>.
                                                                    <name>iterator</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>retainAll</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Collection</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>?</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>c</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>checkNotNull</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>c</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>boolean</name>
                                            </type>
                                            <name>changed</name> =
                                            <init>
                                                <expr>false</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <for>for (
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>C</name>
                                                </type>
                                                <name>columnKey</name> :
                                                <range>
                                                    <expr>
                                                        <call>
                                                            <name><name>Lists</name>.
                                                                <name>newArrayList</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>columnKeySet</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        .
                                                                        <call>
                                                                            <name>iterator</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </range>
                                            </decl>
                                        </init>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <call>
                                                            <name><name>c</name>.
                                                                <name>contains</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>Maps</name>.
                                                                                <name>immutableEntry</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>columnKey</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>column</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            columnKey
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>removeColumn</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>columnKey</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>changed</name>
                                                                = true
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </for>
                                    <return>return
                                        <expr>
                                            <name>changed</name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>
                            }
                        </block>
                    </class>

                    <class>
                        <annotation>@
                            <name>WeakOuter</name>
                        </annotation>
                        <specifier>private</specifier>
                        class <name>ColumnMapValues</name>
                        <super>
                            <extends>extends <name>Maps</name>.
                                <name>
                                    <name>Values</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Map</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>R</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </super>
                        <block>{
                            <constructor>
                                <name>ColumnMapValues</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>super</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>ColumnMap</name>.
                                                                <name>this</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </constructor>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>remove</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>obj</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <for>for (
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>
                                                                    <name>Map</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>R</name>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <name>V</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>entry</name> :
                                                <range>
                                                    <expr>
                                                        <call>
                                                            <name><name>ColumnMap</name>.<name>this</name>.
                                                                <name>entrySet</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </range>
                                            </decl>
                                        </init>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>entry</name>.
                                                                <name>getValue</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>equals</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>obj</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>removeColumn</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>entry</name>.
                                                                                        <name>getKey</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <return>return <expr>true</expr>;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </for>
                                    <return>return <expr>false</expr>;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>removeAll</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Collection</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>?</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>c</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>checkNotNull</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>c</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>boolean</name>
                                            </type>
                                            <name>changed</name> =
                                            <init>
                                                <expr>false</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <for>for (
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>C</name>
                                                </type>
                                                <name>columnKey</name> :
                                                <range>
                                                    <expr>
                                                        <call>
                                                            <name><name>Lists</name>.
                                                                <name>newArrayList</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>columnKeySet</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        .
                                                                        <call>
                                                                            <name>iterator</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </range>
                                            </decl>
                                        </init>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>c</name>.
                                                                <name>contains</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>column</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>columnKey</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>removeColumn</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>columnKey</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>changed</name>
                                                                = true
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </for>
                                    <return>return
                                        <expr>
                                            <name>changed</name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <annotation>@
                                        <name>Override</name>
                                    </annotation>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>retainAll</name>
                                <parameter_list>(
                                    <param>
                                        <decl>
                                            <type>
                                                <name>
                                                    <name>Collection</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>?</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                            </type>
                                            <name>c</name>
                                        </decl>
                                    </param>
                                    )
                                </parameter_list>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>checkNotNull</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>c</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>boolean</name>
                                            </type>
                                            <name>changed</name> =
                                            <init>
                                                <expr>false</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <for>for (
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>C</name>
                                                </type>
                                                <name>columnKey</name> :
                                                <range>
                                                    <expr>
                                                        <call>
                                                            <name><name>Lists</name>.
                                                                <name>newArrayList</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>columnKeySet</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        .
                                                                        <call>
                                                                            <name>iterator</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </range>
                                            </decl>
                                        </init>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <call>
                                                            <name><name>c</name>.
                                                                <name>contains</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>column</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>columnKey</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>removeColumn</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>columnKey</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>changed</name>
                                                                = true
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </for>
                                    <return>return
                                        <expr>
                                            <name>changed</name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>
                            }
                        </block>
                    </class>
                    }
                </block>
            </class>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            }
        </block>
    </class>
</unit>
