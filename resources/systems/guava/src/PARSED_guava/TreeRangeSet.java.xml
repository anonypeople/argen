<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\collect\TreeRangeSet.java">
    <comment type="block">/*
        * Copyright (C) 2011 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
        * in compliance with the License. You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software distributed under the License
        * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
        * or implied. See the License for the specific language governing permissions and limitations under
        * the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>collect</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkArgument</name>
        </name>
        ;
    </import>
    <import>import static
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.<name>Preconditions</name>.
            <name>checkNotNull</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>Beta</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtIncompatible</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>VisibleForTesting</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>base</name>.
            <name>MoreObjects</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Collection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Comparator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.<name>Map</name>.
            <name>Entry</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>NavigableMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>NoSuchElementException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Set</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>TreeMap</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>annotation</name>.
            <name>Nullable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * An implementation of {@link RangeSet} backed by a {@link TreeMap}.
        *
        * @author Louis Wasserman
        * @since 14.0
        */
    </comment>
    <class>
        <annotation>@
            <name>Beta</name>
        </annotation>
        <annotation>@
            <name>GwtIncompatible</name>
            <argument_list>("uses NavigableMap")</argument_list>
        </annotation>
        <specifier>public</specifier>
        class
        <name>
            <name>TreeRangeSet</name>
            <argument_list>&lt;
                <argument>
                    <name>C</name>
                    <extends>extends
                        <name>
                            <name>Comparable</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>?</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </argument>
                &gt;
            </argument_list>
        </name>
        <super>
            <extends>extends
                <name>
                    <name>AbstractRangeSet</name>
                    <argument_list>&lt;
                        <argument>
                            <name>C</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <annotation>@
                            <name>VisibleForTesting</name>
                        </annotation>
                        <specifier>final</specifier>
                        <name>
                            <name>NavigableMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Cut</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Range</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>rangesByLowerBound</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates an empty {@code TreeRangeSet} instance.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>C</name>
                            <extends>extends
                                <name>
                                    <name>Comparable</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>TreeRangeSet</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>create</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>
                                    <name>TreeRangeSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>
                                                    <name>TreeMap</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>
                                                                <name>Cut</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>C</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <name>
                                                                <name>Range</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>C</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a {@code TreeRangeSet} initialized with the ranges in the specified range set.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>C</name>
                            <extends>extends
                                <name>
                                    <name>Comparable</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>TreeRangeSet</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>create</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>RangeSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>rangeSet</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>TreeRangeSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>create</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>result</name>.
                                    <name>addAll</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rangeSet</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <constructor>
                <specifier>private</specifier>
                <name>TreeRangeSet</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>NavigableMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>rangesByLowerCut</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>rangesByLowerBound</name>
                            </name>
                            =
                            <name>rangesByLowerCut</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>
                            <name>Set</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Range</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>asRanges</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>
                            <name>Set</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Range</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>asDescendingSetOfRanges</name>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Set</name>
                        <argument_list>&lt;
                            <argument>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>asRanges</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Set</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>asRanges</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(<name>result</name> == <name>null</name>) ? <name>asRanges</name> = new
                            <call>
                                <name>AsRanges</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>rangesByLowerBound</name>.
                                                    <name>values</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Set</name>
                        <argument_list>&lt;
                            <argument>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>asDescendingSetOfRanges</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Set</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>asDescendingSetOfRanges</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(<name>result</name> == <name>null</name>)
                            ? <name>asDescendingSetOfRanges</name> = new
                            <call>
                                <name>AsRanges</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>rangesByLowerBound</name>.
                                                    <name>descendingMap</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>values</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <specifier>final</specifier>
                class <name>AsRanges</name>
                <super>
                    <extends>extends
                        <name>
                            <name>ForwardingCollection</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Range</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                    <implements>implements
                        <name>
                            <name>Set</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Range</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </implements>
                </super>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>
                                    <name>Collection</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>delegate</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>AsRanges</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Collection</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>delegate</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>delegate</name>
                                    </name>
                                    =
                                    <name>delegate</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>protected</specifier>
                            <name>
                                <name>Collection</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>delegate</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>delegate</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>hashCode</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Sets</name>.
                                            <name>hashCodeImpl</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>equals</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Object</name>
                                    </type>
                                    <name>o</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Sets</name>.
                                            <name>equalsImpl</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>o</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <annotation>@
                        <name>Nullable</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Range</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>rangeContaining</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>C</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Entry</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>floorEntry</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>rangesByLowerBound</name>.
                                            <name>floorEntry</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Cut</name>.
                                                            <name>belowValue</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>floorEntry</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>floorEntry</name>.
                                        <name>getValue</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>contains</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>value</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>floorEntry</name>.
                                                <name>getValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// TODO(kevinb): revisit this design choice</comment>
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>encloses</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>range</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>range</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Entry</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>floorEntry</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>rangesByLowerBound</name>.
                                            <name>floorEntry</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>range</name>.
                                                        <name>lowerBound</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>floorEntry</name>
                            != <name>null</name> &amp;&amp;
                            <call>
                                <name><name>floorEntry</name>.
                                    <name>getValue</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>encloses</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>range</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Nullable</name>
                    </annotation>
                    <specifier>private</specifier>
                    <name>
                        <name>Range</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>rangeEnclosing</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>range</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>range</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Entry</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>floorEntry</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>rangesByLowerBound</name>.
                                            <name>floorEntry</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>range</name>.
                                                        <name>lowerBound</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(<name>floorEntry</name> != <name>null</name> &amp;&amp;
                            <call>
                                <name><name>floorEntry</name>.
                                    <name>getValue</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>encloses</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>range</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            )
                            ?
                            <call>
                                <name><name>floorEntry</name>.
                                    <name>getValue</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Range</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>span</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Entry</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>firstEntry</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>rangesByLowerBound</name>.
                                            <name>firstEntry</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Entry</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>lastEntry</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>rangesByLowerBound</name>.
                                            <name>lastEntry</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>firstEntry</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NoSuchElementException</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>Range</name>.
                                    <name>create</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>firstEntry</name>.
                                                    <name>getValue</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <name>lowerBound</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>lastEntry</name>.
                                                    <name>getValue</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <name>upperBound</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>add</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>rangeToAdd</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rangeToAdd</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>rangeToAdd</name>.
                                        <name>isEmpty</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// We will use { } to illustrate ranges currently in the range set, and &lt;
                        &gt;</comment>
                    <comment type="line">// to illustrate rangeToAdd.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Cut</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>lbToAdd</name> =
                            <init>
                                <expr>
                                    <name><name>rangeToAdd</name>.
                                        <name>lowerBound</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Cut</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>ubToAdd</name> =
                            <init>
                                <expr>
                                    <name><name>rangeToAdd</name>.
                                        <name>upperBound</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Entry</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>entryBelowLB</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>rangesByLowerBound</name>.
                                            <name>lowerEntry</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>lbToAdd</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entryBelowLB</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// { &lt;</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </type>
                                        <name>rangeBelowLB</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>entryBelowLB</name>.
                                                        <name>getValue</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>rangeBelowLB</name>.<name>upperBound</name>.
                                                    <name>compareTo</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>lbToAdd</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            &gt;= 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// { &lt; }, and we will need to coalesce</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>rangeBelowLB</name>.<name>upperBound</name>.
                                                                <name>compareTo</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ubToAdd</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        &gt;= 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// { &lt; &gt; }</comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>ubToAdd</name>
                                                                =
                                                                <name><name>rangeBelowLB</name>.
                                                                    <name>upperBound</name>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <comment type="block">/*
                                                            * TODO(cpovirk): can we just "return;" here? Or, can we
                                                            remove this if() entirely? If
                                                            * not, add tests to demonstrate the problem with each
                                                            approach
                                                            */
                                                        </comment>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name>lbToAdd</name>
                                                    =
                                                    <name><name>rangeBelowLB</name>.
                                                        <name>lowerBound</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Entry</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>entryBelowUB</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>rangesByLowerBound</name>.
                                            <name>floorEntry</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ubToAdd</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entryBelowUB</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// { &gt;</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </type>
                                        <name>rangeBelowUB</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>entryBelowUB</name>.
                                                        <name>getValue</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>rangeBelowUB</name>.<name>upperBound</name>.
                                                    <name>compareTo</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ubToAdd</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            &gt;= 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// { &gt; }, and we need to coalesce</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>ubToAdd</name>
                                                    =
                                                    <name><name>rangeBelowUB</name>.
                                                        <name>upperBound</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// Remove ranges which are strictly enclosed.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>rangesByLowerBound</name>.
                                    <name>subMap</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>lbToAdd</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>ubToAdd</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>clear</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>replaceRangeWithSameLowerBound</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Range</name>.
                                                    <name>create</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>lbToAdd</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>ubToAdd</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>remove</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>rangeToRemove</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkNotNull</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rangeToRemove</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>rangeToRemove</name>.
                                        <name>isEmpty</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// We will use { } to illustrate ranges currently in the range set, and &lt;
                        &gt;</comment>
                    <comment type="line">// to illustrate rangeToRemove.</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Entry</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>entryBelowLB</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>rangesByLowerBound</name>.
                                            <name>lowerEntry</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>rangeToRemove</name>.
                                                        <name>lowerBound</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entryBelowLB</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// { &lt;</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </type>
                                        <name>rangeBelowLB</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>entryBelowLB</name>.
                                                        <name>getValue</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>rangeBelowLB</name>.<name>upperBound</name>.
                                                    <name>compareTo</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>rangeToRemove</name>.
                                                                <name>lowerBound</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            &gt;= 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// { &lt; }, and we will need to subdivide</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>rangeToRemove</name>.
                                                                <name>hasUpperBound</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        &amp;&amp;
                                                        <call>
                                                            <name><name>rangeBelowLB</name>.<name>upperBound</name>.
                                                                <name>compareTo</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>rangeToRemove</name>.
                                                                            <name>upperBound</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        &gt;= 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// { &lt; &gt; }</comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>replaceRangeWithSameLowerBound</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>Range</name>.
                                                                                        <name>create</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    rangeToRemove</name>
                                                                                                    .
                                                                                                    <name>upperBound
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    rangeBelowLB</name>.
                                                                                                    <name>upperBound
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>replaceRangeWithSameLowerBound</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>Range</name>.
                                                                            <name>create</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>rangeBelowLB</name>.
                                                                                        <name>lowerBound</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>rangeToRemove</name>.
                                                                                        <name>lowerBound</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Entry</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>entryBelowUB</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>rangesByLowerBound</name>.
                                            <name>floorEntry</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>rangeToRemove</name>.
                                                        <name>upperBound</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entryBelowUB</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// { &gt;</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </type>
                                        <name>rangeBelowUB</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>entryBelowUB</name>.
                                                        <name>getValue</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>rangeToRemove</name>.
                                                    <name>hasUpperBound</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>rangeBelowUB</name>.<name>upperBound</name>.
                                                    <name>compareTo</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>rangeToRemove</name>.
                                                                <name>upperBound</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            &gt;= 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// { &gt; }</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>replaceRangeWithSameLowerBound</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>Range</name>.
                                                                            <name>create</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>rangeToRemove</name>.
                                                                                        <name>upperBound</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>rangeBelowUB</name>.
                                                                                        <name>upperBound</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>rangesByLowerBound</name>.
                                    <name>subMap</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>rangeToRemove</name>.
                                                <name>lowerBound</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>rangeToRemove</name>.
                                                <name>upperBound</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>clear</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>replaceRangeWithSameLowerBound</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>range</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>range</name>.
                                        <name>isEmpty</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>rangesByLowerBound</name>.
                                                <name>remove</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>range</name>.
                                                            <name>lowerBound</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>rangesByLowerBound</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>range</name>.
                                                            <name>lowerBound</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>range</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>
                            <name>RangeSet</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>complement</name>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>RangeSet</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>complement</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>RangeSet</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>complement</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(<name>result</name> == <name>null</name>) ? <name>complement</name> = new
                            <call>
                                <name>Complement</name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <annotation>@
                    <name>VisibleForTesting</name>
                </annotation>
                <specifier>static</specifier>
                <specifier>final</specifier> class
                <name>
                    <name>RangesByUpperBound</name>
                    <argument_list>&lt;
                        <argument>
                            <name>C</name>
                            <extends>extends
                                <name>
                                    <name>Comparable</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <extends>extends
                        <name>
                            <name>AbstractNavigableMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Cut</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Range</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>NavigableMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>rangesByLowerBound</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * upperBoundWindow represents the headMap/subMap/tailMap view of the entire "ranges by upper
                        * bound" map; it's a constraint on the *keys*, and does not affect the values.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>upperBoundWindow</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>RangesByUpperBound</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>NavigableMap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>rangesByLowerBound</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>rangesByLowerBound</name>
                                    </name>
                                    =
                                    <name>rangesByLowerBound</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>upperBoundWindow</name>
                                    </name>
                                    =
                                    <call>
                                        <name><name>Range</name>.
                                            <name>all</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <constructor>
                        <specifier>private</specifier>
                        <name>RangesByUpperBound</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>NavigableMap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>rangesByLowerBound</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>upperBoundWindow</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>rangesByLowerBound</name>
                                    </name>
                                    =
                                    <name>rangesByLowerBound</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>upperBoundWindow</name>
                                    </name>
                                    =
                                    <name>upperBoundWindow</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>subMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>window</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>window</name>.
                                                <name>isConnected</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>upperBoundWindow</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>new
                                                <call>
                                                    <name>
                                                        <name>RangesByUpperBound</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>rangesByLowerBound</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>window</name>.
                                                                        <name>intersection</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>upperBoundWindow</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>ImmutableSortedMap</name>.
                                                        <name>of</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>subMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>fromKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>fromInclusive</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>toKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>toInclusive</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>subMap</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Range</name>.
                                                            <name>range</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fromKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fromInclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>toKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>toInclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>headMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>toKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>inclusive</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>subMap</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Range</name>.
                                                            <name>upTo</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>toKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>inclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>tailMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>fromKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>inclusive</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>subMap</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Range</name>.
                                                            <name>downTo</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fromKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>inclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Comparator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>?</name>
                                        <super>super
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>comparator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>Ordering</name>.
                                        <name>
                                            <name/>
                                        </name>
                                    </name>
                                    &lt;
                                    <name>
                                        <name>Cut</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                    &gt;
                                    <call>
                                        <name>natural</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>containsKey</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>get</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    !=
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Range</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>get</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>key</name>
                                        <name>instanceof</name>
                                        <name>Cut</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <try>try
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <annotation>@
                                                                <name>SuppressWarnings</name>
                                                                <argument_list>("unchecked")</argument_list>
                                                            </annotation>
                                                            <comment type="line">// we catch CCEs</comment>
                                                            <name>
                                                                <name>Cut</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>C</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>cut</name> =
                                                        <init>
                                                            <expr>(
                                                                <name>
                                                                    <name>Cut</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                                )
                                                                <name>key</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>!
                                                            <call>
                                                                <name><name>upperBoundWindow</name>.
                                                                    <name>contains</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>cut</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>
                                                                <name>Entry</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>
                                                                            <name>Cut</name>
                                                                            <argument_list>&lt;
                                                                                <argument>
                                                                                    <name>C</name>
                                                                                </argument>
                                                                                &gt;
                                                                            </argument_list>
                                                                        </name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>
                                                                            <name>Range</name>
                                                                            <argument_list>&lt;
                                                                                <argument>
                                                                                    <name>C</name>
                                                                                </argument>
                                                                                &gt;
                                                                            </argument_list>
                                                                        </name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>candidate</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>rangesByLowerBound</name>.
                                                                        <name>lowerEntry</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>cut</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>candidate</name>
                                                            != <name>null</name> &amp;&amp;
                                                            <call>
                                                                <name><name>candidate</name>.
                                                                    <name>getValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name><name>upperBound</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>cut</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <call>
                                                                        <name><name>candidate</name>.
                                                                            <name>getValue</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                            <catch>catch (
                                                <param>
                                                    <decl>
                                                        <type>
                                                            <name>ClassCastException</name>
                                                        </type>
                                                        <name>e</name>
                                                    </decl>
                                                </param>
                                                )
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </catch>
                                        </try>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Iterator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>entryIterator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="block">/*
                                * We want to start the iteration at the first range where the upper bound is in
                                * upperBoundWindow.
                                */
                            </comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>backingItr</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>upperBoundWindow</name>.
                                                <name>hasLowerBound</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>backingItr</name>
                                                =
                                                <call>
                                                    <name><name>rangesByLowerBound</name>.
                                                        <name>values</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>iterator</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>
                                                                    <name>Cut</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>lowerEntry</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>rangesByLowerBound</name>.
                                                                <name>lowerEntry</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>upperBoundWindow</name>.
                                                                                <name>lowerEndpoint</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>lowerEntry</name>
                                                    ==
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>backingItr</name>
                                                            =
                                                            <call>
                                                                <name><name>rangesByLowerBound</name>.
                                                                    <name>values</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>iterator</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>upperBoundWindow</name>.<name>
                                                                    lowerBound</name>.
                                                                    <name>isLessThan</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>lowerEntry</name>.
                                                                                    <name>getValue</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            .
                                                                            <name>upperBound</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>backingItr</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>rangesByLowerBound</name>.
                                                                            <name>tailMap</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>lowerEntry</name>.
                                                                                            <name>getKey</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>true</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>values</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>iterator</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>backingItr</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>rangesByLowerBound</name>.
                                                                            <name>tailMap</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            upperBoundWindow</name>.
                                                                                            <name>lowerEndpoint</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>true</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>values</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>iterator</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>AbstractIterator</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>
                                                            <name>Entry</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>
                                                                        <name>Cut</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>
                                                                        <name>Range</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>protected</specifier>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>
                                                                    <name>Cut</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>computeNext</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>!
                                                                <call>
                                                                    <name><name>backingItr</name>.
                                                                        <name>hasNext</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>endOfData</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </type>
                                                            <name>range</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>backingItr</name>.
                                                                            <name>next</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>upperBoundWindow</name>.<name>
                                                                        upperBound</name>.
                                                                        <name>isLessThan</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>range</name>.
                                                                                    <name>upperBound</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>endOfData</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>Maps</name>.
                                                                                <name>immutableEntry</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>range</name>.
                                                                                            <name>upperBound</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>range</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Iterator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>descendingEntryIterator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Collection</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>candidates</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>upperBoundWindow</name>.
                                                <name>hasUpperBound</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>candidates</name>
                                                =
                                                <call>
                                                    <name><name>rangesByLowerBound</name>.
                                                        <name>headMap</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>upperBoundWindow</name>.
                                                                        <name>upperEndpoint</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>false</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>descendingMap</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>values</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>candidates</name>
                                                =
                                                <call>
                                                    <name><name>rangesByLowerBound</name>.
                                                        <name>descendingMap</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>values</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>PeekingIterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>backingItr</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Iterators</name>.
                                                    <name>peekingIterator</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>candidates</name>.
                                                                    <name>iterator</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>backingItr</name>.
                                                <name>hasNext</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &amp;&amp;
                                        <call>
                                            <name><name>upperBoundWindow</name>.<name>upperBound</name>.
                                                <name>isLessThan</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>backingItr</name>.
                                                                <name>peek</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <name>upperBound</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>backingItr</name>.
                                                        <name>next</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>AbstractIterator</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>
                                                            <name>Entry</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>
                                                                        <name>Cut</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>
                                                                        <name>Range</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>protected</specifier>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>
                                                                    <name>Cut</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>computeNext</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>!
                                                                <call>
                                                                    <name><name>backingItr</name>.
                                                                        <name>hasNext</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>endOfData</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </type>
                                                            <name>range</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>backingItr</name>.
                                                                            <name>next</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>upperBoundWindow</name>.<name>
                                                                    lowerBound</name>.
                                                                    <name>isLessThan</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>range</name>.
                                                                                <name>upperBound</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ?
                                                            <call>
                                                                <name><name>Maps</name>.
                                                                    <name>immutableEntry</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>range</name>.
                                                                                <name>upperBound</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>range</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            :
                                                            <call>
                                                                <name>endOfData</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>size</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>upperBoundWindow</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>Range</name>.
                                                                <name>all</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>rangesByLowerBound</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Iterators</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>entryIterator</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isEmpty</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>upperBoundWindow</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Range</name>.
                                                            <name>all</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ?
                                    <call>
                                        <name><name>rangesByLowerBound</name>.
                                            <name>isEmpty</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    : !
                                    <call>
                                        <name>entryIterator</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>hasNext</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class
                <name>
                    <name>ComplementRangesByLowerBound</name>
                    <argument_list>&lt;
                        <argument>
                            <name>C</name>
                            <extends>extends
                                <name>
                                    <name>Comparable</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <extends>extends
                        <name>
                            <name>AbstractNavigableMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Cut</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Range</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>NavigableMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>positiveRangesByLowerBound</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>NavigableMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>positiveRangesByUpperBound</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * complementLowerBoundWindow represents the headMap/subMap/tailMap view of the entire
                        * "complement ranges by lower bound" map; it's a constraint on the *keys*, and does not affect
                        * the values.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>complementLowerBoundWindow</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>ComplementRangesByLowerBound</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>NavigableMap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>positiveRangesByLowerBound</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>this</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>positiveRangesByLowerBound</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>Range</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    &lt;
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                    &gt;
                                                    <call>
                                                        <name>all</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <constructor>
                        <specifier>private</specifier>
                        <name>ComplementRangesByLowerBound</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>NavigableMap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>positiveRangesByLowerBound</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>window</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>positiveRangesByLowerBound</name>
                                    </name>
                                    =
                                    <name>positiveRangesByLowerBound</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>positiveRangesByUpperBound</name>
                                    </name>
                                    = new
                                    <call>
                                        <name>
                                            <name>RangesByUpperBound</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>positiveRangesByLowerBound</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>complementLowerBoundWindow</name>
                                    </name>
                                    =
                                    <name>window</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>subMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>subWindow</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>complementLowerBoundWindow</name>.
                                                <name>isConnected</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>subWindow</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>ImmutableSortedMap</name>.
                                                        <name>of</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>subWindow</name>
                                                =
                                                <call>
                                                    <name><name>subWindow</name>.
                                                        <name>intersection</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>complementLowerBoundWindow</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return
                                            <expr>new
                                                <call>
                                                    <name>
                                                        <name>ComplementRangesByLowerBound</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>positiveRangesByLowerBound</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>subWindow</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>subMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>fromKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>fromInclusive</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>toKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>toInclusive</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>subMap</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Range</name>.
                                                            <name>range</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fromKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fromInclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>toKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>toInclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>headMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>toKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>inclusive</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>subMap</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Range</name>.
                                                            <name>upTo</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>toKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>inclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>tailMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>fromKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>inclusive</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>subMap</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Range</name>.
                                                            <name>downTo</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fromKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>inclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Comparator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>?</name>
                                        <super>super
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>comparator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>Ordering</name>.
                                        <name>
                                            <name/>
                                        </name>
                                    </name>
                                    &lt;
                                    <name>
                                        <name>Cut</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                    &gt;
                                    <call>
                                        <name>natural</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Iterator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>entryIterator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="block">/*
                                * firstComplementRangeLowerBound is the first complement range lower bound inside
                                * complementLowerBoundWindow. Complement range lower bounds are either positive range
                                upper
                                * bounds, or Cut.belowAll().
                                *
                                * positiveItr starts at the first positive range with lower bound greater than
                                * firstComplementRangeLowerBound. (Positive range lower bounds correspond to complement
                                range
                                * upper bounds.)
                                */
                            </comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Collection</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>positiveRanges</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>complementLowerBoundWindow</name>.
                                                <name>hasLowerBound</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>positiveRanges</name>
                                                =
                                                <call>
                                                    <name><name>positiveRangesByUpperBound</name>.
                                                        <name>tailMap</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>complementLowerBoundWindow</name>.
                                                                        <name>lowerEndpoint</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>complementLowerBoundWindow</name>.
                                                                        <name>lowerBoundType</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                ==
                                                                <name><name>BoundType</name>.
                                                                    <name>CLOSED</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>values</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>positiveRanges</name>
                                                =
                                                <call>
                                                    <name><name>positiveRangesByUpperBound</name>.
                                                        <name>values</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>PeekingIterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>positiveItr</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Iterators</name>.
                                                    <name>peekingIterator</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>positiveRanges</name>.
                                                                    <name>iterator</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>firstComplementRangeLowerBound</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>complementLowerBoundWindow</name>.
                                                <name>contains</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Cut</name>.
                                                            <name>
                                                                <name/>
                                                            </name>
                                                        </name>
                                                        &lt;<name>C</name>&gt;
                                                        <call>
                                                            <name>belowAll</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp;
                                        (!
                                        <call>
                                            <name><name>positiveItr</name>.
                                                <name>hasNext</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ||
                                        <call>
                                            <name><name>positiveItr</name>.
                                                <name>peek</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .<name>lowerBound</name> !=
                                        <name><name>Cut</name>.
                                            <name>
                                                <name/>
                                            </name>
                                        </name>
                                        &lt;<name>C</name>&gt;
                                        <call>
                                            <name>belowAll</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        )
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>firstComplementRangeLowerBound</name>
                                                =
                                                <call>
                                                    <name><name>Cut</name>.
                                                        <name>belowAll</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>positiveItr</name>.
                                                        <name>hasNext</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>firstComplementRangeLowerBound</name>
                                                        =
                                                        <call>
                                                            <name><name>positiveItr</name>.
                                                                <name>next</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <name>upperBound</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name><name>Iterators</name>.
                                                                <name>emptyIterator</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                </else>
                            </if>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>AbstractIterator</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>
                                                            <name>Entry</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>
                                                                        <name>Cut</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>
                                                                        <name>Range</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>
                                                            <name>Cut</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>C</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </type>
                                                    <name>nextComplementRangeLowerBound</name> =
                                                    <init>
                                                        <expr>
                                                            <name>firstComplementRangeLowerBound</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>

                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>protected</specifier>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>
                                                                    <name>Cut</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>computeNext</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>complementLowerBoundWindow</name>.<name>
                                                                        upperBound</name>.
                                                                        <name>isLessThan</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>nextComplementRangeLowerBound
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                || <name>nextComplementRangeLowerBound</name> ==
                                                                <name><name>Cut</name>.
                                                                    <name>
                                                                        <name/>
                                                                    </name>
                                                                </name>
                                                                &lt;<name>C</name>&gt;
                                                                <call>
                                                                    <name>aboveAll</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>endOfData</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </type>
                                                            <name>negativeRange</name>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>positiveItr</name>.
                                                                        <name>hasNext</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>
                                                                                <name>Range</name>
                                                                                <argument_list>&lt;
                                                                                    <argument>
                                                                                        <name>C</name>
                                                                                    </argument>
                                                                                    &gt;
                                                                                </argument_list>
                                                                            </name>
                                                                        </type>
                                                                        <name>positiveRange</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>positiveItr</name>.
                                                                                        <name>next</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>negativeRange</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>Range</name>.
                                                                                <name>create</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            nextComplementRangeLowerBound
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>positiveRange</name>
                                                                                            .
                                                                                            <name>lowerBound</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>nextComplementRangeLowerBound</name>
                                                                        =
                                                                        <name><name>positiveRange</name>.
                                                                            <name>upperBound</name>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>negativeRange</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>Range</name>.
                                                                                <name>create</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            nextComplementRangeLowerBound
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>Cut</name>.
                                                                                            <name>
                                                                                                <name/>
                                                                                            </name>
                                                                                        </name>
                                                                                        &lt;<name>C</name>&gt;
                                                                                        <call>
                                                                                            <name>aboveAll</name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>nextComplementRangeLowerBound</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>Cut</name>.
                                                                                <name>aboveAll</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>Maps</name>.
                                                                    <name>immutableEntry</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>negativeRange</name>.
                                                                                <name>lowerBound</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>negativeRange</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Iterator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>descendingEntryIterator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="block">/*
                                * firstComplementRangeUpperBound is the upper bound of the last complement range with
                                lower
                                * bound inside complementLowerBoundWindow.
                                *
                                * positiveItr starts at the first positive range with upper bound less than
                                * firstComplementRangeUpperBound. (Positive range upper bounds correspond to complement
                                range
                                * lower bounds.)
                                */
                            </comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>startingPoint</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>complementLowerBoundWindow</name>.
                                                    <name>hasUpperBound</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ?
                                            <call>
                                                <name><name>complementLowerBoundWindow</name>.
                                                    <name>upperEndpoint</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            :
                                            <name><name>Cut</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            &lt;<name>C</name>&gt;
                                            <call>
                                                <name>aboveAll</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>inclusive</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>complementLowerBoundWindow</name>.
                                                    <name>hasUpperBound</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>complementLowerBoundWindow</name>.
                                                    <name>upperBoundType</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name><name>BoundType</name>.
                                                <name>CLOSED</name>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>PeekingIterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>positiveItr</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Iterators</name>.
                                                    <name>peekingIterator</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>positiveRangesByUpperBound</name>.
                                                                    <name>headMap</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>startingPoint</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>inclusive</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>descendingMap</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>values</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>iterator</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>cut</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>positiveItr</name>.
                                                <name>hasNext</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>cut</name>
                                                = (
                                                <call>
                                                    <name><name>positiveItr</name>.
                                                        <name>peek</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .<name>upperBound</name> ==
                                                <name><name>Cut</name>.
                                                    <name>
                                                        <name/>
                                                    </name>
                                                </name>
                                                &lt;<name>C</name>&gt;
                                                <call>
                                                    <name>aboveAll</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                )
                                                ?
                                                <call>
                                                    <name><name>positiveItr</name>.
                                                        <name>next</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <name>lowerBound</name>
                                                :
                                                <call>
                                                    <name><name>positiveRangesByLowerBound</name>.
                                                        <name>higherKey</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>positiveItr</name>.
                                                                        <name>peek</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                .
                                                                <name>upperBound</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <call>
                                                    <name><name>complementLowerBoundWindow</name>.
                                                        <name>contains</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>Cut</name>.
                                                                    <name>
                                                                        <name/>
                                                                    </name>
                                                                </name>
                                                                &lt;<name>C</name>&gt;
                                                                <call>
                                                                    <name>belowAll</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ||
                                                <call>
                                                    <name><name>positiveRangesByLowerBound</name>.
                                                        <name>containsKey</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>Cut</name>.
                                                                        <name>belowAll</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name><name>Iterators</name>.
                                                                <name>emptyIterator</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>cut</name>
                                                        =
                                                        <call>
                                                            <name><name>positiveRangesByLowerBound</name>.
                                                                <name>higherKey</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>Cut</name>.
                                                                            <name>
                                                                                <name/>
                                                                            </name>
                                                                        </name>
                                                                        &lt;<name>C</name>&gt;
                                                                        <call>
                                                                            <name>belowAll</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                </else>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>firstComplementRangeUpperBound</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>MoreObjects</name>.
                                                    <name>firstNonNull</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>cut</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>Cut</name>.
                                                                <name>
                                                                    <name/>
                                                                </name>
                                                            </name>
                                                            &lt;<name>C</name>&gt;
                                                            <call>
                                                                <name>aboveAll</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>AbstractIterator</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>
                                                            <name>Entry</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>
                                                                        <name>Cut</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>
                                                                        <name>Range</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>
                                                            <name>Cut</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>C</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </type>
                                                    <name>nextComplementRangeUpperBound</name> =
                                                    <init>
                                                        <expr>
                                                            <name>firstComplementRangeUpperBound</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>

                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>protected</specifier>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>
                                                                    <name>Cut</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>computeNext</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>nextComplementRangeUpperBound</name>
                                                                ==
                                                                <name><name>Cut</name>.
                                                                    <name>
                                                                        <name/>
                                                                    </name>
                                                                </name>
                                                                &lt;<name>C</name>&gt;
                                                                <call>
                                                                    <name>belowAll</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>endOfData</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>positiveItr</name>.
                                                                                <name>hasNext</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>
                                                                                        <name>Range</name>
                                                                                        <argument_list>&lt;
                                                                                            <argument>
                                                                                                <name>C</name>
                                                                                            </argument>
                                                                                            &gt;
                                                                                        </argument_list>
                                                                                    </name>
                                                                                </type>
                                                                                <name>positiveRange</name> =
                                                                                <init>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                positiveItr</name>.
                                                                                                <name>next</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>
                                                                                        <name>Range</name>
                                                                                        <argument_list>&lt;
                                                                                            <argument>
                                                                                                <name>C</name>
                                                                                            </argument>
                                                                                            &gt;
                                                                                        </argument_list>
                                                                                    </name>
                                                                                </type>
                                                                                <name>negativeRange</name> =
                                                                                <init>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Range</name>.
                                                                                                <name>create</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            positiveRange</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                upperBound
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            nextComplementRangeUpperBound
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>nextComplementRangeUpperBound
                                                                                </name>
                                                                                =
                                                                                <name><name>positiveRange</name>.
                                                                                    <name>lowerBound</name>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            complementLowerBoundWindow</name>
                                                                                            .<name>lowerBound</name>.
                                                                                            <name>isLessThan</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        negativeRange</name>
                                                                                                        .
                                                                                                        <name>
                                                                                                            lowerBound
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <return>return
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>Maps</name>.
                                                                                                    <name>
                                                                                                        immutableEntry
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                negativeRange</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    lowerBound
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                negativeRange
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </return>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>
                                                                                        complementLowerBoundWindow</name>
                                                                                        .<name>lowerBound</name>.
                                                                                        <name>isLessThan</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>Cut</name>.
                                                                                                    <name>
                                                                                                        <name/>
                                                                                                    </name>
                                                                                                </name>
                                                                                                &lt;<name>C</name>&gt;
                                                                                                <call>
                                                                                                    <name>belowAll
                                                                                                    </name>
                                                                                                    <argument_list>()
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <decl_stmt>
                                                                                    <decl>
                                                                                        <type>
                                                                                            <name>
                                                                                                <name>Range</name>
                                                                                                <argument_list>&lt;
                                                                                                    <argument>
                                                                                                        <name>C</name>
                                                                                                    </argument>
                                                                                                    &gt;
                                                                                                </argument_list>
                                                                                            </name>
                                                                                        </type>
                                                                                        <name>negativeRange</name> =
                                                                                        <init>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Range</name>.
                                                                                                        <name>create
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        Cut</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        <name/>
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                &lt;<name>
                                                                                                                C</name>&gt;
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        belowAll
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        ()
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    nextComplementRangeUpperBound
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </init>
                                                                                    </decl>
                                                                                    ;
                                                                                </decl_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>
                                                                                            nextComplementRangeUpperBound
                                                                                        </name>
                                                                                        =
                                                                                        <call>
                                                                                            <name><name>Cut</name>.
                                                                                                <name>belowAll</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <return>return
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>Maps</name>.
                                                                                                <name>immutableEntry
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            Cut</name>.
                                                                                                            <name>
                                                                                                                <name/>
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        &lt;<name>
                                                                                                        C</name>&gt;
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                belowAll
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            negativeRange
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </return>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name>endOfData</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>size</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Iterators</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>entryIterator</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <annotation>@
                                <name>Nullable</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Range</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>get</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>key</name>
                                        <name>instanceof</name>
                                        <name>Cut</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <try>try
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <annotation>@
                                                                <name>SuppressWarnings</name>
                                                                <argument_list>("unchecked")</argument_list>
                                                            </annotation>
                                                            <name>
                                                                <name>Cut</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>C</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>cut</name> =
                                                        <init>
                                                            <expr>(
                                                                <name>
                                                                    <name>Cut</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                                )
                                                                <name>key</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <comment type="line">// tailMap respects the current window</comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>
                                                                <name>Entry</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>
                                                                            <name>Cut</name>
                                                                            <argument_list>&lt;
                                                                                <argument>
                                                                                    <name>C</name>
                                                                                </argument>
                                                                                &gt;
                                                                            </argument_list>
                                                                        </name>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <name>
                                                                            <name>Range</name>
                                                                            <argument_list>&lt;
                                                                                <argument>
                                                                                    <name>C</name>
                                                                                </argument>
                                                                                &gt;
                                                                            </argument_list>
                                                                        </name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>firstEntry</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name>tailMap</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>cut</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>true</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                .
                                                                <call>
                                                                    <name>firstEntry</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>firstEntry</name>
                                                            != <name>null</name> &amp;&amp;
                                                            <call>
                                                                <name><name>firstEntry</name>.
                                                                    <name>getKey</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>equals</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>cut</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <call>
                                                                        <name><name>firstEntry</name>.
                                                                            <name>getValue</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                            <catch>catch (
                                                <param>
                                                    <decl>
                                                        <type>
                                                            <name>ClassCastException</name>
                                                        </type>
                                                        <name>e</name>
                                                    </decl>
                                                </param>
                                                )
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </catch>
                                        </try>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>containsKey</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>get</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    !=
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <specifier>private</specifier>
                <specifier>final</specifier> class <name>Complement</name>
                <super>
                    <extends>extends
                        <name>
                            <name>TreeRangeSet</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <constructor>
                        <name>Complement</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>
                                                            <name>ComplementRangesByLowerBound</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>C</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>TreeRangeSet</name>.<name>this</name>.
                                                                        <name>rangesByLowerBound</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>add</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>rangeToAdd</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>TreeRangeSet</name>.<name>this</name>.
                                            <name>remove</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rangeToAdd</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>remove</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>rangeToRemove</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>TreeRangeSet</name>.<name>this</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rangeToRemove</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>contains</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>C</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>!
                                    <call>
                                        <name><name>TreeRangeSet</name>.<name>this</name>.
                                            <name>contains</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>RangeSet</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>complement</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>TreeRangeSet</name>.
                                        <name>this</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class
                <name>
                    <name>SubRangeSetRangesByLowerBound</name>
                    <argument_list>&lt;
                        <argument>
                            <name>C</name>
                            <extends>extends
                                <name>
                                    <name>Comparable</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>?</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </extends>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <super>
                    <extends>extends
                        <name>
                            <name>AbstractNavigableMap</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Cut</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                ,
                                <argument>
                                    <name>
                                        <name>Range</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <comment type="javadoc">/**
                        * lowerBoundWindow is the headMap/subMap/tailMap view; it only restricts the keys, and does not
                        * affect the values.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>lowerBoundWindow</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * restriction is the subRangeSet view; ranges are truncated to their intersection with
                        * restriction.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>restriction</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>NavigableMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>rangesByLowerBound</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>NavigableMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>
                                                <name>Range</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>rangesByUpperBound</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>private</specifier>
                        <name>SubRangeSetRangesByLowerBound</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>lowerBoundWindow</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>restriction</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>NavigableMap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>rangesByLowerBound</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>lowerBoundWindow</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>lowerBoundWindow</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>restriction</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>restriction</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>rangesByLowerBound</name>
                                    </name>
                                    =
                                    <call>
                                        <name>checkNotNull</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rangesByLowerBound</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>rangesByUpperBound</name>
                                    </name>
                                    = new
                                    <call>
                                        <name>
                                            <name>RangesByUpperBound</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rangesByLowerBound</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>subMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>window</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>window</name>.
                                                <name>isConnected</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>lowerBoundWindow</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>ImmutableSortedMap</name>.
                                                        <name>of</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <return>return
                                            <expr>new
                                                <call>
                                                    <name>
                                                        <name>SubRangeSetRangesByLowerBound</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>lowerBoundWindow</name>.
                                                                        <name>intersection</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>window</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>restriction</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>rangesByLowerBound</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>subMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>fromKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>fromInclusive</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>toKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>toInclusive</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>subMap</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Range</name>.
                                                            <name>range</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fromKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fromInclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>toKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>toInclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>headMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>toKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>inclusive</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>subMap</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Range</name>.
                                                            <name>upTo</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>toKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>inclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>NavigableMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>tailMap</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>fromKey</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>inclusive</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>subMap</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Range</name>.
                                                            <name>downTo</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fromKey</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BoundType</name>.
                                                                            <name>forBoolean</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>inclusive</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Comparator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>?</name>
                                        <super>super
                                            <name>
                                                <name>Cut</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>C</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>comparator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>Ordering</name>.
                                        <name>
                                            <name/>
                                        </name>
                                    </name>
                                    &lt;
                                    <name>
                                        <name>Cut</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>C</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                    &gt;
                                    <call>
                                        <name>natural</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>containsKey</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>get</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    !=
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <annotation>@
                                <name>Nullable</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Range</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>get</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <annotation>@
                                            <name>Nullable</name>
                                        </annotation>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>key</name>
                                        <name>instanceof</name>
                                        <name>Cut</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <try>try
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <annotation>@
                                                                <name>SuppressWarnings</name>
                                                                <argument_list>("unchecked")</argument_list>
                                                            </annotation>
                                                            <comment type="line">// we catch CCE's</comment>
                                                            <name>
                                                                <name>Cut</name>
                                                                <argument_list>&lt;
                                                                    <argument>
                                                                        <name>C</name>
                                                                    </argument>
                                                                    &gt;
                                                                </argument_list>
                                                            </name>
                                                        </type>
                                                        <name>cut</name> =
                                                        <init>
                                                            <expr>(
                                                                <name>
                                                                    <name>Cut</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                                )
                                                                <name>key</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>!
                                                            <call>
                                                                <name><name>lowerBoundWindow</name>.
                                                                    <name>contains</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>cut</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ||
                                                            <call>
                                                                <name><name>cut</name>.
                                                                    <name>compareTo</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>restriction</name>.
                                                                                <name>lowerBound</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            &lt; 0
                                                            ||
                                                            <call>
                                                                <name><name>cut</name>.
                                                                    <name>compareTo</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>restriction</name>.
                                                                                <name>upperBound</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            &gt;= 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>cut</name>.
                                                                            <name>equals</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>restriction</name>.
                                                                                        <name>lowerBound</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <comment type="line">// it might be present,
                                                                        truncated on the left
                                                                    </comment>
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>
                                                                                    <name>Range</name>
                                                                                    <argument_list>&lt;
                                                                                        <argument>
                                                                                            <name>C</name>
                                                                                        </argument>
                                                                                        &gt;
                                                                                    </argument_list>
                                                                                </name>
                                                                            </type>
                                                                            <name>candidate</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>Maps</name>.
                                                                                            <name>valueOrNull</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            rangesByLowerBound</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                floorEntry
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        cut
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>candidate</name>
                                                                                != <name>null</name> &amp;&amp;
                                                                                <call>
                                                                                    <name><name>candidate</name>.<name>
                                                                                        upperBound</name>.
                                                                                        <name>compareTo</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    restriction</name>.
                                                                                                    <name>lowerBound
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                &gt; 0
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <return>return
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>candidate</name>
                                                                                                .
                                                                                                <name>intersection
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            restriction
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </return>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>
                                                                                    <name>Range</name>
                                                                                    <argument_list>&lt;
                                                                                        <argument>
                                                                                            <name>C</name>
                                                                                        </argument>
                                                                                        &gt;
                                                                                    </argument_list>
                                                                                </name>
                                                                            </type>
                                                                            <name>result</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            rangesByLowerBound</name>.
                                                                                            <name>get</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>cut</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>result</name>
                                                                                !=
                                                                                <name>null</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <return>return
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>result</name>.
                                                                                                <name>intersection
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            restriction
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </return>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                            <catch>catch (
                                                <param>
                                                    <decl>
                                                        <type>
                                                            <name>ClassCastException</name>
                                                        </type>
                                                        <name>e</name>
                                                    </decl>
                                                </param>
                                                )
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </catch>
                                        </try>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Iterator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>entryIterator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>restriction</name>.
                                                <name>isEmpty</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>Iterators</name>.
                                                        <name>emptyIterator</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>completeRangeItr</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>lowerBoundWindow</name>.<name>upperBound</name>.
                                                <name>isLessThan</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>restriction</name>.
                                                            <name>lowerBound</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>Iterators</name>.
                                                        <name>emptyIterator</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>lowerBoundWindow</name>.<name>lowerBound</name>.
                                                        <name>isLessThan</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>restriction</name>.
                                                                    <name>lowerBound</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// starts at the first range with upper bound
                                                    strictly greater than restriction.lowerBound
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>completeRangeItr</name>
                                                        =
                                                        <call>
                                                            <name><name>rangesByUpperBound</name>.
                                                                <name>tailMap</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>restriction</name>.
                                                                            <name>lowerBound</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>false</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>values</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>iterator</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <comment type="line">// starts at the first range with lower bound above
                                                    lowerBoundWindow.lowerBound
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>completeRangeItr</name>
                                                        =
                                                        <call>
                                                            <name><name>rangesByLowerBound</name>.
                                                                <name>tailMap</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>lowerBoundWindow</name>.<name>
                                                                                lowerBound</name>.
                                                                                <name>endpoint</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>lowerBoundWindow</name>.
                                                                                <name>lowerBoundType</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        ==
                                                                        <name><name>BoundType</name>.
                                                                            <name>CLOSED</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>values</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>iterator</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                </else>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>upperBoundOnLowerBounds</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Ordering</name>.
                                                    <name>natural</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>min</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>lowerBoundWindow</name>.
                                                                <name>upperBound</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>Cut</name>.
                                                                    <name>belowValue</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>restriction</name>.
                                                                                <name>upperBound</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>AbstractIterator</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>
                                                            <name>Entry</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>
                                                                        <name>Cut</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>
                                                                        <name>Range</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>protected</specifier>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>
                                                                    <name>Cut</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>computeNext</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>!
                                                                <call>
                                                                    <name><name>completeRangeItr</name>.
                                                                        <name>hasNext</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>endOfData</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </type>
                                                            <name>nextRange</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>completeRangeItr</name>.
                                                                            <name>next</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>upperBoundOnLowerBounds</name>.
                                                                        <name>isLessThan</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>nextRange</name>.
                                                                                    <name>lowerBound</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>endOfData</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>nextRange</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>nextRange</name>.
                                                                                <name>intersection</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>restriction</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>Maps</name>.
                                                                                <name>immutableEntry</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>nextRange</name>.
                                                                                            <name>lowerBound</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>nextRange</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Iterator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>descendingEntryIterator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>restriction</name>.
                                                <name>isEmpty</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>Iterators</name>.
                                                        <name>emptyIterator</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Cut</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Cut</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>upperBoundOnLowerBounds</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Ordering</name>.
                                                    <name>natural</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>min</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>lowerBoundWindow</name>.
                                                                <name>upperBound</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>Cut</name>.
                                                                    <name>belowValue</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>restriction</name>.
                                                                                <name>upperBound</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>completeRangeItr</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>rangesByLowerBound</name>.
                                                    <name>headMap</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>upperBoundOnLowerBounds</name>.
                                                                    <name>endpoint</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>upperBoundOnLowerBounds</name>.
                                                                    <name>typeAsUpperBound</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            ==
                                                            <name><name>BoundType</name>.
                                                                <name>CLOSED</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>descendingMap</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>values</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>iterator</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>AbstractIterator</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>
                                                            <name>Entry</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>
                                                                        <name>Cut</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>
                                                                        <name>Range</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>()</argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <specifier>protected</specifier>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>
                                                                    <name>Cut</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>computeNext</name>
                                                <parameter_list>()</parameter_list>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>!
                                                                <call>
                                                                    <name><name>completeRangeItr</name>.
                                                                        <name>hasNext</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>endOfData</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>
                                                                    <name>Range</name>
                                                                    <argument_list>&lt;
                                                                        <argument>
                                                                            <name>C</name>
                                                                        </argument>
                                                                        &gt;
                                                                    </argument_list>
                                                                </name>
                                                            </type>
                                                            <name>nextRange</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>completeRangeItr</name>.
                                                                            <name>next</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>restriction</name>.<name>
                                                                        lowerBound</name>.
                                                                        <name>compareTo</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>nextRange</name>.
                                                                                    <name>upperBound</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                &gt;= 0
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>endOfData</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>nextRange</name>
                                                            =
                                                            <call>
                                                                <name><name>nextRange</name>.
                                                                    <name>intersection</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>restriction</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>lowerBoundWindow</name>.
                                                                        <name>contains</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>nextRange</name>.
                                                                                    <name>lowerBound</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>Maps</name>.
                                                                                <name>immutableEntry</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>nextRange</name>.
                                                                                            <name>lowerBound</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>nextRange</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>endOfData</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>size</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Iterators</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>entryIterator</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>RangeSet</name>
                        <argument_list>&lt;
                            <argument>
                                <name>C</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>subRangeSet</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>view</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>view</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Range</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            &lt;<name>C</name>&gt;
                                            <call>
                                                <name>all</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ? <name>this</name> : new
                            <call>
                                <name>SubRangeSet</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>view</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <specifier>private</specifier>
                <specifier>final</specifier> class <name>SubRangeSet</name>
                <super>
                    <extends>extends
                        <name>
                            <name>TreeRangeSet</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>C</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>
                                    <name>Range</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>C</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>restriction</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <name>SubRangeSet</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>restriction</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>
                                                            <name>SubRangeSetRangesByLowerBound</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>C</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Range</name>.
                                                                        <name>
                                                                            <name/>
                                                                        </name>
                                                                    </name>
                                                                    &lt;
                                                                    <name>
                                                                        <name>Cut</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>C</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                    &gt;
                                                                    <call>
                                                                        <name>all</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>restriction</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>TreeRangeSet</name>.<name>this</name>.
                                                                        <name>rangesByLowerBound</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>restriction</name>
                                    </name>
                                    =
                                    <name>restriction</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>encloses</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>range</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>restriction</name>.
                                                <name>isEmpty</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &amp;&amp;
                                        <call>
                                            <name><name>restriction</name>.
                                                <name>encloses</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>range</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>
                                                        <name>Range</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>C</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>enclosing</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>TreeRangeSet</name>.<name>this</name>.
                                                                <name>rangeEnclosing</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>range</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <return>return
                                            <expr>
                                                <name>enclosing</name>
                                                != <name>null</name> &amp;&amp; !
                                                <call>
                                                    <name><name>enclosing</name>.
                                                        <name>intersection</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>restriction</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>isEmpty</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <annotation>@
                                <name>Nullable</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Range</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>rangeContaining</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>C</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>restriction</name>.
                                                <name>contains</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>result</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>TreeRangeSet</name>.<name>this</name>.
                                                    <name>rangeContaining</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>value</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>(<name>result</name> == <name>null</name>) ? <name>null</name> :
                                    <call>
                                        <name><name>result</name>.
                                            <name>intersection</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>restriction</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>add</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>rangeToAdd</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>checkArgument</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>restriction</name>.
                                                            <name>encloses</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>rangeToAdd</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"Cannot add range %s to subRangeSet(%s)"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>rangeToAdd</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>restriction</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rangeToAdd</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>remove</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>rangeToRemove</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>rangeToRemove</name>.
                                                <name>isConnected</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>restriction</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>TreeRangeSet</name>.<name>this</name>.
                                                        <name>remove</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>rangeToRemove</name>.
                                                                        <name>intersection</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>restriction</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>contains</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>C</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>restriction</name>.
                                            <name>contains</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    &amp;&amp;
                                    <call>
                                        <name><name>TreeRangeSet</name>.<name>this</name>.
                                            <name>contains</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>clear</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>TreeRangeSet</name>.<name>this</name>.
                                            <name>remove</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>restriction</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>RangeSet</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>C</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>subRangeSet</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Range</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>C</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>view</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>view</name>.
                                                <name>encloses</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>restriction</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>this</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>view</name>.
                                                        <name>isConnected</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>restriction</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>new
                                                        <call>
                                                            <name>SubRangeSet</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>restriction</name>.
                                                                                <name>intersection</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>view</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name><name>ImmutableRangeSet</name>.
                                                                <name>of</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                </else>
                            </if>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>
            }
        </block>
    </class>
</unit>
