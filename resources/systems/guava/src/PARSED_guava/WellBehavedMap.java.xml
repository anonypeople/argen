<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\guava\src\com\google\common\collect\WellBehavedMap.java">
    <comment type="block">/*
        * Copyright (C) 2011 The Guava Authors
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>com</name>.<name>google</name>.<name>common</name>.
            <name>collect</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>com</name>.<name>google</name>.<name>common</name>.<name>annotations</name>.
            <name>GwtCompatible</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>com</name>.<name>google</name>.<name>j2objc</name>.<name>annotations</name>.
            <name>WeakOuter</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Set</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Workaround for
        * &lt;a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6312706"&gt;
        * EnumMap bug&lt;/a&gt;. If you want to pass an {@code EnumMap}, with the
        * intention of using its {@code entrySet()} method, you should
        * wrap the {@code EnumMap} in this class instead.
        *
        * &lt;p&gt;This class is not thread-safe even if the underlying map is.
        *
        * @author Dimitris Andreou
        */
    </comment>
    <class>
        <annotation>@
            <name>GwtCompatible</name>
        </annotation>
        <specifier>final</specifier>
        class
        <name>
            <name>WellBehavedMap</name>
            <argument_list>&lt;
                <argument>
                    <name>K</name>
                </argument>
                ,
                <argument>
                    <name>V</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <super>
            <extends>extends
                <name>
                    <name>ForwardingMap</name>
                    <argument_list>&lt;
                        <argument>
                            <name>K</name>
                        </argument>
                        ,
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>
                            <name>Map</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>K</name>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>delegate</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>
                            <name>Set</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>
                                        <name>Entry</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>K</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>V</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>entrySet</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>private</specifier>
                <name>WellBehavedMap</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>K</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>delegate</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>delegate</name>
                            </name>
                            =
                            <name>delegate</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Wraps the given map into a {@code WellBehavedEntriesMap}, which
                * intercepts its {@code entrySet()} method by taking the
                * {@code Set&lt;K&gt; keySet()} and transforming it to
                * {@code Set&lt;Entry&lt;K, V&gt;&gt;}. All other invocations are delegated as-is.
                */
            </comment>
            <function>
                <type>
                    <specifier>static</specifier>
                    <argument_list>&lt;
                        <argument>
                            <name>K</name>
                        </argument>
                        ,
                        <argument>
                            <name>V</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>WellBehavedMap</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>wrap</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>K</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>delegate</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>
                                    <name>WellBehavedMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>K</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>delegate</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>protected</specifier>
                    <name>
                        <name>Map</name>
                        <argument_list>&lt;
                            <argument>
                                <name>K</name>
                            </argument>
                            ,
                            <argument>
                                <name>V</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>delegate</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>delegate</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>
                        <name>Set</name>
                        <argument_list>&lt;
                            <argument>
                                <name>
                                    <name>Entry</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>K</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>V</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>entrySet</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Set</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>
                                                <name>Entry</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>V</name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>es</name> =
                            <init>
                                <expr>
                                    <name>entrySet</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>es</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>es</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>entrySet</name>
                            = new
                            <call>
                                <name>EntrySet</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <annotation>@
                    <name>WeakOuter</name>
                </annotation>
                <specifier>private</specifier>
                <specifier>final</specifier> class <name>EntrySet</name>
                <super>
                    <extends>extends <name>Maps</name>.
                        <name>
                            <name>EntrySet</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>K</name>
                                </argument>
                                ,
                                <argument>
                                    <name>V</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </extends>
                </super>
                <block>{
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>Map</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>K</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>V</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>map</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>WellBehavedMap</name>.
                                        <name>this</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <specifier>public</specifier>
                            <name>
                                <name>Iterator</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>
                                            <name>Entry</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>K</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>V</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>iterator</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <class>
                                        <super>
                                            <name>
                                                <name>TransformedIterator</name>
                                                <argument_list>&lt;
                                                    <argument>
                                                        <name>K</name>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <name>
                                                            <name>Entry</name>
                                                            <argument_list>&lt;
                                                                <argument>
                                                                    <name>K</name>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <name>V</name>
                                                                </argument>
                                                                &gt;
                                                            </argument_list>
                                                        </name>
                                                    </argument>
                                                    &gt;
                                                </argument_list>
                                            </name>
                                        </super>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>keySet</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>iterator</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <annotation>@
                                                        <name>Override</name>
                                                    </annotation>
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>K</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>V</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </type>
                                                <name>transform</name>
                                                <parameter_list>(
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <specifier>final</specifier>
                                                                <name>K</name>
                                                            </type>
                                                            <name>key</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                </parameter_list>
                                                <block>{
                                                    <return>return
                                                        <expr>new
                                                            <class>
                                                                <super>
                                                                    <name>
                                                                        <name>AbstractMapEntry</name>
                                                                        <argument_list>&lt;
                                                                            <argument>
                                                                                <name>K</name>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <name>V</name>
                                                                            </argument>
                                                                            &gt;
                                                                        </argument_list>
                                                                    </name>
                                                                </super>
                                                                <argument_list>()</argument_list>
                                                                <block>{
                                                                    <function>
                                                                        <type>
                                                                            <annotation>@
                                                                                <name>Override</name>
                                                                            </annotation>
                                                                            <specifier>public</specifier>
                                                                            <name>K</name>
                                                                        </type>
                                                                        <name>getKey</name>
                                                                        <parameter_list>()</parameter_list>
                                                                        <block>{
                                                                            <return>return
                                                                                <expr>
                                                                                    <name>key</name>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>

                                                                    <function>
                                                                        <type>
                                                                            <annotation>@
                                                                                <name>Override</name>
                                                                            </annotation>
                                                                            <specifier>public</specifier>
                                                                            <name>V</name>
                                                                        </type>
                                                                        <name>getValue</name>
                                                                        <parameter_list>()</parameter_list>
                                                                        <block>{
                                                                            <return>return
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>get</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>key</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>

                                                                    <function>
                                                                        <type>
                                                                            <annotation>@
                                                                                <name>Override</name>
                                                                            </annotation>
                                                                            <specifier>public</specifier>
                                                                            <name>V</name>
                                                                        </type>
                                                                        <name>setValue</name>
                                                                        <parameter_list>(
                                                                            <param>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>V</name>
                                                                                    </type>
                                                                                    <name>value</name>
                                                                                </decl>
                                                                            </param>
                                                                            )
                                                                        </parameter_list>
                                                                        <block>{
                                                                            <return>return
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>put</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>key</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>value</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>
                                                                    }
                                                                </block>
                                                            </class>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>
            }
        </block>
    </class>
</unit>
