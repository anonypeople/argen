<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\David\IdeaProjects\arem\resources\systems\jfreechart\src\org\jfree\chart\annotations\AbstractXYAnnotation.java"><comment type="block">/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -------------------------
 * AbstractXYAnnotation.java
 * -------------------------
 * (C) Copyright 2004-2007, by Object Refinery Limited.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   -;
 *
 * Changes:
 * --------
 * 29-Sep-2004 : Version 1 (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 06-Mar-2007 : Implemented hashCode() (DG);
 * 
 */</comment>

<package>package <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>annotations</name></name>;</package>

<import>import <name><name>java</name>.<name>awt</name>.<name>Graphics2D</name></name>;</import>
<import>import <name><name>java</name>.<name>awt</name>.<name>Shape</name></name>;</import>
<import>import <name><name>java</name>.<name>awt</name>.<name>geom</name>.<name>Rectangle2D</name></name>;</import>

<import>import <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>axis</name>.<name>ValueAxis</name></name>;</import>
<import>import <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>entity</name>.<name>EntityCollection</name></name>;</import>
<import>import <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>entity</name>.<name>XYAnnotationEntity</name></name>;</import>
<import>import <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.<name>PlotRenderingInfo</name></name>;</import>
<import>import <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.<name>XYPlot</name></name>;</import>
<import>import <name><name>org</name>.<name>jfree</name>.<name>util</name>.<name>ObjectUtilities</name></name>;</import>

<comment type="javadoc">/**
 * The interface that must be supported by annotations that are to be added to 
 * an {@link XYPlot}.
 */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>AbstractXYAnnotation</name> <super><implements>implements <name>XYAnnotation</name></implements></super> <block>{

    <comment type="javadoc">/** The tool tip text. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>toolTipText</name></decl>;</decl_stmt>
    
    <comment type="javadoc">/** The URL. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>url</name></decl>;</decl_stmt>
    
    <comment type="javadoc">/**
     * Creates a new instance that has no tool tip or URL specified.
     */</comment>
    <constructor><specifier>protected</specifier> <name>AbstractXYAnnotation</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>toolTipText</name></name> = <name>null</name></expr>;</expr_stmt>    
        <expr_stmt><expr><name><name>this</name>.<name>url</name></name> = <name>null</name></expr>;</expr_stmt>
    }</block></constructor>
    
    <comment type="javadoc">/**
     * Returns the tool tip text for the annotation.  This will be displayed in
     * a {@link org.jfree.chart.ChartPanel} when the mouse pointer hovers over 
     * the annotation.
     * 
     * @return The tool tip text (possibly &lt;code&gt;null&lt;/code&gt;).
     * 
     * @see #setToolTipText(String)
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name></type> <name>getToolTipText</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>toolTipText</name></name></expr>;</return>
    }</block></function>
    
    <comment type="javadoc">/**
     * Sets the tool tip text for the annotation.
     * 
     * @param text  the tool tip text (&lt;code&gt;null&lt;/code&gt; permitted).
     * 
     * @see #getToolTipText()
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setToolTipText</name><parameter_list>(<param><decl><type><name>String</name></type> <name>text</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>toolTipText</name></name> = <name>text</name></expr>;</expr_stmt>
    }</block></function>
    
    <comment type="javadoc">/**
     * Returns the URL for the annotation.  This URL will be used to provide
     * hyperlinks when an HTML image map is created for the chart.
     * 
     * @return The URL (possibly &lt;code&gt;null&lt;/code&gt;).
     * 
     * @see #setURL(String)
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name></type> <name>getURL</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>this</name>.<name>url</name></name></expr>;</return>
    }</block></function>
    
    <comment type="javadoc">/**
     * Sets the URL for the annotation.
     * 
     * @param url  the URL (&lt;code&gt;null&lt;/code&gt; permitted).
     * 
     * @see #getURL()
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setURL</name><parameter_list>(<param><decl><type><name>String</name></type> <name>url</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>url</name></name> = <name>url</name></expr>;</expr_stmt>
    }</block></function>
    
    <comment type="javadoc">/**
     * Draws the annotation.
     *
     * @param g2  the graphics device.
     * @param plot  the plot.
     * @param dataArea  the data area.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param rendererIndex  the renderer index.
     * @param info  if supplied, this info object will be populated with
     *              entity information.
     */</comment>
    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>draw</name><parameter_list>(<param><decl><type><name>Graphics2D</name></type> <name>g2</name></decl></param>, <param><decl><type><name>XYPlot</name></type> <name>plot</name></decl></param>, <param><decl><type><name>Rectangle2D</name></type> <name>dataArea</name></decl></param>,
                              <param><decl><type><name>ValueAxis</name></type> <name>domainAxis</name></decl></param>, <param><decl><type><name>ValueAxis</name></type> <name>rangeAxis</name></decl></param>, 
                              <param><decl><type><name>int</name></type> <name>rendererIndex</name></decl></param>,
                              <param><decl><type><name>PlotRenderingInfo</name></type> <name>info</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * A utility method for adding an {@link XYAnnotationEntity} to 
     * a {@link PlotRenderingInfo} instance.
     * 
     * @param info  the plot rendering info (&lt;code&gt;null&lt;/code&gt; permitted).
     * @param hotspot  the hotspot area.
     * @param rendererIndex  the renderer index.
     * @param toolTipText  the tool tip text.
     * @param urlText  the URL text.
     */</comment>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>addEntity</name><parameter_list>(<param><decl><type><name>PlotRenderingInfo</name></type> <name>info</name></decl></param>, 
                             <param><decl><type><name>Shape</name></type> <name>hotspot</name></decl></param>, <param><decl><type><name>int</name></type> <name>rendererIndex</name></decl></param>, 
                             <param><decl><type><name>String</name></type> <name>toolTipText</name></decl></param>, <param><decl><type><name>String</name></type> <name>urlText</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>info</name> == <name>null</name></expr>)</condition><then> <block>{
            <return>return;</return>  
        }</block></then></if>
        <decl_stmt><decl><type><name>EntityCollection</name></type> <name>entities</name> =<init> <expr><call><name><name>info</name>.<name>getOwner</name></name><argument_list>()</argument_list></call>.<call><name>getEntityCollection</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>entities</name> == <name>null</name></expr>)</condition><then> <block>{
            <return>return;</return>
        }</block></then></if>
        <decl_stmt><decl><type><name>XYAnnotationEntity</name></type> <name>entity</name> =<init> <expr>new <call><name>XYAnnotationEntity</name><argument_list>(<argument><expr><name>hotspot</name></expr></argument>, 
                <argument><expr><name>rendererIndex</name></expr></argument>, <argument><expr><name>toolTipText</name></expr></argument>, <argument><expr><name>urlText</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>entities</name>.<name>add</name></name><argument_list>(<argument><expr><name>entity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Tests this annotation for equality with an arbitrary object.
     * 
     * @param obj  the object (&lt;code&gt;null&lt;/code&gt; permitted).
     * 
     * @return A boolean.
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>equals</name><parameter_list>(<param><decl><type><name>Object</name></type> <name>obj</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>obj</name> == <name>this</name></expr>)</condition><then> <block>{
            <return>return <expr>true</expr>;</return>
        }</block></then></if>
        <if>if <condition>(<expr>!(<name>obj</name> <name>instanceof</name> <name>AbstractXYAnnotation</name>)</expr>)</condition><then> <block>{
            <return>return <expr>false</expr>;</return>
        }</block></then></if>
        <decl_stmt><decl><type><name>AbstractXYAnnotation</name></type> <name>that</name> =<init> <expr>(<name>AbstractXYAnnotation</name>) <name>obj</name></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr>!<call><name><name>ObjectUtilities</name>.<name>equal</name></name><argument_list>(<argument><expr><name><name>this</name>.<name>toolTipText</name></name></expr></argument>, <argument><expr><name><name>that</name>.<name>toolTipText</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <return>return <expr>false</expr>;</return>
        }</block></then></if>
        <if>if <condition>(<expr>!<call><name><name>ObjectUtilities</name>.<name>equal</name></name><argument_list>(<argument><expr><name><name>this</name>.<name>url</name></name></expr></argument>, <argument><expr><name><name>that</name>.<name>url</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <return>return <expr>false</expr>;</return>
        }</block></then></if>
        <return>return <expr>true</expr>;</return>
    }</block></function>
    
    <comment type="javadoc">/**
     * Returns a hash code for this instance.
     * 
     * @return A hash code.
     */</comment>
    <function><type><specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>result</name> =<init> <expr>193</expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name><name>this</name>.<name>toolTipText</name></name> != <name>null</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>result</name> = 37 * <name>result</name> + <call><name><name>this</name>.<name>toolTipText</name>.<name>hashCode</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name><name>this</name>.<name>url</name></name> != <name>null</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>result</name> = 37 * <name>result</name> + <call><name><name>this</name>.<name>url</name>.<name>hashCode</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>            
        }</block></then></if>
        <return>return <expr><name>result</name></expr>;</return>
    }</block></function>
    
}</block></class>
</unit>
