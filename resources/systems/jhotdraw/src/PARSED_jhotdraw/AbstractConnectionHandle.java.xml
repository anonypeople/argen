<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\AbstractConnectionHandle.java">
    <comment type="block">/*
        * @(#)AbstractConnectionHandle.java 3.0 2007-05-18
        *
        * Copyright (c) 1996-2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.<name>event</name>.
            <name>InputEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * AbstractConnectionHandle factors the common code for handles
        * that can be used to change the connection of a ConnectionFigure.
        *
        * XXX - Undo/Redo is not implemented yet.
        *
        * @author Werner Randelshofer
        * @version 3.0 2007-05-18 Changed due to changes in the canConnect methods
        * of the ConnectionFigure interface. Shortened the name from
        * AbstractChangeConnectionHandle to AbstractConnectionHandle.
        * &lt;br&gt;2.1 2006-02-16 Remove savedLiner from connection while tracking.
        * &lt;br&gt;2.0 2006-01-14 Changed to support double coordinates.
        * &lt;br&gt;1.0 2003-12-01 Derived from JHotDraw 5.4b1.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>AbstractConnectionHandle</name>
        <super>
            <extends>extends
                <name>AbstractHandle</name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Connector</name>
                    </type>
                    <name>savedTarget</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Connector</name>
                    </type>
                    <name>connectableConnector</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Figure</name>
                    </type>
                    <name>connectableFigure</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Point</name>
                    </type>
                    <name>start</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * We temporarily remove the Liner from the connection figure, while the
                * handle is being moved.
                * We store the Liner here, and add it back when the user has finished
                * the interaction.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Liner</name>
                    </type>
                    <name>savedLiner</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * All connectors of the connectable Figure.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>
                            <name>Collection</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>Connector</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>connectors</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>Collections</name>.
                                    <name>emptyList</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * Initializes the change connection handle.
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>AbstractConnectionHandle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ConnectionFigure</name>
                            </type>
                            <name>owner</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>owner</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ConnectionFigure</name>
                </type>
                <name>getOwner</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>ConnectionFigure</name>)
                            <call>
                                <name><name>super</name>.
                                    <name>getOwner</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isCombinableWith</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Handle</name>
                            </type>
                            <name>handle</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns the connector of the change.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>Connector</name>
                </type>
                <name>getTarget</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Disconnects the connection.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>void</name>
                </type>
                <name>disconnect</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Connect the connection with the given figure.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>void</name>
                </type>
                <name>connect</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Connector</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the location of the connectableConnector point.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>void</name>
                </type>
                <name>setLocation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Returns the start point of the connection.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>getLocation</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Gets the side of the connection that is unaffected by
                * the change.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Connector</name>
                </type>
                <name>getSource</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getTarget</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <call>
                                    <name>getOwner</name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>getStartConnector</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name>getOwner</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>getEndConnector</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getStartConnector</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Disconnects the connection.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>trackStart</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>modifiersEx</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>savedTarget</name>
                            =
                            <call>
                                <name>getTarget</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>start</name>
                            =
                            <name>anchor</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>savedLiner</name>
                            =
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getLiner</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>setLiner</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">//disconnect();</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireHandleRequestSecondaryHandles</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Finds a new connectableConnector of the connection.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>trackStep</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>lead</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>modifiersEx</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>view</name>.
                                            <name>viewToDrawing</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>lead</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>view</name>.
                                    <name>getConstrainer</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>constrainPoint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>connectableFigure</name>
                            =
                            <call>
                                <name>findConnectableFigure</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>view</name>.
                                                    <name>getDrawing</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>connectableFigure</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Connector</name>
                                        </type>
                                        <name>aTarget</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>findConnectionTarget</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>p</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>view</name>.
                                                                        <name>getDrawing</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>aTarget</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>p</name>
                                                    =
                                                    <call>
                                                        <name><name>aTarget</name>.
                                                            <name>getAnchor</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>willChange</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setLocation</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>changed</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>repaintConnectors</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Connects the figure to the new connectableConnector. If there is no
                * new connectableConnector the connection reverts to its original one.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>trackEnd</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>lead</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>modifiersEx</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ConnectionFigure</name>
                            </type>
                            <name>f</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getOwner</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// Change node type</comment>
                    <if>if
                        <condition>(
                            <expr>(<name>modifiersEx</name> &amp; (
                                <name><name>InputEvent</name>.
                                    <name>META_DOWN_MASK</name>
                                </name>
                                |
                                <name><name>InputEvent</name>.
                                    <name>CTRL_DOWN_MASK</name>
                                </name>
                                |
                                <name><name>InputEvent</name>.
                                    <name>ALT_DOWN_MASK</name>
                                </name>
                                |
                                <name><name>InputEvent</name>.
                                    <name>SHIFT_DOWN_MASK</name>
                                </name>
                                )) != 0 &amp;&amp;
                                (<name>modifiersEx</name> &amp;
                                <name><name>InputEvent</name>.
                                    <name>BUTTON2_DOWN_MASK</name>
                                </name>
                                ) == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>f</name>.
                                                <name>willChange</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>index</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getBezierNodeIndex</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name><name>BezierPath</name>.
                                                <name>Node</name>
                                            </name>
                                        </type>
                                        <name>v</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>f</name>.
                                                        <name>getNode</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>index</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>index</name>
                                            &gt; 0 &amp;&amp; <name>index</name> &lt;
                                            <call>
                                                <name><name>f</name>.
                                                    <name>getNodeCount</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>v</name>.
                                                        <name>mask</name>
                                                    </name>
                                                    = (
                                                    <name><name>v</name>.
                                                        <name>mask</name>
                                                    </name>
                                                    + 3) % 4
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>index</name>
                                                    == 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>v</name>.
                                                                <name>mask</name>
                                                            </name>
                                                            = ((
                                                            <name><name>v</name>.
                                                                <name>mask</name>
                                                            </name>
                                                            &amp;
                                                            <name><name>BezierPath</name>.
                                                                <name>C2_MASK</name>
                                                            </name>
                                                            ) == 0) ?
                                                            <name><name>BezierPath</name>.
                                                                <name>C2_MASK</name>
                                                            </name>
                                                            : 0
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>v</name>.
                                                                <name>mask</name>
                                                            </name>
                                                            = ((
                                                            <name><name>v</name>.
                                                                <name>mask</name>
                                                            </name>
                                                            &amp;
                                                            <name><name>BezierPath</name>.
                                                                <name>C1_MASK</name>
                                                            </name>
                                                            ) == 0) ?
                                                            <name><name>BezierPath</name>.
                                                                <name>C1_MASK</name>
                                                            </name>
                                                            : 0
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>f</name>.
                                                <name>setNode</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>v</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>f</name>.
                                                <name>changed</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireHandleRequestSecondaryHandles</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>view</name>.
                                            <name>viewToDrawing</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>lead</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>view</name>.
                                    <name>getConstrainer</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>constrainPoint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Connector</name>
                            </type>
                            <name>target</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>findConnectionTarget</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>p</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>view</name>.
                                                            <name>getDrawing</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>target</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>target</name>
                                        =
                                        <name>savedTarget</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setLocation</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>target</name>
                                !=
                                <name>savedTarget</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>disconnect</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>connect</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>target</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>setLiner</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>savedLiner</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>updateConnection</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>connectableConnector</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>connectors</name>
                            =
                            <call>
                                <name><name>Collections</name>.
                                    <name>emptyList</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Connector</name>
                </type>
                <name>findConnectionTarget</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Drawing</name>
                            </type>
                            <name>drawing</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>targetFigure</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>findConnectableFigure</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>p</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>drawing</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getSource</name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name> &amp;&amp; <name>targetFigure</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name>findConnector</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>p</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>targetFigure</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>getOwner</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>targetFigure</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Connector</name>
                                                </type>
                                                <name>target</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name>findConnector</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>p</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>targetFigure</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>getOwner</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>(<name>targetFigure</name> != <name>null</name>) &amp;&amp;
                                                    <call>
                                                        <name><name>targetFigure</name>.
                                                            <name>canConnect</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp; <name>targetFigure</name> !=
                                                    <name>savedTarget</name>
                                                    &amp;&amp; !
                                                    <call>
                                                        <name><name>targetFigure</name>.
                                                            <name>includes</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>getOwner</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    &amp;&amp; (
                                                    <call>
                                                        <name>canConnect</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>getSource</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>target</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ||
                                                    <call>
                                                        <name>getTarget</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    != <name>null</name> &amp;&amp;
                                                    <call>
                                                        <name>getTarget</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>getOwner</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    == <name>targetFigure</name>)
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>target</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>boolean</name>
                </type>
                <name>canConnect</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Connector</name>
                            </type>
                            <name>existingEnd</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Connector</name>
                            </type>
                            <name>targetEnd</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Connector</name>
                </type>
                <name>findConnector</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>f</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ConnectionFigure</name>
                            </type>
                            <name>prototype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>f</name>.
                                    <name>findConnector</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>prototype</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws this handle.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>draw</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>gg</name> =
                            <init>
                                <expr>(<name>Graphics2D</name>)
                                    <call>
                                        <name><name>g</name>.
                                            <name>create</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>gg</name>.
                                    <name>transform</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>view</name>.
                                                    <name>getDrawingToViewTransform</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>Connector</name>
                                </type>
                                <name>c</name> :
                                <range>
                                    <expr>
                                        <name>connectors</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>c</name>.
                                            <name>draw</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>gg</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>gg</name>.
                                    <name>dispose</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>drawCircle</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>g</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(
                                            <call>
                                                <name>getTarget</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            == <name>null</name>) ?
                                            <name><name>Color</name>.
                                                <name>red</name>
                                            </name>
                                            :
                                            <name><name>Color</name>.
                                                <name>green</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Color</name>.
                                                <name>black</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Figure</name>
                </type>
                <name>findConnectableFigure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Drawing</name>
                            </type>
                            <name>drawing</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>Figure</name>
                                </type>
                                <name>f</name> :
                                <range>
                                    <expr>
                                        <call>
                                            <name><name>drawing</name>.
                                                <name>getFiguresFrontToBack</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>f</name>.
                                                <name>includes</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>getOwner</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp;
                                        <call>
                                            <name><name>f</name>.
                                                <name>canConnect</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &amp;&amp;
                                        <call>
                                            <name><name>f</name>.
                                                <name>contains</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>p</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>f</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setPotentialTarget</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Connector</name>
                            </type>
                            <name>newTarget</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>connectableConnector</name>
                            </name>
                            =
                            <name>newTarget</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Rectangle</name>
                </type>
                <name>basicGetBounds</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">//if (connection.getPointCount() == 0) return new Rectangle(0, 0,
                        getHandlesize(), getHandlesize());
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>center</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>view</name>.
                                            <name>drawingToView</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getLocation</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>Rectangle</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>center</name>.
                                                <name>x</name>
                                            </name>
                                            -
                                            <call>
                                                <name>getHandlesize</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            / 2
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>center</name>.
                                                <name>y</name>
                                            </name>
                                            -
                                            <call>
                                                <name>getHandlesize</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            / 2
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getHandlesize</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getHandlesize</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>BezierFigure</name>
                </type>
                <name>getBezierFigure</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>BezierFigure</name>)
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function_decl>
                <type>
                    <specifier>abstract</specifier>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getBezierNodeIndex</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>final</specifier>
                    <specifier>public</specifier>
                    <name>
                        <name>Collection</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Handle</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>createSecondaryHandles</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>LinkedList</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Handle</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>list</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>
                                            <name>LinkedList</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>Handle</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>((<name>ConnectionFigure</name>)
                                <call>
                                    <name>getOwner</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ).
                                <call>
                                    <name>getLiner</name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name> &amp;&amp; <name>savedLiner</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>index</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getBezierNodeIndex</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>BezierFigure</name>
                                        </type>
                                        <name>f</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getBezierFigure</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name><name>BezierPath</name>.
                                                <name>Node</name>
                                            </name>
                                        </type>
                                        <name>v</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>f</name>.
                                                        <name>getNode</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>index</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>(
                                            <name><name>v</name>.
                                                <name>mask</name>
                                            </name>
                                            &amp;
                                            <name><name>BezierPath</name>.
                                                <name>C1_MASK</name>
                                            </name>
                                            ) != 0 &amp;&amp;
                                            (<name>index</name> != 0 ||
                                            <call>
                                                <name><name>f</name>.
                                                    <name>isClosed</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            )
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>list</name>.
                                                            <name>add</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>BezierControlPointHandle</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>f</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>index</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>1</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>(
                                            <name><name>v</name>.
                                                <name>mask</name>
                                            </name>
                                            &amp;
                                            <name><name>BezierPath</name>.
                                                <name>C2_MASK</name>
                                            </name>
                                            ) != 0 &amp;&amp;
                                            (<name>index</name> &lt;
                                            <call>
                                                <name><name>f</name>.
                                                    <name>getNodeCount</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            - 1 ||
                                            <call>
                                                <name><name>f</name>.
                                                    <name>isClosed</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            )
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>list</name>.
                                                            <name>add</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>BezierControlPointHandle</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>f</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>index</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>2</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>index</name>
                                            &gt; 0 ||
                                            <call>
                                                <name><name>f</name>.
                                                    <name>isClosed</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name> =
                                                    <init>
                                                        <expr>(<name>index</name> == 0) ?
                                                            <call>
                                                                <name><name>f</name>.
                                                                    <name>getNodeCount</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            - 1 : <name>index</name> - 1
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>v</name>
                                                    =
                                                    <call>
                                                        <name><name>f</name>.
                                                            <name>getNode</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>(
                                                        <name><name>v</name>.
                                                            <name>mask</name>
                                                        </name>
                                                        &amp;
                                                        <name><name>BezierPath</name>.
                                                            <name>C2_MASK</name>
                                                        </name>
                                                        ) != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>list</name>.
                                                                        <name>add</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>BezierControlPointHandle
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>f</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>2</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>index</name>
                                            &lt;
                                            <call>
                                                <name><name>f</name>.
                                                    <name>getNodeCount</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            - 2 ||
                                            <call>
                                                <name><name>f</name>.
                                                    <name>isClosed</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name> =
                                                    <init>
                                                        <expr>(<name>index</name> ==
                                                            <call>
                                                                <name><name>f</name>.
                                                                    <name>getNodeCount</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            - 1) ? 0 : <name>index</name> + 1
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>v</name>
                                                    =
                                                    <call>
                                                        <name><name>f</name>.
                                                            <name>getNode</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>(
                                                        <name><name>v</name>.
                                                            <name>mask</name>
                                                        </name>
                                                        &amp;
                                                        <name><name>BezierPath</name>.
                                                            <name>C1_MASK</name>
                                                        </name>
                                                        ) != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>list</name>.
                                                                        <name>add</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>BezierControlPointHandle
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>f</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>1</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>list</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name><name>BezierPath</name>.
                        <name>Node</name>
                    </name>
                </type>
                <name>getBezierNode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getBezierNodeIndex</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>getBezierFigure</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getNodeCount</name>
                                <argument_list>()</argument_list>
                            </call>
                            &gt; <name>index</name> ?
                            <call>
                                <name>getBezierFigure</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getNode</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getToolTipText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ConnectionFigure</name>
                            </type>
                            <name>f</name> =
                            <init>
                                <expr>(<name>ConnectionFigure</name>)
                                    <call>
                                        <name>getOwner</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>f</name>.
                                        <name>getLiner</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name> &amp;&amp; <name>savedLiner</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>ResourceBundleUtil</name>
                                        </type>
                                        <name>labels</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>ResourceBundleUtil</name>.
                                                        <name>getLAFBundle</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"org.jhotdraw.draw.Labels"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name><name>BezierPath</name>.
                                                <name>Node</name>
                                            </name>
                                        </type>
                                        <name>node</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getBezierNode</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <return>return
                                    <expr>(<name>node</name> == <name>null</name>) ? <name>null</name> :
                                        <call>
                                            <name><name>labels</name>.
                                                <name>getFormatted</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"bezierNodeHandle.tip"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>labels</name>.
                                                                <name>getFormatted</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>(
                                                                        <call>
                                                                            <name><name>node</name>.
                                                                                <name>getMask</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        == 0) ?
                                                                        "bezierNode.linearNode" :
                                                                        ((
                                                                        <call>
                                                                            <name><name>node</name>.
                                                                                <name>getMask</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        ==
                                                                        <name><name>BezierPath</name>.
                                                                            <name>C1C2_MASK</name>
                                                                        </name>
                                                                        ) ?
                                                                        "bezierNode.cubicNode" :
                                                                        "bezierNode.quadraticNode")
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Updates the list of connectors that we draw when the user
                * moves or drags the mouse over a figure to which can connect.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>repaintConnectors</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>invalidArea</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>Connector</name>
                                </type>
                                <name>c</name> :
                                <range>
                                    <expr>
                                        <name>connectors</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>invalidArea</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>invalidArea</name>
                                                =
                                                <call>
                                                    <name><name>c</name>.
                                                        <name>getDrawingArea</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>invalidArea</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>c</name>.
                                                                        <name>getDrawingArea</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <name>connectors</name>
                            = (<name>connectableFigure</name> == <name>null</name>) ?
                            new
                            <call>
                                <name><name>java</name>.<name>util</name>.
                                    <name>
                                        <name>LinkedList</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>Connector</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <call>
                                <name><name>connectableFigure</name>.
                                    <name>getConnectors</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getOwner</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>Connector</name>
                                </type>
                                <name>c</name> :
                                <range>
                                    <expr>
                                        <name>connectors</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>invalidArea</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>invalidArea</name>
                                                =
                                                <call>
                                                    <name><name>c</name>.
                                                        <name>getDrawingArea</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>invalidArea</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>c</name>.
                                                                        <name>getDrawingArea</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    <if>if
                        <condition>(
                            <expr>
                                <name>invalidArea</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>view</name>.
                                                <name>getComponent</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>repaint</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>view</name>.
                                                                <name>drawingToView</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>invalidArea</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
