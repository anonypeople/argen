<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\app\ApplicationModel.java">
    <comment type="block">/*
        * @(#)ApplicationModel.java 1.0 June 10, 2006
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>app</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.
            <name>swing</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * ApplicationModel.
        *
        * @author Werner Randelshofer.
        * @version 1.0 June 10, 2006 Created.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>ApplicationModel</name>
        <block>{
            <comment type="javadoc">/**
                * Returns the name of the application.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getName</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Returns the version of the application.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getVersion</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Returns the copyright of the application.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getCopyright</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Creates a new view for the application.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>View</name>
                </type>
                <name>createView</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>initView</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Application</name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>View</name>
                            </type>
                            <name>v</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>initApplication</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Application</name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Puts an action with the specified id.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>putAction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>id</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Action</name>
                            </type>
                            <name>action</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Returns the action with the specified id.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Action</name>
                </type>
                <name>getAction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>id</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Creates tool bars.
                * &lt;p&gt;
                * Depending on the document interface of the application, this method
                * may be invoked only once for the application, or for each opened view.
                * &lt;p&gt;
                * @param a Application.
                * @param v The view for which the toolbars need to be created, or null
                * if the toolbar needs to be shared with multiple views.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>JToolBar</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>createToolBars</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Application</name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>View</name>
                            </type>
                            <name>v</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Creates menus.
                * &lt;p&gt;
                * Depending on the document interface of the application, this method
                * may be invoked only once for the application, or for each opened view.
                * &lt;p&gt;
                * @param a Application.
                * @param v The view for which the toolbars need to be created, or null
                * if the toolbar needs to be shared with multiple views.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>JMenu</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>createMenus</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Application</name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>View</name>
                            </type>
                            <name>v</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            }
        </block>
    </class>
</unit>
