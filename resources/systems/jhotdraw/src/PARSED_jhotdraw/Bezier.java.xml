<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\geom\Bezier.java">
    <comment type="block">/*
        * @(#)Bezier.java 2.0.1 2006-06-14
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>geom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * Provides algorithms for fitting Bezier curves to a set of digitized points.
        * &lt;p&gt;
        * Source:&lt;br&gt;
        * An Algorithm for Automatically Fitting Digitized Curves
        * by Philip J. Schneider.&lt;br&gt;
        * from "Graphics Gems", Academic Press, 1990&lt;br&gt;
        * http://ftp.arl.mil/pub/Gems/original/FitDigitizedCurves.c
        *
        * @version 2.0.1 2006-06-14 Fit bezier curve must preserve closed state of
        * fitted BezierPath object.
        * &lt;br&gt;2.0 2006-01-14 Changed to support double precision coordinates.
        * &lt;br&gt;1.0 March 14, 2004.
        * @author Werner Randelshofer
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>Bezier</name>
        <block>{
            <comment type="javadoc">/**
                * The most points you can have.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>MAXPOINTS</name> =
                    <init>
                        <expr>1000</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Prevent instance creation. */</comment>
            <constructor>
                <specifier>private</specifier>
                <name>Bezier</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>


            <comment type="javadoc">/**
                * Example of how to use the curve-fitting code. Given an array
                * of points and a tolerance (squared error between points and
                * fitted curve), the algorithm will generate a piecewise
                * cubic Bezier representation that approximates the points.
                * When a cubic is generated, the routine "DrawBezierCurve"
                * is called, which outputs the Bezier curve just created
                * (arguments are the degree and the control points, respectively).
                * Users will have to implement this function themselves
                * ascii output, etc.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>main</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>args</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <index>[]</index>
                            </type>
                            <name>d</name> =
                            <init>
                                <expr>
                                    <block>{
                                        <comment type="block">/* Digitized points */</comment>
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0.0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0.0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ,
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0.0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0.5</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ,
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>1.1</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>1.4</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ,
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>2.1</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>1.6</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ,
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>3.2</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>1.1</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ,
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>4.0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0.2</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ,
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>4.0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0.0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ,
                                        }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>error</name> =
                            <init>
                                <expr>4.0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Squared error */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>GeneralPath</name>
                            </type>
                            <name>path</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>fitCurve</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>d</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>error</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Fit the Bezier curves */</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>out</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>path</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Fit a Bezier curve to a set of digitized points.
                *
                * @param p Polygon with a set of digitized points.
                * @param error User-defined error squared.
                * @return Returns a GeneralPath containing the bezier curves.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>GeneralPath</name>
                </type>
                <name>fitCurve</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Polygon</name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>error</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <index>[]</index>
                            </type>
                            <name>d</name> =
                            <init>
                                <expr>new
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                        <index>[
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>npoints</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>d</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>d</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>p</name>.
                                                        <name>xpoints</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>p</name>.
                                                        <name>ypoints</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <call>
                                <name>fitCurve</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>error</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Fit a Bezier curve to a set of digitized points.
                *
                * @param d Array of digitized points.
                * @param error User-defined error squared.
                * @return Returns a GeneralPath containing the bezier curves.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>GeneralPath</name>
                </type>
                <name>fitCurve</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>error</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat1</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat2</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Unit tangent vectors at endpoints */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>GeneralPath</name>
                            </type>
                            <name>bezierPath</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>GeneralPath</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bezierPath</name>.
                                    <name>moveTo</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>float</name>)
                                            <name>
                                                <name>d</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                            .
                                            <name>x</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>float</name>)
                                            <name>
                                                <name>d</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                            .
                                            <name>y</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>tHat1</name>
                            =
                            <call>
                                <name>computeLeftTangent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tHat2</name>
                            =
                            <call>
                                <name>computeRightTangent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>d</name>.
                                                <name>length</name>
                                            </name>
                                            - 1
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fitCubic</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>d</name>.
                                                <name>length</name>
                                            </name>
                                            - 1
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>error</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bezierPath</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>bezierPath</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Fit a Bezier curve to a set of digitized points.
                *
                * @param path The path onto which to fit a bezier curve.
                * @param error User-defined error squared.
                * @return Returns a BezierPath containing the bezier curves.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>BezierPath</name>
                </type>
                <name>fitBezierCurve</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BezierPath</name>
                            </type>
                            <name>path</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>error</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <index>[]</index>
                            </type>
                            <name>d</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>path</name>.
                                            <name>toPolygonArray</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat1</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat2</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Unit tangent vectors at endpoints */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BezierPath</name>
                            </type>
                            <name>bezierPath</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>BezierPath</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bezierPath</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name><name>BezierPath</name>.
                                                    <name>Node</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>d</name>
                                                                <index>[<expr>0</expr>]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>tHat1</name>
                            =
                            <call>
                                <name>computeLeftTangent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tHat2</name>
                            =
                            <call>
                                <name>computeRightTangent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>d</name>.
                                                <name>length</name>
                                            </name>
                                            - 1
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fitCubic</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>d</name>.
                                                <name>length</name>
                                            </name>
                                            - 1
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>error</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bezierPath</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bezierPath</name>.
                                    <name>setClosed</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>path</name>.
                                                    <name>isClosed</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>bezierPath</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Fit a Bezier curve to a (sub)set of digitized points.
                *
                * @param d Array of digitized points.
                * @param first Indice of first point in d.
                * @param last Indice of last point in d.
                * @param tHat1 Unit tangent vectors at start point.
                * @param tHat2 Unit tanget vector at end point.
                * @param error User-defined error squared.
                * @param bezierPath Path to which the bezier curve segments are added.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>fitCubic</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>first</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>last</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>error</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>GeneralPath</name>
                            </type>
                            <name>bezierPath</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <index>[]</index>
                            </type>
                            <name>bezCurve</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/*Control points of fitted Bezier curve*/</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                                <index>[]</index>
                            </type>
                            <name>u</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Parameter values for point */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                                <index>[]</index>
                            </type>
                            <name>uPrime</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Improved parameter values */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>maxError</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Maximum fitting error */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>splitPoint</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Point to split point set at.
                        This is an array of size one, because we need it as an input/output parameter.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>nPts</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Number of points in subset */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>iterationError</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/*Error below which you try iterating */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>maxIterations</name> =
                            <init>
                                <expr>4</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Max times to try iterating */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHatCenter</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Unit tangent vector at splitPoint */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>iterationError</name>
                            = <name>error</name> *
                            <name>error</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>nPts</name>
                            = <name>last</name> - <name>first</name> + 1
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="block">/* Use heuristic if region only has two points in it */</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>nPts</name>
                                == 2
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>dist</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>v2DistanceBetween2Points</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>d</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>last</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>d</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>first</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                / 3.0
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <expr_stmt>
                                    <expr>
                                        <name>bezCurve</name>
                                        = new
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                            <index>[<expr>4</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <for>for (
                                    <init>
                                        <expr><name>i</name>=0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>bezCurve</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>bezCurve</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = new
                                                <call>
                                                    <name><name>Point2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>bezCurve</name>
                                            <index>[<expr>0</expr>]
                                            </index>
                                        </name>
                                        =
                                        <name>
                                            <name>d</name>
                                            <index>[
                                                <expr>
                                                    <name>first</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>bezCurve</name>
                                            <index>[<expr>3</expr>]
                                            </index>
                                        </name>
                                        =
                                        <name>
                                            <name>d</name>
                                            <index>[
                                                <expr>
                                                    <name>last</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>v2Add</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>0</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>v2Scale</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tHat1</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>dist</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>v2Add</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>3</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>v2Scale</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tHat2</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>dist</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>bezierPath</name>.
                                                <name>curveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>3</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>3</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="block">/* Parameterize points, and attempt to fit curve */</comment>
                    <expr_stmt>
                        <expr>
                            <name>u</name>
                            =
                            <call>
                                <name>chordLengthParameterize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>first</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>last</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>bezCurve</name>
                            =
                            <call>
                                <name>generateBezier</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>first</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>last</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>u</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="block">/* Find max deviation of points to fitted curve */</comment>
                    <expr_stmt>
                        <expr>
                            <name>maxError</name>
                            =
                            <call>
                                <name>computeMaxError</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>first</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>last</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bezCurve</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>u</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>splitPoint</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>maxError</name>
                                &lt;
                                <name>error</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>bezierPath</name>.
                                                <name>curveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>3</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>3</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>


                    <comment type="block">/* If error not too large, try some reparameterization */</comment>
                    <comment type="block">/* and iteration */</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>maxError</name>
                                &lt;
                                <name>iterationError</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for (
                                    <init>
                                        <expr>
                                            <name>i</name>
                                            = 0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>maxIterations</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>uPrime</name>
                                                =
                                                <call>
                                                    <name>reparameterize</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>d</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>first</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>last</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>u</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>bezCurve</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>bezCurve</name>
                                                =
                                                <call>
                                                    <name>generateBezier</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>d</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>first</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>last</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>uPrime</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>tHat1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>tHat2</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>maxError</name>
                                                =
                                                <call>
                                                    <name>computeMaxError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>d</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>first</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>last</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>bezCurve</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>uPrime</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>splitPoint</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>maxError</name>
                                                    &lt;
                                                    <name>error</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>bezierPath</name>.
                                                                    <name>curveTo</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>1</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>x</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>1</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>y</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>2</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>x</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>2</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>y</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>3</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>x</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>3</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>y</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>u</name>
                                                =
                                                <name>uPrime</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="block">/* Fitting failed -- split at max error point and fit recursively */</comment>
                    <expr_stmt>
                        <expr>
                            <name>tHatCenter</name>
                            =
                            <call>
                                <name>computeCenterTangent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>splitPoint</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fitCubic</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>first</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>splitPoint</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHatCenter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>error</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bezierPath</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>v2Negate</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tHatCenter</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fitCubic</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>splitPoint</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>last</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHatCenter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>error</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bezierPath</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Fit a Bezier curve to a (sub)set of digitized points.
                *
                * @param d Array of digitized points.
                * @param first Indice of first point in d.
                * @param last Indice of last point in d.
                * @param tHat1 Unit tangent vectors at start point.
                * @param tHat2 Unit tanget vector at end point.
                * @param error User-defined error squared.
                * @param bezierPath Path to which the bezier curve segments are added.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>fitCubic</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>first</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>last</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>error</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BezierPath</name>
                            </type>
                            <name>bezierPath</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <index>[]</index>
                            </type>
                            <name>bezCurve</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/*Control points of fitted Bezier curve*/</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                                <index>[]</index>
                            </type>
                            <name>u</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Parameter values for point */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                                <index>[]</index>
                            </type>
                            <name>uPrime</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Improved parameter values */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>maxError</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Maximum fitting error */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>splitPoint</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Point to split point set at.
                        This is an array of size one, because we need it as an input/output parameter.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>nPts</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Number of points in subset */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>iterationError</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/*Error below which you try iterating */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>maxIterations</name> =
                            <init>
                                <expr>4</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Max times to try iterating */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHatCenter</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Unit tangent vector at splitPoint */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>iterationError</name>
                            = <name>error</name> *
                            <name>error</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>nPts</name>
                            = <name>last</name> - <name>first</name> + 1
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="block">/* Use heuristic if region only has two points in it */</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>nPts</name>
                                == 2
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>dist</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>v2DistanceBetween2Points</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>d</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>last</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>d</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>first</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                / 3.0
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <expr_stmt>
                                    <expr>
                                        <name>bezCurve</name>
                                        = new
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                            <index>[<expr>4</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <for>for (
                                    <init>
                                        <expr><name>i</name>=0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>bezCurve</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>bezCurve</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = new
                                                <call>
                                                    <name><name>Point2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>bezCurve</name>
                                            <index>[<expr>0</expr>]
                                            </index>
                                        </name>
                                        =
                                        <name>
                                            <name>d</name>
                                            <index>[
                                                <expr>
                                                    <name>first</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>bezCurve</name>
                                            <index>[<expr>3</expr>]
                                            </index>
                                        </name>
                                        =
                                        <name>
                                            <name>d</name>
                                            <index>[
                                                <expr>
                                                    <name>last</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>v2Add</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>0</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>v2Scale</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tHat1</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>dist</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>v2Add</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>3</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>v2Scale</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tHat2</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>dist</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>bezierPath</name>.
                                                <name>curveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>3</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>3</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="block">/* Parameterize points, and attempt to fit curve */</comment>
                    <expr_stmt>
                        <expr>
                            <name>u</name>
                            =
                            <call>
                                <name>chordLengthParameterize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>first</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>last</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>bezCurve</name>
                            =
                            <call>
                                <name>generateBezier</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>first</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>last</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>u</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="block">/* Find max deviation of points to fitted curve */</comment>
                    <expr_stmt>
                        <expr>
                            <name>maxError</name>
                            =
                            <call>
                                <name>computeMaxError</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>first</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>last</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bezCurve</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>u</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>splitPoint</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>maxError</name>
                                &lt;
                                <name>error</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>bezierPath</name>.
                                                <name>curveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>3</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>3</expr>]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>


                    <comment type="block">/* If error not too large, try some reparameterization */</comment>
                    <comment type="block">/* and iteration */</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>maxError</name>
                                &lt;
                                <name>iterationError</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for (
                                    <init>
                                        <expr>
                                            <name>i</name>
                                            = 0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>maxIterations</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>uPrime</name>
                                                =
                                                <call>
                                                    <name>reparameterize</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>d</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>first</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>last</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>u</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>bezCurve</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>bezCurve</name>
                                                =
                                                <call>
                                                    <name>generateBezier</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>d</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>first</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>last</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>uPrime</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>tHat1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>tHat2</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>maxError</name>
                                                =
                                                <call>
                                                    <name>computeMaxError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>d</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>first</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>last</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>bezCurve</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>uPrime</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>splitPoint</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>maxError</name>
                                                    &lt;
                                                    <name>error</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>bezierPath</name>.
                                                                    <name>curveTo</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>1</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>x</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>1</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>y</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>2</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>x</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>2</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>y</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>3</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>x</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>bezCurve</name>
                                                                                <index>[<expr>3</expr>]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <name>y</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>u</name>
                                                =
                                                <name>uPrime</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="block">/* Fitting failed -- split at max error point and fit recursively */</comment>
                    <expr_stmt>
                        <expr>
                            <name>tHatCenter</name>
                            =
                            <call>
                                <name>computeCenterTangent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>splitPoint</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fitCubic</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>first</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>splitPoint</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHatCenter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>error</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bezierPath</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>v2Negate</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tHatCenter</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fitCubic</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>splitPoint</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>last</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHatCenter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tHat2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>error</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bezierPath</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Use least-squares method to find Bezier control points for region.
                *
                * @param d Array of digitized points.
                * @param first Indice of first point in d.
                * @param last Indice of last point in d.
                * @param uPrime Parameter values for region .
                * @param tHat1 Unit tangent vectors at start point.
                * @param tHat2 Unit tanget vector at end point.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                    <index>[]</index>
                </type>
                <name>generateBezier</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>first</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>last</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>uPrime</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <index>[]</index>
                                <index>[]</index>
                            </type>
                            <name>A</name> =
                            <init>
                                <expr>new
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                        <index>[
                                            <expr>
                                                <name>MAXPOINTS</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Precomputed rhs for eqn */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>nPts</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Number of pts in sub-curve */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                                <index>[]</index>
                                <index>[]</index>
                            </type>
                            <name>C</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>double</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Matrix C */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                                <index>[]</index>
                            </type>
                            <name>X</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>double</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Matrix X */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>det_C0_C1</name>,
                            <comment type="block">/* Determinants of matrices */</comment>
                            <name>det_C0_X</name>,
                            <name>det_X_C1</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>alpha_l</name>,
                            <comment type="block">/* Alpha values, left and right */</comment>
                            <name>alpha_r</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tmp</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Utility variable */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <index>[]</index>
                            </type>
                            <name>bezCurve</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* RETURN bezier curve ctl pts */</comment>

                    <expr_stmt>
                        <expr>
                            <name>bezCurve</name>
                            = new
                            <name><name>Point2D</name>.
                                <name>Double</name>
                                <index>[<expr>4</expr>]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <expr><name>i</name>=0
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>bezCurve</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>bezCurve</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <expr_stmt>
                        <expr>
                            <name>nPts</name>
                            = <name>last</name> - <name>first</name> + 1
                        </expr>
                        ;
                    </expr_stmt>


                    <comment type="block">/* Compute the A's */</comment>
                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = 0
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>nPts</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                    </type>
                                    <name>v1</name>,
                                    <name>v2</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>v1</name>
                                    = (
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                    </name>
                                    )
                                    <call>
                                        <name><name>tHat1</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>v2</name>
                                    = (
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                    </name>
                                    )
                                    <call>
                                        <name><name>tHat2</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>v2Scale</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>v1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>b1</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>uPrime</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>v2Scale</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>v2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>b2</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>uPrime</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>A</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    =
                                    <name>v1</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>A</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                    =
                                    <name>v2</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <comment type="block">/* Create the C and X matrices */</comment>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>C</name>
                                <index>[<expr>0</expr>]
                                </index>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            = 0.0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>C</name>
                                <index>[<expr>0</expr>]
                                </index>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            = 0.0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>C</name>
                                <index>[<expr>1</expr>]
                                </index>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            = 0.0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>C</name>
                                <index>[<expr>1</expr>]
                                </index>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            = 0.0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>X</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            = 0.0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>X</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            = 0.0
                        </expr>
                        ;
                    </expr_stmt>

                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = 0
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>nPts</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>C</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    +=
                                    <call>
                                        <name>v2Dot</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>A</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>A</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>C</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                    +=
                                    <call>
                                        <name>v2Dot</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>A</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>A</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[<expr>1</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="block">/* C[1][0] += V2Dot(&amp;A[i][0], &amp;A[i][1]);*/</comment>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>C</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    =
                                    <name>
                                        <name>C</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>C</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                    +=
                                    <call>
                                        <name>v2Dot</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>A</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[<expr>1</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>A</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[<expr>1</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name>tmp</name>
                                    =
                                    <call>
                                        <name>v2SubII</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>d</name>
                                                        <index>[
                                                            <expr>
                                                                <name>first</name>
                                                                +
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>v2AddII</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>v2ScaleIII</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>d</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>first</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>b0</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        <name>uPrime
                                                                                                        </name>
                                                                                                        <index>[
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    i
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            ]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>v2AddII</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>v2ScaleIII</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        <name>d</name>
                                                                                                        <index>[
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    first
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            ]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name>b1</name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            uPrime
                                                                                                                        </name>
                                                                                                                        <index>
                                                                                                                            [
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    i
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                            ]
                                                                                                                        </index>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>v2AddII</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            v2ScaleIII
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            d
                                                                                                                        </name>
                                                                                                                        <index>
                                                                                                                            [
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    last
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                            ]
                                                                                                                        </index>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <call>
                                                                                                                        <name>
                                                                                                                            b2
                                                                                                                        </name>
                                                                                                                        <argument_list>
                                                                                                                            (
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    <name>
                                                                                                                                        <name>
                                                                                                                                            uPrime
                                                                                                                                        </name>
                                                                                                                                        <index>
                                                                                                                                            [
                                                                                                                                            <expr>
                                                                                                                                                <name>
                                                                                                                                                    i
                                                                                                                                                </name>
                                                                                                                                            </expr>
                                                                                                                                            ]
                                                                                                                                        </index>
                                                                                                                                    </name>
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            )
                                                                                                                        </argument_list>
                                                                                                                    </call>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            v2ScaleIII
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            d
                                                                                                                        </name>
                                                                                                                        <index>
                                                                                                                            [
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    last
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                            ]
                                                                                                                        </index>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <call>
                                                                                                                        <name>
                                                                                                                            b3
                                                                                                                        </name>
                                                                                                                        <argument_list>
                                                                                                                            (
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    <name>
                                                                                                                                        <name>
                                                                                                                                            uPrime
                                                                                                                                        </name>
                                                                                                                                        <index>
                                                                                                                                            [
                                                                                                                                            <expr>
                                                                                                                                                <name>
                                                                                                                                                    i
                                                                                                                                                </name>
                                                                                                                                            </expr>
                                                                                                                                            ]
                                                                                                                                        </index>
                                                                                                                                    </name>
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            )
                                                                                                                        </argument_list>
                                                                                                                    </call>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>


                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>X</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    +=
                                    <call>
                                        <name>v2Dot</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>A</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>tmp</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>X</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                    +=
                                    <call>
                                        <name>v2Dot</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>A</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[<expr>1</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>tmp</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <comment type="block">/* Compute the determinants of C and X */</comment>
                    <expr_stmt>
                        <expr>
                            <name>det_C0_C1</name>
                            =
                            <name>
                                <name>C</name>
                                <index>[<expr>0</expr>]
                                </index>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            *
                            <name>
                                <name>C</name>
                                <index>[<expr>1</expr>]
                                </index>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            -
                            <name>
                                <name>C</name>
                                <index>[<expr>1</expr>]
                                </index>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            *
                            <name>
                                <name>C</name>
                                <index>[<expr>0</expr>]
                                </index>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>det_C0_X</name>
                            =
                            <name>
                                <name>C</name>
                                <index>[<expr>0</expr>]
                                </index>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            *
                            <name>
                                <name>X</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            -
                            <name>
                                <name>C</name>
                                <index>[<expr>0</expr>]
                                </index>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            *
                            <name>
                                <name>X</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>det_X_C1</name>
                            =
                            <name>
                                <name>X</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            *
                            <name>
                                <name>C</name>
                                <index>[<expr>1</expr>]
                                </index>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            -
                            <name>
                                <name>X</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            *
                            <name>
                                <name>C</name>
                                <index>[<expr>0</expr>]
                                </index>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="block">/* Finally, derive alpha values */</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>det_C0_C1</name>
                                == 0.0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>det_C0_C1</name>
                                        = (
                                        <name>
                                            <name>C</name>
                                            <index>[<expr>0</expr>]
                                            </index>
                                            <index>[<expr>0</expr>]
                                            </index>
                                        </name>
                                        *
                                        <name>
                                            <name>C</name>
                                            <index>[<expr>1</expr>]
                                            </index>
                                            <index>[<expr>1</expr>]
                                            </index>
                                        </name>
                                        ) * 10e-12
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>alpha_l</name>
                            = <name>det_X_C1</name> /
                            <name>det_C0_C1</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>alpha_r</name>
                            = <name>det_C0_X</name> /
                            <name>det_C0_C1</name>
                        </expr>
                        ;
                    </expr_stmt>


                    <comment type="block">/* If alpha negative, use the Wu/Barsky heuristic (see text) */</comment>
                    <comment type="block">/* (if alpha is 0, you get coincident control points that lead to
                        * divide by zero in any subsequent NewtonRaphsonRootFind() call. */
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>alpha_l</name>
                                &lt; 1.0e-6 || <name>alpha_r</name> &lt; 1.0e-6
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>dist</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>v2DistanceBetween2Points</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>d</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>last</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>d</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>first</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                / 3.0
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>bezCurve</name>
                                            <index>[<expr>0</expr>]
                                            </index>
                                        </name>
                                        =
                                        <name>
                                            <name>d</name>
                                            <index>[
                                                <expr>
                                                    <name>first</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>bezCurve</name>
                                            <index>[<expr>3</expr>]
                                            </index>
                                        </name>
                                        =
                                        <name>
                                            <name>d</name>
                                            <index>[
                                                <expr>
                                                    <name>last</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>v2Add</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>0</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>v2Scale</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tHat1</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>dist</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>v2Add</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>3</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>v2Scale</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tHat2</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>dist</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>bezCurve</name>
                                                            <index>[<expr>2</expr>]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return
                                    <expr>(<name>bezCurve</name>)
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="block">/* First and last control points of the Bezier curve are */</comment>
                    <comment type="block">/* positioned exactly at the first and last data points */</comment>
                    <comment type="block">/* Control points 1 and 2 are positioned an alpha distance out */</comment>
                    <comment type="block">/* on the tangent vectors, left and right, respectively */</comment>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>bezCurve</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            =
                            <name>
                                <name>d</name>
                                <index>[
                                    <expr>
                                        <name>first</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>bezCurve</name>
                                <index>[<expr>3</expr>]
                                </index>
                            </name>
                            =
                            <name>
                                <name>d</name>
                                <index>[
                                    <expr>
                                        <name>last</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>v2Add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bezCurve</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>v2Scale</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>tHat1</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>alpha_l</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bezCurve</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>v2Add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bezCurve</name>
                                                <index>[<expr>3</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>v2Scale</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>tHat2</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>alpha_r</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>bezCurve</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>(<name>bezCurve</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Given set of points and their parameterization, try to find
                * a better parameterization.
                *
                * @param d Array of digitized points.
                * @param first Indice of first point of region in d.
                * @param last Indice of last point of region in d.
                * @param u Current parameter values.
                * @param bezCurve Current fitted curve.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                    <index>[]</index>
                </type>
                <name>reparameterize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>first</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>last</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>u</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>bezCurve</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>nPts</name> =
                            <init>
                                <expr><name>last</name>-<name>first</name>+1
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                                <index>[]</index>
                            </type>
                            <name>uPrime</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* New parameter values */</comment>

                    <expr_stmt>
                        <expr>
                            <name>uPrime</name>
                            = new
                            <name>
                                <name>double</name>
                                <index>[
                                    <expr>
                                        <name>nPts</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                =
                                <name>first</name>
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;=
                                <name>last</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>uPrime</name>
                                        <index>[
                                            <expr><name>i</name>-
                                                <name>first</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <call>
                                        <name>newtonRaphsonRootFind</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bezCurve</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>d</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>u</name>
                                                        <index>[
                                                            <expr><name>i</name>-
                                                                <name>first</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>(<name>uPrime</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Use Newton-Raphson iteration to find better root.
                *
                * @param Q Current fitted bezier curve.
                * @param P Digitized point.
                * @param u Parameter value vor P.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                </type>
                <name>newtonRaphsonRootFind</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>Q</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>P</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>u</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>numerator</name>,
                            <name>denominator</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <index>[]</index>
                            </type>
                            <name>Q1</name> =
                            <init>
                                <expr>new
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                        <index>[<expr>3</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                            , <name>Q2</name> =
                            <init>
                                <expr>new
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Q' and Q'' */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>Q_u</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                            , <name>Q1_u</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                            , <name>Q2_u</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/*u evaluated at Q, Q', &amp; Q'' */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>uPrime</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Improved u */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="block">/* Compute Q(u) */</comment>
                    <expr_stmt>
                        <expr>
                            <name>Q_u</name>
                            =
                            <call>
                                <name>bezierII</name>
                                <argument_list>(
                                    <argument>
                                        <expr>3</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>Q</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>u</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="block">/* Generate control vertices for Q' */</comment>
                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = 0
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;= 2
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>Q1</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(
                                                    <name>
                                                        <name>Q</name>
                                                        <index>[
                                                            <expr><name>i</name>+1
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .<name>x</name> -
                                                    <name>
                                                        <name>Q</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .<name>x</name>) * 3.0
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(
                                                    <name>
                                                        <name>Q</name>
                                                        <index>[
                                                            <expr><name>i</name>+1
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .<name>y</name> -
                                                    <name>
                                                        <name>Q</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .<name>y</name>) * 3.0
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <comment type="block">/* Generate control vertices for Q'' */</comment>
                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = 0
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;= 1
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>Q2</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(
                                                    <name>
                                                        <name>Q1</name>
                                                        <index>[
                                                            <expr><name>i</name>+1
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .<name>x</name> -
                                                    <name>
                                                        <name>Q1</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .<name>x</name>) * 2.0
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(
                                                    <name>
                                                        <name>Q1</name>
                                                        <index>[
                                                            <expr><name>i</name>+1
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .<name>y</name> -
                                                    <name>
                                                        <name>Q1</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .<name>y</name>) * 2.0
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <comment type="block">/* Compute Q'(u) and Q''(u) */</comment>
                    <expr_stmt>
                        <expr>
                            <name>Q1_u</name>
                            =
                            <call>
                                <name>bezierII</name>
                                <argument_list>(
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>Q1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>u</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>Q2_u</name>
                            =
                            <call>
                                <name>bezierII</name>
                                <argument_list>(
                                    <argument>
                                        <expr>1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>Q2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>u</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="block">/* Compute f(u)/f'(u) */</comment>
                    <expr_stmt>
                        <expr>
                            <name>numerator</name>
                            = (
                            <name><name>Q_u</name>.
                                <name>x</name>
                            </name>
                            -
                            <name><name>P</name>.
                                <name>x</name>
                            </name>
                            ) * (
                            <name><name>Q1_u</name>.
                                <name>x</name>
                            </name>
                            ) + (
                            <name><name>Q_u</name>.
                                <name>y</name>
                            </name>
                            -
                            <name><name>P</name>.
                                <name>y</name>
                            </name>
                            ) * (
                            <name><name>Q1_u</name>.
                                <name>y</name>
                            </name>
                            )
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>denominator</name>
                            = (
                            <name><name>Q1_u</name>.
                                <name>x</name>
                            </name>
                            ) * (
                            <name><name>Q1_u</name>.
                                <name>x</name>
                            </name>
                            ) + (
                            <name><name>Q1_u</name>.
                                <name>y</name>
                            </name>
                            ) * (
                            <name><name>Q1_u</name>.
                                <name>y</name>
                            </name>
                            ) +
                            (
                            <name><name>Q_u</name>.
                                <name>x</name>
                            </name>
                            -
                            <name><name>P</name>.
                                <name>x</name>
                            </name>
                            ) * (
                            <name><name>Q2_u</name>.
                                <name>x</name>
                            </name>
                            ) + (
                            <name><name>Q_u</name>.
                                <name>y</name>
                            </name>
                            -
                            <name><name>P</name>.
                                <name>y</name>
                            </name>
                            ) * (
                            <name><name>Q2_u</name>.
                                <name>y</name>
                            </name>
                            )
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="block">/* u = u - f(u)/f'(u) */</comment>
                    <expr_stmt>
                        <expr>
                            <name>uPrime</name>
                            = <name>u</name> - (<name>numerator</name>/<name>denominator</name>)
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>(<name>uPrime</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Evaluate a Bezier curve at a particular parameter value.
                *
                * @param degree The degree of the bezier curve.
                * @param V Array of control points.
                * @param t Parametric value to find point for.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>bezierII</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>degree</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>V</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>,
                            <name>j</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>Q</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Point on curve at parameter t */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <index>[]</index>
                            </type>
                            <name>Vtemp</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Local copy of control points */</comment>

                    <comment type="block">/* Copy array */</comment>
                    <expr_stmt>
                        <expr>
                            <name>Vtemp</name>
                            = new
                            <name><name>Point2D</name>.
                                <name>Double</name>
                                <index>[
                                    <expr><name>degree</name>+1
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = 0
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;=
                                <name>degree</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>Vtemp</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = (
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                    </name>
                                    )
                                    <name>
                                        <name>V</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>clone</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <comment type="block">/* Triangle computation */</comment>
                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = 1
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;=
                                <name>degree</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <for>for (
                                <init>
                                    <expr>
                                        <name>j</name>
                                        = 0
                                    </expr>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>j</name>
                                        &lt;= <name>degree</name>-
                                        <name>i</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>j</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>Vtemp</name>
                                                <index>[
                                                    <expr>
                                                        <name>j</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .<name>x</name> = (1.0 - <name>t</name>) *
                                            <name>
                                                <name>Vtemp</name>
                                                <index>[
                                                    <expr>
                                                        <name>j</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .<name>x</name> + <name>t</name> *
                                            <name>
                                                <name>Vtemp</name>
                                                <index>[
                                                    <expr><name>j</name>+1
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <name>x</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>Vtemp</name>
                                                <index>[
                                                    <expr>
                                                        <name>j</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .<name>y</name> = (1.0 - <name>t</name>) *
                                            <name>
                                                <name>Vtemp</name>
                                                <index>[
                                                    <expr>
                                                        <name>j</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .<name>y</name> + <name>t</name> *
                                            <name>
                                                <name>Vtemp</name>
                                                <index>[
                                                    <expr><name>j</name>+1
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <name>y</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                    </for>

                    <expr_stmt>
                        <expr>
                            <name>Q</name>
                            =
                            <name>
                                <name>Vtemp</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>Q</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * B0, B1, B2, B3 :
                * Bezier multipliers
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                </type>
                <name>b0</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>u</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>tmp</name> =
                            <init>
                                <expr>1.0 -
                                    <name>u</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(<name>tmp</name> * <name>tmp</name> * <name>tmp</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                </type>
                <name>b1</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>u</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>tmp</name> =
                            <init>
                                <expr>1.0 -
                                    <name>u</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(3 * <name>u</name> * (<name>tmp</name> * <name>tmp</name>))
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                </type>
                <name>b2</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>u</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>tmp</name> =
                            <init>
                                <expr>1.0 -
                                    <name>u</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(3 * <name>u</name> * <name>u</name> * <name>tmp</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                </type>
                <name>b3</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>u</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>u</name> * <name>u</name> * <name>u</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Approximate unit tangents at "left" endpoint of digitized curve.
                *
                * @param d Digitized points.
                * @param end Index to "left" end of region.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>computeLeftTangent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat1</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tHat1</name>
                            =
                            <call>
                                <name>v2SubII</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>d</name>
                                                <index>[
                                                    <expr><name>end</name>+1
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>d</name>
                                                <index>[
                                                    <expr>
                                                        <name>end</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tHat1</name>
                            =
                            <call>
                                <name>v2Normalize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tHat1</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>tHat1</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Approximate unit tangents at "right" endpoint of digitized curve.
                *
                * @param d Digitized points.
                * @param end Index to "right" end of region.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>computeRightTangent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>tHat2</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tHat2</name>
                            =
                            <call>
                                <name>v2SubII</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>d</name>
                                                <index>[
                                                    <expr><name>end</name>-1
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>d</name>
                                                <index>[
                                                    <expr>
                                                        <name>end</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tHat2</name>
                            =
                            <call>
                                <name>v2Normalize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tHat2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>tHat2</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Approximate unit tangents at "center" of digitized curve.
                *
                * @param d Digitized points.
                * @param center Index to "center" end of region.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>computeCenterTangent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>center</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>V1</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                            , <name>V2</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                            , <name>tHatCenter</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>V1</name>
                            =
                            <call>
                                <name>v2SubII</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>d</name>
                                                <index>[
                                                    <expr><name>center</name>-1
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>d</name>
                                                <index>[
                                                    <expr>
                                                        <name>center</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>V2</name>
                            =
                            <call>
                                <name>v2SubII</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>d</name>
                                                <index>[
                                                    <expr>
                                                        <name>center</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>d</name>
                                                <index>[
                                                    <expr><name>center</name>+1
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>tHatCenter</name>.
                                <name>x</name>
                            </name>
                            = (
                            <name><name>V1</name>.
                                <name>x</name>
                            </name>
                            +
                            <name><name>V2</name>.
                                <name>x</name>
                            </name>
                            )/2.0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>tHatCenter</name>.
                                <name>y</name>
                            </name>
                            = (
                            <name><name>V1</name>.
                                <name>y</name>
                            </name>
                            +
                            <name><name>V2</name>.
                                <name>y</name>
                            </name>
                            )/2.0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tHatCenter</name>
                            =
                            <call>
                                <name>v2Normalize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tHatCenter</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>tHatCenter</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Assign parameter values to digitized points
                * using relative distances between points.
                *
                * @param d Digitized points.
                * @param first Indice of first point of region in d.
                * @param last Indice of last point of region in d.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                    <index>[]</index>
                </type>
                <name>chordLengthParameterize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>first</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>last</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                                <index>[]</index>
                            </type>
                            <name>u</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Parameterization */</comment>

                    <expr_stmt>
                        <expr>
                            <name>u</name>
                            = new
                            <name>
                                <name>double</name>
                                <index>[
                                    <expr><name>last</name>-<name>first</name>+1
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>u</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            = 0.0
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = <name>first</name>+1
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;=
                                <name>last</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>u</name>
                                        <index>[
                                            <expr><name>i</name>-
                                                <name>first</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>
                                        <name>u</name>
                                        <index>[
                                            <expr><name>i</name>-<name>first</name>-1
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    +
                                    <call>
                                        <name>v2DistanceBetween2Points</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>d</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>d</name>
                                                        <index>[
                                                            <expr><name>i</name>-1
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = <name>first</name> + 1
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;=
                                <name>last</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>u</name>
                                        <index>[
                                            <expr><name>i</name>-
                                                <name>first</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>
                                        <name>u</name>
                                        <index>[
                                            <expr><name>i</name>-
                                                <name>first</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    /
                                    <name>
                                        <name>u</name>
                                        <index>[
                                            <expr><name>last</name>-
                                                <name>first</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <return>return
                        <expr>(<name>u</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Find the maximum squared distance of digitized points
                * to fitted curve.
                *
                * @param d Digitized points.
                * @param first Indice of first point of region in d.
                * @param last Indice of last point of region in d.
                * @param bezCurve Fitted Bezier curve
                * @param u Parameterization of points*
                * @param splitPoint Point of maximum error (input/output parameter, must be
                * an array of 1)
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                </type>
                <name>computeMaxError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>first</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>last</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>bezCurve</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>u</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>int</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>splitPoint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>maxDist</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Maximum error */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>dist</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Current error */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>P</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Point on curve */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>v</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/* Vector from point to curve */</comment>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>splitPoint</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            = (<name>last</name> - <name>first</name> + 1)/2
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>maxDist</name>
                            = 0.0
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = <name>first</name> + 1
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>last</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>P</name>
                                    =
                                    <call>
                                        <name>bezierII</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>3</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>bezCurve</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>u</name>
                                                        <index>[
                                                            <expr><name>i</name>-
                                                                <name>first</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>v</name>
                                    =
                                    <call>
                                        <name>v2SubII</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>P</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>d</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>dist</name>
                                    =
                                    <call>
                                        <name>v2SquaredLength</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>v</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>dist</name>
                                        &gt;=
                                        <name>maxDist</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>maxDist</name>
                                                =
                                                <name>dist</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>splitPoint</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                =
                                                <name>i</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>(<name>maxDist</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>v2AddII</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>b</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>c</name>.
                                <name>x</name>
                            </name>
                            =
                            <name><name>a</name>.
                                <name>x</name>
                            </name>
                            +
                            <name><name>b</name>.
                                <name>x</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>c</name>.
                                <name>y</name>
                            </name>
                            =
                            <name><name>a</name>.
                                <name>y</name>
                            </name>
                            +
                            <name><name>b</name>.
                                <name>y</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>c</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>v2ScaleIII</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>v</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>s</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>result</name>.
                                <name>x</name>
                            </name>
                            =
                            <name><name>v</name>.
                                <name>x</name>
                            </name>
                            *
                            <name>s</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>result</name>.
                                <name>y</name>
                            </name>
                            =
                            <name><name>v</name>.
                                <name>y</name>
                            </name>
                            *
                            <name>s</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>v2SubII</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>b</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>c</name>.
                                <name>x</name>
                            </name>
                            =
                            <name><name>a</name>.
                                <name>x</name>
                            </name>
                            -
                            <name><name>b</name>.
                                <name>x</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>c</name>.
                                <name>y</name>
                            </name>
                            =
                            <name><name>a</name>.
                                <name>y</name>
                            </name>
                            -
                            <name><name>b</name>.
                                <name>y</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>(<name>c</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="block">/* -------------------------------------------------------------------------
                * GraphicsGems.c
                * 2d and 3d Vector C Library
                * by Andrew Glassner
                * from "Graphics Gems", Academic Press, 1990
                * -------------------------------------------------------------------------
                */
            </comment>
            <comment type="javadoc">/**
                * Return the distance between two points
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                </type>
                <name>v2DistanceBetween2Points</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>b</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>dx</name> =
                            <init>
                                <expr>
                                    <name><name>a</name>.
                                        <name>x</name>
                                    </name>
                                    -
                                    <name><name>b</name>.
                                        <name>x</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>dy</name> =
                            <init>
                                <expr>
                                    <name><name>a</name>.
                                        <name>y</name>
                                    </name>
                                    -
                                    <name><name>b</name>.
                                        <name>y</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>Math</name>.
                                    <name>sqrt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>dx</name>*<name>dx</name>)+(<name>dy</name>*<name>dy</name>)
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Scales the input vector to the new length and returns it.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>v2Scale</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>v</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>newlen</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>v2Length</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>v</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>len</name>
                                != 0.0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>v</name>.
                                            <name>x</name>
                                        </name>
                                        *= <name>newlen</name>/
                                        <name>len</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>v</name>.
                                            <name>y</name>
                                        </name>
                                        *= <name>newlen</name>/
                                        <name>len</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>v</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns length of input vector.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                </type>
                <name>v2Length</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>Math</name>.
                                    <name>sqrt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>v2SquaredLength</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>a</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns squared length of input vector.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                </type>
                <name>v2SquaredLength</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name><name>a</name>.
                                <name>x</name>
                            </name>
                            *
                            <name><name>a</name>.
                                <name>x</name>
                            </name>
                            )+(
                            <name><name>a</name>.
                                <name>y</name>
                            </name>
                            *
                            <name><name>a</name>.
                                <name>y</name>
                            </name>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return vector sum c = a+b.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>v2Add</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>b</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>c</name>.
                                <name>x</name>
                            </name>
                            =
                            <name><name>a</name>.
                                <name>x</name>
                            </name>
                            +
                            <name><name>b</name>.
                                <name>x</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>c</name>.
                                <name>y</name>
                            </name>
                            =
                            <name><name>a</name>.
                                <name>y</name>
                            </name>
                            +
                            <name><name>b</name>.
                                <name>y</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>c</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Negates the input vector and returns it.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>v2Negate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>v</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>v</name>.
                                <name>x</name>
                            </name>
                            = -
                            <name><name>v</name>.
                                <name>x</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>v</name>.
                                <name>y</name>
                            </name>
                            = -
                            <name><name>v</name>.
                                <name>y</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>v</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Return the dot product of vectors a and b.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                </type>
                <name>v2Dot</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>b</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name><name>a</name>.
                                <name>x</name>
                            </name>
                            *
                            <name><name>b</name>.
                                <name>x</name>
                            </name>
                            )+(
                            <name><name>a</name>.
                                <name>y</name>
                            </name>
                            *
                            <name><name>b</name>.
                                <name>y</name>
                            </name>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Normalizes the input vector and returns it.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>v2Normalize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>v</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>v2Length</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>v</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>len</name>
                                != 0.0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>v</name>.
                                            <name>x</name>
                                        </name>
                                        /=
                                        <name>len</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>v</name>.
                                            <name>y</name>
                                        </name>
                                        /=
                                        <name>len</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>v</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
