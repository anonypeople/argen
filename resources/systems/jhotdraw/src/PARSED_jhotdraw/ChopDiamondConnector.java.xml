<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\ChopDiamondConnector.java">
    <comment type="block">/*
        * @(#)ChopDiamondConnector.java 1.0 27. Mï¿½rz 2006
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import static
        <name><name>org</name>.<name>jhotdraw</name>.<name>draw</name>.
            <name>AttributeKeys</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * A ChopDiamondConnector locates connection points by choping the
        * connection between the centers of the two figures at the edge of
        * a diamond figure.
        *
        * @author Werner Randelshofer
        * @version 1.0 27. March 2006 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>ChopDiamondConnector</name>
        <super>
            <extends>extends
                <name>ChopRectangleConnector</name>
            </extends>
        </super>
        <block>{

            <constructor>
                <specifier>public</specifier>
                <name>ChopDiamondConnector</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// only used for Storable implementation</comment>
                    }
                </block>
            </constructor>

            <constructor>
                <specifier>public</specifier>
                <name>ChopDiamondConnector</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>owner</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>owner</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Return an appropriate connection point on the edge of a diamond figure
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>chop</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>from</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>target</name>
                            =
                            <call>
                                <name>getConnectorTarget</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>target</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>target</name>.
                                            <name>getBounds</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>DiamondFigure</name>.<name>IS_QUADRATIC</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>target</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>side</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>Math</name>.
                                                        <name>max</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>r</name>.
                                                                    <name>width</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>r</name>.
                                                                    <name>height</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>r</name>.
                                            <name>x</name>
                                        </name>
                                        -= (<name>side</name> -
                                        <name><name>r</name>.
                                            <name>width</name>
                                        </name>
                                        ) / 2
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>r</name>.
                                            <name>y</name>
                                        </name>
                                        -= (<name>side</name> -
                                        <name><name>r</name>.
                                            <name>height</name>
                                        </name>
                                        ) / 2
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>r</name>.
                                            <name>width</name>
                                        </name>
                                        =
                                        <name><name>r</name>.
                                            <name>height</name>
                                        </name>
                                        =
                                        <name>side</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>growx</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>growy</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// FIXME - This code is wrong. Copy correct code from DiamondFigure.</comment>
                    <switch>switch
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>STROKE_PLACEMENT</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>target</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>INSIDE</name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>growx</name>
                                            = <name>growy</name> = 0f
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name>OUTSIDE</name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>double</name>
                                            </type>
                                            <name>lineLength</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>Math</name>.
                                                            <name>sqrt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>r</name>.
                                                                        <name>width</name>
                                                                    </name>
                                                                    *
                                                                    <name><name>r</name>.
                                                                        <name>width</name>
                                                                    </name>
                                                                    +
                                                                    <name><name>r</name>.
                                                                        <name>height</name>
                                                                    </name>
                                                                    *
                                                                    <name><name>r</name>.
                                                                        <name>height</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>double</name>
                                            </type>
                                            <name>scale</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name>getStrokeTotalWidth</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>target</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    * 2d /
                                                    <name>lineLength</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>growx</name>
                                            = <name>scale</name> *
                                            <name><name>r</name>.
                                                <name>height</name>
                                            </name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>growy</name>
                                            = <name>scale</name> *
                                            <name><name>r</name>.
                                                <name>width</name>
                                            </name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">//growy = getStrokeTotalWidth() * SQRT2;</comment>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name>CENTER</name>
                                </expr>
                                :
                            </case>
                            <default>default :
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>lineLength</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>Math</name>.
                                                        <name>sqrt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>r</name>.
                                                                    <name>width</name>
                                                                </name>
                                                                *
                                                                <name><name>r</name>.
                                                                    <name>width</name>
                                                                </name>
                                                                +
                                                                <name><name>r</name>.
                                                                    <name>height</name>
                                                                </name>
                                                                *
                                                                <name><name>r</name>.
                                                                    <name>height</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>scale</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getStrokeTotalWidth</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>target</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                /
                                                <name>lineLength</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>growx</name>
                                        = <name>scale</name> *
                                        <name><name>r</name>.
                                            <name>height</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>growy</name>
                                        = <name>scale</name> *
                                        <name><name>r</name>.
                                            <name>width</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//growx = growy = getStrokeTotalWidth() / 2d * SQRT2;</comment>
                                <break>break;</break>
                            </default>
                            }
                        </block>
                    </switch>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Geom</name>.
                                    <name>grow</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>r</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>growx</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>growy</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Center point</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>c1</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>x</name>
                                                    </name>
                                                    +
                                                    <name><name>r</name>.
                                                        <name>width</name>
                                                    </name>
                                                    /2
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>y</name>
                                                    </name>
                                                    + (
                                                    <name><name>r</name>.
                                                        <name>height</name>
                                                    </name>
                                                    /2)
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p2</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>x</name>
                                                    </name>
                                                    +
                                                    <name><name>r</name>.
                                                        <name>width</name>
                                                    </name>
                                                    /2
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>y</name>
                                                    </name>
                                                    +
                                                    <name><name>r</name>.
                                                        <name>height</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p4</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>x</name>
                                                    </name>
                                                    +
                                                    <name><name>r</name>.
                                                        <name>width</name>
                                                    </name>
                                                    /2
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>y</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// If overlapping, just return the opposite corners</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>r</name>.
                                        <name>contains</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>from</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>from</name>.
                                                <name>y</name>
                                            </name>
                                            &gt;
                                            <name><name>r</name>.
                                                <name>y</name>
                                            </name>
                                            &amp;&amp;
                                            <name><name>from</name>.
                                                <name>y</name>
                                            </name>
                                            &lt; (
                                            <name><name>r</name>.
                                                <name>y</name>
                                            </name>
                                            +
                                            <name><name>r</name>.
                                                <name>height</name>
                                            </name>
                                            /2)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>p2</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>p4</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// Calculate angle to determine quadrant</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>ang</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Geom</name>.
                                            <name>pointToAngle</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>r</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>from</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Dermine line points</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p1</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>x</name>
                                                    </name>
                                                    +
                                                    <name><name>r</name>.
                                                        <name>width</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>y</name>
                                                    </name>
                                                    + (
                                                    <name><name>r</name>.
                                                        <name>height</name>
                                                    </name>
                                                    /2)
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p3</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>x</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>y</name>
                                                    </name>
                                                    + (
                                                    <name><name>r</name>.
                                                        <name>height</name>
                                                    </name>
                                                    /2)
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>rp</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// This will be returned</comment>

                    <comment type="line">// Get the intersection with edges</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ang</name>
                                &gt; 0 &amp;&amp; <name>ang</name> &lt; 1.57
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>rp</name>
                                        =
                                        <call>
                                            <name><name>Geom</name>.
                                                <name>intersect</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>p1</name>.
                                                            <name>x</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>p1</name>.
                                                            <name>y</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>p2</name>.
                                                            <name>x</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>p2</name>.
                                                            <name>y</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>c1</name>.
                                                            <name>x</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>c1</name>.
                                                            <name>y</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>from</name>.
                                                            <name>x</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>from</name>.
                                                            <name>y</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ang</name>
                                        &gt; 1.575 &amp;&amp; <name>ang</name> &lt; 3.14
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>rp</name>
                                                =
                                                <call>
                                                    <name><name>Geom</name>.
                                                        <name>intersect</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>p2</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p2</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p3</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p3</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>from</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>from</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>ang</name>
                                                &gt; -3.14 &amp;&amp; <name>ang</name> &lt; -1.575
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>rp</name>
                                                        =
                                                        <call>
                                                            <name><name>Geom</name>.
                                                                <name>intersect</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>p3</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>p3</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>p4</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>p4</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>c1</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>c1</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>from</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>from</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>ang</name>
                                                        &gt; -1.57 &amp;&amp; <name>ang</name> &lt; 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>rp</name>
                                                                =
                                                                <call>
                                                                    <name><name>Geom</name>.
                                                                        <name>intersect</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>p4</name>.
                                                                                    <name>x</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>p4</name>.
                                                                                    <name>y</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>p1</name>.
                                                                                    <name>x</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>p1</name>.
                                                                                    <name>y</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>c1</name>.
                                                                                    <name>x</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>c1</name>.
                                                                                    <name>y</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>from</name>.
                                                                                    <name>x</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>from</name>.
                                                                                    <name>y</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    <comment type="line">// No proper edge found, we should send one of four corners</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>rp</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>rp</name>
                                        =
                                        <call>
                                            <name><name>Geom</name>.
                                                <name>angleToPoint</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>r</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>ang</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>rp</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
