<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\ChopRectangleConnector.java">
    <comment type="block">/*
        * @(#)ChopRectangleConnector.java 2.2.2 2007-05-14
        *
        * Copyright (c) 1996-2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import static
        <name><name>org</name>.<name>jhotdraw</name>.<name>draw</name>.
            <name>AttributeKeys</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * A ChopRectangleConnector locates connection points by
        * choping the connection between the centers of the
        * two figures at the display box.
        * &lt;p&gt;
        * XXX - Replace all Chop...Connectors by a single ChopToCenterConnector and
        * move method chop(Point2D.Double) into Figure interface.
        *
        * @see Connector
        *
        * @author Werner Randelshofer
        * @version 2.2.2 2007-05-14 Fixed strange layout behavior while manipulating
        * a connection.
        * &lt;br&gt;2.2.1 2007-02-01 Added support for self-connecting connections.
        * &lt;br&gt;2.2 2006-12-23 Renamed from ChopBoxConnector to ChopRectangleConnector.
        * &lt;br&gt;2.1 2006-03-22 Support for total stroke width added.
        * &lt;br&gt;2.0 2006-01-14 Changed to support double precision coordinates.
        * &lt;br&gt;1.0 2003-12-01 Derived from JHotDraw 5.4b1.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>ChopRectangleConnector</name>
        <super>
            <extends>extends
                <name>AbstractConnector</name>
            </extends>
        </super>
        <block>{


            <comment type="javadoc">/** Creates a new instance.
                * Only used for storable.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>ChopRectangleConnector</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <constructor>
                <specifier>public</specifier>
                <name>ChopRectangleConnector</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>owner</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>owner</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>findStart</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ConnectionFigure</name>
                            </type>
                            <name>connection</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>startFigure</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>connection</name>.
                                            <name>getStartConnector</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getOwner</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>from</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>connection</name>.
                                        <name>getNodeCount</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &lt;= 2 ||
                                <call>
                                    <name><name>connection</name>.
                                        <name>getLiner</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>connection</name>.
                                                    <name>getEndConnector</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>from</name>
                                                    =
                                                    <call>
                                                        <name><name>connection</name>.
                                                            <name>getEndPoint</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name><name>Rectangle2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                    </type>
                                                    <name>r1</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name>getConnectorTarget</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>connection</name>.
                                                                                    <name>getEndConnector</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            .
                                                                            <call>
                                                                                <name>getOwner</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>getBounds</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>from</name>
                                                    = new
                                                    <call>
                                                        <name><name>Point2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>r1</name>.
                                                                        <name>x</name>
                                                                    </name>
                                                                    +
                                                                    <name><name>r1</name>.
                                                                        <name>width</name>
                                                                    </name>
                                                                    /2
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>r1</name>.
                                                                        <name>y</name>
                                                                    </name>
                                                                    +
                                                                    <name><name>r1</name>.
                                                                        <name>height</name>
                                                                    </name>
                                                                    /2
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>from</name>
                                        =
                                        <call>
                                            <name><name>connection</name>.
                                                <name>getPoint</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>1</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name>chop</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>startFigure</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>from</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>findEnd</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ConnectionFigure</name>
                            </type>
                            <name>connection</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>endFigure</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>connection</name>.
                                            <name>getEndConnector</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getOwner</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>from</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>connection</name>.
                                        <name>getNodeCount</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &lt;= 3 &amp;&amp;
                                <call>
                                    <name><name>connection</name>.
                                        <name>getStartFigure</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <call>
                                    <name><name>connection</name>.
                                        <name>getEndFigure</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ||
                                <call>
                                    <name><name>connection</name>.
                                        <name>getNodeCount</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &lt;= 2 ||
                                <call>
                                    <name><name>connection</name>.
                                        <name>getLiner</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>connection</name>.
                                                    <name>getStartConnector</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>from</name>
                                                    =
                                                    <call>
                                                        <name><name>connection</name>.
                                                            <name>getStartPoint</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>connection</name>.
                                                            <name>getStartFigure</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    ==
                                                    <call>
                                                        <name><name>connection</name>.
                                                            <name>getEndFigure</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name><name>Rectangle2D</name>.
                                                                    <name>Double</name>
                                                                </name>
                                                            </type>
                                                            <name>r1</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name>getConnectorTarget</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>connection</name>.
                                                                                            <name>getStartConnector
                                                                                            </name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    .
                                                                                    <call>
                                                                                        <name>getOwner</name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>getBounds</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>from</name>
                                                            = new
                                                            <call>
                                                                <name><name>Point2D</name>.
                                                                    <name>Double</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>r1</name>.
                                                                                <name>x</name>
                                                                            </name>
                                                                            +
                                                                            <name><name>r1</name>.
                                                                                <name>width</name>
                                                                            </name>
                                                                            /2
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>r1</name>.
                                                                                <name>y</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name><name>Rectangle2D</name>.
                                                                    <name>Double</name>
                                                                </name>
                                                            </type>
                                                            <name>r1</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name>getConnectorTarget</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>connection</name>.
                                                                                            <name>getStartConnector
                                                                                            </name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    .
                                                                                    <call>
                                                                                        <name>getOwner</name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>getBounds</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>from</name>
                                                            = new
                                                            <call>
                                                                <name><name>Point2D</name>.
                                                                    <name>Double</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>r1</name>.
                                                                                <name>x</name>
                                                                            </name>
                                                                            +
                                                                            <name><name>r1</name>.
                                                                                <name>width</name>
                                                                            </name>
                                                                            /2
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>r1</name>.
                                                                                <name>y</name>
                                                                            </name>
                                                                            +
                                                                            <name><name>r1</name>.
                                                                                <name>height</name>
                                                                            </name>
                                                                            /2
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>from</name>
                                        =
                                        <call>
                                            <name><name>connection</name>.
                                                <name>getPoint</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>connection</name>.
                                                                <name>getNodeCount</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        - 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name>chop</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>endFigure</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>from</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>chop</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>from</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>target</name>
                            =
                            <call>
                                <name>getConnectorTarget</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>target</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>target</name>.
                                            <name>getBounds</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>STROKE_COLOR</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>target</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>grow</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <switch>switch
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>STROKE_PLACEMENT</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>target</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <case>case
                                            <expr>
                                                <name>CENTER</name>
                                            </expr>
                                            :
                                        </case>
                                        <default>default :
                                            <expr_stmt>
                                                <expr>
                                                    <name>grow</name>
                                                    =
                                                    <call>
                                                        <name><name>AttributeKeys</name>.
                                                            <name>getStrokeTotalWidth</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>target</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    / 2d
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </default>
                                        <case>case
                                            <expr>
                                                <name>OUTSIDE</name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>grow</name>
                                                    =
                                                    <call>
                                                        <name><name>AttributeKeys</name>.
                                                            <name>getStrokeTotalWidth</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>target</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name>INSIDE</name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>grow</name>
                                                    = 0d
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        }
                                    </block>
                                </switch>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>Geom</name>.
                                                <name>grow</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>r</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>grow</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>grow</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>Geom</name>.
                                    <name>angleToPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>r</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Geom</name>.
                                                    <name>pointToAngle</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>r</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>from</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
