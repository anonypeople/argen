<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\ConnectionEndHandle.java">
    <comment type="block">/*
        * @(#)ConnectionEndHandle.java 3.0 2007-05-18
        *
        * Copyright (c) 1996-2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * Handle to reconnect the
        * end of a connection to another figure.
        *
        * @author Werner Randelshofer
        * @version 3.0 2007-05-18 Changed due to changes in the canConnect methods
        * of the ConnectionFigure interface. Shortened the name from
        * ChangeConnectionEndHandle to ConnectionEndHandle.
        * &lt;br&gt;2.0 2006-01-14 Changed to support double precision coordinates.
        * &lt;br&gt;1.0 2003-12-01 Derived from JHotDraw 5.4b1.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>ConnectionEndHandle</name>
        <super>
            <extends>extends
                <name>AbstractConnectionHandle</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Constructs the connection handle for the given start figure.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>ConnectionEndHandle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ConnectionFigure</name>
                            </type>
                            <name>owner</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>owner</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Sets the start of the connection.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>connect</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Connector</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>setEndConnector</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>c</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Disconnects the start figure.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>disconnect</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>setEndConnector</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Connector</name>
                </type>
                <name>getTarget</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getEndConnector</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the start point of the connection.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setLocation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>willChange</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>setEndPoint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>changed</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the start point of the connection.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>getLocation</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getEndPoint</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>canConnect</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Connector</name>
                            </type>
                            <name>existingEnd</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Connector</name>
                            </type>
                            <name>targetEnd</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getOwner</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>canConnect</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>existingEnd</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>targetEnd</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getBezierNodeIndex</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getBezierFigure</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getNodeCount</name>
                                <argument_list>()</argument_list>
                            </call>
                            - 1
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
