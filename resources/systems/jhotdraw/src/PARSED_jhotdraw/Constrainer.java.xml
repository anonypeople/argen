<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\Constrainer.java">
    <comment type="block">/*
        * @(#)Constrainer.java 5.0 2007-12-17
        *
        * Copyright (c) 1996-2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.<name>swing</name>.<name>event</name>.
            <name>ChangeListener</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Interface to constrain points and figures on a Drawing.
        * This can be used to implement different kinds of grids.
        *
        * @author Werner Randelshofer
        * @version 5.0 2007-04-29 Werner Randelshofer: Refactored interface.
        * Huw Jones: Added constrainAngle() method.
        * &lt;br&gt;4.0 2007-07-31 Werner Randelshofer: Redesigned to support the
        * constrainement of rectangles.
        * &lt;br&gt;3.0 2007-04-29 Werner Randelshofer: Method constrainPoint(Point2D.Double, Direction) added.
        * &lt;br&gt;2.1 2006-07-03 Werner Randelshofer: Method isVisible() added.
        * &lt;br&gt;2.0 2006-01-17 Werner Randelshofer: Changed to support double precision coordinates.
        * &lt;br&gt;1.0 2004-03-14 Werner Randelshofer: Created.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Constrainer</name>
        <block>{

            <comment type="javadoc">/**
                * Constrains the placement of a point towards the closest constraint
                * in any direction.
                * &lt;p&gt;
                * This method changes the point which is passed as a parameter.
                *
                * @param p A point on the drawing.
                * @return Returns the constrained point.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>constrainPoint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Moves a point to the closest constrained location in the specified
                * direction.
                * &lt;p&gt;
                * This method changes the point which is passed as a parameter.
                *
                * @param p A point on the drawing.
                * @param dir A direction.
                * @return Returns the constrained point.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>translatePoint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>TranslationDirection</name>
                            </type>
                            <name>dir</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Constrains the placement of a rectangle towards the closest constrainment
                * in any direction.
                * &lt;p&gt;
                * This method changes the location of the rectangle which is passed as a
                * parameter. This method does not change the size of the rectangle.
                *
                * @param r A rectangle on the drawing.
                * @return Returns the constrained rectangle.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name><name>Rectangle2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>constrainRectangle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Moves a rectangle to the closest constrained location in the
                * specified direction.
                * &lt;p&gt;
                * This method changes the location of the rectangle which is passed as a
                * parameter. This method only performs a translation - it does not change
                * the size of the rectangle.
                *
                * @param r A rectangle on the drawing.
                * @param dir A direction.
                * @return Returns the constrained rectangle.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name><name>Rectangle2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>translateRectangle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>TranslationDirection</name>
                            </type>
                            <name>dir</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Constrains the given angle (in radians).
                * This method changes the angle which is passed as a parameter.
                *
                * @param angle The angle (in radians).
                * @return The closest constrained angle (in radians).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>constrainAngle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>angle</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Moves the given angle (in radians) to the closest constrained orientation
                * in the specified direction.
                *
                * @param angle The angle (in radians).
                * @return The closest constrained angle (in radians) in the specified
                * direction.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>rotateAngle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>angle</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RotationDirection</name>
                            </type>
                            <name>dir</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws the constrainer grid for the specified drawing view.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>draw</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DrawingView</name>
                            </type>
                            <name>view</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a change listener.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addChangeListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ChangeListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Removes a change listener.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeChangeListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ChangeListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            }
        </block>
    </class>
</unit>
