<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\xml\DOMInput.java">
    <comment type="block">/*
        * @(#)DOMInput.java 1.0 10. Mï¿½rz 2004
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>


    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>xml</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * DOMInput.
        *
        * @author Werner Randelshofer
        * @version 1.0 10. Mï¿½rz 2004 Created.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>DOMInput</name>
        <block>{

            <comment type="javadoc">/**
                * Returns the tag name of the current element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getTagName</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Gets an attribute of the current element of the DOM Document.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>defaultValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Gets the text of the current element of the DOM Document.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getText</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Gets the text of the current element of the DOM Document.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>defaultValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Gets an attribute of the current element of the DOM Document.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>defaultValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Gets an attribute of the current element of the DOM Document.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>defaultValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Gets an attribute of the current element of the DOM Document.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>defaultValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Gets an attribute of the current element of the DOM Document and of
                * all parent DOM elements.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name><name>java</name>.<name>util</name>.
                        <name>
                            <name>List</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>String</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </name>
                </type>
                <name>getInheritedAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the number of child elements of the current element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getElementCount</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Returns the number of child elements with the specified tag name
                * of the current element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getElementCount</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tagName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Opens the element with the specified index and makes it the current node.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>openElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Opens the last element with the specified name and makes it the current node.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>openElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tagName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Opens the element with the specified name and index and makes it the
                * current node.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>openElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tagName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Closes the current element of the DOM Document.
                * The parent of the current element becomes the current element.

                * @exception IllegalArgumentException if the provided tagName does
                * not match the tag name of the element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>closeElement</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Reads an object from the current element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>readObject</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Reads an object from the current element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>readObject</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>
            }
        </block>
    </class>
</unit>
