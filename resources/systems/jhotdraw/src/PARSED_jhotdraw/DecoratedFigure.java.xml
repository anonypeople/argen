<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\DecoratedFigure.java">
    <comment type="block">/*
        * @(#)DecoratedFigure.java 2.0 2008-01-10
        *
        * Copyright (c) 1996-2008 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * This interface is implemented by Figures that can be Decorated with another
        * Figure.
        *
        * @author Werner Randelshofer
        * @version 2.0 2008-01-10 This interface extends now the Figure interface.
        * &lt;br&gt;1.0 January 5, 2007 Created.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>DecoratedFigure</name>
        <super>
            <extends>extends
                <name>Figure</name>
            </extends>
        </super>
        <block>{
            <comment type="javadoc">/**
                * Sets a decorator Figure, for example a visual adornment to this Figure.
                * Set this to null, if no decorator is desired.
                * The decorator uses the same logical bounds as this Figure plus
                * AttributeKeys.DECORATOR_INSETS. The decorator does not handle events.
                * The decorator is drawn when the figure is drawn.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDecorator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>newValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Gets the decorator for this figure.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Figure</name>
                </type>
                <name>getDecorator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            }
        </block>
    </class>
</unit>
