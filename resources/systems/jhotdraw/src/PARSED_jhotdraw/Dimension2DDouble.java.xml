<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\geom\Dimension2DDouble.java">
    <comment type="block">/*
        * @(#)Dimension2DDouble.java 1.0 January 14, 2006
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>geom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * Dimension2DDouble.
        *
        * @author Werner Randelshofer
        * @version 1.0 January 14, 2006 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>Dimension2DDouble</name>
        <super>
            <extends>extends
                <name>Dimension2D</name>
            </extends>
            <implements>implements <name>java</name>.<name>io</name>.
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/**
                * The width dimension; negative values can be used.
                *
                * @serial
                * @see #getSize
                * @see #setSize
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>double</name>
                    </type>
                    <name>width</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The height dimension; negative values can be used.
                *
                * @serial
                * @see #getSize
                * @see #setSize
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>double</name>
                    </type>
                    <name>height</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates an instance of &lt;code&gt;Dimension2DDouble&lt;/code&gt; with a width
                * of zero and a height of zero.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>Dimension2DDouble</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates an instance of &lt;code&gt;Dimension2DDouble&lt;/code&gt; whose width
                * and height are the same as for the specified dimension.
                *
                * @param d the specified dimension for the
                * &lt;code&gt;width&lt;/code&gt; and
                * &lt;code&gt;height&lt;/code&gt; values
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>Dimension2DDouble</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Dimension2DDouble</name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>d</name>.
                                                <name>width</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>d</name>.
                                                <name>height</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Constructs a &lt;code&gt;Dimension2DDouble&lt;/code&gt; and initializes
                * it to the specified width and specified height.
                *
                * @param width the specified width
                * @param height the specified height
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>Dimension2DDouble</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>width</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>height</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>width</name>
                            </name>
                            =
                            <name>width</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>height</name>
                            </name>
                            =
                            <name>height</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the width of this dimension in double precision.
                * @return the width of this dimension in double precision
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getWidth</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>width</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the height of this dimension in double precision.
                * @return the height of this dimension in double precision
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getHeight</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>height</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the size of this &lt;code&gt;Dimension2DDouble&lt;/code&gt; object to
                * the specified width and height in double precision.
                * Note that if &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt;
                * are larger than &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, they will
                * be reset to &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;.
                *
                * @param width the new width for the &lt;code&gt;Dimension2DDouble&lt;/code&gt; object
                * @param height the new height for the &lt;code&gt;Dimension2DDouble&lt;/code&gt; object
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>width</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>height</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>width</name>
                            </name>
                            =
                            <name>width</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>height</name>
                            </name>
                            =
                            <name>height</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets the size of this &lt;code&gt;Dimension2DDouble&lt;/code&gt; object.
                * This method is included for completeness, to parallel the
                * &lt;code&gt;getSize&lt;/code&gt; method defined by &lt;code&gt;Component&lt;/code&gt;.
                *
                * @return the size of this dimension, a new instance of
                * &lt;code&gt;Dimension2DDouble&lt;/code&gt; with the same width and height
                * @see Dimension2DDouble#setSize
                * @see java.awt.Component#getSize
                * @since JDK1.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Dimension2DDouble</name>
                </type>
                <name>getSize</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>Dimension2DDouble</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>width</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>height</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the size of this &lt;code&gt;Dimension2DDouble&lt;/code&gt; object to the specified size.
                * This method is included for completeness, to parallel the
                * &lt;code&gt;setSize&lt;/code&gt; method defined by &lt;code&gt;Component&lt;/code&gt;.
                * @param d the new size for this &lt;code&gt;Dimension2DDouble&lt;/code&gt; object
                * @see Dimension2DDouble#getSize
                * @see java.awt.Component#setSize
                * @since JDK1.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Dimension2DDouble</name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>d</name>.
                                                <name>width</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>d</name>.
                                                <name>height</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks whether two dimension objects have equal values.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>obj</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>obj</name>
                                <name>instanceof</name>
                                <name>Dimension2DDouble</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Dimension2DDouble</name>
                                        </type>
                                        <name>d</name> =
                                        <init>
                                            <expr>(<name>Dimension2DDouble</name>)
                                                <name>obj</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <return>return
                                    <expr>(<name>width</name> ==
                                        <name><name>d</name>.
                                            <name>width</name>
                                        </name>
                                        ) &amp;&amp; (<name>height</name> ==
                                        <name><name>d</name>.
                                            <name>height</name>
                                        </name>
                                        )
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the hash code for this &lt;code&gt;Dimension2DDouble&lt;/code&gt;.
                *
                * @return a hash code for this &lt;code&gt;Dimension2DDouble&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>sum</name> =
                            <init>
                                <expr>
                                    <call>(<name>float</name>)
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>width</name>
                                                    +
                                                    <name>height</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>Float</name>.
                                    <name>floatToIntBits</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>sum</name>
                                            * (<name>sum</name> + 1)/2 + (<name>float</name>)
                                            <name>width</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a string representation of the values of this
                * &lt;code&gt;Dimension2DDouble&lt;/code&gt; object's &lt;code&gt;height&lt;/code&gt; and
                * &lt;code&gt;width&lt;/code&gt; fields. This method is intended to be used only
                * for debugging purposes, and the content and format of the returned
                * string may vary between implementations. The returned string may be
                * empty but may not be &lt;code&gt;null&lt;/code&gt;.
                *
                * @return a string representation of this &lt;code&gt;Dimension2DDouble&lt;/code&gt;
                * object
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getClass</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getName</name>
                                <argument_list>()</argument_list>
                            </call>
                            + "[width=" + <name>width</name> + ",height=" + <name>height</name> + "]"
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
