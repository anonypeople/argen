<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\app\EditableComponent.java">
    <comment type="block">/*
        * @(#)EditableComponent.java 3.0 2007-04-13
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>app</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * This interface must be implemented by components
        * which are editable.
        * &lt;p&gt;
        * FIXME - Investigate if we can replace this interface by querying the
        * TransferHandler of a component and retrieve its cut/copy/paste actions.
        * See http://java.sun.com/docs/books/tutorial/uiswing/dnd/intro.html#cut
        *
        * @author Werner Randelshofer
        * @version 3.0 2007-04-13 We don't need to have Cut/Copy/Paste in this
        * interface, because this functionality is already provided by
        * javax.swing.TransferHandler.
        * &lt;br&gt;2.0 2001-07-18
        */
    </comment>

    <class type="interface">
        <specifier>public</specifier>
        interface <name>EditableComponent</name>
        <block>{
            <comment type="javadoc">/**
                * Deletes the component at (or after) the caret position.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>delete</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Duplicates the selected region.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>duplicate</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Selects all.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>selectAll</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            }
        </block>
    </class>
</unit>
