<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\app\ExportableView.java">
    <comment type="block">/*
        * @(#)ExportableView.java 1.0 January 2, 2007
        *
        * Copyright (c) 1996-2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>app</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>io</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.
            <name>swing</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>app</name>
        </name>
        .*;
    </import>

    <comment type="javadoc">/**
        * ExportableView is implemented by View's that support the ExportAction.
        *
        * @author Werner Randelshofer
        * @version 1.0 January 2, 2007 Created.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>ExportableView</name>
        <super>
            <extends>extends
                <name>View</name>
            </extends>
        </super>
        <block>{
            <comment type="javadoc">/**
                * Gets the file chooser for exporting the view.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>JFileChooser</name>
                </type>
                <name>getExportChooser</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Exports the view.
                * By convention this method is never invoked on the AWT Event Dispatcher Thread.
                *
                * @param f The file to which export the view.
                * @param filter The FileFilter that was used to choose the file. This can be null.
                * @param accessory The Accessory used by the JFileChooser. This can be null.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>export</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>f</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>javax</name>.<name>swing</name>.<name>filechooser</name>.
                                    <name>FileFilter</name>
                                </name>
                            </type>
                            <name>filter</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Component</name>
                            </type>
                            <name>accessory</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>
            }
        </block>
    </class>
</unit>
