<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\GridConstrainer.java">
    <comment type="block">/*
        * @(#)GridConstrainer.java 4.0 2007-12-17
        *
        * Copyright (c) 1996-2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>

    <comment type="javadoc">/**
        * Constrains a point such that it falls on a grid.
        *
        * @author Werner Randelshofer
        * @version 4.0 2007-12-17 Huw Jones, Werner Randelshofer: Adapted due to changes
        * in Constrainer interface.
        * &lt;br&gt;3.1 2007-09-15 Werner Randelshofer: Added constructor which allows to
        * control the visiblity of the grid.
        * &lt;br&gt;3.0 2007-08-01 Werner Randelshofer: Reworked.
        * &lt;br&gt;2.1.1 2006-07-05 Werner Randelshofer: Fixed drawing bug.
        * &lt;br&gt;2.1 2006-07-03 Werner Randelshofer: Method isVisible added.
        * &lt;br&gt;2.0 2006-01-14 Werner Randelshofer: Changed to support double precision coordinates.
        * &lt;br&gt;1.0 2004-03-17 Werner Randelshofer: Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>GridConstrainer</name>
        <super>
            <extends>extends
                <name>AbstractConstrainer</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * The width of a minor grid cell.
                * The value 0 turns the constrainer off for the horizontal axis.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>double</name>
                    </type>
                    <name>width</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The height of a minor grid cell.
                * The value 0 turns the constrainer off for the vertical axis.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>double</name>
                    </type>
                    <name>height</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The theta for constrained rotations on the grid.
                * The value 0 turns the constrainer off for rotations.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>double</name>
                    </type>
                    <name>theta</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * If this variable is true, the grid is drawn.
                * Note: Grid cells are only drawn, if they are at least two pixels apart
                * on the view coordinate system.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>isVisible</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The color for minor grid cells.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>Color</name>
                    </type>
                    <name>minorColor</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Color</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0xebebeb</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The color for major grid cells.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>Color</name>
                    </type>
                    <name>majorColor</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Color</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0xcacaca</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The spacing factor for a major grid cell.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>majorGridSpacing</name> =
                    <init>
                        <expr>5</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a new instance with a grid of 1x1.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>GridConstrainer</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>1d</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>1d</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0d</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a new instance with the specified grid size,
                * and by 11.25Â° (in degrees) for rotations.
                * The grid is visible.
                *
                * @param width The width of a grid cell.
                * @param height The height of a grid cell.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>GridConstrainer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>width</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>height</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>width</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>height</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Math</name>.
                                                <name>PI</name>
                                            </name>
                                            / 8d
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a new instance with the specified grid size.
                * and by 11.25Â° (in degrees) for rotations.
                *
                * @param width The width of a grid cell.
                * @param height The height of a grid cell.
                * @param visible Wether the grid is visible or not.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>GridConstrainer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>width</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>height</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>width</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>height</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Math</name>.
                                                <name>PI</name>
                                            </name>
                                            / 8d
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="javadoc">/**
                * Creates a new instance with the specified grid size.
                *
                * @param width The width of a grid cell.
                * @param height The height of a grid cell.
                * @param theta The theta for rotations in radians.
                * @param visible Wether the grid is visible or not.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>GridConstrainer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>width</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>height</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>theta</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>width</name>
                                &lt;= 0 || <name>height</name> &lt;= 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Width or height is &lt;= 0"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>width</name>
                            </name>
                            =
                            <name>width</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>height</name>
                            </name>
                            =
                            <name>height</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>theta</name>
                            </name>
                            =
                            <name>theta</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>isVisible</name>
                            </name>
                            =
                            <name>visible</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getWidth</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>width</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getHeight</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>height</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getTheta</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>theta</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setWidth</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>newValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>oldValue</name> =
                            <init>
                                <expr>
                                    <name>width</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>width</name>
                            =
                            <name>newValue</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>firePropertyChange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"width"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>oldValue</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newValue</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireStateChanged</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setHeight</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>newValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>oldValue</name> =
                            <init>
                                <expr>
                                    <name>height</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>height</name>
                            =
                            <name>newValue</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>firePropertyChange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"height"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>oldValue</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newValue</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireStateChanged</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setTheta</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>newValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>oldValue</name> =
                            <init>
                                <expr>
                                    <name>theta</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>theta</name>
                            =
                            <name>newValue</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>firePropertyChange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"theta"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>oldValue</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newValue</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireStateChanged</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Constrains a point to the closest grid point in any direction.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>constrainPoint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>p</name>.
                                <name>x</name>
                            </name>
                            =
                            <call>
                                <name><name>Math</name>.
                                    <name>round</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>p</name>.
                                                <name>x</name>
                                            </name>
                                            /
                                            <name>width</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            *
                            <name>width</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>p</name>.
                                <name>y</name>
                            </name>
                            =
                            <call>
                                <name><name>Math</name>.
                                    <name>round</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>p</name>.
                                                <name>y</name>
                                            </name>
                                            /
                                            <name>height</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            *
                            <name>height</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>p</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Constrains the placement of a point towards a direction.
                * &lt;p&gt;
                * This method changes the point which is passed as a parameter.
                *
                * @param p A point on the drawing.
                * @param dir A direction.
                * @return Returns the constrained point.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>constrainPoint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>TranslationDirection</name>
                            </type>
                            <name>dir</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p0</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>constrainPoint</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(
                                                    <name><name>Point2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    )
                                                    <call>
                                                        <name><name>p</name>.
                                                            <name>clone</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <switch>switch
                        <condition>(
                            <expr>
                                <name>dir</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>NORTH</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_EAST</name>
                                </expr>
                                :
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>p0</name>.
                                                <name>y</name>
                                            </name>
                                            &lt;
                                            <name><name>p</name>.
                                                <name>y</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>p</name>.
                                                        <name>y</name>
                                                    </name>
                                                    =
                                                    <name><name>p0</name>.
                                                        <name>y</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>p0</name>.
                                                        <name>y</name>
                                                    </name>
                                                    &gt;
                                                    <name><name>p</name>.
                                                        <name>y</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>p</name>.
                                                                <name>y</name>
                                                            </name>
                                                            =
                                                            <name><name>p0</name>.
                                                                <name>y</name>
                                                            </name>
                                                            -
                                                            <name>height</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_EAST</name>
                                </expr>
                                :
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>p0</name>.
                                                <name>y</name>
                                            </name>
                                            &lt;
                                            <name><name>p</name>.
                                                <name>y</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>p</name>.
                                                        <name>y</name>
                                                    </name>
                                                    =
                                                    <name><name>p0</name>.
                                                        <name>y</name>
                                                    </name>
                                                    +
                                                    <name>height</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>p0</name>.
                                                        <name>y</name>
                                                    </name>
                                                    &gt;
                                                    <name><name>p</name>.
                                                        <name>y</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>p</name>.
                                                                <name>y</name>
                                                            </name>
                                                            =
                                                            <name><name>p0</name>.
                                                                <name>y</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>dir</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_WEST</name>
                                </expr>
                                :
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>p0</name>.
                                                <name>x</name>
                                            </name>
                                            &lt;
                                            <name><name>p</name>.
                                                <name>x</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>p</name>.
                                                        <name>x</name>
                                                    </name>
                                                    =
                                                    <name><name>p0</name>.
                                                        <name>x</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>p0</name>.
                                                        <name>x</name>
                                                    </name>
                                                    &gt;
                                                    <name><name>p</name>.
                                                        <name>x</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>p</name>.
                                                                <name>x</name>
                                                            </name>
                                                            =
                                                            <name><name>p0</name>.
                                                                <name>x</name>
                                                            </name>
                                                            -
                                                            <name>width</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>EAST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_EAST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_EAST</name>
                                </expr>
                                :
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>p0</name>.
                                                <name>x</name>
                                            </name>
                                            &lt;
                                            <name><name>p</name>.
                                                <name>x</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>p</name>.
                                                        <name>x</name>
                                                    </name>
                                                    =
                                                    <name><name>p0</name>.
                                                        <name>x</name>
                                                    </name>
                                                    +
                                                    <name>width</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>p0</name>.
                                                        <name>x</name>
                                                    </name>
                                                    &gt;
                                                    <name><name>p</name>.
                                                        <name>x</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>p</name>.
                                                                <name>x</name>
                                                            </name>
                                                            =
                                                            <name><name>p0</name>.
                                                                <name>x</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>

                    <return>return
                        <expr>
                            <name>p</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Moves a point to the closest grid point in a direction.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>translatePoint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>TranslationDirection</name>
                            </type>
                            <name>dir</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p0</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>constrainPoint</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(
                                                    <name><name>Point2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    )
                                                    <call>
                                                        <name><name>p</name>.
                                                            <name>clone</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <switch>switch
                        <condition>(
                            <expr>
                                <name>dir</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>NORTH</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_EAST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name><name>p</name>.
                                            <name>y</name>
                                        </name>
                                        =
                                        <name><name>p0</name>.
                                            <name>y</name>
                                        </name>
                                        -
                                        <name>height</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_EAST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name><name>p</name>.
                                            <name>y</name>
                                        </name>
                                        =
                                        <name><name>p0</name>.
                                            <name>y</name>
                                        </name>
                                        +
                                        <name>height</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>dir</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_WEST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name><name>p</name>.
                                            <name>x</name>
                                        </name>
                                        =
                                        <name><name>p0</name>.
                                            <name>x</name>
                                        </name>
                                        -
                                        <name>width</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>EAST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_EAST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_EAST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name><name>p</name>.
                                            <name>x</name>
                                        </name>
                                        =
                                        <name><name>p0</name>.
                                            <name>x</name>
                                        </name>
                                        +
                                        <name>width</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>

                    <return>return
                        <expr>
                            <name>p</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>Rectangle2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>constrainRectangle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p0</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>constrainPoint</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name><name>Point2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>r</name>.
                                                                        <name>x</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>r</name>.
                                                                        <name>y</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>constrainPoint</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name><name>Point2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>r</name>.
                                                                        <name>x</name>
                                                                    </name>
                                                                    +
                                                                    <name><name>r</name>.
                                                                        <name>width</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>r</name>.
                                                                        <name>y</name>
                                                                    </name>
                                                                    +
                                                                    <name><name>r</name>.
                                                                        <name>height</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>Math</name>.
                                        <name>abs</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>p0</name>.
                                                    <name>x</name>
                                                </name>
                                                -
                                                <name><name>r</name>.
                                                    <name>x</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &lt;
                                <call>
                                    <name><name>Math</name>.
                                        <name>abs</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>p1</name>.
                                                    <name>x</name>
                                                </name>
                                                -
                                                <name><name>r</name>.
                                                    <name>x</name>
                                                </name>
                                                -
                                                <name><name>r</name>.
                                                    <name>width</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>r</name>.
                                            <name>x</name>
                                        </name>
                                        =
                                        <name><name>p0</name>.
                                            <name>x</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>r</name>.
                                            <name>x</name>
                                        </name>
                                        =
                                        <name><name>p1</name>.
                                            <name>x</name>
                                        </name>
                                        -
                                        <name><name>r</name>.
                                            <name>width</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>Math</name>.
                                        <name>abs</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>p0</name>.
                                                    <name>y</name>
                                                </name>
                                                -
                                                <name><name>r</name>.
                                                    <name>y</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &lt;
                                <call>
                                    <name><name>Math</name>.
                                        <name>abs</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>p1</name>.
                                                    <name>y</name>
                                                </name>
                                                -
                                                <name><name>r</name>.
                                                    <name>y</name>
                                                </name>
                                                -
                                                <name><name>r</name>.
                                                    <name>height</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>r</name>.
                                            <name>y</name>
                                        </name>
                                        =
                                        <name><name>p0</name>.
                                            <name>y</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>r</name>.
                                            <name>y</name>
                                        </name>
                                        =
                                        <name><name>p1</name>.
                                            <name>y</name>
                                        </name>
                                        -
                                        <name><name>r</name>.
                                            <name>height</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <name>r</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Constrains the placement of a rectangle towards a direction.
                * &lt;p&gt;
                * This method changes the location of the rectangle which is passed as a
                * parameter. This method does not change the size of the rectangle.
                *
                * @param r A rectangle on the drawing.
                * @param dir A direction.
                * @return Returns the constrained rectangle.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name><name>Rectangle2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>constrainRectangle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>TranslationDirection</name>
                            </type>
                            <name>dir</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p0</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>x</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>y</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <switch>switch
                        <condition>(
                            <expr>
                                <name>dir</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>NORTH</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>WEST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>constrainPoint</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>p0</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>dir</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>EAST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_EAST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name><name>p0</name>.
                                            <name>x</name>
                                        </name>
                                        +=
                                        <name><name>r</name>.
                                            <name>width</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>constrainPoint</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>p0</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>dir</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>p0</name>.
                                            <name>x</name>
                                        </name>
                                        -=
                                        <name><name>r</name>.
                                            <name>width</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_WEST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name><name>p0</name>.
                                            <name>y</name>
                                        </name>
                                        +=
                                        <name><name>r</name>.
                                            <name>height</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>constrainPoint</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>p0</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>dir</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>p0</name>.
                                            <name>y</name>
                                        </name>
                                        -=
                                        <name><name>r</name>.
                                            <name>height</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_EAST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name><name>p0</name>.
                                            <name>y</name>
                                        </name>
                                        +=
                                        <name><name>r</name>.
                                            <name>height</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>p0</name>.
                                            <name>x</name>
                                        </name>
                                        +=
                                        <name><name>r</name>.
                                            <name>width</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>constrainPoint</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>p0</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>dir</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>p0</name>.
                                            <name>y</name>
                                        </name>
                                        -=
                                        <name><name>r</name>.
                                            <name>height</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>p0</name>.
                                            <name>x</name>
                                        </name>
                                        -=
                                        <name><name>r</name>.
                                            <name>width</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>

                    <expr_stmt>
                        <expr>
                            <name><name>r</name>.
                                <name>x</name>
                            </name>
                            =
                            <name><name>p0</name>.
                                <name>x</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>r</name>.
                                <name>y</name>
                            </name>
                            =
                            <name><name>p0</name>.
                                <name>y</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>r</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>Rectangle2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>translateRectangle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>TranslationDirection</name>
                            </type>
                            <name>dir</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>x</name> =
                            <init>
                                <expr>
                                    <name><name>r</name>.
                                        <name>x</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>y</name> =
                            <init>
                                <expr>
                                    <name><name>r</name>.
                                        <name>y</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>constrainRectangle</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>r</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>dir</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <switch>switch
                        <condition>(
                            <expr>
                                <name>dir</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>NORTH</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_EAST</name>
                                </expr>
                                :
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>y</name>
                                            ==
                                            <name><name>r</name>.
                                                <name>y</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>y</name>
                                                    </name>
                                                    -=
                                                    <name>height</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_EAST</name>
                                </expr>
                                :
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>y</name>
                                            ==
                                            <name><name>r</name>.
                                                <name>y</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>y</name>
                                                    </name>
                                                    +=
                                                    <name>height</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>dir</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_WEST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_WEST</name>
                                </expr>
                                :
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>x</name>
                                            ==
                                            <name><name>r</name>.
                                                <name>x</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>x</name>
                                                    </name>
                                                    -=
                                                    <name>width</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>EAST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_EAST</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_EAST</name>
                                </expr>
                                :
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>x</name>
                                            ==
                                            <name><name>r</name>.
                                                <name>x</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>x</name>
                                                    </name>
                                                    +=
                                                    <name>width</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>

                    <return>return
                        <expr>
                            <name>r</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            + "[" + <name>width</name> + "," + <name>height</name> + "]"
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isVisible</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>isVisible</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>newValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>oldValue</name> =
                            <init>
                                <expr>
                                    <name>isVisible</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>isVisible</name>
                            =
                            <name>newValue</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>firePropertyChange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"visible"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>oldValue</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newValue</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireStateChanged</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Spacing between major grid lines.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getMajorGridSpacing</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>majorGridSpacing</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Spacing between major grid lines.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setMajorGridSpacing</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>oldValue</name> =
                            <init>
                                <expr>
                                    <name>majorGridSpacing</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>majorGridSpacing</name>
                            =
                            <name>newValue</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>firePropertyChange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"majorGridSpacing"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>oldValue</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newValue</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireStateChanged</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>draw</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DrawingView</name>
                            </type>
                            <name>view</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>isVisible</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>AffineTransform</name>
                                        </type>
                                        <name>t</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>view</name>.
                                                        <name>getDrawingToViewTransform</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Rectangle</name>
                                        </type>
                                        <name>viewBounds</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>g</name>.
                                                        <name>getClipBounds</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name><name>Rectangle2D</name>.
                                                <name>Double</name>
                                            </name>
                                        </type>
                                        <name>bounds</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>view</name>.
                                                        <name>viewToDrawing</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>viewBounds</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                        </type>
                                        <name>origin</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>constrainPoint</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name><name>Point2D</name>.
                                                                        <name>Double</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>bounds</name>.
                                                                                    <name>x</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>bounds</name>.
                                                                                    <name>y</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                        </type>
                                        <name>point</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name><name>Point2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                        </type>
                                        <name>viewPoint</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name><name>Point2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <comment type="line">// vertical grid lines are only drawn, if they are at least two
                                </comment>
                                <comment type="line">// pixels apart on the view coordinate system.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>width</name>
                                            *
                                            <call>
                                                <name><name>view</name>.
                                                    <name>getScaleFactor</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &gt; 2
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>g</name>.
                                                            <name>setColor</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>minorColor</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>
                                                                <call>(<name>int</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>origin</name>.
                                                                                    <name>x</name>
                                                                                </name>
                                                                                /
                                                                                <name>width</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                        ,  <name>m</name> =
                                                        <init>
                                                            <expr>
                                                                <call>(<name>int</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>(
                                                                                <name><name>origin</name>.
                                                                                    <name>x</name>
                                                                                </name>
                                                                                +
                                                                                <name><name>bounds</name>.
                                                                                    <name>width</name>
                                                                                </name>
                                                                                ) /
                                                                                <name>width</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                + 1
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &lt;=
                                                        <name>m</name>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>g</name>.
                                                                    <name>setColor</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>i</name> % <name>majorGridSpacing
                                                                        </name> == 0) ? <name>majorColor</name> :
                                                                            <name>minorColor</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>point</name>.
                                                                <name>x</name>
                                                            </name>
                                                            = <name>width</name> *
                                                            <name>i</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>t</name>.
                                                                    <name>transform</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>point</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>viewPoint</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>g</name>.
                                                                    <name>drawLine</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>int</name>)
                                                                            <name><name>viewPoint</name>.
                                                                                <name>x</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>int</name>)
                                                                            <name><name>viewBounds</name>.
                                                                                <name>y</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>int</name>)
                                                                            <name><name>viewPoint</name>.
                                                                                <name>x</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>(<name>int</name>)
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                viewBounds</name>.
                                                                                                <name>y</name>
                                                                                            </name>
                                                                                            +
                                                                                            <name><name>
                                                                                                viewBounds</name>.
                                                                                                <name>height</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </for>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>width</name>
                                                    * <name>majorGridSpacing</name> *
                                                    <call>
                                                        <name><name>view</name>.
                                                            <name>getScaleFactor</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &gt; 2
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>g</name>.
                                                                    <name>setColor</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>majorColor</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <for>for (
                                                        <init>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>i</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>(<name>int</name>)
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>origin</name>.
                                                                                            <name>x</name>
                                                                                        </name>
                                                                                        /
                                                                                        <name>width</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                                ,  <name>m</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>(<name>int</name>)
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>(
                                                                                        <name><name>origin</name>.
                                                                                            <name>x</name>
                                                                                        </name>
                                                                                        +
                                                                                        <name><name>bounds</name>.
                                                                                            <name>width</name>
                                                                                        </name>
                                                                                        ) /
                                                                                        <name>width</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        + 1
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>i</name>
                                                                &lt;=
                                                                <name>m</name>
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>i</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>i</name>
                                                                        % <name>majorGridSpacing</name> == 0
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>point</name>.
                                                                                    <name>x</name>
                                                                                </name>
                                                                                = <name>width</name> *
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>t</name>.
                                                                                        <name>transform</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>point</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>viewPoint</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>g</name>.
                                                                                        <name>drawLine</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>(<name>int</name>)
                                                                                                <name><name>
                                                                                                    viewPoint</name>.
                                                                                                    <name>x</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>(<name>int</name>)
                                                                                                <name><name>
                                                                                                    viewBounds</name>.
                                                                                                    <name>y</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>(<name>int</name>)
                                                                                                <name><name>
                                                                                                    viewPoint</name>.
                                                                                                    <name>x</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>(<name>int</name>)
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        viewBounds</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        y
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                +
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        viewBounds</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        height
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </for>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>

                                <comment type="line">// horizontal grid lines are only drawn, if they are at least two
                                </comment>
                                <comment type="line">// pixels apart on the view coordinate system.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>height</name>
                                            *
                                            <call>
                                                <name><name>view</name>.
                                                    <name>getScaleFactor</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &gt; 2
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>g</name>.
                                                            <name>setColor</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>minorColor</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>
                                                                <call>(<name>int</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>origin</name>.
                                                                                    <name>y</name>
                                                                                </name>
                                                                                /
                                                                                <name>height</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                        ,  <name>m</name> =
                                                        <init>
                                                            <expr>
                                                                <call>(<name>int</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>(
                                                                                <name><name>origin</name>.
                                                                                    <name>y</name>
                                                                                </name>
                                                                                +
                                                                                <name><name>bounds</name>.
                                                                                    <name>height</name>
                                                                                </name>
                                                                                ) /
                                                                                <name>height</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                + 1
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &lt;=
                                                        <name>m</name>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>g</name>.
                                                                    <name>setColor</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>i</name> % <name>majorGridSpacing
                                                                        </name> == 0) ? <name>majorColor</name> :
                                                                            <name>minorColor</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>point</name>.
                                                                <name>y</name>
                                                            </name>
                                                            = <name>height</name> *
                                                            <name>i</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>t</name>.
                                                                    <name>transform</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>point</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>viewPoint</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>g</name>.
                                                                    <name>drawLine</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>int</name>)
                                                                            <name><name>viewBounds</name>.
                                                                                <name>x</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>int</name>)
                                                                            <name><name>viewPoint</name>.
                                                                                <name>y</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>(<name>int</name>)
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                viewBounds</name>.
                                                                                                <name>x</name>
                                                                                            </name>
                                                                                            +
                                                                                            <name><name>
                                                                                                viewBounds</name>.
                                                                                                <name>width</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>int</name>)
                                                                            <name><name>viewPoint</name>.
                                                                                <name>y</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </for>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>height</name>
                                                    * <name>majorGridSpacing</name> *
                                                    <call>
                                                        <name><name>view</name>.
                                                            <name>getScaleFactor</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &gt; 2
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>g</name>.
                                                                    <name>setColor</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>majorColor</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <for>for (
                                                        <init>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>i</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>(<name>int</name>)
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>origin</name>.
                                                                                            <name>y</name>
                                                                                        </name>
                                                                                        /
                                                                                        <name>height</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                                ,  <name>m</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>(<name>int</name>)
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>(
                                                                                        <name><name>origin</name>.
                                                                                            <name>y</name>
                                                                                        </name>
                                                                                        +
                                                                                        <name><name>bounds</name>.
                                                                                            <name>height</name>
                                                                                        </name>
                                                                                        ) /
                                                                                        <name>height</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        + 1
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>i</name>
                                                                &lt;=
                                                                <name>m</name>
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>i</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>i</name>
                                                                        % <name>majorGridSpacing</name> == 0
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>point</name>.
                                                                                    <name>y</name>
                                                                                </name>
                                                                                = <name>height</name> *
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>t</name>.
                                                                                        <name>transform</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>point</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>viewPoint</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>g</name>.
                                                                                        <name>drawLine</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>(<name>int</name>)
                                                                                                <name><name>
                                                                                                    viewBounds</name>.
                                                                                                    <name>x</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>(<name>int</name>)
                                                                                                <name><name>
                                                                                                    viewPoint</name>.
                                                                                                    <name>y</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>(<name>int</name>)
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        viewBounds</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        x
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                +
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        viewBounds</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        width
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>(<name>int</name>)
                                                                                                <name><name>
                                                                                                    viewPoint</name>.
                                                                                                    <name>y</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </for>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>constrainAngle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>angle</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// No step specified then no constraining</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>theta</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>angle</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>factor</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Math</name>.
                                            <name>round</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>angle</name>
                                                    /
                                                    <name>theta</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>theta</name>
                            *
                            <name>factor</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>rotateAngle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>angle</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RotationDirection</name>
                            </type>
                            <name>dir</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// Check parameters</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>dir</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"dir must not be null"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// Rotate into the specified direction by theta</comment>
                    <expr_stmt>
                        <expr>
                            <name>angle</name>
                            =
                            <call>
                                <name>constrainAngle</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>angle</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>dir</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>CLOCKWISE</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>angle</name>
                                        +=
                                        <name>theta</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>COUNTER_CLOCKWISE</name>
                                </expr>
                                :
                            </case>
                            <default>default:
                                <expr_stmt>
                                    <expr>
                                        <name>angle</name>
                                        -=
                                        <name>theta</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </default>
                            }
                        </block>
                    </switch>
                    <return>return
                        <expr>
                            <name>angle</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>

</unit>
