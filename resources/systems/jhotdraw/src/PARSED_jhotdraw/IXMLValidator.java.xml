<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\net\n3\nanoxml\IXMLValidator.java">
    <comment type="block">/* IXMLValidator.java NanoXML/Java
        *
        * $Revision: 1.3 $
        * $Date: 2002/01/04 21:03:28 $
        * $Name: RELEASE_2_2_1 $
        *
        * This file is part of NanoXML 2 for Java.
        * Copyright (C) 2000-2002 Marc De Scheemaecker, All Rights Reserved.
        *
        * This software is provided 'as-is', without any express or implied warranty.
        * In no event will the authors be held liable for any damages arising from the
        * use of this software.
        *
        * Permission is granted to anyone to use this software for any purpose,
        * including commercial applications, and to alter it and redistribute it
        * freely, subject to the following restrictions:
        *
        * 1. The origin of this software must not be misrepresented; you must not
        * claim that you wrote the original software. If you use this software in
        * a product, an acknowledgment in the product documentation would be
        * appreciated but is not required.
        *
        * 2. Altered source versions must be plainly marked as such, and must not be
        * misrepresented as being the original software.
        *
        * 3. This notice may not be removed or altered from any source distribution.
        */
    </comment>

    <package>package
        <name><name>net</name>.<name>n3</name>.
            <name>nanoxml</name>
        </name>
        ;
    </package>


    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Reader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Properties</name>
        </name>
        ;
    </import>


    <comment type="javadoc">/**
        * IXMLValidator processes the DTD and handles entity references.
        *
        * @author Marc De Scheemaecker
        * @version $Name: RELEASE_2_2_1 $, $Revision: 1.3 $
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface
        <name>IXMLValidator</name>
        <block>{

            <comment type="javadoc">/**
                * Sets the parameter entity resolver.
                *
                * @param resolver the entity resolver.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setParameterEntityResolver</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLEntityResolver</name>
                            </type>
                            <name>resolver</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Returns the parameter entity resolver.
                *
                * @return the entity resolver.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>IXMLEntityResolver</name>
                </type>
                <name>getParameterEntityResolver</name>
                <parameter_list>()</parameter_list>;
            </function_decl>


            <comment type="javadoc">/**
                * Parses the DTD. The validator object is responsible for reading the
                * full DTD.
                *
                * @param publicID the public ID, which may be null.
                * @param reader the reader to read the DTD from.
                * @param entityResolver the entity resolver.
                * @param external true if the DTD is external.
                *
                * @throws java.lang.Exception
                * If something went wrong.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>parseDTD</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicID</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>IXMLReader</name>
                            </type>
                            <name>reader</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>IXMLEntityResolver</name>
                            </type>
                            <name>entityResolver</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>external</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Indicates that an element has been started.
                *
                * @param name the name of the element.
                * @param systemId the system ID of the XML data of the element.
                * @param lineNr the line number in the XML data of the element.
                *
                * @throws java.lang.Exception
                * If the element could not be validated.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>elementStarted</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>lineNr</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Indicates that the current element has ended.
                *
                * @param name the name of the element.
                * @param systemId the system ID of the XML data of the element.
                * @param lineNr the line number in the XML data of the element.
                *
                * @throws java.lang.Exception
                * If the element could not be validated.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>elementEnded</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>lineNr</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Indicates that an attribute has been added to the current element.
                *
                * @param key the name of the attribute.
                * @param value the value of the attribute.
                * @param systemId the system ID of the XML data of the element.
                * @param lineNr the line number in the XML data of the element.
                *
                * @throws java.lang.Exception
                * If the attribute could not be validated.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>attributeAdded</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>lineNr</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * This method is called when the attributes of an XML element have been
                * processed.
                * If there are attributes with a default value which have not been
                * specified yet, they have to be put into &lt;I&gt;extraAttributes&lt;/I&gt;.
                *
                * @param name the name of the element.
                * @param extraAttributes where to put extra attributes.
                * @param systemId the system ID of the XML data of the element.
                * @param lineNr the line number in the XML data of the element.
                *
                * @throws java.lang.Exception
                * if the element could not be validated.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>elementAttributesProcessed</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Properties</name>
                            </type>
                            <name>extraAttributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>lineNr</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Indicates that a new #PCDATA element has been encountered.
                *
                * @param systemId the system ID of the XML data of the element.
                * @param lineNr the line number in the XML data of the element.
                *
                * @throws java.lang.Exception
                * if the element could not be validated.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>PCDataAdded</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>lineNr</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>
