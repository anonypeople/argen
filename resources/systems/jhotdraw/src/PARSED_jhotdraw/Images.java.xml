<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\util\Images.java">
    <comment type="block">/*
        * @(#)Images.java 2.1 2007-07-25
        *
        * Copyright (c) 1996-2008 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>image</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>io</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>net</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>

    <import>import
        <name><name>javax</name>.
            <name>swing</name>
        </name>
        .*;
    </import>

    <comment type="javadoc">/**
        * Image processing methods.
        *
        * @author Werner Randelshofer
        * @version 2.1 2007-07-25 Added method toBufferedImage(RenderedImage).
        * &lt;br&gt;1.0.2 2005-09-12 Brought my work-around for Java 1.4.1 back to
        * live.
        * &lt;br&gt;1.0.1 2005-05-21 Accidentaly used bitmask transparency
        * instead of translucent transparency.
        * &lt;br&gt;1.0 13 March 2005 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>Images</name>
        <block>{

            <comment type="javadoc">/** Prevent instance creation. */</comment>
            <constructor>
                <specifier>private</specifier>
                <name>Images</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Image</name>
                </type>
                <name>createImage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>URL</name>
                            </type>
                            <name>resource</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Image</name>
                            </type>
                            <name>image</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Toolkit</name>.
                                            <name>getDefaultToolkit</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>createImage</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>resource</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>image</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Converts an Image to BufferedImage. If the Image is already a
                * BufferedImage, the same image is returned.
                *
                * @param rImg An Image.
                * @return A BufferedImage.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>BufferedImage</name>
                </type>
                <name>toBufferedImage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>RenderedImage</name>
                            </type>
                            <name>rImg</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BufferedImage</name>
                            </type>
                            <name>image</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>rImg</name>
                                <name>instanceof</name>
                                <name>BufferedImage</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>image</name>
                                        = (<name>BufferedImage</name>)
                                        <name>rImg</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Raster</name>
                                        </type>
                                        <name>r</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>rImg</name>.
                                                        <name>getData</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>WritableRaster</name>
                                        </type>
                                        <name>wr</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>WritableRaster</name>.
                                                        <name>createWritableRaster</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>r</name>.
                                                                        <name>getSampleModel</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>rImg</name>.
                                                <name>copyData</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>wr</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>image</name>
                                        = new
                                        <call>
                                            <name>BufferedImage</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>rImg</name>.
                                                                <name>getColorModel</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>wr</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>rImg</name>.
                                                                <name>getColorModel</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>isAlphaPremultiplied</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>image</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>BufferedImage</name>
                </type>
                <name>toBufferedImage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Image</name>
                            </type>
                            <name>image</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>image</name>
                                <name>instanceof</name>
                                <name>BufferedImage</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>(<name>BufferedImage</name>)
                                        <name>image</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// This code ensures that all the pixels in the image are loaded</comment>
                    <expr_stmt>
                        <expr>
                            <name>image</name>
                            = new
                            <call>
                                <name>ImageIcon</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>image</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>getImage</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Create a buffered image with a format that's compatible with the screen
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BufferedImage</name>
                            </type>
                            <name>bimage</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>System</name>.
                                        <name>getProperty</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"java.version"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                .
                                <call>
                                    <name>startsWith</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"1.4.1_"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Workaround for Java 1.4.1 on Mac OS X.</comment>
                                <comment type="line">// For this JVM, we always create an ARGB image to prevent a
                                    class
                                </comment>
                                <comment type="line">// cast exception in</comment>
                                <comment type="line">//
                                    sun.awt.image.BufImgSurfaceData.createData(BufImgSurfaceData.java:434)
                                </comment>
                                <comment type="line">// when we attempt to draw the buffered image.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>bimage</name>
                                        = new
                                        <call>
                                            <name>BufferedImage</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>image</name>.
                                                                <name>getWidth</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>image</name>.
                                                                <name>getHeight</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>BufferedImage</name>.
                                                            <name>TYPE_INT_ARGB</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// Determine if the image has transparent pixels; for this
                                    method's
                                </comment>
                                <comment type="line">// implementation, see e661 Determining If an Image Has Transparent
                                    Pixels
                                </comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>hasAlpha</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>hasAlpha</name>
                                                =
                                                <call>
                                                    <name>hasAlpha</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>image</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>IllegalAccessError</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// If we can't determine this, we assume that we have
                                                an alpha,
                                            </comment>
                                            <comment type="line">// in order not to loose data.</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>hasAlpha</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </catch>
                                </try>


                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>GraphicsEnvironment</name>
                                        </type>
                                        <name>ge</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>GraphicsEnvironment</name>.
                                                        <name>getLocalGraphicsEnvironment</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <try>try
                                    <block>{
                                        <comment type="line">// Determine the type of transparency of the new buffered
                                            image
                                        </comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>transparency</name> =
                                                <init>
                                                    <expr>
                                                        <name><name>Transparency</name>.
                                                            <name>OPAQUE</name>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>hasAlpha</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>transparency</name>
                                                            =
                                                            <name><name>Transparency</name>.
                                                                <name>TRANSLUCENT</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// Create the buffered image</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>GraphicsDevice</name>
                                                </type>
                                                <name>gs</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>ge</name>.
                                                                <name>getDefaultScreenDevice</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>GraphicsConfiguration</name>
                                                </type>
                                                <name>gc</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>gs</name>.
                                                                <name>getDefaultConfiguration</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>bimage</name>
                                                =
                                                <call>
                                                    <name><name>gc</name>.
                                                        <name>createCompatibleImage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>image</name>.
                                                                        <name>getWidth</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>image</name>.
                                                                        <name>getHeight</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>transparency</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>Exception</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">//} catch (HeadlessException e) {</comment>
                                            <comment type="line">// The system does not have a screen</comment>
                                            }
                                        </block>
                                    </catch>
                                </try>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>bimage</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Create a buffered image using the default color
                                                model
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>type</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>BufferedImage</name>.
                                                                <name>TYPE_INT_RGB</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>hasAlpha</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>type</name>
                                                                =
                                                                <name><name>BufferedImage</name>.
                                                                    <name>TYPE_INT_ARGB</name>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name>bimage</name>
                                                    = new
                                                    <call>
                                                        <name>BufferedImage</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>image</name>.
                                                                            <name>getWidth</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>null</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>image</name>.
                                                                            <name>getHeight</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>null</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>type</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// Copy image to buffered image</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Graphics</name>
                            </type>
                            <name>g</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>bimage</name>.
                                            <name>createGraphics</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Paint the image onto the buffered image</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g</name>.
                                    <name>drawImage</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>image</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g</name>.
                                    <name>dispose</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>bimage</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * This method returns true if the specified image has transparent pixels
                *
                * Code taken from the Java Developers Almanac 1.4
                * http://javaalmanac.com/egs/java.awt.image/HasAlpha.html
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>hasAlpha</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Image</name>
                            </type>
                            <name>image</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// If buffered image, the color model is readily available</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>image</name>
                                <name>instanceof</name>
                                <name>BufferedImage</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>BufferedImage</name>
                                        </type>
                                        <name>bimage</name> =
                                        <init>
                                            <expr>(<name>BufferedImage</name>)
                                                <name>image</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>bimage</name>.
                                                <name>getColorModel</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>hasAlpha</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// Use a pixel grabber to retrieve the image's color model;</comment>
                    <comment type="line">// grabbing a single pixel is usually sufficient</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PixelGrabber</name>
                            </type>
                            <name>pg</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>PixelGrabber</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>image</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>pg</name>.
                                            <name>grabPixels</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>InterruptedException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Get the image's color model</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ColorModel</name>
                            </type>
                            <name>cm</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>pg</name>.
                                            <name>getColorModel</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>cm</name>.
                                    <name>hasAlpha</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
