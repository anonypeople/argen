<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\geom\Insets2D.java">
    <comment type="block">/*
        * @(#)Insets2D.java 1.0 December 6, 2006
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>geom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * Insets2D.
        *
        * @author Werner Randelshofer
        * @version 1.0 December 6, 2006 Refactored from Insets2DDouble to better match
        * expectations of people used to the java.awt.geom.xxx2D.Double/xxx2D.Float
        * idioms.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>Insets2D</name>
        <super>
            <implements>implements
                <name>Cloneable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** Creates a new instance. */</comment>
            <constructor>
                <specifier>protected</specifier>
                <name>Insets2D</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the top insets in double precision.
                * @return the top insets of this &lt;code&gt;Insets2D&lt;/code&gt;.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>double</name>
                </type>
                <name>getTop</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the left insets in double precision.
                * @return the left insets of this &lt;code&gt;Insets2D&lt;/code&gt;.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>double</name>
                </type>
                <name>getLeft</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the bottom insets in double precision.
                * @return the bottom insets of this &lt;code&gt;Insets2D&lt;/code&gt;.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>double</name>
                </type>
                <name>getBottom</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the right insets in double precision.
                * @return the right insets of this &lt;code&gt;Insets2D&lt;/code&gt;.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>double</name>
                </type>
                <name>getRight</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the insets.
                *
                * @param top The top insets.
                * @param left The left insets.
                * @param bottom The bottom insets.
                * @param right The right insets.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>void</name>
                </type>
                <name>set</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>top</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>left</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>bottom</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>right</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the insets.
                *
                * @param i The new insets.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>set</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Insets2D</name>
                            </type>
                            <name>i</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getTop</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getLeft</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getBottom</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getRight</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Adds the specified insets to the current insets.
                *
                * @param top The top insets.
                * @param left The left insets.
                * @param bottom The bottom insets.
                * @param right The right insets.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>add</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>top</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>left</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>bottom</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>right</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getTop</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <name>top</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getLeft</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <name>left</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getBottom</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <name>bottom</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getRight</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <name>right</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Adds the specified insets to the current insets.
                *
                * @param i The insets to be added.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>add</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Insets2D</name>
                            </type>
                            <name>i</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getTop</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getTop</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getLeft</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getLeft</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getBottom</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getBottom</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getRight</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getRight</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Adds the current insets to the specified Rectangle2D making the
                * rectangle larger.
                *
                * @param r The Rectangle2D.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>r</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>r</name>.
                                    <name>setRect</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>r</name>.
                                                    <name>getX</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <call>
                                                <name>getLeft</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>r</name>.
                                                    <name>getY</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <call>
                                                <name>getTop</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>r</name>.
                                                    <name>getWidth</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <call>
                                                <name>getLeft</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <call>
                                                <name>getRight</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>r</name>.
                                                    <name>getHeight</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <call>
                                                <name>getTop</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <call>
                                                <name>getBottom</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Subtracts the specified insets from the current insets.
                *
                * @param top The top insets.
                * @param left The left insets.
                * @param bottom The bottom insets.
                * @param right The right insets.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>subtract</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>top</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>left</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>bottom</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>right</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getTop</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <name>top</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getLeft</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <name>left</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getBottom</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <name>bottom</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getRight</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <name>right</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Subtracts the specified insets from the current insets.
                *
                * @param i The insets to be subtracted.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>subtract</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Insets2D</name>
                            </type>
                            <name>i</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>set</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getTop</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getTop</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getLeft</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getLeft</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getBottom</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getBottom</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getRight</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <call>
                                                <name><name>i</name>.
                                                    <name>getRight</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Subtracts the current insets to the specified Rectangle2D making the
                * rectangle smaller.
                *
                * @param r The Rectangle2D.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>subtractTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>r</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>r</name>.
                                    <name>setRect</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>r</name>.
                                                    <name>getX</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <call>
                                                <name>getLeft</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>r</name>.
                                                    <name>getY</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            <call>
                                                <name>getTop</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>r</name>.
                                                    <name>getWidth</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <call>
                                                <name>getLeft</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <call>
                                                <name>getRight</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>r</name>.
                                                    <name>getHeight</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <call>
                                                <name>getTop</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <call>
                                                <name>getBottom</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Checks whether two insets objects are equal. Two instances
                * of &lt;code&gt;Insets2DDouble&lt;/code&gt; are equal if the four integer values
                * of the fields &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;,
                * &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;right&lt;/code&gt; are all equal.
                * @return &lt;code&gt;true&lt;/code&gt; if the two insets are equal;
                * otherwise &lt;code&gt;false&lt;/code&gt;.
                * @since JDK1.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>obj</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>obj</name>
                                <name>instanceof</name>
                                <name>Insets2D</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Insets2D</name>
                                        </type>
                                        <name>that</name> =
                                        <init>
                                            <expr>(<name>Insets2D</name>)
                                                <name>obj</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <return>return
                                    <expr>((
                                        <call>
                                            <name>getTop</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <call>
                                            <name><name>that</name>.
                                                <name>getTop</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ) &amp;&amp;
                                        (
                                        <call>
                                            <name>getLeft</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <call>
                                            <name><name>that</name>.
                                                <name>getLeft</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ) &amp;&amp;
                                        (
                                        <call>
                                            <name>getBottom</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <call>
                                            <name><name>that</name>.
                                                <name>getBottom</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ) &amp;&amp;
                                        (
                                        <call>
                                            <name>getRight</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <call>
                                            <name><name>that</name>.
                                                <name>getRight</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ))
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the hash code for this Insets2DDouble.
                *
                * @return a hash code for this Insets2DDouble.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>sum1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getLeft</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    +
                                    <call>
                                        <name>getBottom</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>sum2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getRight</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    +
                                    <call>
                                        <name>getTop</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>val1</name> =
                            <init>
                                <expr>
                                    <name>sum1</name>
                                    * (<name>sum1</name> + 1)/2 +
                                    <call>
                                        <name>getLeft</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>val2</name> =
                            <init>
                                <expr>
                                    <name>sum2</name>
                                    * (<name>sum2</name> + 1)/2 +
                                    <call>
                                        <name>getTop</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>sum3</name> =
                            <init>
                                <expr>
                                    <name>val1</name>
                                    +
                                    <name>val2</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>java</name>.<name>lang</name>.<name>Float</name>.
                                    <name>floatToIntBits</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>(<name>float</name>)
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>sum3</name>
                                                            * (<name>sum3</name> + 1)/2 +
                                                            <name>val2</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Creates a new object of the same class as this object.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>CloneNotSupportedException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// this shouldn't happen, since we are Cloneable</comment>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>InternalError</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * The &lt;code&gt;Float&lt;/code&gt; class defines insets specified in
                * &lt;code&gt;float&lt;/code&gt; precision.
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier> class <name>Float</name>
                <super>
                    <extends>extends
                        <name>Insets2D</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>float</name>
                            </type>
                            <name>top</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>float</name>
                            </type>
                            <name>left</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>float</name>
                            </type>
                            <name>bottom</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>float</name>
                            </type>
                            <name>right</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Constructs and initializes an &lt;code&gt;Insets2D&lt;/code&gt; with
                        * all insets set to 0.
                        */
                    </comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Float</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Constructs and initializes an &lt;code&gt;Insets2D&lt;/code&gt; with the
                        * specified insets.
                        *
                        * @param top The top insets.
                        * @param left The left insets.
                        * @param bottom The bottom insets.
                        * @param right The right insets.
                        */
                    </comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Float</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>top</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>left</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>bottom</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>right</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>top</name>
                                    </name>
                                    =
                                    <name>top</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>left</name>
                                    </name>
                                    =
                                    <name>left</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>bottom</name>
                                    </name>
                                    =
                                    <name>bottom</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>right</name>
                                    </name>
                                    =
                                    <name>right</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>double</name>
                        </type>
                        <name>getTop</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>top</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>double</name>
                        </type>
                        <name>getLeft</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>left</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>double</name>
                        </type>
                        <name>getBottom</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>bottom</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>double</name>
                        </type>
                        <name>getRight</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>right</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>set</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>top</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>left</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>bottom</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>right</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>top</name>
                                    </name>
                                    = (<name>float</name>)
                                    <name>top</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>left</name>
                                    </name>
                                    = (<name>float</name>)
                                    <name>left</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>bottom</name>
                                    </name>
                                    = (<name>float</name>)
                                    <name>bottom</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>right</name>
                                    </name>
                                    = (<name>float</name>)
                                    <name>right</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>set</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>top</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>left</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>bottom</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>right</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>top</name>
                                    </name>
                                    =
                                    <name>top</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>left</name>
                                    </name>
                                    =
                                    <name>left</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>bottom</name>
                                    </name>
                                    =
                                    <name>bottom</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>right</name>
                                    </name>
                                    =
                                    <name>right</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>
            <comment type="javadoc">/**
                * The &lt;code&gt;Double&lt;/code&gt; class defines insets specified in
                * &lt;code&gt;double&lt;/code&gt; precision.
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier> class <name>Double</name>
                <super>
                    <extends>extends
                        <name>Insets2D</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>double</name>
                            </type>
                            <name>top</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>double</name>
                            </type>
                            <name>left</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>double</name>
                            </type>
                            <name>bottom</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>double</name>
                            </type>
                            <name>right</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Constructs and initializes an &lt;code&gt;Insets2D&lt;/code&gt; with
                        * all insets set to 0.
                        */
                    </comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Double</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Constructs and initializes an &lt;code&gt;Insets2D&lt;/code&gt; with the
                        * specified insets.
                        *
                        * @param top The top insets.
                        * @param left The left insets.
                        * @param bottom The bottom insets.
                        * @param right The right insets.
                        */
                    </comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Double</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>top</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>left</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>bottom</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>right</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>top</name>
                                    </name>
                                    =
                                    <name>top</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>left</name>
                                    </name>
                                    =
                                    <name>left</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>bottom</name>
                                    </name>
                                    =
                                    <name>bottom</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>right</name>
                                    </name>
                                    =
                                    <name>right</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>double</name>
                        </type>
                        <name>getTop</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>top</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>double</name>
                        </type>
                        <name>getLeft</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>left</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>double</name>
                        </type>
                        <name>getBottom</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>bottom</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>double</name>
                        </type>
                        <name>getRight</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>right</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>set</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>top</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>left</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>bottom</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>right</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>top</name>
                                    </name>
                                    =
                                    <name>top</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>left</name>
                                    </name>
                                    =
                                    <name>left</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>bottom</name>
                                    </name>
                                    =
                                    <name>bottom</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>right</name>
                                    </name>
                                    =
                                    <name>right</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>
            }
        </block>
    </class>

</unit>
