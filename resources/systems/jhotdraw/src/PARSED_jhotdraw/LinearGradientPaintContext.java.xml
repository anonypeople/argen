<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\apache\batik\ext\awt\LinearGradientPaintContext.java">
    <comment type="block">/*

        Copyright 2001-2004 The Apache Software Foundation

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>batik</name>.<name>ext</name>.
            <name>awt</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Color</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Rectangle</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>RenderingHints</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>AffineTransform</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>NoninvertibleTransformException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Point2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Rectangle2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>image</name>.
            <name>ColorModel</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Provides the actual implementation for the LinearGradientPaint
        * This is where the pixel processing is done.
        *
        * @author Nicholas Talian, Vincent Hardy, Jim Graham, Jerry Evans
        * @author &lt;a href="mailto:vincent.hardy@eng.sun.com"&gt;Vincent Hardy&lt;/a&gt;
        * @version $Id: LinearGradientPaintContext.java,v 1.13 2005/03/27 08:58:32 cam Exp $
        * @see java.awt.PaintContext
        * @see java.awt.Paint
        * @see java.awt.GradientPaint
        */
    </comment>
    <class>
        <specifier>final</specifier>
        class <name>LinearGradientPaintContext</name>
        <super>
            <extends>extends
                <name>MultipleGradientPaintContext</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * The following invariants are used to process the gradient value from
                * a device space coordinate, (X, Y):
                * g(X, Y) = dgdX*X + dgdY*Y + gc
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>float</name>
                    </type>
                    <name>dgdX</name>, <name>dgdY</name>, <name>gc</name>,
                    <name>pixSz</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DEFAULT_IMPL</name> =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ANTI_ALIAS_IMPL</name>  =
                    <init>
                        <expr>3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fillMethod</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Constructor for LinearGradientPaintContext.
                *
                * @param cm {@link ColorModel} that receives
                * the &lt;code&gt;Paint&lt;/code&gt; data. This is used only as a hint.
                *
                * @param deviceBounds the device space bounding box of the
                * graphics primitive being rendered
                *
                * @param userBounds the user space bounding box of the
                * graphics primitive being rendered
                *
                * @param t the {@link AffineTransform} from user
                * space into device space (gradientTransform should be
                * concatenated with this)
                *
                * @param hints the hints that the context object uses to choose
                * between rendering alternatives
                *
                * @param dStart gradient start point, in user space
                *
                * @param dEnd gradient end point, in user space
                *
                * @param fractions the fractions specifying the gradient distribution
                *
                * @param colors the gradient colors
                *
                * @param cycleMethod either NO_CYCLE, REFLECT, or REPEAT
                *
                * @param colorSpace which colorspace to use for interpolation,
                * either SRGB or LINEAR_RGB
                *
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>LinearGradientPaintContext</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ColorModel</name>
                            </type>
                            <name>cm</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle</name>
                            </type>
                            <name>deviceBounds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>userBounds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RenderingHints</name>
                            </type>
                            <name>hints</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Point2D</name>
                            </type>
                            <name>dStart</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Point2D</name>
                            </type>
                            <name>dEnd</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>float</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>fractions</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Color</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>colors</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>MultipleGradientPaint</name>.
                                    <name>CycleMethodEnum</name>
                                </name>
                            </type>
                            <name>cycleMethod</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>MultipleGradientPaint</name>.
                                    <name>ColorSpaceEnum</name>
                                </name>
                            </type>
                            <name>colorSpace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>NoninvertibleTransformException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cm</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>deviceBounds</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>userBounds</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>t</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hints</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fractions</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>colors</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cycleMethod</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>colorSpace</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Use single precision floating points</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Float</name>
                                </name>
                            </type>
                            <name>start</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Float</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>dStart</name>.
                                                            <name>getX</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>dStart</name>.
                                                            <name>getY</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Float</name>
                                </name>
                            </type>
                            <name>end</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Float</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>dEnd</name>.
                                                            <name>getX</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>dEnd</name>.
                                                            <name>getY</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// A given point in the raster should take on the same color as its</comment>
                    <comment type="line">// projection onto the gradient vector.</comment>
                    <comment type="line">// Thus, we want the projection of the current position vector</comment>
                    <comment type="line">// onto the gradient vector, then normalized with respect to the</comment>
                    <comment type="line">// length of the gradient vector, giving a value which can be mapped into
                    </comment>
                    <comment type="line">// the range 0-1.</comment>
                    <comment type="line">// projection = currentVector dot gradientVector / length(gradientVector)
                    </comment>
                    <comment type="line">// normalized = projection / length(gradientVector)</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>dx</name> =
                            <init>
                                <expr>
                                    <name><name>end</name>.
                                        <name>x</name>
                                    </name>
                                    -
                                    <name><name>start</name>.
                                        <name>x</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// change in x from start to end</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>dy</name> =
                            <init>
                                <expr>
                                    <name><name>end</name>.
                                        <name>y</name>
                                    </name>
                                    -
                                    <name><name>start</name>.
                                        <name>y</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// change in y from start to end</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>dSq</name> =
                            <init>
                                <expr><name>dx</name>*<name>dx</name> + <name>dy</name>*
                                    <name>dy</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// total distance squared</comment>

                    <comment type="line">//avoid repeated calculations by doing these divides once.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>constX</name> =
                            <init>
                                <expr><name>dx</name>/
                                    <name>dSq</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>constY</name> =
                            <init>
                                <expr><name>dy</name>/
                                    <name>dSq</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//incremental change along gradient for +x</comment>
                    <expr_stmt>
                        <expr>
                            <name>dgdX</name>
                            = <name>a00</name>*<name>constX</name> + <name>a10</name>*
                            <name>constY</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">//incremental change along gradient for +y</comment>
                    <expr_stmt>
                        <expr>
                            <name>dgdY</name>
                            = <name>a01</name>*<name>constX</name> + <name>a11</name>*
                            <name>constY</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>dgdXAbs</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Math</name>.
                                            <name>abs</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>dgdX</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>dgdYAbs</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Math</name>.
                                            <name>abs</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>dgdY</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>dgdXAbs</name>
                                &gt;
                                <name>dgdYAbs</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>pixSz</name>
                                    =
                                    <name>dgdXAbs</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                        <else>else
                            <expr_stmt>
                                <expr>
                                    <name>pixSz</name>
                                    =
                                    <name>dgdYAbs</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </else>
                    </if>

                    <comment type="line">//constant, incorporates the translation components from the matrix</comment>
                    <expr_stmt>
                        <expr>
                            <name>gc</name>
                            = (<name>a02</name>-
                            <name><name>start</name>.
                                <name>x</name>
                            </name>
                            )*<name>constX</name> + (<name>a12</name>-
                            <name><name>start</name>.
                                <name>y</name>
                            </name>
                            )*
                            <name>constY</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>colorRend</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>hints</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>RenderingHints</name>.
                                                        <name>KEY_COLOR_RENDERING</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>rend</name>      =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>hints</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>RenderingHints</name>.
                                                        <name>KEY_RENDERING</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fillMethod</name>
                            =
                            <name>DEFAULT_IMPL</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>(<name>cycleMethod</name> ==
                                <name><name>MultipleGradientPaint</name>.
                                    <name>REPEAT</name>
                                </name>
                                ) ||
                                <name>hasDiscontinuity</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>rend</name>
                                            ==
                                            <name><name>RenderingHints</name>.
                                                <name>VALUE_RENDER_QUALITY</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>fillMethod</name>
                                                =
                                                <name>ANTI_ALIAS_IMPL</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <comment type="line">// ColorRend overrides rend.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>colorRend</name>
                                            ==
                                            <name><name>RenderingHints</name>.
                                                <name>VALUE_COLOR_RENDER_SPEED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>fillMethod</name>
                                                =
                                                <name>DEFAULT_IMPL</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>colorRend</name>
                                                    ==
                                                    <name><name>RenderingHints</name>.
                                                        <name>VALUE_COLOR_RENDER_QUALITY</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>fillMethod</name>
                                                        =
                                                        <name>ANTI_ALIAS_IMPL</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>fillHardNoCycle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>int</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>pixels</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>off</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>adjust</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>w</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>h</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">//constant which can be pulled out of the inner loop</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>float</name>
                            </type>
                            <name>initConst</name> =
                            <init>
                                <expr>(<name>dgdX</name>*<name>x</name>) +
                                    <name>gc</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>h</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <comment type="line">//for every row</comment>
                            <comment type="line">//initialize current value to be start.</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>g</name> =
                                    <init>
                                        <expr>
                                            <name>initConst</name>
                                            + <name>dgdY</name>*(<name>y</name>+<name>i</name>)
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>int</name>
                                    </type>
                                    <name>rowLimit</name> =
                                    <init>
                                        <expr><name>off</name>+
                                            <name>w</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// end of row iteration</comment>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>dgdX</name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// System.out.println("In fillHard: " + g);</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>val</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>g</name>
                                                    &lt;= 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>val</name>
                                                        =
                                                        <name>gradientUnderflow</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>g</name>
                                                            &gt;= 1
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>val</name>
                                                                =
                                                                <name>gradientOverflow</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <comment type="line">// Could be a binary search...
                                                            </comment>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>gradIdx</name> =
                                                                    <init>
                                                                        <expr>0</expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <while>while
                                                                <condition>(
                                                                    <expr>
                                                                        <name>gradIdx</name>
                                                                        &lt; <name>gradientsLength</name>-1
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <block>{
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>g</name>
                                                                                &lt;
                                                                                <name>
                                                                                    <name>fractions</name>
                                                                                    <index>[
                                                                                        <expr><name>gradIdx</name>+1
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <break>break;</break>
                                                                        </then>
                                                                    </if>
                                                                    <expr_stmt>
                                                                        <expr><name>gradIdx</name>++
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </while>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>float</name>
                                                                    </type>
                                                                    <name>delta</name> =
                                                                    <init>
                                                                        <expr>(<name>g</name>-
                                                                            <name>
                                                                                <name>fractions</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>gradIdx</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            )
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>float</name>
                                                                    </type>
                                                                    <name>idx</name>  =
                                                                    <init>
                                                                        <expr>((<name>delta</name>*<name>
                                                                            GRADIENT_SIZE_INDEX</name>)
                                                                            /
                                                                            <name>
                                                                                <name>normalizedIntervals</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>gradIdx</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            )+0.5f
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>val</name>
                                                                    =
                                                                    <name>
                                                                        <name>gradients</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>gradIdx</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                        <index>[
                                                                            <expr>(<name>int</name>)
                                                                                <name>idx</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>

                                        <while>while
                                            <condition>(
                                                <expr>
                                                    <name>off</name>
                                                    &lt;
                                                    <name>rowLimit</name>
                                                </expr>
                                                )
                                            </condition>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>pixels</name>
                                                            <index>[
                                                                <expr><name>off</name>++
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>val</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </while>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// System.out.println("In fillHard2: " + g);</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>gradSteps</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>preGradSteps</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>preVal</name>,
                                                <name>postVal</name>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>float</name>
                                                </type>
                                                <name>gradStepsF</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>float</name>
                                                </type>
                                                <name>preGradStepsF</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>dgdX</name>
                                                    &gt;= 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>gradStepsF</name>
                                                            = ((1-<name>g</name>)/<name>dgdX</name>)
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>preGradStepsF</name>
                                                            = (<name>float</name>)
                                                            <call>
                                                                <name><name>Math</name>.
                                                                    <name>ceil</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(0-<name>g</name>)/
                                                                            <name>dgdX</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>preVal</name>
                                                            =
                                                            <name>gradientUnderflow</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>postVal</name>
                                                            =
                                                            <name>gradientOverflow</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// dgdX &lt; 0</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>gradStepsF</name>
                                                            = ((0-<name>g</name>)/<name>dgdX</name>)
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>preGradStepsF</name>
                                                            = (<name>float</name>)
                                                            <call>
                                                                <name><name>Math</name>.
                                                                    <name>ceil</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(1-<name>g</name>)/
                                                                            <name>dgdX</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>preVal</name>
                                                            =
                                                            <name>gradientOverflow</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>postVal</name>
                                                            =
                                                            <name>gradientUnderflow</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>gradStepsF</name>
                                                    &gt;
                                                    <name>w</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>gradSteps</name>
                                                        =
                                                        <name>w</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <expr_stmt>
                                                    <expr>
                                                        <name>gradSteps</name>
                                                        = (<name>int</name>)
                                                        <name>gradStepsF</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </else>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>preGradStepsF</name>
                                                    &gt;
                                                    <name>w</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>preGradSteps</name>
                                                        =
                                                        <name>w</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <expr_stmt>
                                                    <expr>
                                                        <name>preGradSteps</name>
                                                        = (<name>int</name>)
                                                        <name>preGradStepsF</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </else>
                                        </if>

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>gradLimit</name>    =
                                                <init>
                                                    <expr>
                                                        <name>off</name>
                                                        +
                                                        <name>gradSteps</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>preGradSteps</name>
                                                    &gt; 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <specifier>final</specifier>
                                                                <name>int</name>
                                                            </type>
                                                            <name>preGradLimit</name> =
                                                            <init>
                                                                <expr>
                                                                    <name>off</name>
                                                                    +
                                                                    <name>preGradSteps</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>

                                                    <while>while
                                                        <condition>(
                                                            <expr>
                                                                <name>off</name>
                                                                &lt;
                                                                <name>preGradLimit</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>pixels</name>
                                                                        <index>[
                                                                            <expr><name>off</name>++
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    =
                                                                    <name>preVal</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </while>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>g</name>
                                                            += <name>dgdX</name>*
                                                            <name>preGradSteps</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>dgdX</name>
                                                    &gt; 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// Could be a binary search...</comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>gradIdx</name> =
                                                            <init>
                                                                <expr>0</expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <while>while
                                                        <condition>(
                                                            <expr>
                                                                <name>gradIdx</name>
                                                                &lt; <name>gradientsLength</name>-1
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>g</name>
                                                                        &lt;
                                                                        <name>
                                                                            <name>fractions</name>
                                                                            <index>[
                                                                                <expr><name>gradIdx</name>+1
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <break>break;</break>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr><name>gradIdx</name>++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </while>

                                                    <while>while
                                                        <condition>(
                                                            <expr>
                                                                <name>off</name>
                                                                &lt;
                                                                <name>gradLimit</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>float</name>
                                                                    </type>
                                                                    <name>delta</name> =
                                                                    <init>
                                                                        <expr>(<name>g</name>-
                                                                            <name>
                                                                                <name>fractions</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>gradIdx</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            )
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <specifier>final</specifier>
                                                                        <name>int</name>
                                                                        <index>[]</index>
                                                                    </type>
                                                                    <name>grad</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name>
                                                                                <name>gradients</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>gradIdx</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>

                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>double</name>
                                                                    </type>
                                                                    <name>stepsD</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>Math</name>.
                                                                                    <name>ceil</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>(
                                                                                            <name>
                                                                                                <name>fractions</name>
                                                                                                <index>[
                                                                                                    <expr><name>
                                                                                                        gradIdx</name>+1
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                            -<name>g</name>)/
                                                                                            <name>dgdX</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>steps</name>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>stepsD</name>
                                                                        &gt;
                                                                        <name>w</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>steps</name>
                                                                            =
                                                                            <name>w</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                </then>
                                                                <else>else
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>steps</name>
                                                                            = (<name>int</name>)
                                                                            <name>stepsD</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                </else>
                                                            </if>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>subGradLimit</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name>off</name>
                                                                            +
                                                                            <name>steps</name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>subGradLimit</name>
                                                                        &gt;
                                                                        <name>gradLimit</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>subGradLimit</name>
                                                                            =
                                                                            <name>gradLimit</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                </then>
                                                            </if>

                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>idx</name>  =
                                                                    <init>
                                                                        <expr>
                                                                            <call>(<name>int</name>)
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>((<name>
                                                                                            delta</name>*<name>
                                                                                            GRADIENT_SIZE_INDEX</name>)
                                                                                            /
                                                                                            <name>
                                                                                                <name>
                                                                                                    normalizedIntervals
                                                                                                </name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name>gradIdx
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                            )
                                                                                            *(1&lt;&lt;16)
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                            + (1&lt;&lt;15)
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>step</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>(<name>int</name>)
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>((<name>dgdX</name>*<name>
                                                                                            GRADIENT_SIZE_INDEX</name>)
                                                                                            /
                                                                                            <name>
                                                                                                <name>
                                                                                                    normalizedIntervals
                                                                                                </name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name>gradIdx
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                            )
                                                                                            *(1&lt;&lt;16)
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <while>while
                                                                <condition>(
                                                                    <expr>
                                                                        <name>off</name>
                                                                        &lt;
                                                                        <name>subGradLimit</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>
                                                                                <name>pixels</name>
                                                                                <index>[
                                                                                    <expr><name>off</name>++
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            =
                                                                            <name>
                                                                                <name>grad</name>
                                                                                <index>[
                                                                                    <expr><name>idx</name>&gt;&gt;16
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>idx</name>
                                                                            +=
                                                                            <name>step</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </while>
                                                            <expr_stmt>
                                                                <expr><name>g</name>+=<name>dgdX</name>*
                                                                    <name>stepsD</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr><name>gradIdx</name>++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </while>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// Could be a binary search...</comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>gradIdx</name> =
                                                            <init>
                                                                <expr><name>gradientsLength</name>-1
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <while>while
                                                        <condition>(
                                                            <expr>
                                                                <name>gradIdx</name>
                                                                &gt; 0
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>g</name>
                                                                        &gt;
                                                                        <name>
                                                                            <name>fractions</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>gradIdx</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <break>break;</break>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr><name>gradIdx</name>--
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </while>

                                                    <while>while
                                                        <condition>(
                                                            <expr>
                                                                <name>off</name>
                                                                &lt;
                                                                <name>gradLimit</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>float</name>
                                                                    </type>
                                                                    <name>delta</name> =
                                                                    <init>
                                                                        <expr>(<name>g</name>-
                                                                            <name>
                                                                                <name>fractions</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>gradIdx</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            )
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <specifier>final</specifier>
                                                                        <name>int</name>
                                                                        <index>[]</index>
                                                                    </type>
                                                                    <name>grad</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name>
                                                                                <name>gradients</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>gradIdx</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>

                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>double</name>
                                                                    </type>
                                                                    <name>stepsD</name>     =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>Math</name>.
                                                                                    <name>ceil</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr><name>delta</name>/-
                                                                                            <name>dgdX</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>steps</name>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>stepsD</name>
                                                                        &gt;
                                                                        <name>w</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>steps</name>
                                                                            =
                                                                            <name>w</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                </then>
                                                                <else>else
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>steps</name>
                                                                            = (<name>int</name>)
                                                                            <name>stepsD</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                </else>
                                                            </if>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>subGradLimit</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name>off</name>
                                                                            +
                                                                            <name>steps</name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>subGradLimit</name>
                                                                        &gt;
                                                                        <name>gradLimit</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>subGradLimit</name>
                                                                            =
                                                                            <name>gradLimit</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                </then>
                                                            </if>

                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>idx</name>  =
                                                                    <init>
                                                                        <expr>
                                                                            <call>(<name>int</name>)
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>((<name>
                                                                                            delta</name>*<name>
                                                                                            GRADIENT_SIZE_INDEX</name>)
                                                                                            /
                                                                                            <name>
                                                                                                <name>
                                                                                                    normalizedIntervals
                                                                                                </name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name>gradIdx
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                            )
                                                                                            *(1&lt;&lt;16)
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                            + (1&lt;&lt;15)
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>step</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>(<name>int</name>)
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>((<name>dgdX</name>*<name>
                                                                                            GRADIENT_SIZE_INDEX</name>)
                                                                                            /
                                                                                            <name>
                                                                                                <name>
                                                                                                    normalizedIntervals
                                                                                                </name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name>gradIdx
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                            )
                                                                                            *(1&lt;&lt;16)
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <while>while
                                                                <condition>(
                                                                    <expr>
                                                                        <name>off</name>
                                                                        &lt;
                                                                        <name>subGradLimit</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>
                                                                                <name>pixels</name>
                                                                                <index>[
                                                                                    <expr><name>off</name>++
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            =
                                                                            <name>
                                                                                <name>grad</name>
                                                                                <index>[
                                                                                    <expr><name>idx</name>&gt;&gt;16
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>idx</name>
                                                                            +=
                                                                            <name>step</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </while>
                                                            <expr_stmt>
                                                                <expr><name>g</name>+=<name>dgdX</name>*
                                                                    <name>stepsD</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr><name>gradIdx</name>--
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </while>
                                                    }
                                                </block>
                                            </else>
                                        </if>

                                        <while>while
                                            <condition>(
                                                <expr>
                                                    <name>off</name>
                                                    &lt;
                                                    <name>rowLimit</name>
                                                </expr>
                                                )
                                            </condition>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>pixels</name>
                                                            <index>[
                                                                <expr><name>off</name>++
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>postVal</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </while>
                                        }
                                    </block>
                                </else>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>off</name>
                                    +=
                                    <name>adjust</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">//change in off from row to row</comment>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>fillSimpleNoCycle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>int</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>pixels</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>off</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>adjust</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>w</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>h</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//constant which can be pulled out of the inner loop</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>float</name>
                            </type>
                            <name>initConst</name> =
                            <init>
                                <expr>(<name>dgdX</name>*<name>x</name>) +
                                    <name>gc</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>float</name>
                            </type>
                            <name>step</name> =
                            <init>
                                <expr><name>dgdX</name>*
                                    <name>fastGradientArraySize</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>fpStep</name> =
                            <init>
                                <expr>
                                    <call>(<name>int</name>)
                                        <argument_list>(
                                            <argument>
                                                <expr><name>step</name>*(1&lt;&lt;16)
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// fix point step</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>grad</name> =
                            <init>
                                <expr>
                                    <name>gradient</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>h</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <comment type="line">//for every row</comment>
                            <comment type="line">//initialize current value to be start.</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>g</name> =
                                    <init>
                                        <expr>
                                            <name>initConst</name>
                                            + <name>dgdY</name>*(<name>y</name>+<name>i</name>)
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>g</name>
                                    *=
                                    <name>fastGradientArraySize</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>g</name>
                                    += 0.5
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// rounding factor...</comment>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>int</name>
                                    </type>
                                    <name>rowLimit</name> =
                                    <init>
                                        <expr><name>off</name>+
                                            <name>w</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// end of row iteration</comment>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>check</name> =
                                    <init>
                                        <expr><name>dgdX</name>*<name>fastGradientArraySize</name>*
                                            <name>w</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>check</name>
                                        &lt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>check</name>
                                            = -
                                            <name>check</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>check</name>
                                        &lt; .3
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// System.out.println("In fillSimpleNC: " + g);</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>val</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr><name>g</name>&lt;=0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>val</name>
                                                        =
                                                        <name>gradientUnderflow</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr><name>g</name>&gt;=
                                                            <name>fastGradientArraySize</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>val</name>
                                                                =
                                                                <name>gradientOverflow</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                    <else>else
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>val</name>
                                                                =
                                                                <name>
                                                                    <name>grad</name>
                                                                    <index>[
                                                                        <expr>(<name>int</name>)
                                                                            <name>g</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        <while>while
                                            <condition>(
                                                <expr>
                                                    <name>off</name>
                                                    &lt;
                                                    <name>rowLimit</name>
                                                </expr>
                                                )
                                            </condition>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>pixels</name>
                                                            <index>[
                                                                <expr><name>off</name>++
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>val</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </while>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// System.out.println("In fillSimpleNC2: " + g);</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>gradSteps</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>preGradSteps</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>preVal</name>,
                                                <name>postVal</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>dgdX</name>
                                                    &gt; 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>gradSteps</name>
                                                            =
                                                            <call>(<name>int</name>)
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>fastGradientArraySize</name>-<name>
                                                                            g</name>)/
                                                                            <name>step</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>preGradSteps</name>
                                                            = (<name>int</name>)
                                                            <call>
                                                                <name><name>Math</name>.
                                                                    <name>ceil</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>0-<name>g</name>/
                                                                            <name>step</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>preVal</name>
                                                            =
                                                            <name>gradientUnderflow</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>postVal</name>
                                                            =
                                                            <name>gradientOverflow</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// dgdX &lt; 0</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>gradSteps</name>
                                                            =
                                                            <call>(<name>int</name>)
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(0-<name>g</name>)/
                                                                            <name>step</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>preGradSteps</name>
                                                            =
                                                            (<name>int</name>)
                                                            <call>
                                                                <name><name>Math</name>.
                                                                    <name>ceil</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>fastGradientArraySize</name>-<name>
                                                                            g</name>)/
                                                                            <name>step</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>preVal</name>
                                                            =
                                                            <name>gradientOverflow</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>postVal</name>
                                                            =
                                                            <name>gradientUnderflow</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>gradSteps</name>
                                                    &gt;
                                                    <name>w</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>gradSteps</name>
                                                        =
                                                        <name>w</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>gradLimit</name>    =
                                                <init>
                                                    <expr>
                                                        <name>off</name>
                                                        +
                                                        <name>gradSteps</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>preGradSteps</name>
                                                    &gt; 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>preGradSteps</name>
                                                                &gt;
                                                                <name>w</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>preGradSteps</name>
                                                                    =
                                                                    <name>w</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <specifier>final</specifier>
                                                                <name>int</name>
                                                            </type>
                                                            <name>preGradLimit</name> =
                                                            <init>
                                                                <expr>
                                                                    <name>off</name>
                                                                    +
                                                                    <name>preGradSteps</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>

                                                    <while>while
                                                        <condition>(
                                                            <expr>
                                                                <name>off</name>
                                                                &lt;
                                                                <name>preGradLimit</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>pixels</name>
                                                                        <index>[
                                                                            <expr><name>off</name>++
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    =
                                                                    <name>preVal</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </while>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>g</name>
                                                            += <name>step</name>*
                                                            <name>preGradSteps</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>fpG</name> =
                                                <init>
                                                    <expr>
                                                        <call>(<name>int</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr><name>g</name>*(1&lt;&lt;16)
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <while>while
                                            <condition>(
                                                <expr>
                                                    <name>off</name>
                                                    &lt;
                                                    <name>gradLimit</name>
                                                </expr>
                                                )
                                            </condition>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>pixels</name>
                                                            <index>[
                                                                <expr><name>off</name>++
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>
                                                            <name>grad</name>
                                                            <index>[
                                                                <expr><name>fpG</name>&gt;&gt;16
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>fpG</name>
                                                        +=
                                                        <name>fpStep</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </while>

                                        <while>while
                                            <condition>(
                                                <expr>
                                                    <name>off</name>
                                                    &lt;
                                                    <name>rowLimit</name>
                                                </expr>
                                                )
                                            </condition>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>pixels</name>
                                                            <index>[
                                                                <expr><name>off</name>++
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>postVal</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </while>
                                        }
                                    </block>
                                </else>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>off</name>
                                    +=
                                    <name>adjust</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">//change in off from row to row</comment>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>fillSimpleRepeat</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>int</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>pixels</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>off</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>adjust</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>w</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>h</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>float</name>
                            </type>
                            <name>initConst</name> =
                            <init>
                                <expr>(<name>dgdX</name>*<name>x</name>) +
                                    <name>gc</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Limit step to fractional part of</comment>
                    <comment type="line">// fastGradientArraySize (the non fractional part has</comment>
                    <comment type="line">// no affect anyways, and would mess up lots of stuff</comment>
                    <comment type="line">// below).</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>step</name> =
                            <init>
                                <expr>(<name>dgdX</name> - (<name>int</name>)<name>dgdX</name>)*
                                    <name>fastGradientArraySize</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Make it a Positive step (a small negative step is</comment>
                    <comment type="line">// the same as a positive step slightly less than</comment>
                    <comment type="line">// fastGradientArraySize.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>step</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>step</name>
                                    +=
                                    <name>fastGradientArraySize</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>grad</name> =
                            <init>
                                <expr>
                                    <name>gradient</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>h</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <comment type="line">//for every row</comment>
                            <comment type="line">//initialize current value to be start.</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>g</name> =
                                    <init>
                                        <expr>
                                            <name>initConst</name>
                                            + <name>dgdY</name>*(<name>y</name>+<name>i</name>)
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// now Limited between -1 and 1.</comment>
                            <expr_stmt>
                                <expr>
                                    <name>g</name>
                                    = <name>g</name>-(<name>int</name>)
                                    <name>g</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// put in the positive side.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>g</name>
                                        &lt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>g</name>
                                            += 1
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>

                            <comment type="line">// scale for gradient array...</comment>
                            <expr_stmt>
                                <expr>
                                    <name>g</name>
                                    *=
                                    <name>fastGradientArraySize</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>g</name>
                                    += 0.5
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// rounding factor</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>int</name>
                                    </type>
                                    <name>rowLimit</name> =
                                    <init>
                                        <expr><name>off</name>+
                                            <name>w</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// end of row iteration</comment>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>off</name>
                                        &lt;
                                        <name>rowLimit</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>idx</name> =
                                            <init>
                                                <expr>(<name>int</name>)
                                                    <name>g</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>idx</name>
                                                &gt;=
                                                <name>fastGradientArraySize</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>g</name>
                                                        -=
                                                        <name>fastGradientArraySize</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>idx</name>
                                                        -=
                                                        <name>fastGradientArraySize</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>pixels</name>
                                                <index>[
                                                    <expr><name>off</name>++
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            =
                                            <name>
                                                <name>grad</name>
                                                <index>[
                                                    <expr>
                                                        <name>idx</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>g</name>
                                            +=
                                            <name>step</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>

                            <expr_stmt>
                                <expr>
                                    <name>off</name>
                                    +=
                                    <name>adjust</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">//change in off from row to row</comment>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>fillSimpleReflect</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>int</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>pixels</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>off</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>adjust</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>w</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>h</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>float</name>
                            </type>
                            <name>initConst</name> =
                            <init>
                                <expr>(<name>dgdX</name>*<name>x</name>) +
                                    <name>gc</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>grad</name> =
                            <init>
                                <expr>
                                    <name>gradient</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>h</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <comment type="line">//for every row</comment>
                            <comment type="line">//initialize current value to be start.</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>g</name> =
                                    <init>
                                        <expr>
                                            <name>initConst</name>
                                            + <name>dgdY</name>*(<name>y</name>+<name>i</name>)
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// now limited g to -2&lt;-&gt;2</comment>
                            <expr_stmt>
                                <expr>
                                    <name>g</name>
                                    = <name>g</name> - 2*(
                                    <call>(<name>int</name>)
                                        <argument_list>(
                                            <argument>
                                                <expr><name>g</name>/2.0f
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    )
                                </expr>
                                ;
                            </expr_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>step</name> =
                                    <init>
                                        <expr>
                                            <name>dgdX</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// Pull it into the positive half</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>g</name>
                                        &lt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>g</name>
                                                = -
                                                <name>g</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">//take absolute value</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>step</name>
                                                = -
                                                <name>step</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// Change direction..</comment>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// Now do the same for dgdX. This is safe because</comment>
                            <comment type="line">// any step that is a multiple of 2.0 has no</comment>
                            <comment type="line">// affect, hence we can remove it which the first</comment>
                            <comment type="line">// part does. The second part simply adds 2.0</comment>
                            <comment type="line">// (which has no affect due to the cylcle) to move</comment>
                            <comment type="line">// all negative step values into the positive</comment>
                            <comment type="line">// side.</comment>
                            <expr_stmt>
                                <expr>
                                    <name>step</name>
                                    = <name>step</name> - 2*((<name>int</name>)<name>step</name>/2.0f)
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>step</name>
                                        &lt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>step</name>
                                            += 2.0
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>int</name>
                                    </type>
                                    <name>reflectMax</name> =
                                    <init>
                                        <expr>2*
                                            <name>fastGradientArraySize</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// Scale for gradient array.</comment>
                            <expr_stmt>
                                <expr>
                                    <name>g</name>
                                    *=
                                    <name>fastGradientArraySize</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>g</name>
                                    += 0.5
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>step</name>
                                    *=
                                    <name>fastGradientArraySize</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>int</name>
                                    </type>
                                    <name>rowLimit</name> =
                                    <init>
                                        <expr><name>off</name>+
                                            <name>w</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// end of row iteration</comment>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>off</name>
                                        &lt;
                                        <name>rowLimit</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>idx</name> =
                                            <init>
                                                <expr>(<name>int</name>)
                                                    <name>g</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>idx</name>
                                                &gt;=
                                                <name>reflectMax</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>g</name>
                                                        -=
                                                        <name>reflectMax</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>idx</name>
                                                        -=
                                                        <name>reflectMax</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>idx</name>
                                                &lt;=
                                                <name>fastGradientArraySize</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>pixels</name>
                                                        <index>[
                                                            <expr><name>off</name>++
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <name>
                                                        <name>grad</name>
                                                        <index>[
                                                            <expr>
                                                                <name>idx</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                        <else>else
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>pixels</name>
                                                        <index>[
                                                            <expr><name>off</name>++
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <name>
                                                        <name>grad</name>
                                                        <index>[
                                                            <expr><name>reflectMax</name>-
                                                                <name>idx</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </else>
                                    </if>
                                    <expr_stmt>
                                        <expr><name>g</name>+=
                                            <name>step</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>

                            <expr_stmt>
                                <expr>
                                    <name>off</name>
                                    +=
                                    <name>adjust</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">//change in off from row to row</comment>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a Raster containing the colors generated for the graphics
                * operation. This is where the area is filled with colors distributed
                * linearly.
                *
                * @param x,y,w,h The area in device space for which colors are
                * generated.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>fillRaster</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>int</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>pixels</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>off</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>adjust</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>w</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>h</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">//constant which can be pulled out of the inner loop</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>float</name>
                            </type>
                            <name>initConst</name> =
                            <init>
                                <expr>(<name>dgdX</name>*<name>x</name>) +
                                    <name>gc</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>fillMethod</name>
                                ==
                                <name>ANTI_ALIAS_IMPL</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">//initialize current value to be start.</comment>
                                <for>for(
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name>=
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr><name>i</name>&lt;
                                            <name>h</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <comment type="line">//for every row</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>float</name>
                                                </type>
                                                <name>g</name> =
                                                <init>
                                                    <expr>
                                                        <name>initConst</name>
                                                        + <name>dgdY</name>*(<name>y</name>+<name>i</name>)
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>rowLimit</name> =
                                                <init>
                                                    <expr><name>off</name>+
                                                        <name>w</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <comment type="line">// end of row iteration</comment>
                                        <while>while
                                            <condition>(
                                                <expr>
                                                    <name>off</name>
                                                    &lt;
                                                    <name>rowLimit</name>
                                                </expr>
                                                )
                                            </condition>
                                            <block>{
                                                <comment type="line">//for every pixel in this row.</comment>
                                                <comment type="line">//get the color</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>pixels</name>
                                                            <index>[
                                                                <expr><name>off</name>++
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <call>
                                                            <name>indexGradientAntiAlias</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>g</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>pixSz</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>g</name>
                                                        +=
                                                        <name>dgdX</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <comment type="line">//incremental change in g</comment>
                                                }
                                            </block>
                                        </while>
                                        <expr_stmt>
                                            <expr>
                                                <name>off</name>
                                                +=
                                                <name>adjust</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">//change in off from row to row</comment>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>!
                                        <name>isSimpleLookup</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>cycleMethod</name>
                                                    ==
                                                    <name><name>MultipleGradientPaint</name>.
                                                        <name>NO_CYCLE</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>fillHardNoCycle</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>pixels</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>off</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>adjust</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>x</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>y</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>w</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>h</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">//initialize current value to be start.
                                                    </comment>
                                                    <for>for(
                                                        <init>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>i</name>=
                                                                <init>
                                                                    <expr>0</expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr><name>i</name>&lt;
                                                                <name>h</name>
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>i</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <comment type="line">//for every row</comment>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>float</name>
                                                                    </type>
                                                                    <name>g</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name>initConst</name>
                                                                            + <name>dgdY</name>*(<name>y</name>+<name>
                                                                            i</name>)
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>

                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <specifier>final</specifier>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>rowLimit</name> =
                                                                    <init>
                                                                        <expr><name>off</name>+
                                                                            <name>w</name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <comment type="line">// end of row iteration</comment>
                                                            <while>while
                                                                <condition>(
                                                                    <expr>
                                                                        <name>off</name>
                                                                        &lt;
                                                                        <name>rowLimit</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <block>{
                                                                    <comment type="line">//for every pixel in this
                                                                        row.
                                                                    </comment>
                                                                    <comment type="line">//get the color</comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>
                                                                                <name>pixels</name>
                                                                                <index>[
                                                                                    <expr><name>off</name>++
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            =
                                                                            <call>
                                                                                <name>indexIntoGradientsArrays</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>g</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>g</name>
                                                                            +=
                                                                            <name>dgdX</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <comment type="line">//incremental change in g
                                                                    </comment>
                                                                    }
                                                                </block>
                                                            </while>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>off</name>
                                                                    +=
                                                                    <name>adjust</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <comment type="line">//change in off from row to row
                                                            </comment>
                                                            }
                                                        </block>
                                                    </for>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// Simple implementations: just scale index by array size
                                        </comment>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>cycleMethod</name>
                                                    ==
                                                    <name><name>MultipleGradientPaint</name>.
                                                        <name>NO_CYCLE</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>fillSimpleNoCycle</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>pixels</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>off</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>adjust</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>x</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>y</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>w</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>h</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>cycleMethod</name>
                                                            ==
                                                            <name><name>MultipleGradientPaint</name>.
                                                                <name>REPEAT</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>fillSimpleRepeat</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>pixels</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>off</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>adjust</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>x</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>y</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>w</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>h</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                    <else>else
                                                        <comment type="line">//cycleMethod ==
                                                            MultipleGradientPaint.REFLECT
                                                        </comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>fillSimpleReflect</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>pixels</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>off</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>adjust</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>x</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>y</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>w</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>h</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>


            }
        </block>
    </class>
</unit>
