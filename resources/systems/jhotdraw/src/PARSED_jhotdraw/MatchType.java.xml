<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\samples\teddy\regex\MatchType.java">
    <comment type="block">/*
        * @(#)MatchType.java 1.0 November 14, 2004
        *
        * Copyright (c) 2004 Werner Randelshofer
        * Staldenmattweg 2, Immensee, CH-6405, Switzerland.
        * All rights reserved.
        *
        * This software is the confidential and proprietary information of
        * Werner Randelshofer. ("Confidential Information"). You shall not
        * disclose such Confidential Information and shall use it only in
        * accordance with the terms of the license agreement you entered into
        * with Werner Randelshofer.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.<name>teddy</name>.
            <name>regex</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * Typesafe Enumeration of Syntaxes for the Parser.
        *
        * @author Werner Randelshofer
        * @version 5.0 2005-01-31 Reworked.
        * &lt;br&gt;1.0 November 14, 2004 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>MatchType</name>
        <comment type="block">/*implements Comparable*/</comment>
        <block>{
            <constructor>
                <specifier>private</specifier>
                <name>MatchType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>MatchType</name>
                    </type>
                    <name>CONTAINS</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>MatchType</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>MatchType</name>
                    </type>
                    <name>STARTS_WITH</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>MatchType</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>MatchType</name>
                    </type>
                    <name>FULL_WORD</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>MatchType</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            }
        </block>
    </class>
</unit>
