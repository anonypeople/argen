<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\samples\teddy\regex\Matcher.java">
    <comment type="block">/*
        * @(#)Matcher.java 2.0 2005-10-09
        *
        * Copyright (c) 2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.<name>teddy</name>.
            <name>regex</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>text</name>
        </name>
        .*;
    </import>

    <comment type="javadoc">/**
        * Searches for an occurence of a case (in)sensitive text on a document.
        * This is a rather slow implementation that does not use advanced techniques
        * such as Boyer-Moore.
        *
        * @author Werner Randelshofer
        * @version 2.0 2005-10-09 Reworked.
        * &lt;br&gt;1.0 2002-02-11 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>Matcher</name>
        <block>{
            <comment type="javadoc">/**
                * The document to be examined.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Document</name>
                    </type>
                    <name>document</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The string to be matched.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>findString</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The start index for the next findNext operation.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>startIndex</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The array of lower case matching chars.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>char</name>
                        <index>[]</index>
                    </type>
                    <name>matchLowerCase</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The array of upper case matching chars.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>char</name>
                        <index>[]</index>
                    </type>
                    <name>matchUpperCase</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The match type.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>MatchType</name>
                    </type>
                    <name>matchType</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a new instance of Matcher which
                * performs a case sensitive search.
                *
                * @param document The document to be examined
                * @param findString The string to be searched.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>Matcher</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Document</name>
                            </type>
                            <name>document</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>findString</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>document</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>findString</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>MatchType</name>.
                                                <name>CONTAINS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a new instance of Matcher
                *
                * @param document The document to be examined
                * @param findString The string to be searched.
                * @param matchCase Set to true for case sensitive search.
                * @param matchType Sets the match type.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>Matcher</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Document</name>
                            </type>
                            <name>document</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>findString</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>matchCase</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>MatchType</name>
                            </type>
                            <name>matchType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>document</name>
                            </name>
                            =
                            <name>document</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>findString</name>
                            </name>
                            =
                            <name>findString</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>startIndex</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Convert to chars for efficiency</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>matchCase</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>matchLowerCase</name>
                                        = <name>matchUpperCase</name> =
                                        <call>
                                            <name><name>findString</name>.
                                                <name>toCharArray</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>matchUpperCase</name>
                                        =
                                        <call>
                                            <name><name>findString</name>.
                                                <name>toUpperCase</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>toCharArray</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>matchLowerCase</name>
                                        =
                                        <call>
                                            <name><name>findString</name>.
                                                <name>toLowerCase</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>toCharArray</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>matchType</name>
                            </name>
                            =
                            <name>matchType</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getFindString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>findString</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isMatchCase</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>matchLowerCase</name>
                            ==
                            <name>matchUpperCase</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>MatchType</name>
                </type>
                <name>getMatchType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>matchType</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the start index for the findNext(), findPrevious() methods.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setStartIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>startIndex</name>
                            =
                            <name>newValue</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Resets this matcher and then attempts to find the next
                * subsequence of the input sequence that matches the pattern,
                * starting at the specified index.
                *
                * @param startIndex the index from which to start the search.
                * @return the index of the first occurrence of the search string,
                * starting at the specified offset, or -1 if no occurrence was found.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>findNext</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>startIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>startIndex</name>
                            </name>
                            =
                            <name>startIndex</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>findNext</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Attempts to find the next subsequence of the
                * input sequence that matches the pattern.
                * &lt;p&gt;
                * This method starts at the beginning of
                * the input sequence or, if a previous invocation
                * of the method was successful and the matcher has not
                * since been reset, at the first character not matched by
                * the previous match.
                *
                * @return the index of the first occurrence of the search string,
                * starting at the specified offset, or -1 if no occurrence was found.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>findNext</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Don't match empty strings and don't match if we are at the end of the
                        document.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>findString</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0 ||
                                <call>
                                    <name><name>document</name>.
                                        <name>getLength</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                -
                                <call>
                                    <name><name>findString</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &lt;
                                <name>startIndex</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>-1</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nextMatch</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// index of next matching character</comment>

                            <comment type="line">// Iterate through all segments of the document starting from offset
                            </comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Segment</name>
                                    </type>
                                    <name>text</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>Segment</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>text</name>.
                                            <name>setPartialReturn</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>offset</name> =
                                    <init>
                                        <expr>
                                            <name>startIndex</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nleft</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>document</name>.
                                                    <name>getLength</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            -
                                            <name>startIndex</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>nleft</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>document</name>.
                                                    <name>getText</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>offset</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>nleft</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>text</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <comment type="line">// Iterate through the characters in the current segment
                                    </comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>char</name>
                                            </type>
                                            <name>next</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>text</name>.
                                                            <name>first</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <for>for (
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>text</name>.
                                                        <name>first</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </init>
                                        <condition>
                                            <expr>
                                                <name>next</name>
                                                !=
                                                <name><name>Segment</name>.
                                                    <name>DONE</name>
                                                </name>
                                            </expr>
                                            ;
                                        </condition>
                                        <incr>
                                            <expr>
                                                <name>next</name>
                                                =
                                                <call>
                                                    <name><name>text</name>.
                                                        <name>next</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </incr>
                                        )
                                        <block>{

                                            <comment type="line">// Check if the current character matches with the
                                                next
                                            </comment>
                                            <comment type="line">// search character.</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>char</name>
                                                    </type>
                                                    <name>current</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>text</name>.
                                                                    <name>current</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>current</name>
                                                        ==
                                                        <name>
                                                            <name>matchUpperCase</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>nextMatch</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        ||
                                                        <name>current</name>
                                                        ==
                                                        <name>
                                                            <name>matchLowerCase</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>nextMatch</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr><name>nextMatch</name>++
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <comment type="line">// Did we match all search characters?
                                                        </comment>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>nextMatch</name>
                                                                    ==
                                                                    <name><name>matchLowerCase</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>int</name>
                                                                            </type>
                                                                            <name>foundIndex</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>text</name>.
                                                                                            <name>getIndex</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    -
                                                                                    <call>
                                                                                        <name><name>text</name>.
                                                                                            <name>getBeginIndex</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    + <name>offset</name> -
                                                                                    <name><name>matchLowerCase</name>.
                                                                                        <name>length</name>
                                                                                    </name>
                                                                                    + 1
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>matchType</name>
                                                                                ==
                                                                                <name><name>MatchType</name>.
                                                                                    <name>CONTAINS</name>
                                                                                </name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <return>return
                                                                                    <expr>
                                                                                        <name>foundIndex</name>
                                                                                    </expr>
                                                                                    ;
                                                                                </return>
                                                                                <comment type="line">// break; &lt;-
                                                                                    never reached
                                                                                </comment>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>matchType</name>
                                                                                        ==
                                                                                        <name><name>MatchType</name>.
                                                                                            <name>STARTS_WITH</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <if>if
                                                                                            <condition>(
                                                                                                <expr>!
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            isWordChar
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        foundIndex
                                                                                                                    </name>
                                                                                                                    - 1
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                )
                                                                                            </condition>
                                                                                            <then>
                                                                                                <block>{
                                                                                                    <return>return
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                foundIndex
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ;
                                                                                                    </return>
                                                                                                    }
                                                                                                </block>
                                                                                            </then>
                                                                                        </if>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <name>matchType</name>
                                                                                                ==
                                                                                                <name><name>
                                                                                                    MatchType</name>.
                                                                                                    <name>FULL_WORD
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <if>if
                                                                                                    <condition>(
                                                                                                        <expr>!
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    isWordChar
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                foundIndex
                                                                                                                            </name>
                                                                                                                            -
                                                                                                                            1
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                            &amp;&amp;
                                                                                                            !
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    isWordChar
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                foundIndex
                                                                                                                            </name>
                                                                                                                            +
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    matchLowerCase</name>
                                                                                                                                .
                                                                                                                                <name>
                                                                                                                                    length
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                        )
                                                                                                    </condition>
                                                                                                    <then>
                                                                                                        <block>{
                                                                                                            <return>
                                                                                                                return
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        foundIndex
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                                ;
                                                                                                            </return>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </then>
                                                                                                </if>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                    </if>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>nextMatch</name>
                                                                            = 0
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>nextMatch</name>
                                                                = 0
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </for>

                                    <comment type="line">// Move forward to the next segment</comment>
                                    <expr_stmt>
                                        <expr>
                                            <name>nleft</name>
                                            -=
                                            <name><name>text</name>.
                                                <name>count</name>
                                            </name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>offset</name>
                                            +=
                                            <name><name>text</name>.
                                                <name>count</name>
                                            </name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>
                            <return>return <expr>-1</expr>;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>BadLocationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IndexOutOfBoundsException</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Resets this matcher and then attempts to find the previous
                * subsequence of the input sequence that matches the pattern,
                * starting at the specified index.
                *
                * @param startIndex the index from which to start the search.
                * @return the index of the first occurrence of the search string,
                * starting at the specified offset, or -1 if no occurrence was found.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>findPrevious</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>startIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>startIndex</name>
                            </name>
                            =
                            <name>startIndex</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>findPrevious</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Attempts to find the previous subsequence of the
                * input sequence that matches the pattern.
                * &lt;p&gt;
                * This method starts at the beginning of
                * the input sequence or, if a previous invocation
                * of the method was successful and the matcher has not
                * since been reset, at the first character not matched by
                * the previous match.
                *
                * @return the index of the first occurrence of the search string,
                * starting at the specified offset, or -1 if no occurrence was found.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>findPrevious</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Don't match empty strings and don't match if we are at the beginning of the
                        document.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>findString</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0 ||
                                <name>startIndex</name>
                                &lt;
                                <call>
                                    <name><name>findString</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                - 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">//System.out.println("too close to start");</comment>
                                <return>return <expr>-1</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nextMatch</name> =
                                    <init>
                                        <expr>
                                            <name><name>matchLowerCase</name>.
                                                <name>length</name>
                                            </name>
                                            - 1
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// index of next matching character</comment>

                            <comment type="line">// For simplicity, we request all text of the document in a single
                            </comment>
                            <comment type="line">// segment.</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Segment</name>
                                    </type>
                                    <name>text</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>Segment</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>text</name>.
                                            <name>setPartialReturn</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>document</name>.
                                            <name>getText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>startIndex</name>
                                                    + 1
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>text</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// Iterate through the characters in the current segment</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>previous</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>text</name>.
                                                    <name>last</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">//System.out.println("previus isch "+previous);</comment>
                            <for>for (
                                <init>
                                    <expr>
                                        <call>
                                            <name><name>text</name>.
                                                <name>last</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>previous</name>
                                        !=
                                        <name><name>Segment</name>.
                                            <name>DONE</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr>
                                        <name>previous</name>
                                        =
                                        <call>
                                            <name><name>text</name>.
                                                <name>previous</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </incr>
                                )
                                <block>{

                                    <comment type="line">// Check if the current character matches with the next
                                    </comment>
                                    <comment type="line">// search character.</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>char</name>
                                            </type>
                                            <name>current</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>text</name>.
                                                            <name>current</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>current</name>
                                                ==
                                                <name>
                                                    <name>matchUpperCase</name>
                                                    <index>[
                                                        <expr>
                                                            <name>nextMatch</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ||
                                                <name>current</name>
                                                ==
                                                <name>
                                                    <name>matchLowerCase</name>
                                                    <index>[
                                                        <expr>
                                                            <name>nextMatch</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr><name>nextMatch</name>--
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <comment type="line">//System.out.println("matched "+nextMatch);
                                                </comment>
                                                <comment type="line">// Did we match all search characters?</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>nextMatch</name>
                                                            == -1
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>foundIndex</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>text</name>.
                                                                                    <name>getIndex</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            -
                                                                            <call>
                                                                                <name><name>text</name>.
                                                                                    <name>getBeginIndex</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <comment type="line">//System.out.println("found
                                                                index:"+foundIndex);
                                                            </comment>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>matchType</name>
                                                                        ==
                                                                        <name><name>MatchType</name>.
                                                                            <name>CONTAINS</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <return>return
                                                                            <expr>
                                                                                <name>foundIndex</name>
                                                                            </expr>
                                                                            ;
                                                                        </return>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>matchType</name>
                                                                                ==
                                                                                <name><name>MatchType</name>.
                                                                                    <name>STARTS_WITH</name>
                                                                                </name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>!
                                                                                            <call>
                                                                                                <name>isWordChar</name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                foundIndex
                                                                                                            </name>
                                                                                                            - 1
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <return>return
                                                                                                <expr>
                                                                                                    <name>foundIndex
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ;
                                                                                            </return>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                </if>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>matchType</name>
                                                                                        ==
                                                                                        <name><name>MatchType</name>.
                                                                                            <name>FULL_WORD</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <if>if
                                                                                            <condition>(
                                                                                                <expr>!
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            isWordChar
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        foundIndex
                                                                                                                    </name>
                                                                                                                    - 1
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                    &amp;&amp;
                                                                                                    !
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            isWordChar
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        foundIndex
                                                                                                                    </name>
                                                                                                                    +
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            matchLowerCase</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            length
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                )
                                                                                            </condition>
                                                                                            <then>
                                                                                                <block>{
                                                                                                    <return>return
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                foundIndex
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ;
                                                                                                    </return>
                                                                                                    }
                                                                                                </block>
                                                                                            </then>
                                                                                        </if>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>nextMatch</name>
                                                                    =
                                                                    <name><name>matchLowerCase</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                    - 1
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>nextMatch</name>
                                                        =
                                                        <name><name>matchLowerCase</name>.
                                                            <name>length</name>
                                                        </name>
                                                        - 1
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    }
                                </block>
                            </for>

                            <return>return <expr>-1</expr>;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>BadLocationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IndexOutOfBoundsException</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Resets the startIndex of the matcher to 0.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>startIndex</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>isWordChar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>document</name>.
                                                    <name>getText</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>index</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>1</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>charAt</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Character</name>.
                                            <name>isLetterOrDigit</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ch</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>BadLocationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>
            }
        </block>
    </class>

</unit>
