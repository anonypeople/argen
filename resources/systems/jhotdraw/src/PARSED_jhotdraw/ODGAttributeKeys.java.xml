<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\samples\odg\ODGAttributeKeys.java">
    <comment type="block">/*
        * @(#)ODGAttributeKeys.java 1.0 July 28, 2007
        *
        * Copyright (c) 2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.
            <name>odg</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        .*;
    </import>
    <import>import static
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.<name>odg</name>.
            <name>ODGConstants</name>
        </name>
        .*;
    </import>

    <comment type="javadoc">/**
        * ODGAttributeKeys.
        * &lt;p&gt;
        * The descriptions of the attributes have been taken from the
        * Open Document Specification version 1.1.
        * &lt;a href="http://docs.oasis-open.org/office/v1.1/OS/OpenDocument-v1.1.pdf"&gt;
        * http://docs.oasis-open.org/office/v1.1/OS/OpenDocument-v1.1.pdf&lt;/a&gt;
        *
        * @author Werner Randelshofer
        * @version 1.0 July 28, 2007 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>ODGAttributeKeys</name>
        <super>
            <extends>extends
                <name>AttributeKeys</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/** Prevent instance creation */</comment>
            <constructor>
                <specifier>private</specifier>
                <name>ODGAttributeKeys</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * The attribute draw:name assigns a name to the drawing shape.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>
                            <name>AttributeKey</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>String</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>NAME</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>AttributeKey</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>String</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"name"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Specifies the overall opacity of a ODG figure.
                * This is a value between 0 and 1 whereas 0 is translucent and 1 is fully opaque.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>
                            <name>AttributeKey</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>Double</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>OPACITY</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>AttributeKey</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Double</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"opacity"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>1d</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Specifies the fill style of a ODG figure.
                *
                * The attribute draw:fill specifies the fill style for a graphic object. Graphic objects that are not
                * closed, such as a path without a closepath at the end, will not be filled. The fill operation does
                * not automatically close all open subpaths by connecting the last point of the subpath with the first
                * point of the subpath before painting the fill. The attribute has the following values:
                * â¢ none: the drawing object is not filled.
                * â¢ solid: the drawing object is filled with color specified by the draw:fill-color attribute.
                * â¢ bitmap: the drawing object is filled with the bitmap specified by the draw:fill-image-
                * name attribute.
                * â¢ gradient: the drawing object is filled with the gradient specified by the draw:fill-
                * gradient-name attribute.
                * â¢ hatch: the drawing object is filled with the hatch specified by the draw:fill-hatch-name
                * attribute.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>
                            <name>AttributeKey</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>FillStyle</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>FILL_STYLE</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>AttributeKey</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>FillStyle</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"fill"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>FillStyle</name>.
                                                <name>SOLID</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Specifies the fill gradient of a ODG figure.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>
                            <name>AttributeKey</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>Gradient</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>FILL_GRADIENT</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>AttributeKey</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Gradient</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"fillGradient"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Specifies the fill opacity of a ODG figure.
                * This is a value between 0 and 1 whereas 0 is translucent and 1 is fully opaque.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>
                            <name>AttributeKey</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>Double</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>FILL_OPACITY</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>AttributeKey</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Double</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"fillOpacity"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>1d</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Specifies the stroke style of a ODG figure.
                *
                * The attribute draw:stroke specifies the style of the stroke on the current object. The value
                * none means that no stroke is drawn, and the value solid means that a solid stroke is drawn. If
                * the value is dash, the stroke referenced by the draw:stroke-dash property is drawn.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>
                            <name>AttributeKey</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>StrokeStyle</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>STROKE_STYLE</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>AttributeKey</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>StrokeStyle</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"stroke"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>StrokeStyle</name>.
                                                <name>SOLID</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Specifies the stroke gradient of a ODG figure.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>
                            <name>AttributeKey</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>Gradient</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>STROKE_GRADIENT</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>AttributeKey</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Gradient</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"strokeGradient"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Specifies the stroke opacity of a ODG figure.
                * This is a value between 0 and 1 whereas 0 is translucent and 1 is fully opaque.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>
                            <name>AttributeKey</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>Double</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>STROKE_OPACITY</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>
                                    <name>AttributeKey</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Double</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"strokeOpacity"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>1d</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Gets the fill paint for the specified figure based on the attributes
                * FILL_GRADIENT, FILL_OPACITY, FILL_PAINT and the bounds of the figure.
                * Returns null if the figure is not filled.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Paint</name>
                </type>
                <name>getFillPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>f</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>opacity</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>FILL_OPACITY</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>f</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>FILL_GRADIENT</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>f</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>FILL_GRADIENT</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>f</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>getPaint</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>f</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>opacity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Color</name>
                            </type>
                            <name>color</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>FILL_COLOR</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>f</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>color</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>opacity</name>
                                            != 1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>color</name>
                                                    = new
                                                    <call>
                                                        <name>Color</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(
                                                                    <call>
                                                                        <name><name>color</name>.
                                                                            <name>getRGB</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    &amp; 0xffffff) |
                                                                    <call>(<name>int</name>)
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>opacity</name>
                                                                                    * 255
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    &lt;&lt; 24
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>color</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Gets the stroke paint for the specified figure based on the attributes
                * STROKE_GRADIENT, STROKE_OPACITY, STROKE_PAINT and the bounds of the figure.
                * Returns null if the figure is not filled.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Paint</name>
                </type>
                <name>getStrokePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>f</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>opacity</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>STROKE_OPACITY</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>f</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>STROKE_GRADIENT</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>f</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>STROKE_GRADIENT</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>f</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>getPaint</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>f</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>opacity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Color</name>
                            </type>
                            <name>color</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>STROKE_COLOR</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>f</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>color</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>opacity</name>
                                            != 1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>color</name>
                                                    = new
                                                    <call>
                                                        <name>Color</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(
                                                                    <call>
                                                                        <name><name>color</name>.
                                                                            <name>getRGB</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    &amp; 0xffffff) |
                                                                    <call>(<name>int</name>)
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>opacity</name>
                                                                                    * 255
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    &lt;&lt; 24
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>color</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Stroke</name>
                </type>
                <name>getStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>f</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>strokeWidth</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>STROKE_WIDTH</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>f</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>strokeWidth</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>strokeWidth</name>
                                        = 1
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>BasicStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>float</name>)
                                            <name>strokeWidth</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Sets ODG default values. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>setDefaults</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>f</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// Fill properties</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>FILL_COLOR</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Color</name>.
                                                <name>black</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>WINDING_RULE</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>WindingRule</name>.
                                                <name>NON_ZERO</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Stroke properties</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>STROKE_COLOR</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>STROKE_WIDTH</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>1d</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>STROKE_CAP</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>BasicStroke</name>.
                                                <name>CAP_BUTT</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>STROKE_JOIN</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>BasicStroke</name>.
                                                <name>JOIN_MITER</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>STROKE_MITER_LIMIT</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>4d</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>IS_STROKE_MITER_LIMIT_FACTOR</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>STROKE_DASHES</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>STROKE_DASH_PHASE</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0d</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>IS_STROKE_DASH_FACTOR</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
