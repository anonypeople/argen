<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\samples\odg\ODGConstants.java">
    <comment type="block">/*
        * @(#)ODGConstants.java 1.0 April 11, 2007
        *
        * Copyright (c) 2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.
            <name>odg</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>

    <comment type="javadoc">/**
        * ODGConstants.
        *
        * @author Werner Randelshofer
        * @version 1.0 April 11, 2007 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>ODGConstants</name>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>OFFICE_NAMESPACE</name> =
                    <init>
                        <expr>"urn:oasis:names:tc:opendocument:xmlns:office:1.0"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>DRAWING_NAMESPACE</name> =
                    <init>
                        <expr>"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>SVG_NAMESPACE</name> =
                    <init>
                        <expr>"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>STYLE_NAMESPACE</name> =
                    <init>
                        <expr>"urn:oasis:names:tc:opendocument:xmlns:style:1.0"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>TEXT_NAMESPACE</name> =
                    <init>
                        <expr>"urn:oasis:names:tc:opendocument:xmlns:text:1.0"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <enum>
                <specifier>public</specifier>
                <specifier>static</specifier> enum <name>StrokeStyle</name>
                <block>{
                    <expr>
                        <name>NONE</name>
                    </expr>
                    ,
                    <expr>
                        <name>DASH</name>
                    </expr>
                    ,
                    <expr>
                        <name>SOLID</name>
                    </expr>
                    }
                </block>

                public final static
                <name>
                    <name>Map</name>
                    <argument_list>&lt;
                        <argument>
                            <name>String</name>
                        </argument>
                        ,
                        <argument>
                            <name>StrokeStyle</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <name>STROKE_STYLES</name>;
            </enum>
            static
            <block>{
                <decl_stmt>
                    <decl>
                        <type>
                            <name>
                                <name>HashMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>String</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>StrokeStyle</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>m</name> =
                        <init>
                            <expr>new
                                <call>
                                    <name>
                                        <name>HashMap</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>String</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>StrokeStyle</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>m</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"none"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>StrokeStyle</name>.
                                            <name>NONE</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>m</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"dash"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>StrokeStyle</name>.
                                            <name>DASH</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>m</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"solid"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>StrokeStyle</name>.
                                            <name>SOLID</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>STROKE_STYLES</name>
                        =
                        <call>
                            <name><name>Collections</name>.
                                <name>unmodifiableMap</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>m</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                }
            </block>

            <enum>
                <specifier>public</specifier>
                <specifier>static</specifier> enum <name>FillStyle</name>
                <block>{
                    <expr>
                        <name>NONE</name>
                    </expr>
                    ,
                    <expr>
                        <name>SOLID</name>
                    </expr>
                    ,
                    <expr>
                        <name>BITMAP</name>
                    </expr>
                    ,
                    <expr>
                        <name>GRADIENT</name>
                    </expr>
                    ,
                    <expr>
                        <name>HATCH</name>
                    </expr>
                    }
                </block>

                public final static
                <name>
                    <name>Map</name>
                    <argument_list>&lt;
                        <argument>
                            <name>String</name>
                        </argument>
                        ,
                        <argument>
                            <name>FillStyle</name>
                        </argument>
                        &gt;
                    </argument_list>
                </name>
                <name>FILL_STYLES</name>;
            </enum>
            static
            <block>{
                <decl_stmt>
                    <decl>
                        <type>
                            <name>
                                <name>HashMap</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>String</name>
                                    </argument>
                                    ,
                                    <argument>
                                        <name>FillStyle</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>m</name> =
                        <init>
                            <expr>new
                                <call>
                                    <name>
                                        <name>HashMap</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>String</name>
                                            </argument>
                                            ,
                                            <argument>
                                                <name>FillStyle</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>m</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"none"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>FillStyle</name>.
                                            <name>NONE</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>m</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"solid"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>FillStyle</name>.
                                            <name>SOLID</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>m</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"bitmap"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>FillStyle</name>.
                                            <name>BITMAP</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>m</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"gradient"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>FillStyle</name>.
                                            <name>GRADIENT</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>m</name>.
                                <name>put</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>"hatch"</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>FillStyle</name>.
                                            <name>HATCH</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>FILL_STYLES</name>
                        =
                        <call>
                            <name><name>Collections</name>.
                                <name>unmodifiableMap</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>m</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                }
            </block>


            <comment type="javadoc">/** Prevent instance creation. */</comment>
            <constructor>
                <specifier>private</specifier>
                <name>ODGConstants</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            }
        </block>
    </class>
</unit>
