<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\samples\odg\io\ODGInputFormat.java">
    <comment type="block">/*
        * @(#)ODGInputFormat.java 1.1 2007-12-16
        *
        * Copyright (c) 2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.<name>odg</name>.
            <name>io</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>datatransfer</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>io</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>URL</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>zip</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.
            <name>swing</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>filechooser</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>net</name>.<name>n3</name>.
            <name>nanoxml</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.<name>geom</name>.
            <name>BezierPath</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>io</name>
        </name>
        .*;
    </import>
    <import>import static
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.<name>odg</name>.
            <name>ODGConstants</name>
        </name>
        .*;
    </import>
    <import>import static
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.<name>odg</name>.
            <name>ODGAttributeKeys</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.<name>odg</name>.
            <name>figures</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.<name>odg</name>.
            <name>geom</name>
        </name>
        .*;
    </import>

    <comment type="javadoc">/**
        * ODGInputFormat.
        * This format is aimed to comply to the Open Document Version 1.1 Drawing
        * format.
        * http://docs.oasis-open.org/office/v1.1/OS/OpenDocument-v1.1.pdf
        *
        * @author Werner Randelshofer
        * @version 1.1 2007-12-16 Adapted to changes in InputFormat.
        * &lt;br&gt;1.0 April 11, 2007 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>ODGInputFormat</name>
        <super>
            <implements>implements
                <name>InputFormat</name>
            </implements>
        </super>
        <block>{
            <comment type="javadoc">/**
                * Set this to true, to get debug output on System.out.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Holds the figures that are currently being read.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>
                            <name>LinkedList</name>
                            <argument_list>&lt;
                                <argument>
                                    <name>Figure</name>
                                </argument>
                                &gt;
                            </argument_list>
                        </name>
                    </type>
                    <name>figures</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Holds the document that is currently being read.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>IXMLElement</name>
                    </type>
                    <name>document</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ODGStylesReader</name>
                    </type>
                    <name>styles</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Creates a new instance. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>ODGInputFormat</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>javax</name>.<name>swing</name>.<name>filechooser</name>.
                        <name>FileFilter</name>
                    </name>
                </type>
                <name>getFileFilter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ExtensionFileFilter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Open Document Drawing (ODG)"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"odg"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JComponent</name>
                </type>
                <name>getInputFormatAccessory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>read</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>file</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Drawing</name>
                            </type>
                            <name>drawing</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BufferedInputStream</name>
                            </type>
                            <name>in</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>in</name>
                                    = new
                                    <call>
                                        <name>BufferedInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>FileInputStream</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>file</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>in</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>drawing</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <finally>finally
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>in</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>in</name>.
                                                            <name>close</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </finally>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isDataFlavorSupported</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DataFlavor</name>
                            </type>
                            <name>flavor</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>flavor</name>.
                                    <name>getPrimaryType</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>equals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name><name>flavor</name>.
                                    <name>getSubType</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>equals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"vnd.oasis.opendocument.graphics"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>read</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Transferable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Drawing</name>
                            </type>
                            <name>drawing</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>UnsupportedFlavorException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>in</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>in</name>
                                    = (<name>InputStream</name>)
                                    <call>
                                        <name><name>t</name>.
                                            <name>getTransferData</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>DataFlavor</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"application/vnd.oasis.opendocument.graphics"
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"Image SVG"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>in</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>drawing</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <finally>finally
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>in</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>in</name>.
                                                            <name>close</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </finally>
                    </try>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Reads all bytes from the InputStreams until EOF is reached.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>byte</name>
                    <index>[]</index>
                </type>
                <name>readAllBytes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>in</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ByteArrayOutputStream</name>
                            </type>
                            <name>tmp</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ByteArrayOutputStream</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>buf</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[<expr>512</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>len</name>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>-1 != (<name>len</name> =
                                <call>
                                    <name><name>in</name>.
                                        <name>read</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>buf</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                )
                            </expr>
                            ;
                        </condition>
                        <incr/>)
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>tmp</name>.
                                            <name>write</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>buf</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>len</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tmp</name>.
                                    <name>close</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>tmp</name>.
                                    <name>toByteArray</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>read</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>in</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Drawing</name>
                            </type>
                            <name>drawing</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// Read the file into a byte array.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>tmp</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>readAllBytes</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>in</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Input stream of the content.xml file</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>contentIn</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Input stream of the styles.xml file</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>stylesIn</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Try to read "tmp" as a ZIP-File.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isZipped</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ZipInputStream</name>
                                    </type>
                                    <name>zin</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>ZipInputStream</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>new
                                                            <call>
                                                                <name>ByteArrayInputStream</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>tmp</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>ZipEntry</name>
                                        </type>
                                        <name>entry</name>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>null</name>
                                        != (<name>entry</name> =
                                        <call>
                                            <name><name>zin</name>.
                                                <name>getNextEntry</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        )
                                    </expr>
                                    ;
                                </condition>
                                <incr/>)
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>entry</name>.
                                                        <name>getName</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>equals</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"content.xml"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>contentIn</name>
                                                        = new
                                                        <call>
                                                            <name>ByteArrayInputStream</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>readAllBytes</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>zin</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>entry</name>.
                                                                <name>getName</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>equals</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"styles.xml"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>stylesIn</name>
                                                                = new
                                                                <call>
                                                                    <name>ByteArrayInputStream</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>readAllBytes</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>zin</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                    }
                                </block>
                            </for>

                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>ZipException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>isZipped</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <if>if
                        <condition>(
                            <expr>
                                <name>contentIn</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>contentIn</name>
                                        = new
                                        <call>
                                            <name>ByteArrayInputStream</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>tmp</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>stylesIn</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>stylesIn</name>
                                        = new
                                        <call>
                                            <name>ByteArrayInputStream</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>tmp</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>styles</name>
                            = new
                            <call>
                                <name>ODGStylesReader</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>styles</name>.
                                    <name>read</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stylesIn</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>readFiguresFromDocumentContent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>contentIn</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>drawing</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Reads figures from the content.xml file of an ODG open document drawing
                * document.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>readFiguresFromDocumentContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>in</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Drawing</name>
                            </type>
                            <name>drawing</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>figures</name>
                            </name>
                            = new
                            <call>
                                <name>
                                    <name>LinkedList</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Figure</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IXMLParser</name>
                            </type>
                            <name>parser</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>parser</name>
                                    =
                                    <call>
                                        <name><name>XMLParserFactory</name>.
                                            <name>createDefaultXMLParser</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>InternalError</name>
                                        </type>
                                        <name>e</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>InternalError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Unable to instantiate NanoXML Parser"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>e</name>.
                                                <name>initCause</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <throw>throw
                                    <expr>
                                        <name>e</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IXMLReader</name>
                            </type>
                            <name>reader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StdXMLReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>in</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>parser</name>.
                                    <name>setReader</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>reader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>document</name>
                                    = (<name>IXMLElement</name>)
                                    <call>
                                        <name><name>parser</name>.
                                            <name>parse</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>IOException</name>
                                        </type>
                                        <name>e</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>IOException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>ex</name>.
                                                                        <name>getMessage</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>e</name>.
                                                <name>initCause</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <throw>throw
                                    <expr>
                                        <name>e</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    <if>if
                        <condition>(
                            <expr>
                                <name>styles</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>styles</name>
                                        = new
                                        <call>
                                            <name>ODGStylesReader</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>styles</name>.
                                    <name>read</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>document</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>


                    <comment type="line">// Search for the first 'office:drawing' element in the XML document</comment>
                    <comment type="line">// in preorder sequence</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>drawingElem</name> =
                            <init>
                                <expr>
                                    <name>document</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Stack</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Iterator</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>stack</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>
                                            <name>Stack</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>Iterator</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>LinkedList</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>IXMLElement</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>ll</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>
                                            <name>LinkedList</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>IXMLElement</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>ll</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>document</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>stack</name>.
                                    <name>push</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ll</name>.
                                                    <name>iterator</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <while>while
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>stack</name>.
                                        <name>empty</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp;
                                <call>
                                    <name><name>stack</name>.
                                        <name>peek</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>hasNext</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>IXMLElement</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>iter</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>stack</name>.
                                                    <name>peek</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>IXMLElement</name>
                                    </type>
                                    <name>node</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>iter</name>.
                                                    <name>next</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>IXMLElement</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>children</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>node</name>.
                                                    <name>getChildren</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>iterator</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>iter</name>.
                                                <name>hasNext</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>stack</name>.
                                                        <name>pop</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>children</name>.
                                                <name>hasNext</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>stack</name>.
                                                        <name>push</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>children</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>node</name>.
                                                <name>getName</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>node</name>.
                                                <name>getName</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"drawing"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp;
                                        (
                                        <call>
                                            <name><name>node</name>.
                                                <name>getNamespace</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        == <name>null</name> ||
                                        <call>
                                            <name><name>node</name>.
                                                <name>getNamespace</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>OFFICE_NAMESPACE</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        )
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>drawingElem</name>
                                                =
                                                <name>node</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>drawingElem</name>.
                                        <name>getName</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name> ||
                                !
                                <call>
                                    <name><name>drawingElem</name>.
                                        <name>getName</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>equals</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"drawing"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ||
                                (
                                <call>
                                    <name><name>drawingElem</name>.
                                        <name>getNamespace</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                != <name>null</name> &amp;&amp;
                                !
                                <call>
                                    <name><name>drawingElem</name>.
                                        <name>getNamespace</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>equals</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>OFFICE_NAMESPACE</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                )
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IOException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"'office:drawing' element expected: "+
                                                        <call>
                                                            <name><name>drawingElem</name>.
                                                                <name>getName</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>readDrawingElement</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>drawingElem</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>drawing</name>.
                                    <name>addAll</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>figures</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Reads an ODG "office:drawing" element.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>readDrawingElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="block">/*
                        2.3.2Drawing Documents
                        The content of drawing document consists of a sequence of draw pages.
                        &lt;define name="office-body-content" combine="choice"&gt;
                        &lt;element name="office:drawing"&gt;
                        &lt;ref name="office-drawing-attlist"/&gt;
                        &lt;ref name="office-drawing-content-prelude"/&gt;
                        &lt;ref name="office-drawing-content-main"/&gt;
                        &lt;ref name="office-drawing-content-epilogue"/&gt;
                        &lt;/element&gt;
                        &lt;/define&gt;
                        &lt;define name="office-drawing-attlist"&gt;
                        &lt;empty/&gt;
                        &lt;/define&gt;

                        Drawing Document Content Model
                        The drawing document prelude may contain text declarations only. To allow office applications to
                        implement functionality that usually is available in spreadsheets for drawing documents, it may
                        also contain elements that implement enhanced table features. See also section 2.3.4.
                        &lt;define name="office-drawing-content-prelude"&gt;
                        &lt;ref name="text-decls"/&gt;
                        &lt;ref name="table-decls"/&gt;
                        &lt;/define&gt;

                        The main document content contains a sequence of draw pages.
                        &lt;define name="office-drawing-content-main"&gt;
                        &lt;zeroOrMore&gt;
                        &lt;ref name="draw-page"/&gt;
                        &lt;/zeroOrMore&gt;
                        &lt;/define&gt;

                        There are no drawing documents specific epilogue elements, but the epilogue may contain
                        elements that implement enhanced table features. See also section 2.3.4.
                        &lt;define name="office-drawing-content-epilogue"&gt;
                        &lt;ref name="table-functions"/&gt;
                        &lt;/define&gt;
                        */
                    </comment>

                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>IXMLElement</name>
                                </type>
                                <name>node</name> :
                                <range>
                                    <expr>
                                        <call>
                                            <name><name>elem</name>.
                                                <name>getChildren</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>node</name>
                                        <name>instanceof</name>
                                        <name>IXMLElement</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>IXMLElement</name>
                                                </type>
                                                <name>child</name> =
                                                <init>
                                                    <expr>(<name>IXMLElement</name>)
                                                        <name>node</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>child</name>.
                                                            <name>getNamespace</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    == <name>null</name> ||
                                                    <call>
                                                        <name><name>child</name>.
                                                            <name>getNamespace</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>equals</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>DRAWING_NAMESPACE</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>name</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>child</name>.
                                                                            <name>getName</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>name</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"page"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>readPageElement</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>child</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Reads an ODG "draw:page" element.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>readPageElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="block">/* 9.1.4Drawing Pages
                        *
                        The element &lt;draw:page&gt; is a container for content in a drawing or presentation document.
                        Drawing pages are used for the following:
                        â¢ Forms (see section 11.1)
                        â¢ Drawings (see section 9.2)
                        â¢ Frames (see section 9.3)
                        â¢ Presentation Animations (see section 9.7)
                        â¢ Presentation Notes (see section 9.1.5)
                        *
                        A master page must be assigned to each drawing page.
                        *
                        &lt;define name="draw-page"&gt;
                        &lt;element name="draw:page"&gt;
                        &lt;ref name="common-presentation-header-footer-attlist"/&gt;
                        &lt;ref name="draw-page-attlist"/&gt;
                        &lt;optional&gt;
                        &lt;ref name="office-forms"/&gt;
                        &lt;/optional&gt;
                        &lt;zeroOrMore&gt;
                        &lt;ref name="shape"/&gt;
                        &lt;/zeroOrMore&gt;
                        &lt;optional&gt;
                        &lt;choice&gt;
                        &lt;ref name="presentation-animations"/&gt;
                        &lt;ref name="animation-element"/&gt;
                        &lt;/choice&gt;
                        &lt;/optional&gt;
                        &lt;optional&gt;
                        &lt;ref name="presentation-notes"/&gt;
                        &lt;/optional&gt;
                        &lt;/element&gt;
                        &lt;/define&gt;
                        *
                        The attributes that may be associated with the &lt;draw:page&gt; element are:
                        â¢ Page name
                        â¢ Page style
                        â¢ Master page
                        â¢ Presentation page layout
                        â¢ Header declaration
                        â¢ Footer declaration
                        â¢ Date and time declaration
                        â¢ ID
                        *
                        The elements that my be included in the &lt;draw:page&gt; element are:
                        â¢ Forms
                        â¢ Shapes
                        â¢ Animations
                        â¢ Presentation notes
                        */
                    </comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>IXMLElement</name>
                                </type>
                                <name>node</name> :
                                <range>
                                    <expr>
                                        <call>
                                            <name><name>elem</name>.
                                                <name>getChildren</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>node</name>
                                        <name>instanceof</name>
                                        <name>IXMLElement</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>IXMLElement</name>
                                                </type>
                                                <name>child</name> =
                                                <init>
                                                    <expr>(<name>IXMLElement</name>)
                                                        <name>node</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>ODGFigure</name>
                                                </type>
                                                <name>figure</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name>readElement</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>child</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>figure</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>figures</name>.
                                                                    <name>add</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>figure</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Reads an ODG element.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="block">/*
                        Drawing Shapes
                        This section describes drawing shapes that might occur within all kind of applications.
                        &lt;define name="shape"&gt;
                        &lt;choice&gt;
                        &lt;ref name="draw-rect"/&gt;
                        &lt;ref name="draw-line"/&gt;
                        &lt;ref name="draw-polyline"/&gt;
                        &lt;ref name="draw-polygon"/&gt;
                        &lt;ref name="draw-regular-polygon"/&gt;
                        &lt;ref name="draw-path"/&gt;
                        &lt;ref name="draw-circle"/&gt;
                        &lt;ref name="draw-ellipse"/&gt;
                        &lt;ref name="draw-g"/&gt;
                        &lt;ref name="draw-page-thumbnail"/&gt;
                        &lt;ref name="draw-frame"/&gt;
                        &lt;ref name="draw-measure"/&gt;
                        &lt;ref name="draw-caption"/&gt;
                        &lt;ref name="draw-connector"/&gt;
                        &lt;ref name="draw-control"/&gt;
                        &lt;ref name="dr3d-scene"/&gt;
                        &lt;ref name="draw-custom-shape"/&gt;
                        &lt;/choice&gt;
                        &lt;/define&gt;
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGFigure</name>
                            </type>
                            <name>f</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>elem</name>.
                                        <name>getNamespace</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name> ||
                                <call>
                                    <name><name>elem</name>.
                                        <name>getNamespace</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>equals</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>DRAWING_NAMESPACE</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>name</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>elem</name>.
                                                        <name>getName</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>name</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"caption"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>f</name>
                                                    =
                                                    <call>
                                                        <name>readCaptionElement</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>elem</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>name</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"circle"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>f</name>
                                                            =
                                                            <call>
                                                                <name>readCircleElement</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>elem</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>name</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"connector"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>f</name>
                                                                    =
                                                                    <call>
                                                                        <name>readCircleElement</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>elem</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>name</name>.
                                                                            <name>equals</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"custom-shape"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>f</name>
                                                                            =
                                                                            <call>
                                                                                <name>readCustomShapeElement</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>elem</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>name</name>.
                                                                                    <name>equals</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"ellipse"</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>f</name>
                                                                                    =
                                                                                    <call>
                                                                                        <name>readEllipseElement</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>elem</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>name</name>.
                                                                                            <name>equals</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>"frame"</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>f</name>
                                                                                            =
                                                                                            <call>
                                                                                                <name>readFrameElement
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>elem
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                            <else>else
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>name</name>.
                                                                                                    <name>equals</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>"g"</expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <name>f</name>
                                                                                                    =
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            readGElement
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        elem
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                    <else>else
                                                                                        <if>if
                                                                                            <condition>(
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            name</name>.
                                                                                                            <name>
                                                                                                                equals
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    "line"
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                )
                                                                                            </condition>
                                                                                            <then>
                                                                                                <block>{
                                                                                                    <expr_stmt>
                                                                                                        <expr>
                                                                                                            <name>f
                                                                                                            </name>
                                                                                                            =
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    readLineElement
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                elem
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                        ;
                                                                                                    </expr_stmt>
                                                                                                    }
                                                                                                </block>
                                                                                            </then>
                                                                                            <else>else
                                                                                                <if>if
                                                                                                    <condition>(
                                                                                                        <expr>
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        name</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        equals
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            "measure"
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                        )
                                                                                                    </condition>
                                                                                                    <then>
                                                                                                        <block>{
                                                                                                            <expr_stmt>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        f
                                                                                                                    </name>
                                                                                                                    =
                                                                                                                    <call>
                                                                                                                        <name>
                                                                                                                            readMeasureElement
                                                                                                                        </name>
                                                                                                                        <argument_list>
                                                                                                                            (
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    <name>
                                                                                                                                        elem
                                                                                                                                    </name>
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            )
                                                                                                                        </argument_list>
                                                                                                                    </call>
                                                                                                                </expr>
                                                                                                                ;
                                                                                                            </expr_stmt>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </then>
                                                                                                    <else>else
                                                                                                        <if>if
                                                                                                            <condition>(
                                                                                                                <expr>
                                                                                                                    <call>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                name</name>
                                                                                                                            .
                                                                                                                            <name>
                                                                                                                                equals
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                        <argument_list>
                                                                                                                            (
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    "path"
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            )
                                                                                                                        </argument_list>
                                                                                                                    </call>
                                                                                                                </expr>
                                                                                                                )
                                                                                                            </condition>
                                                                                                            <then>
                                                                                                                <block>{
                                                                                                                    <expr_stmt>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                f
                                                                                                                            </name>
                                                                                                                            =
                                                                                                                            <call>
                                                                                                                                <name>
                                                                                                                                    readPathElement
                                                                                                                                </name>
                                                                                                                                <argument_list>
                                                                                                                                    (
                                                                                                                                    <argument>
                                                                                                                                        <expr>
                                                                                                                                            <name>
                                                                                                                                                elem
                                                                                                                                            </name>
                                                                                                                                        </expr>
                                                                                                                                    </argument>
                                                                                                                                    )
                                                                                                                                </argument_list>
                                                                                                                            </call>
                                                                                                                        </expr>
                                                                                                                        ;
                                                                                                                    </expr_stmt>
                                                                                                                    }
                                                                                                                </block>
                                                                                                            </then>
                                                                                                            <else>else
                                                                                                                <if>if
                                                                                                                    <condition>
                                                                                                                        (
                                                                                                                        <expr>
                                                                                                                            <call>
                                                                                                                                <name>
                                                                                                                                    <name>
                                                                                                                                        name</name>
                                                                                                                                    .
                                                                                                                                    <name>
                                                                                                                                        equals
                                                                                                                                    </name>
                                                                                                                                </name>
                                                                                                                                <argument_list>
                                                                                                                                    (
                                                                                                                                    <argument>
                                                                                                                                        <expr>
                                                                                                                                            "polygon"
                                                                                                                                        </expr>
                                                                                                                                    </argument>
                                                                                                                                    )
                                                                                                                                </argument_list>
                                                                                                                            </call>
                                                                                                                        </expr>
                                                                                                                        )
                                                                                                                    </condition>
                                                                                                                    <then>
                                                                                                                        <block>
                                                                                                                            {
                                                                                                                            <expr_stmt>
                                                                                                                                <expr>
                                                                                                                                    <name>
                                                                                                                                        f
                                                                                                                                    </name>
                                                                                                                                    =
                                                                                                                                    <call>
                                                                                                                                        <name>
                                                                                                                                            readPolygonElement
                                                                                                                                        </name>
                                                                                                                                        <argument_list>
                                                                                                                                            (
                                                                                                                                            <argument>
                                                                                                                                                <expr>
                                                                                                                                                    <name>
                                                                                                                                                        elem
                                                                                                                                                    </name>
                                                                                                                                                </expr>
                                                                                                                                            </argument>
                                                                                                                                            )
                                                                                                                                        </argument_list>
                                                                                                                                    </call>
                                                                                                                                </expr>
                                                                                                                                ;
                                                                                                                            </expr_stmt>
                                                                                                                            }
                                                                                                                        </block>
                                                                                                                    </then>
                                                                                                                    <else>
                                                                                                                        else
                                                                                                                        <if>
                                                                                                                            if
                                                                                                                            <condition>
                                                                                                                                (
                                                                                                                                <expr>
                                                                                                                                    <call>
                                                                                                                                        <name>
                                                                                                                                            <name>
                                                                                                                                                name</name>
                                                                                                                                            .
                                                                                                                                            <name>
                                                                                                                                                equals
                                                                                                                                            </name>
                                                                                                                                        </name>
                                                                                                                                        <argument_list>
                                                                                                                                            (
                                                                                                                                            <argument>
                                                                                                                                                <expr>
                                                                                                                                                    "polyline"
                                                                                                                                                </expr>
                                                                                                                                            </argument>
                                                                                                                                            )
                                                                                                                                        </argument_list>
                                                                                                                                    </call>
                                                                                                                                </expr>
                                                                                                                                )
                                                                                                                            </condition>
                                                                                                                            <then>
                                                                                                                                <block>
                                                                                                                                    {
                                                                                                                                    <expr_stmt>
                                                                                                                                        <expr>
                                                                                                                                            <name>
                                                                                                                                                f
                                                                                                                                            </name>
                                                                                                                                            =
                                                                                                                                            <call>
                                                                                                                                                <name>
                                                                                                                                                    readPolylineElement
                                                                                                                                                </name>
                                                                                                                                                <argument_list>
                                                                                                                                                    (
                                                                                                                                                    <argument>
                                                                                                                                                        <expr>
                                                                                                                                                            <name>
                                                                                                                                                                elem
                                                                                                                                                            </name>
                                                                                                                                                        </expr>
                                                                                                                                                    </argument>
                                                                                                                                                    )
                                                                                                                                                </argument_list>
                                                                                                                                            </call>
                                                                                                                                        </expr>
                                                                                                                                        ;
                                                                                                                                    </expr_stmt>
                                                                                                                                    }
                                                                                                                                </block>
                                                                                                                            </then>
                                                                                                                            <else>
                                                                                                                                else
                                                                                                                                <if>
                                                                                                                                    if
                                                                                                                                    <condition>
                                                                                                                                        (
                                                                                                                                        <expr>
                                                                                                                                            <call>
                                                                                                                                                <name>
                                                                                                                                                    <name>
                                                                                                                                                        name</name>
                                                                                                                                                    .
                                                                                                                                                    <name>
                                                                                                                                                        equals
                                                                                                                                                    </name>
                                                                                                                                                </name>
                                                                                                                                                <argument_list>
                                                                                                                                                    (
                                                                                                                                                    <argument>
                                                                                                                                                        <expr>
                                                                                                                                                            "rect"
                                                                                                                                                        </expr>
                                                                                                                                                    </argument>
                                                                                                                                                    )
                                                                                                                                                </argument_list>
                                                                                                                                            </call>
                                                                                                                                        </expr>
                                                                                                                                        )
                                                                                                                                    </condition>
                                                                                                                                    <then>
                                                                                                                                        <block>
                                                                                                                                            {
                                                                                                                                            <expr_stmt>
                                                                                                                                                <expr>
                                                                                                                                                    <name>
                                                                                                                                                        f
                                                                                                                                                    </name>
                                                                                                                                                    =
                                                                                                                                                    <call>
                                                                                                                                                        <name>
                                                                                                                                                            readRectElement
                                                                                                                                                        </name>
                                                                                                                                                        <argument_list>
                                                                                                                                                            (
                                                                                                                                                            <argument>
                                                                                                                                                                <expr>
                                                                                                                                                                    <name>
                                                                                                                                                                        elem
                                                                                                                                                                    </name>
                                                                                                                                                                </expr>
                                                                                                                                                            </argument>
                                                                                                                                                            )
                                                                                                                                                        </argument_list>
                                                                                                                                                    </call>
                                                                                                                                                </expr>
                                                                                                                                                ;
                                                                                                                                            </expr_stmt>
                                                                                                                                            }
                                                                                                                                        </block>
                                                                                                                                    </then>
                                                                                                                                    <else>
                                                                                                                                        else
                                                                                                                                        <if>
                                                                                                                                            if
                                                                                                                                            <condition>
                                                                                                                                                (
                                                                                                                                                <expr>
                                                                                                                                                    <call>
                                                                                                                                                        <name>
                                                                                                                                                            <name>
                                                                                                                                                                name</name>
                                                                                                                                                            .
                                                                                                                                                            <name>
                                                                                                                                                                equals
                                                                                                                                                            </name>
                                                                                                                                                        </name>
                                                                                                                                                        <argument_list>
                                                                                                                                                            (
                                                                                                                                                            <argument>
                                                                                                                                                                <expr>
                                                                                                                                                                    "regularPolygon"
                                                                                                                                                                </expr>
                                                                                                                                                            </argument>
                                                                                                                                                            )
                                                                                                                                                        </argument_list>
                                                                                                                                                    </call>
                                                                                                                                                </expr>
                                                                                                                                                )
                                                                                                                                            </condition>
                                                                                                                                            <then>
                                                                                                                                                <block>
                                                                                                                                                    {
                                                                                                                                                    <expr_stmt>
                                                                                                                                                        <expr>
                                                                                                                                                            <name>
                                                                                                                                                                f
                                                                                                                                                            </name>
                                                                                                                                                            =
                                                                                                                                                            <call>
                                                                                                                                                                <name>
                                                                                                                                                                    readRegularPolygonElement
                                                                                                                                                                </name>
                                                                                                                                                                <argument_list>
                                                                                                                                                                    (
                                                                                                                                                                    <argument>
                                                                                                                                                                        <expr>
                                                                                                                                                                            <name>
                                                                                                                                                                                elem
                                                                                                                                                                            </name>
                                                                                                                                                                        </expr>
                                                                                                                                                                    </argument>
                                                                                                                                                                    )
                                                                                                                                                                </argument_list>
                                                                                                                                                            </call>
                                                                                                                                                        </expr>
                                                                                                                                                        ;
                                                                                                                                                    </expr_stmt>
                                                                                                                                                    }
                                                                                                                                                </block>
                                                                                                                                            </then>
                                                                                                                                            <else>
                                                                                                                                                else
                                                                                                                                                <block>
                                                                                                                                                    {
                                                                                                                                                    <if>
                                                                                                                                                        if
                                                                                                                                                        <condition>
                                                                                                                                                            (
                                                                                                                                                            <expr>
                                                                                                                                                                <name>
                                                                                                                                                                    DEBUG
                                                                                                                                                                </name>
                                                                                                                                                            </expr>
                                                                                                                                                            )
                                                                                                                                                        </condition>
                                                                                                                                                        <then>
                                                                                                                                                            <expr_stmt>
                                                                                                                                                                <expr>
                                                                                                                                                                    <call>
                                                                                                                                                                        <name>
                                                                                                                                                                            <name>
                                                                                                                                                                                System</name>
                                                                                                                                                                            .<name>
                                                                                                                                                                            out</name>.
                                                                                                                                                                            <name>
                                                                                                                                                                                println
                                                                                                                                                                            </name>
                                                                                                                                                                        </name>
                                                                                                                                                                        <argument_list>
                                                                                                                                                                            (
                                                                                                                                                                            <argument>
                                                                                                                                                                                <expr>
                                                                                                                                                                                    "ODGInputFormat.readElement("+<name>
                                                                                                                                                                                    elem</name>+")
                                                                                                                                                                                    not
                                                                                                                                                                                    implemented."
                                                                                                                                                                                </expr>
                                                                                                                                                                            </argument>
                                                                                                                                                                            )
                                                                                                                                                                        </argument_list>
                                                                                                                                                                    </call>
                                                                                                                                                                </expr>
                                                                                                                                                                ;
                                                                                                                                                            </expr_stmt>
                                                                                                                                                        </then>
                                                                                                                                                    </if>
                                                                                                                                                    }
                                                                                                                                                </block>
                                                                                                                                            </else>
                                                                                                                                        </if>
                                                                                                                                    </else>
                                                                                                                                </if>
                                                                                                                            </else>
                                                                                                                        </if>
                                                                                                                    </else>
                                                                                                                </if>
                                                                                                            </else>
                                                                                                        </if>
                                                                                                    </else>
                                                                                                </if>
                                                                                            </else>
                                                                                        </if>
                                                                                    </else>
                                                                                </if>
                                                                            </else>
                                                                        </if>
                                                                    </else>
                                                                </if>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>f</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>f</name>.
                                                    <name>isEmpty</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>DEBUG</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"ODGInputFormat.readElement():null -
                                                                            discarded empty figure "+
                                                                            <name>f</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            <return>return
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.<name>out</name>.
                                                        <name>println</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"ODGInputFormat.readElement():"+<name>f</name>+"."
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>f</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readEllipseElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readCircleElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/** A &lt;draw:custom-shape&gt; represents a shape that is capable of rendering
                * complex figures. It is offering font work and extrusion functiona-
                * lity. A custom shape may have a geometry that influences its shape.
                * This geometry may be visualized in office application user
                * interfaces, for instance by displaying interaction handles, that
                * provide a simple way to modify the geometry.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readCustomShapeElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>styleName</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>elem</name>.
                                            <name>getAttribute</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"style-name"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>DRAWING_NAMESPACE</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>styles</name>.
                                            <name>getAttributes</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>styleName</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"graphic"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>figureBounds</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Rectangle2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"x"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"y"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"width"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"height"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGFigure</name>
                            </type>
                            <name>figure</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>IXMLElement</name>
                                </type>
                                <name>child</name> :
                                <range>
                                    <expr>
                                        <call>
                                            <name><name>elem</name>.
                                                <name>getChildrenNamed</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"enhanced-geometry"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>DRAWING_NAMESPACE</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>figure</name>
                                    =
                                    <call>
                                        <name>readEnhancedGeometryElement</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>child</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>a</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>figureBounds</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <return>return
                        <expr>
                            <name>figure</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readEnhancedGeometryElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>figureBounds</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="block">/* The &lt;draw:enhanced-geometry&gt; element contains the geometry for a
                        * &lt;draw:custom-shape&gt; element if its draw:engine attribute has been
                        * omitted.
                        */
                    </comment>
                    <comment type="block">/* The draw:type attribute contains the name of a shape type. This name
                        * can be used to offer specialized user interfaces for certain classes
                        * of shapes, like for arrows, smileys, etc.
                        * The shape type is rendering engine dependent and does not influence
                        * the geometry of the shape.
                        * If the value of the draw:type attribute is non-primitive, then no
                        * shape type is available.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>elem</name>.
                                            <name>getAttribute</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"type"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>DRAWING_NAMESPACE</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"non-primitive"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>EnhancedPath</name>
                            </type>
                            <name>path</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>elem</name>.
                                        <name>hasAttribute</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"enhanced-path"</expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>DRAWING_NAMESPACE</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>path</name>
                                        =
                                        <call>
                                            <name>toEnhancedPath</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>elem</name>.
                                                                <name>getAttribute</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"enhanced-path"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>DRAWING_NAMESPACE</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>path</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="block">/* The svg:viewBox attribute establishes a user coordinate system inside
                        * the physical coordinate system of the shape specified by the position
                        * and size attributes. This user coordinate system is used by the
                        * &lt;draw:enhanced-path&gt; element.
                        * The syntax for using this attribute is the same as the [SVG] syntax.
                        * The value of the attribute are four numbers separated by white
                        * spaces, which define the left, top, right, and bottom dimensions
                        * of the user coordinate system.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>viewBoxValues</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>toWSOrCommaSeparatedArray</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>elem</name>.
                                                            <name>getAttribute</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"viewBox"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>DRAWING_NAMESPACE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"0 0 100 100"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>viewBox</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Rectangle2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toNumber</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>viewBoxValues</name>
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toNumber</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>viewBoxValues</name>
                                                                        <index>[<expr>1</expr>]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toNumber</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>viewBoxValues</name>
                                                                        <index>[<expr>2</expr>]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toNumber</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>viewBoxValues</name>
                                                                        <index>[<expr>3</expr>]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>viewTx</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>AffineTransform</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>viewBox</name>.
                                        <name>isEmpty</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>viewTx</name>.
                                                <name>scale</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>figureBounds</name>.
                                                            <name>width</name>
                                                        </name>
                                                        /
                                                        <name><name>viewBox</name>.
                                                            <name>width</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>figureBounds</name>.
                                                            <name>height</name>
                                                        </name>
                                                        /
                                                        <name><name>viewBox</name>.
                                                            <name>height</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>viewTx</name>.
                                                <name>translate</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>figureBounds</name>.
                                                            <name>x</name>
                                                        </name>
                                                        -
                                                        <name><name>viewBox</name>.
                                                            <name>x</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>figureBounds</name>.
                                                            <name>y</name>
                                                        </name>
                                                        -
                                                        <name><name>viewBox</name>.
                                                            <name>y</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="block">/* The draw:mirror-vertical and draw:mirror-horizontal attributes
                        * specify if the geometry of the shape is to be mirrored.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>mirrorVertical</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>elem</name>.
                                            <name>getAttribute</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"mirror-vertical"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>DRAWING_NAMESPACE</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"false"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>equals</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"true"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>mirrorHorizontal</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>elem</name>.
                                            <name>getAttribute</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"mirror-horizontal"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>DRAWING_NAMESPACE</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"false"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>equals</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"true"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// FIXME - Implement Text Rotate Angle</comment>
                    <comment type="line">// FIXME - Implement Extrusion Allowed</comment>
                    <comment type="line">// FIXME - Implement Text Path Allowed</comment>
                    <comment type="line">// FIXME - Implement Concentric Gradient Allowed</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGFigure</name>
                            </type>
                            <name>figure</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>type</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"rectangle"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>figure</name>
                                        =
                                        <call>
                                            <name>createEnhancedGeometryRectangleFigure</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>figureBounds</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>a</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>type</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"ellipse"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>figure</name>
                                                =
                                                <call>
                                                    <name>createEnhancedGeometryEllipseFigure</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>figureBounds</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>a</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.<name>out</name>.
                                                        <name>println</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"ODGInputFormat.readEnhancedGeometryElement not
                                                                implemented for "+
                                                                <name>elem</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>figure</name>
                                                =
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>


                    <return>return
                        <expr>
                            <name>figure</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Creates a Ellipse figure.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>createEnhancedGeometryEllipseFigure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>bounds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGEllipseFigure</name>
                            </type>
                            <name>figure</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ODGEllipseFigure</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>setBounds</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bounds</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>setAttributes</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>figure</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Creates a Rect figure.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>createEnhancedGeometryRectangleFigure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>bounds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGRectFigure</name>
                            </type>
                            <name>figure</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ODGRectFigure</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>setBounds</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bounds</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>setAttributes</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>figure</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Creates a Line figure.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>createLineFigure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGPathFigure</name>
                            </type>
                            <name>figure</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ODGPathFigure</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>setBounds</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>p2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>setAttributes</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>figure</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Creates a Polyline figure.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>createPolylineFigure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>points</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGPathFigure</name>
                            </type>
                            <name>figure</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ODGPathFigure</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGBezierFigure</name>
                            </type>
                            <name>bezier</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ODGBezierFigure</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                    </name>
                                </type>
                                <name>p</name> :
                                <range>
                                    <expr>
                                        <name>points</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>bezier</name>.
                                            <name>addNode</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name><name>BezierPath</name>.
                                                            <name>Node</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>p</name>.
                                                                        <name>x</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>p</name>.
                                                                        <name>y</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>removeAllChildren</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bezier</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>setAttributes</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>figure</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Creates a Polygon figure.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>createPolygonFigure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>points</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGPathFigure</name>
                            </type>
                            <name>figure</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ODGPathFigure</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGBezierFigure</name>
                            </type>
                            <name>bezier</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ODGBezierFigure</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                    </name>
                                </type>
                                <name>p</name> :
                                <range>
                                    <expr>
                                        <name>points</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>bezier</name>.
                                            <name>addNode</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name><name>BezierPath</name>.
                                                            <name>Node</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>p</name>.
                                                                        <name>x</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>p</name>.
                                                                        <name>y</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bezier</name>.
                                    <name>setClosed</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>removeAllChildren</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bezier</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>setAttributes</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>figure</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Creates a Path figure.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>createPathFigure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>BezierPath</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>paths</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGPathFigure</name>
                            </type>
                            <name>figure</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ODGPathFigure</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>removeAllChildren</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>BezierPath</name>
                                </type>
                                <name>p</name> :
                                <range>
                                    <expr>
                                        <name>paths</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ODGBezierFigure</name>
                                    </type>
                                    <name>bezier</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>ODGBezierFigure</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>bezier</name>.
                                            <name>setBezierPath</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>p</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>figure</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bezier</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>setAttributes</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>figure</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Reads a &amp;lt;draw:frame&amp;gt; element from the specified
                * XML element.
                * &lt;p&gt;
                * A frame is a rectangular container where that contains enhanced content
                * like text boxes, images or objects. Frames are very similar to regular
                * drawing shapes, but support some features that are not available for
                * regular drawing shapes, like contours, image maps and hyperlinks. In
                * particular, a frame allows to have multiple renditions of an object. That
                * is, a frame may for instance contain an object as well as an image. In
                * this case, the application may choose the content that it supports best.
                * If the application supports the object type contained in the frame, it
                * probably will render the object. If it does not support the object, it
                * will render the image.
                * &lt;p&gt;
                * In general, an application must not render more than one of the content
                * elements contained in a frame. The order of content elements dictates
                * the document author's preference for rendering, with the first child
                * being the most preferred. This means that applications should render the
                * first child element that it supports. A frame must contain at least one
                * content element. The inclusion of multiple content elements is optional.
                * Application may preserve the content elements they don't render, but
                * don't have to.
                * &lt;p&gt;
                * Within text documents, frames are also used to position content outside
                * the default text flow of a document.
                * &lt;p&gt;
                * Frames can contain:
                * â¢ Text boxes
                * â¢ Objects represented either in the OpenDocument format or in a object
                * specific binary format
                * â¢ Images
                * â¢ Applets
                * â¢ Plug-ins
                * â¢ Floating frames
                * &lt;p&gt;
                * Like the formatting properties of drawing shapes, frame formatting
                * properties are stored in styles belonging to the graphic family. The way
                * a frame is contained in a document also is the same as for drawing shapes.
                *
                *
                * @param elem A &amp;lt;frame&amp;gt; element.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readFrameElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>println</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"ODGInputFormat.readFrameElement("+<name>elem</name>+") not
                                                    implemented."
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Creates a ODGGroupFigure.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>CompositeFigure</name>
                </type>
                <name>createGroupFigure</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGGroupFigure</name>
                            </type>
                            <name>figure</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>ODGGroupFigure</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>figure</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readGElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CompositeFigure</name>
                            </type>
                            <name>g</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>createGroupFigure</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>IXMLElement</name>
                                </type>
                                <name>node</name> :
                                <range>
                                    <expr>
                                        <call>
                                            <name><name>elem</name>.
                                                <name>getChildren</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>node</name>
                                        <name>instanceof</name>
                                        <name>IXMLElement</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>IXMLElement</name>
                                                </type>
                                                <name>child</name> =
                                                <init>
                                                    <expr>(<name>IXMLElement</name>)
                                                        <name>node</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Figure</name>
                                                </type>
                                                <name>childFigure</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name>readElement</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>child</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>childFigure</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>g</name>.
                                                                    <name>basicAdd</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>childFigure</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <comment type="block">/*
                        readTransformAttribute(elem, a);
                        if (TRANSFORM.get(a) != null) {
                        g.transform(TRANSFORM.get(a));
                        }*/
                    </comment>
                    <return>return
                        <expr>(<name>ODGFigure</name>)
                            <name>g</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * The &amp;lt;draw:line&amp;gt; element represents a line.
                * &lt;p&gt;
                * The attributes that may be associated with the &amp;lt;draw:line&amp;gt; element
                * are:
                * â¢ Style, Layer, Z-Index, ID, Caption ID and Transformation â see section
                * 9.2.15.
                * â¢ Text anchor, table background, draw end positionâ see section 9.2.16.
                * â¢ Start point
                * â¢ End point
                * &lt;p&gt;
                * The elements that may be contained in the &amp;lt;draw:line&amp;gt; element are:
                * â¢ Title (short accessible name) â see section 9.2.20.
                * â¢ Long description (in support of accessibility) â see section 9.2.20.
                * â¢ Event listeners â see section 9.2.21.
                * â¢ Glue points â see section 9.2.19.
                * â¢ Text â see section 9.2.17.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readLineElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p1</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"x1"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"y1"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p2</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"x2"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"y2"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>styleName</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>elem</name>.
                                            <name>getAttribute</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"style-name"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>DRAWING_NAMESPACE</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>Map</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>styles</name>.
                                            <name>getAttributes</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>styleName</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"graphic"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGFigure</name>
                            </type>
                            <name>f</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>createLineFigure</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>p1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>p2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>a</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <return>return
                        <expr>
                            <name>f</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readPathElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>viewBoxTransform</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>readViewBoxTransform</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elem</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BezierPath</name>
                                <index>[]</index>
                            </type>
                            <name>paths</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>toPath</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>elem</name>.
                                                            <name>getAttribute</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"d"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>SVG_NAMESPACE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>BezierPath</name>
                                </type>
                                <name>p</name> :
                                <range>
                                    <expr>
                                        <name>paths</name>
                                    </expr>
                                </range>
                            </decl>
                        </init>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>p</name>.
                                            <name>transform</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>viewBoxTransform</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>styleName</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>elem</name>.
                                            <name>getAttribute</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"style-name"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>DRAWING_NAMESPACE</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>HashMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>
                                            <name>HashMap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>AttributeKey</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>Object</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>a</name>.
                                    <name>putAll</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>styles</name>.
                                                    <name>getAttributes</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>styleName</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>"graphic"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>readCommonDrawingShapeAttributes</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>elem</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGFigure</name>
                            </type>
                            <name>f</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>createPathFigure</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>paths</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>a</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>f</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * The &amp;lt;draw:polygon&amp;gt; element represents a polygon. A polygon is a
                * closed set of straight lines.
                * Some implementations may ignore the size attribute, and instead determine
                * the size of a shape exclusively from the shape data (i.e., polygon vertices).
                * &lt;p&gt;
                * The attributes that may be associated with the &amp;lt;draw:polygon&amp;gt; element
                * are:
                * â¢ Position, Size, View box, Style, Layer, Z-Index, ID, Caption ID and
                * Transformation â see section 9.2.15
                * â¢ Text anchor, table background, draw end position â see section 9.2.16
                * â¢ Points â see section 9.2.3
                * The elements that may be contained in the &amp;lt;draw:polygon&amp;gt; element are:
                * â¢ Title (short accessible name) â see section 9.2.20.
                * â¢ Long description (in support of accessibility) â see section 9.2.20.
                * â¢ Event listeners â see section 9.2.21.
                * â¢ Glue points â see section 9.2.19.
                * â¢ Text â see section 9.2.17.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readPolygonElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>viewBoxTransform</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>readViewBoxTransform</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elem</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>coords</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>toWSOrCommaSeparatedArray</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>elem</name>.
                                                            <name>getAttribute</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"points"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>DRAWING_NAMESPACE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <index>[]</index>
                            </type>
                            <name>points</name> =
                            <init>
                                <expr>new
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                        <index>[
                                            <expr>
                                                <name><name>coords</name>.
                                                    <name>length</name>
                                                </name>
                                                / 2
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>coords</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>+=2
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                    </type>
                                    <name>p</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>toNumber</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>coords</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>toNumber</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>coords</name>
                                                                                <index>[
                                                                                    <expr><name>i</name>+1
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>points</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                                / 2
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = (
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                    </name>
                                    )
                                    <call>
                                        <name><name>viewBoxTransform</name>.
                                            <name>transform</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>p</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>p</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>styleName</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>elem</name>.
                                            <name>getAttribute</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"style-name"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>DRAWING_NAMESPACE</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>HashMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>
                                            <name>HashMap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>AttributeKey</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>Object</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>a</name>.
                                    <name>putAll</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>styles</name>.
                                                    <name>getAttributes</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>styleName</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>"graphic"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>readCommonDrawingShapeAttributes</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>elem</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGFigure</name>
                            </type>
                            <name>f</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>createPolygonFigure</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>points</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>a</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>f</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * The &amp;lt;draw:polyline&amp;gt; element represents a polyline drawing shape.
                * Some implementations may ignore the size attribute, and instead determine the size of a shape
                * exclusively from the shape data (i.e., polygon vertices).
                * &lt;p&gt;
                * The attributes that may be associated with the &amp;lt;draw:polyline&amp;gt;
                * element are:
                * â¢ Position, Size, View box, Style, Layer, Z-Index, ID, Caption ID and Transformation â see
                * section 9.2.15
                * â¢ Text anchor, table background, draw end position â see section 9.2.16
                * â¢ Points
                * The elements that may be contained in the &amp;lt;draw:polyline&amp;gt; element are:
                * â¢ Title (short accessible name) â see section 9.2.20.
                * â¢ Long description (in support of accessibility) â see section 9.2.20.
                * â¢ Event listeners â see section 9.2.21.
                * â¢ Glue points â see section 9.2.19.
                * â¢ Text â see section 9.2.17.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readPolylineElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>viewBoxTransform</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>readViewBoxTransform</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elem</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>coords</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>toWSOrCommaSeparatedArray</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>elem</name>.
                                                            <name>getAttribute</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"points"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>DRAWING_NAMESPACE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <index>[]</index>
                            </type>
                            <name>points</name> =
                            <init>
                                <expr>new
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                        <index>[
                                            <expr>
                                                <name><name>coords</name>.
                                                    <name>length</name>
                                                </name>
                                                / 2
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>coords</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>+=2
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                    </type>
                                    <name>p</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>toNumber</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>coords</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>toNumber</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>coords</name>
                                                                                <index>[
                                                                                    <expr><name>i</name>+1
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>points</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                                / 2
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = (
                                    <name><name>Point2D</name>.
                                        <name>Double</name>
                                    </name>
                                    )
                                    <call>
                                        <name><name>viewBoxTransform</name>.
                                            <name>transform</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>p</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>p</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>styleName</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>elem</name>.
                                            <name>getAttribute</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"style-name"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>DRAWING_NAMESPACE</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>HashMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>
                                            <name>HashMap</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>AttributeKey</name>
                                                </argument>
                                                ,
                                                <argument>
                                                    <name>Object</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>a</name>.
                                    <name>putAll</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>styles</name>.
                                                    <name>getAttributes</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>styleName</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>"graphic"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>readCommonDrawingShapeAttributes</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>elem</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ODGFigure</name>
                            </type>
                            <name>f</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>createPolylineFigure</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>points</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>a</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>f</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readRectElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>out</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"ODGInputFormat.readRectElement("+<name>elem</name>+"):null - not
                                            implemented"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readRegularPolygonElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>out</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"ODGInputFormat.readRegularPolygonElement("+<name>elem</name>+"):null -
                                            not implemented"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readMeasureElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>out</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"ODGInputFormat.readMeasureElement("+<name>elem</name>+"):null - not
                                            implemented"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ODGFigure</name>
                </type>
                <name>readCaptionElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>out</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"ODGInputFormat.readCaptureElement("+<name>elem</name>+"):null - not
                                            implemented"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns a value as a String array.
                * The values are separated by whitespace or by commas with optional white
                * space.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>toWSOrCommaSeparatedArray</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>split</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"(\\s*,\\s*|\\s+)"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>result</name>.
                                    <name>length</name>
                                </name>
                                == 1 &amp;&amp;
                                <name>
                                    <name>result</name>
                                    <index>[<expr>0</expr>]
                                    </index>
                                </name>
                                .
                                <call>
                                    <name>equals</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>""</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>String</name>
                                            <index>[<expr>0</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <name>result</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns a value as a number.
                * http://www.w3.org/TR/SVGMobile12/types.html#DataTypeNumber
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>double</name>
                </type>
                <name>toNumber</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>toLength</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>str</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>100</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns a value as a length.
                * http://www.w3.org/TR/SVGMobile12/types.html#DataTypeLength
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>double</name>
                </type>
                <name>toLength</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>percentFactor</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>scaleFactor</name> =
                            <init>
                                <expr>1d</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>str</name>
                                == <name>null</name> ||
                                <call>
                                    <name><name>str</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>0d</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>str</name>.
                                        <name>endsWith</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"%"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>str</name>
                                        =
                                        <call>
                                            <name><name>str</name>.
                                                <name>substring</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        - 1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>scaleFactor</name>
                                        =
                                        <name>percentFactor</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>str</name>.
                                                <name>endsWith</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"px"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>str</name>
                                                =
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>substring</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>str</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                - 2
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>endsWith</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"pt"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>str</name>
                                                        =
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>substring</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>0</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>str</name>.
                                                                                <name>length</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        - 2
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>scaleFactor</name>
                                                        = 1.25
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>endsWith</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"pc"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>str</name>
                                                                =
                                                                <call>
                                                                    <name><name>str</name>.
                                                                        <name>substring</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>0</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>str</name>.
                                                                                        <name>length</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                - 2
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>scaleFactor</name>
                                                                = 15
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>str</name>.
                                                                        <name>endsWith</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"mm"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>str</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>str</name>.
                                                                                <name>substring</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>str</name>.
                                                                                                <name>length</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                        - 2
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>scaleFactor</name>
                                                                        = 3.543307
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>str</name>.
                                                                                <name>endsWith</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"cm"</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>str</name>
                                                                                =
                                                                                <call>
                                                                                    <name><name>str</name>.
                                                                                        <name>substring</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>0</expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        str</name>.
                                                                                                        <name>length
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>()
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                                - 2
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>scaleFactor</name>
                                                                                = 35.43307
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>str</name>.
                                                                                        <name>endsWith</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"in"</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>str</name>
                                                                                        =
                                                                                        <call>
                                                                                            <name><name>str</name>.
                                                                                                <name>substring</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>0</expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                str</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    length
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                        - 2
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>scaleFactor</name>
                                                                                        = 90
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>scaleFactor</name>
                                                                                        = 1d
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name><name>Double</name>.
                                    <name>parseDouble</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>str</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            *
                            <name>scaleFactor</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>double</name>
                </type>
                <name>toUnitFactor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>scaleFactor</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>str</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"px"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>scaleFactor</name>
                                        = 1d
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>str</name>.
                                                <name>endsWith</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"pt"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>scaleFactor</name>
                                                = 1.25
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>endsWith</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"pc"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>scaleFactor</name>
                                                        = 15
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>endsWith</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"mm"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>scaleFactor</name>
                                                                = 3.543307
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>str</name>.
                                                                        <name>endsWith</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"cm"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>scaleFactor</name>
                                                                        = 35.43307
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>str</name>.
                                                                                <name>endsWith</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"in"</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>scaleFactor</name>
                                                                                = 90
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>scaleFactor</name>
                                                                                = 1d
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>scaleFactor</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a value as a EnhancedPath array.
                *
                * The draw:enhanced-path attribute specifies a path similar to the svg:d attribute of the
                * &lt;svg:path&gt; element. Instructions such as moveto, lineto, arcto and other instructions
                * together with its parameter are describing the geometry of a shape which can be filled and or
                * stroked. Relative commands are not supported.
                * The syntax of draw:enhanced-path attribute is as follows:
                * â¢ Instructions are expressed as one character (e.g., a moveto is expressed as an M).
                * â¢ A prefix notation is being used, that means that each command is followed by its parameter.
                * â¢ Superfluous white space and separators such as commas can be eliminated. (e.g., âM 10 10
                * L 20 20 L 30 20â can also be written: âM10 10L20 20L30 20â
                * â¢ If the command is repeated multiple times, only the first command is required. (e.g., âM 10 10
                * L 20 20 L 30 20â can also be expressed as followed âM 10 10 L 20 20 30 20â
                * â¢ Floats can be used, therefore the only allowable decimal point is a dot (â.â)
                * The above mentioned rules are the same as specified for the &lt;svg:path&gt; element.
                * A parameter can also have one of the following enhancements:
                * â¢ A â?â is used to mark the beginning of a formula name. The result of the element's
                * draw:formula attribute is used as parameter value in this case.
                * â¢ If â$â is preceding a integer value, the value is indexing a draw:modifiers attribute. The
                * corresponding modifier value is used as parameter value then.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>EnhancedPath</name>
                </type>
                <name>toEnhancedPath</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>println</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"ODGInputFormat toEnhancedPath "+
                                                    <name>str</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>EnhancedPath</name>
                            </type>
                            <name>path</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>x</name>,
                            <name>y</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>x1</name>, <name>y1</name>, <name>x2</name>, <name>y2</name>, <name>x3</name>,
                            <name>y3</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StreamPosTokenizer</name>
                            </type>
                            <name>tt</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StreamPosTokenizer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>StringReader</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>str</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>resetSyntax</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>parseNumbers</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>parseExponents</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>parsePlusAsNumber</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>whitespaceChars</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>' '</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>whitespaceChars</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>','</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>','</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>


                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>nextCommand</name> =
                            <init>
                                <expr>'M'</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>command</name> =
                            <init>
                                <expr>'M'</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <label><name>Commands</name>:
                    </label>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>tt</name>.
                                        <name>nextToken</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name><name>StreamPosTokenizer</name>.
                                    <name>TT_EOF</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>tt</name>.
                                            <name>ttype</name>
                                        </name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>command</name>
                                                = (<name>char</name>)
                                                <name><name>tt</name>.
                                                    <name>ttype</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>command</name>
                                                =
                                                <name>nextCommand</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>tt</name>.
                                                        <name>pushBack</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>nextCommand</name>
                                    =
                                    <name>command</name>
                                </expr>
                                ;
                            </expr_stmt>

                            <switch>switch
                                <condition>(
                                    <expr>
                                        <name>command</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <case>case <expr>'M'</expr> :
                                        <comment type="line">// moveto (x y)+</comment>
                                        <comment type="line">// Start a new sub-path at the given (x,y)</comment>
                                        <comment type="line">// coordinate. If a moveto is followed by multiple
                                        </comment>
                                        <comment type="line">// pairs of coordinates, they are treated as lineto.
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>path</name>
                                                    ==
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>path</name>
                                                            = new
                                                            <call>
                                                                <name>EnhancedPath</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <comment type="line">// path.setFilled(isFilled);</comment>
                                        <comment type="line">//path.setStroked(isStroked);</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>moveTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'L'
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'L'</expr> :
                                        <comment type="line">// lineto (x y)+</comment>
                                        <comment type="line">// Draws a line from the current point to (x, y). If
                                        </comment>
                                        <comment type="line">// multiple coordinate pairs are following, they</comment>
                                        <comment type="line">// are all interpreted as lineto.</comment>

                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>lineTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'C'</expr> :
                                        <comment type="line">// curveto (x1 y1 x2 y2 x y)+</comment>
                                        <comment type="line">// Draws a cubic BeÌzier curve from the current</comment>
                                        <comment type="line">// point to (x,y) using (x1,y1) as the control point
                                        </comment>
                                        <comment type="line">// at the beginning of the curve and (x2,y2) as</comment>
                                        <comment type="line">// the control point at the end of the curve.</comment>

                                        <expr_stmt>
                                            <expr>
                                                <name>x1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>curveTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'Z'</expr> :
                                        <comment type="line">// closepath</comment>
                                        <comment type="line">// Close the current sub-path by drawing a</comment>
                                        <comment type="line">// straight line from the current point to current
                                        </comment>
                                        <comment type="line">// sub-path's initial point.</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>close</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'N'</expr> :
                                        <comment type="line">// endpath</comment>
                                        <comment type="line">// Ends the current set of sub-paths. The sub-</comment>
                                        <comment type="line">// paths will be filled by using the âeven-oddâ
                                        </comment>
                                        <comment type="line">// filling rule. Other following subpaths will be</comment>
                                        <comment type="line">// filled independently.</comment>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'F'</expr> :
                                        <comment type="line">// nofill</comment>
                                        <comment type="line">// Specifies that the current set of sub-paths</comment>
                                        <comment type="line">// won't be filled.</comment>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'S'</expr> :
                                        <comment type="line">// nostroke</comment>
                                        <comment type="line">// Specifies that the current set of sub-paths</comment>
                                        <comment type="line">// won't be stroked.</comment>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'T'</expr> :
                                        <comment type="line">// angle-ellipseto (x y w h t0 t1) +</comment>
                                        <comment type="line">// Draws a segment of an ellipse. The ellipse is
                                            specified
                                        </comment>
                                        <comment type="line">// by the center(x, y), the size(w, h) and the
                                            start-angle
                                        </comment>
                                        <comment type="line">// t0 and end-angle t1.</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>ellipseTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y2</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'U'</expr> :
                                        <comment type="line">// angle-ellipse (x y w h t0 t1) +</comment>
                                        <comment type="line">// The same as the âTâ command, except that a implied
                                            moveto
                                        </comment>
                                        <comment type="line">// to the starting point is done.</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>moveTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y1</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>ellipseTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y2</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'A'</expr> :
                                        <comment type="line">// arcto (x1 y1 x2 y2 x3 y3 x y) +</comment>
                                        <comment type="line">// (x1, y1) and (x2, y2) is defining the bounding</comment>
                                        <comment type="line">// box of a ellipse. A line is then drawn from the
                                        </comment>
                                        <comment type="line">// current point to the start angle of the arc that is
                                        </comment>
                                        <comment type="line">// specified by the radial vector of point (x3, y3)
                                        </comment>
                                        <comment type="line">// and then counter clockwise to the end-angle</comment>
                                        <comment type="line">// that is specified by point (x4, y4).</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>x1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x3</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y3</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>arcTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x3</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y3</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'B'</expr> :
                                        <comment type="line">// arc (x1 y1 x2 y2 x3 y3 x y) +</comment>
                                        <comment type="line">// The same as the âAâ command, except that a</comment>
                                        <comment type="line">// implied moveto to the starting point is done.</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>x1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x3</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y3</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>moveTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y1</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>arcTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x3</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y3</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'W'</expr> :
                                        <comment type="line">// clockwisearcto (x1 y1 x2 y2 x3 y3 x y) +</comment>
                                        <comment type="line">// The same as the âAâ command except, that the arc is
                                            drawn
                                        </comment>
                                        <comment type="line">// clockwise.</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>x1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x3</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y3</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>clockwiseArcTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x3</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y3</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'V'</expr> :
                                        <comment type="line">// clockwisearc (x1 y1 x2 y2 x3 y3 x y)+</comment>
                                        <comment type="line">// The same as the âAâ command, except that a implied
                                            moveto
                                        </comment>
                                        <comment type="line">// to the starting point is done and the arc is drawn
                                        </comment>
                                        <comment type="line">// clockwise.</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>x1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y2</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x3</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y3</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>moveTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y1</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>clockwiseArcTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x3</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y3</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'X'</expr> :
                                        <comment type="line">// elliptical-quadrantx (x y) +</comment>
                                        <comment type="line">// Draws a quarter ellipse, whose initial segment is
                                        </comment>
                                        <comment type="line">// tangential to the x-axis, is drawn from the</comment>
                                        <comment type="line">// current point to (x, y).</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>quadrantXTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'Y'</expr> :
                                        <comment type="line">// elliptical-quadranty (x y) +</comment>
                                        <comment type="line">// Draws a quarter ellipse, whose initial segment is
                                        </comment>
                                        <comment type="line">// tangential to the y-axis, is drawn from the</comment>
                                        <comment type="line">// current point to(x, y).</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>quadrantYTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'Q'</expr> :
                                        <comment type="line">// quadratic-curveto(x1 y1 x y)+</comment>
                                        <comment type="line">// Draws a quadratic BeÌzier curve from the current
                                            point
                                        </comment>
                                        <comment type="line">// to(x, y) using(x1, y1) as the control point. (x, y)
                                        </comment>
                                        <comment type="line">// becomes the new current point at the end of the
                                            command.
                                        </comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>x1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y1</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>x</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>y</name>
                                                =
                                                <call>
                                                    <name>nextEnhancedCoordinate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>str</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>quadTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <default>default :
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>println</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"ODGInputFormat.toEnhancedPath aborting after
                                                                        illegal path command: "+<name>command</name>+"
                                                                        found in path "+
                                                                        <name>str</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        <break>break Commands;</break>
                                        <comment type="line">//throw new IOException("Illegal command: "+command);
                                        </comment>
                                    </default>
                                    }
                                </block>
                            </switch>
                            }
                        </block>
                    </while>
                    <return>return
                        <expr>
                            <name>path</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Retrieves an enhanced coordinate from the specified tokenizer.
                * An enhanced coordinate can be a double, or a '?' followed by a
                * formula name, or a '$' followed by an index to a modifier.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Object</name>
                </type>
                <name>nextEnhancedCoordinate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>StreamPosTokenizer</name>
                            </type>
                            <name>tt</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <switch>switch
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>tt</name>.
                                        <name>nextToken</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case <expr>'?'</expr> :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>StringBuilder</name>
                                            </type>
                                            <name>buf</name> =
                                            <init>
                                                <expr>new
                                                    <call>
                                                        <name>StringBuilder</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buf</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>'?'</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>ch</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextChar</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <for>for (
                                        <init>;</init>
                                        <condition>
                                            <expr>
                                                <name>ch</name>
                                                &gt;= 'a' &amp;&amp; <name>ch</name> &lt;= 'z' || <name>ch</name> &gt;=
                                                'A' &amp;&amp; <name>ch</name> &lt;= 'Z' || <name>ch</name> &gt;= '0'
                                                &amp;&amp; <name>ch</name> &lt;= '9'
                                            </expr>
                                            ;
                                        </condition>
                                        <incr>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>tt</name>.
                                                        <name>nextChar</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </incr>
                                        )
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>buf</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>char</name>)
                                                                    <name>ch</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </for>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>tt</name>.
                                                    <name>pushCharBack</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ch</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>buf</name>.
                                                    <name>toString</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </case>
                            <case>case <expr>'$'</expr> :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>StringBuilder</name>
                                            </type>
                                            <name>buf</name> =
                                            <init>
                                                <expr>new
                                                    <call>
                                                        <name>StringBuilder</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buf</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>'$'</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>ch</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextChar</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <for>for (
                                        <init>;</init>
                                        <condition>
                                            <expr>
                                                <name>ch</name>
                                                &gt;= '0' &amp;&amp; <name>ch</name> &lt;= '9'
                                            </expr>
                                            ;
                                        </condition>
                                        <incr>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>tt</name>.
                                                        <name>nextChar</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </incr>
                                        )
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>buf</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>char</name>)
                                                                    <name>ch</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </for>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>tt</name>.
                                                    <name>pushCharBack</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ch</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>buf</name>.
                                                    <name>toString</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>StreamPosTokenizer</name>.
                                        <name>TT_NUMBER</name>
                                    </name>
                                </expr>
                                :
                                <return>return
                                    <expr>
                                        <name><name>tt</name>.
                                            <name>nval</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                            </case>
                            <default>default :
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IOException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"coordinate missing at position"+
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>getStartPosition</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        +" in "+
                                                        <name>str</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                            </default>
                            }
                        </block>
                    </switch>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>readCommonDrawingShapeAttributes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>HashMap</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>AttributeKey</name>
                                        </argument>
                                        ,
                                        <argument>
                                            <name>Object</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// The attribute draw:name assigns a name to the drawing shape.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>NAME</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>elem</name>.
                                                    <name>getAttribute</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"name"</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>DRAWING_NAMESPACE</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// The draw:transform attribute specifies a list of transformations that
                    </comment>
                    <comment type="line">// can be applied to a drawing shape.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>TRANSFORM</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>toTransform</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>elem</name>.
                                                                    <name>getAttribute</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"transform"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>DRAWING_NAMESPACE</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>AffineTransform</name>
                </type>
                <name>readViewBoxTransform</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IXMLElement</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>tx</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>AffineTransform</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>figureBounds</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Rectangle2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"x"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"y"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"width"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>toLength</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elem</name>.
                                                                            <name>getAttribute</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"height"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>SVG_NAMESPACE</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"0"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tx</name>.
                                    <name>translate</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>figureBounds</name>.
                                                <name>x</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>figureBounds</name>.
                                                <name>y</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// The svg:viewBox attribute establishes a user coordinate system inside the
                        physical coordinate
                    </comment>
                    <comment type="line">// system of the shape specified by the position and size attributes. This user
                        coordinate system is
                    </comment>
                    <comment type="line">// used by the svg:points attribute and the &lt;draw:path&gt; element.
                    </comment>
                    <comment type="line">// The syntax for using this attribute is the same as the [SVG] syntax. The
                        value of the attribute are
                    </comment>
                    <comment type="line">// four numbers separated by white spaces, which define the left, top, right,
                        and bottom dimensions
                    </comment>
                    <comment type="line">// of the user coordinate system.</comment>
                    <comment type="line">// Some implementations may ignore the view box attribute. The implied
                        coordinate system then has
                    </comment>
                    <comment type="line">// its origin at the left, top corner of the shape, without any scaling
                        relative to the shape.
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>viewBoxValues</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>toWSOrCommaSeparatedArray</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>elem</name>.
                                                            <name>getAttribute</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"viewBox"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>SVG_NAMESPACE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>viewBoxValues</name>.
                                    <name>length</name>
                                </name>
                                == 4
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name><name>Rectangle2D</name>.
                                                <name>Double</name>
                                            </name>
                                        </type>
                                        <name>viewBox</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name><name>Rectangle2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>toNumber</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>viewBoxValues</name>
                                                                                    <index>[<expr>0</expr>]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>toNumber</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>viewBoxValues</name>
                                                                                    <index>[<expr>1</expr>]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>toNumber</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>viewBoxValues</name>
                                                                                    <index>[<expr>2</expr>]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>toNumber</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>viewBoxValues</name>
                                                                                    <index>[<expr>3</expr>]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>viewBox</name>.
                                                    <name>isEmpty</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp; !
                                            <call>
                                                <name><name>figureBounds</name>.
                                                    <name>isEmpty</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>tx</name>.
                                                            <name>scale</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>figureBounds</name>.
                                                                        <name>width</name>
                                                                    </name>
                                                                    /
                                                                    <name><name>viewBox</name>.
                                                                        <name>width</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>figureBounds</name>.
                                                                        <name>height</name>
                                                                    </name>
                                                                    /
                                                                    <name><name>viewBox</name>.
                                                                        <name>height</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>tx</name>.
                                                            <name>translate</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>-
                                                                    <name><name>viewBox</name>.
                                                                        <name>x</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>-
                                                                    <name><name>viewBox</name>.
                                                                        <name>y</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>tx</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/** Converts an ODG draw:transform attribute value into an AffineTransform.
                * &lt;p&gt;
                * The draw:transform attribute specifies a list of transformations that can be applied to a
                * drawing shape.
                * The value of this attribute is a list of transform definitions, which are applied to the drawing shape
                * in the order in which they are listed. The transform definitions in the list must be separated by a
                * white space and/or a comma. The types of transform definitions available include:
                * â¢ matrix(&lt;a&gt; &lt;b&gt; &lt;c&gt; &lt;d&gt; &lt;e&gt; &lt;f&gt;), which specifies a
                transformation in the form of a
                * transformation matrix of six values. matrix(a,b,c,d,e,f) is the equivalent of applying the
                * transformation matrix [a b c d e f].
                * â¢ translate(&lt;tx&gt; [&lt;ty&gt;]), which specifies a translation by tx and ty.
                * â¢ scale(&lt;sx&gt; [&lt;sy&gt;]), which specifies a scale operation by sx and sy. If &lt;sy&gt; is
                not
                * provided, it is assumed to be equal to &lt;sx&gt;.
                * â¢ rotate(&lt;rotate-angle&gt;), which specifies a rotation by &lt;rotate-angle&gt; about the
                * origin of the shapes coordinate system.
                * â¢ skewX(&lt;skew-angle&gt;), which specifies a skew transformation along the X axis.
                * â¢ skewY(&lt;skew-angle&gt;), which specifies a skew transformation along the Y axis.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>AffineTransform</name>
                </type>
                <name>toTransform</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>t</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>AffineTransform</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>t2</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>AffineTransform</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>str</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>StreamPosTokenizer</name>
                                        </type>
                                        <name>tt</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>StreamPosTokenizer</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name>StringReader</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>tt</name>.
                                                <name>resetSyntax</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>tt</name>.
                                                <name>wordChars</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>'a'</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>'z'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>tt</name>.
                                                <name>wordChars</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>'A'</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>'Z'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>tt</name>.
                                                <name>wordChars</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>128 + 32</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>255</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>tt</name>.
                                                <name>whitespaceChars</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>' '</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>tt</name>.
                                                <name>whitespaceChars</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>','</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>','</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>tt</name>.
                                                <name>parseNumbers</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>tt</name>.
                                                <name>parseExponents</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <while>while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>tt</name>.
                                                    <name>nextToken</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            !=
                                            <name><name>StreamPosTokenizer</name>.
                                                <name>TT_EOF</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>tt</name>.
                                                        <name>ttype</name>
                                                    </name>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_WORD</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Illegal transform "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>type</name> =
                                                <init>
                                                    <expr>
                                                        <name><name>tt</name>.
                                                            <name>sval</name>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    != '('
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"'(' not found in transform "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>type</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"matrix"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>double</name>
                                                                <index>[]</index>
                                                            </type>
                                                            <name>m</name> =
                                                            <init>
                                                                <expr>new
                                                                    <name>
                                                                        <name>double</name>
                                                                        <index>[<expr>6</expr>]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <for>for (
                                                        <init>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>i</name>=
                                                                <init>
                                                                    <expr>0</expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>i</name>
                                                                &lt; 6
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>i</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>tt</name>.
                                                                                <name>nextToken</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        !=
                                                                        <name><name>StreamPosTokenizer</name>.
                                                                            <name>TT_NUMBER</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <throw>throw
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>IOException</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"Matrix value "+<name>
                                                                                                i</name>+" not found in
                                                                                                transform "+<name>
                                                                                                    str</name>+"
                                                                                                token:"+
                                                                                                <name><name>tt</name>.
                                                                                                    <name>ttype</name>
                                                                                                </name>
                                                                                                +" "+
                                                                                                <name><name>tt</name>.
                                                                                                    <name>sval</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </throw>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>m</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    =
                                                                    <name><name>tt</name>.
                                                                        <name>nval</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </for>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>t</name>.
                                                                    <name>preConcatenate</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>AffineTransform</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>m</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>type</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"translate"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>double</name>
                                                                    </type>
                                                                    <name>tx</name>,
                                                                    <name>ty</name>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>tt</name>.
                                                                                <name>nextToken</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        !=
                                                                        <name><name>StreamPosTokenizer</name>.
                                                                            <name>TT_NUMBER</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <throw>throw
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>IOException</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"X-translation value
                                                                                                not found in transform
                                                                                                "+
                                                                                                <name>str</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </throw>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>tx</name>
                                                                    =
                                                                    <name><name>tt</name>.
                                                                        <name>nval</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>tt</name>.
                                                                                <name>nextToken</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        ==
                                                                        <name><name>StreamPosTokenizer</name>.
                                                                            <name>TT_WORD</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>tx</name>
                                                                                *=
                                                                                <call>
                                                                                    <name>toUnitFactor</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>tt</name>.
                                                                                                    <name>sval</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>pushBack</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>

                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>tt</name>.
                                                                                <name>nextToken</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        ==
                                                                        <name><name>StreamPosTokenizer</name>.
                                                                            <name>TT_NUMBER</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>ty</name>
                                                                                =
                                                                                <name><name>tt</name>.
                                                                                    <name>nval</name>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>tt</name>.
                                                                                            <name>nextToken</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    ==
                                                                                    <name><name>
                                                                                        StreamPosTokenizer</name>.
                                                                                        <name>TT_WORD</name>
                                                                                    </name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>ty</name>
                                                                                            *=
                                                                                            <call>
                                                                                                <name>toUnitFactor
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                tt</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    sval
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                            <else>else
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>tt</name>.
                                                                                                    <name>pushBack
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </else>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>pushBack</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>ty</name>
                                                                                = 0
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>t2</name>.
                                                                            <name>setToIdentity</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>t2</name>.
                                                                            <name>translate</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tx</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>ty</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>t</name>.
                                                                            <name>preConcatenate</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>t2</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>type</name>.
                                                                            <name>equals</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"scale"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>double</name>
                                                                            </type>
                                                                            <name>sx</name>,
                                                                            <name>sy</name>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>nextToken</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                !=
                                                                                <name><name>StreamPosTokenizer</name>.
                                                                                    <name>TT_NUMBER</name>
                                                                                </name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <throw>throw
                                                                                    <expr>new
                                                                                        <call>
                                                                                            <name>IOException</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>"X-scale value
                                                                                                        not found in
                                                                                                        transform "+
                                                                                                        <name>str</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </throw>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>sx</name>
                                                                            =
                                                                            <name><name>tt</name>.
                                                                                <name>nval</name>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>nextToken</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                ==
                                                                                <name><name>StreamPosTokenizer</name>.
                                                                                    <name>TT_NUMBER</name>
                                                                                </name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>sy</name>
                                                                                        =
                                                                                        <name><name>tt</name>.
                                                                                            <name>nval</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>tt</name>.
                                                                                                <name>pushBack</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>sy</name>
                                                                                        =
                                                                                        <name>sx</name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </else>
                                                                    </if>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>t2</name>.
                                                                                    <name>setToIdentity</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>t2</name>.
                                                                                    <name>scale</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>sx</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>sy</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>t</name>.
                                                                                    <name>preConcatenate</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>t2</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>

                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>type</name>.
                                                                                    <name>equals</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"rotate"</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <decl_stmt>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>double</name>
                                                                                    </type>
                                                                                    <name>angle</name>, <name>cx</name>,
                                                                                    <name>cy</name>
                                                                                </decl>
                                                                                ;
                                                                            </decl_stmt>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>tt</name>.
                                                                                                <name>nextToken</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                        !=
                                                                                        <name><name>
                                                                                            StreamPosTokenizer</name>.
                                                                                            <name>TT_NUMBER</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <throw>throw
                                                                                            <expr>new
                                                                                                <call>
                                                                                                    <name>IOException
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>"Angle
                                                                                                                value
                                                                                                                not
                                                                                                                found in
                                                                                                                transform
                                                                                                                "+
                                                                                                                <name>
                                                                                                                    str
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </throw>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>angle</name>
                                                                                    =
                                                                                    <name><name>tt</name>.
                                                                                        <name>nval</name>
                                                                                    </name>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>t2</name>.
                                                                                            <name>setToIdentity</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>t2</name>.
                                                                                            <name>rotate</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>-
                                                                                                    <name>angle</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>t</name>.
                                                                                            <name>preConcatenate</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>t2</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>


                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>type</name>.
                                                                                            <name>equals</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>"skewX"</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <decl_stmt>
                                                                                        <decl>
                                                                                            <type>
                                                                                                <name>double</name>
                                                                                            </type>
                                                                                            <name>angle</name>
                                                                                        </decl>
                                                                                        ;
                                                                                    </decl_stmt>
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        tt</name>.
                                                                                                        <name>
                                                                                                            nextToken
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>()
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                                !=
                                                                                                <name><name>
                                                                                                    StreamPosTokenizer</name>
                                                                                                    .
                                                                                                    <name>TT_NUMBER
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <throw>throw
                                                                                                    <expr>new
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                IOException
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        "Skew
                                                                                                                        angle
                                                                                                                        not
                                                                                                                        found
                                                                                                                        in
                                                                                                                        transform
                                                                                                                        "+
                                                                                                                        <name>
                                                                                                                            str
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </throw>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                    </if>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>angle</name>
                                                                                            =
                                                                                            <name><name>tt</name>.
                                                                                                <name>nval</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>t</name>.
                                                                                                    <name>
                                                                                                        preConcatenate
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>new
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    AffineTransform
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            1
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    ,
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            0
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    ,
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <call>
                                                                                                                                <name>
                                                                                                                                    <name>
                                                                                                                                        Math</name>
                                                                                                                                    .
                                                                                                                                    <name>
                                                                                                                                        tan
                                                                                                                                    </name>
                                                                                                                                </name>
                                                                                                                                <argument_list>
                                                                                                                                    (
                                                                                                                                    <argument>
                                                                                                                                        <expr>
                                                                                                                                            <name>
                                                                                                                                                angle
                                                                                                                                            </name>
                                                                                                                                            *
                                                                                                                                            <name>
                                                                                                                                                <name>
                                                                                                                                                    Math</name>
                                                                                                                                                .
                                                                                                                                                <name>
                                                                                                                                                    PI
                                                                                                                                                </name>
                                                                                                                                            </name>
                                                                                                                                            /
                                                                                                                                            180
                                                                                                                                        </expr>
                                                                                                                                    </argument>
                                                                                                                                    )
                                                                                                                                </argument_list>
                                                                                                                            </call>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    ,
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            1
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    ,
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            0
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    ,
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            0
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>

                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                            <else>else
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>type</name>.
                                                                                                    <name>equals</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>"skewY"
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <decl_stmt>
                                                                                                <decl>
                                                                                                    <type>
                                                                                                        <name>double
                                                                                                        </name>
                                                                                                    </type>
                                                                                                    <name>angle</name>
                                                                                                </decl>
                                                                                                ;
                                                                                            </decl_stmt>
                                                                                            <if>if
                                                                                                <condition>(
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                tt</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    nextToken
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                        !=
                                                                                                        <name><name>
                                                                                                            StreamPosTokenizer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                TT_NUMBER
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    )
                                                                                                </condition>
                                                                                                <then>
                                                                                                    <block>{
                                                                                                        <throw>throw
                                                                                                            <expr>new
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        IOException
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        (
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                "Skew
                                                                                                                                angle
                                                                                                                                not
                                                                                                                                found
                                                                                                                                in
                                                                                                                                transform
                                                                                                                                "+
                                                                                                                                <name>
                                                                                                                                    str
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        )
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                            </expr>
                                                                                                            ;
                                                                                                        </throw>
                                                                                                        }
                                                                                                    </block>
                                                                                                </then>
                                                                                            </if>
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <name>angle</name>
                                                                                                    =
                                                                                                    <name><name>
                                                                                                        tt</name>.
                                                                                                        <name>nval
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            t</name>.
                                                                                                            <name>
                                                                                                                preConcatenate
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    new
                                                                                                                    <call>
                                                                                                                        <name>
                                                                                                                            AffineTransform
                                                                                                                        </name>
                                                                                                                        <argument_list>
                                                                                                                            (
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    1
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            ,
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    <call>
                                                                                                                                        <name>
                                                                                                                                            <name>
                                                                                                                                                Math</name>
                                                                                                                                            .
                                                                                                                                            <name>
                                                                                                                                                tan
                                                                                                                                            </name>
                                                                                                                                        </name>
                                                                                                                                        <argument_list>
                                                                                                                                            (
                                                                                                                                            <argument>
                                                                                                                                                <expr>
                                                                                                                                                    <name>
                                                                                                                                                        angle
                                                                                                                                                    </name>
                                                                                                                                                    *
                                                                                                                                                    <name>
                                                                                                                                                        <name>
                                                                                                                                                            Math</name>
                                                                                                                                                        .
                                                                                                                                                        <name>
                                                                                                                                                            PI
                                                                                                                                                        </name>
                                                                                                                                                    </name>
                                                                                                                                                    /
                                                                                                                                                    180
                                                                                                                                                </expr>
                                                                                                                                            </argument>
                                                                                                                                            )
                                                                                                                                        </argument_list>
                                                                                                                                    </call>
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            ,
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    0
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            ,
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    1
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            ,
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    0
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            ,
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    0
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            )
                                                                                                                        </argument_list>
                                                                                                                    </call>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>

                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                    <else>else
                                                                                        <block>{
                                                                                            <throw>throw
                                                                                                <expr>new
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            IOException
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    "Unknown
                                                                                                                    transform
                                                                                                                    "+<name>
                                                                                                                    type</name>+"
                                                                                                                    in
                                                                                                                    "+
                                                                                                                    <name>
                                                                                                                        str
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </throw>
                                                                                            }
                                                                                        </block>
                                                                                    </else>
                                                                                </if>
                                                                            </else>
                                                                        </if>
                                                                    </else>
                                                                </if>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    != ')'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"')' not found in transform "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>t</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns a value as a BezierPath array.
                * as specified in http://www.w3.org/TR/SVGMobile12/shapes.html#PointsBNF
                *
                * Also supports elliptical arc commands 'a' and 'A' as specified in
                * http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>BezierPath</name>
                    <index>[]</index>
                </type>
                <name>toPath</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>LinkedList</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>BezierPath</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>paths</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>
                                            <name>LinkedList</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>BezierPath</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BezierPath</name>
                            </type>
                            <name>path</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>c1</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>c2</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Point2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StreamPosTokenizer</name>
                            </type>
                            <name>tt</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StreamPosTokenizer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>StringReader</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>str</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>resetSyntax</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>parseNumbers</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>parseExponents</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>parsePlusAsNumber</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>whitespaceChars</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>' '</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tt</name>.
                                    <name>whitespaceChars</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>','</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>','</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>


                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>nextCommand</name> =
                            <init>
                                <expr>'M'</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>command</name> =
                            <init>
                                <expr>'M'</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <label><name>Commands</name>:
                    </label>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>tt</name>.
                                        <name>nextToken</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name><name>StreamPosTokenizer</name>.
                                    <name>TT_EOF</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>tt</name>.
                                            <name>ttype</name>
                                        </name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>command</name>
                                                = (<name>char</name>)
                                                <name><name>tt</name>.
                                                    <name>ttype</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>command</name>
                                                =
                                                <name>nextCommand</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>tt</name>.
                                                        <name>pushBack</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name><name>BezierPath</name>.
                                            <name>Node</name>
                                        </name>
                                    </type>
                                    <name>node</name>
                                </decl>
                                ;
                            </decl_stmt>

                            <switch>switch
                                <condition>(
                                    <expr>
                                        <name>command</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <case>case <expr>'M'</expr> :
                                        <comment type="line">// absolute-moveto x y</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>path</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>paths</name>.
                                                                    <name>add</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>path</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>path</name>
                                                = new
                                                <call>
                                                    <name>BezierPath</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"x coordinate missing for 'M' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"y coordinate missing for 'M' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>moveTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'L'
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'m'</expr> :
                                        <comment type="line">// relative-moveto dx dy</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>path</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>paths</name>.
                                                                    <name>add</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>path</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>path</name>
                                                = new
                                                <call>
                                                    <name>BezierPath</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dx coordinate missing for 'm' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dy coordinate missing for 'm' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>moveTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'l'
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'Z'</expr> :
                                    </case>
                                    <case>case <expr>'z'</expr> :
                                        <comment type="line">// close path</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>get</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <name>
                                                    <name>x</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>get</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <name>
                                                    <name>y</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <comment type="line">// If the last point and the first point are the same, we
                                        </comment>
                                        <comment type="line">// can merge them</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>path</name>.
                                                            <name>size</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &gt; 1
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name><name>BezierPath</name>.
                                                                    <name>Node</name>
                                                                </name>
                                                            </type>
                                                            <name>first</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>path</name>.
                                                                            <name>get</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>0</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name><name>BezierPath</name>.
                                                                    <name>Node</name>
                                                                </name>
                                                            </type>
                                                            <name>last</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>path</name>.
                                                                            <name>get</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>path</name>.
                                                                                            <name>size</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    -1
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>first</name>.
                                                                    <name>x</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                                ==
                                                                <name><name>last</name>.
                                                                    <name>x</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                                &amp;&amp;
                                                                <name><name>first</name>.
                                                                    <name>y</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                                ==
                                                                <name><name>last</name>.
                                                                    <name>y</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>(
                                                                            <name><name>last</name>.
                                                                                <name>mask</name>
                                                                            </name>
                                                                            &amp;
                                                                            <name><name>BezierPath</name>.
                                                                                <name>C1_MASK</name>
                                                                            </name>
                                                                            ) != 0
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>first</name>.
                                                                                        <name>mask</name>
                                                                                    </name>
                                                                                    |=
                                                                                    <name><name>BezierPath</name>.
                                                                                        <name>C1_MASK</name>
                                                                                    </name>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>first</name>.
                                                                                        <name>x</name>
                                                                                        <index>[<expr>1</expr>]
                                                                                        </index>
                                                                                    </name>
                                                                                    =
                                                                                    <name><name>last</name>.
                                                                                        <name>x</name>
                                                                                        <index>[<expr>1</expr>]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>first</name>.
                                                                                        <name>y</name>
                                                                                        <index>[<expr>1</expr>]
                                                                                        </index>
                                                                                    </name>
                                                                                    =
                                                                                    <name><name>last</name>.
                                                                                        <name>y</name>
                                                                                        <index>[<expr>1</expr>]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>path</name>.
                                                                                <name>remove</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>path</name>.
                                                                                                <name>size</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                        - 1
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>setClosed</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>true</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'L'</expr> :
                                        <comment type="line">// absolute-lineto x y</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"x coordinate missing for 'L' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"y coordinate missing for 'L' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>lineTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'L'
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'l'</expr> :
                                        <comment type="line">// relative-lineto dx dy</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dx coordinate missing for 'l' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dy coordinate missing for 'l' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>lineTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'l'
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'H'</expr> :
                                        <comment type="line">// absolute-horizontal-lineto x</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"x coordinate missing for 'H' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>lineTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'H'
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'h'</expr> :
                                        <comment type="line">// relative-horizontal-lineto dx</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dx coordinate missing for 'h' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>lineTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'h'
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'V'</expr> :
                                        <comment type="line">// absolute-vertical-lineto y</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"y coordinate missing for 'V' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>lineTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'V'
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'v'</expr> :
                                        <comment type="line">// relative-vertical-lineto dy</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dy coordinate missing for 'v' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>lineTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'v'
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'C'</expr> :
                                        <comment type="line">// absolute-curveto x1 y1 x2 y2 x y</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"x1 coordinate missing for 'C' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"y1 coordinate missing for 'C' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"x2 coordinate missing for 'C' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c2</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"y2 coordinate missing for 'C' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c2</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"x coordinate missing for 'C' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"y coordinate missing for 'C' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>curveTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c2</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c2</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'C'
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'c'</expr> :
                                        <comment type="line">// relative-curveto dx1 dy1 dx2 dy2 dx dy</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dx1 coordinate missing for 'c' at
                                                                            position "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                +
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dy1 coordinate missing for 'c' at
                                                                            position "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                +
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dx2 coordinate missing for 'c' at
                                                                            position "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c2</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                +
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dy2 coordinate missing for 'c' at
                                                                            position "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c2</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                +
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dx coordinate missing for 'c' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dy coordinate missing for 'c' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>curveTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c2</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c2</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'c'
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'S'</expr> :
                                        <comment type="line">// absolute-shorthand-curveto x2 y2 x y</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>node</name>
                                                =
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>get</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>path</name>.
                                                                        <name>size</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                - 1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>node</name>.
                                                    <name>x</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                * 2d -
                                                <name><name>node</name>.
                                                    <name>x</name>
                                                    <index>[<expr>1</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>node</name>.
                                                    <name>y</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                * 2d -
                                                <name><name>node</name>.
                                                    <name>y</name>
                                                    <index>[<expr>1</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"x2 coordinate missing for 'S' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c2</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"y2 coordinate missing for 'S' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c2</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"x coordinate missing for 'S' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"y coordinate missing for 'S' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>curveTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c2</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c2</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'S'
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'s'</expr> :
                                        <comment type="line">// relative-shorthand-curveto dx2 dy2 dx dy</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>node</name>
                                                =
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>get</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>path</name>.
                                                                        <name>size</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                - 1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>node</name>.
                                                    <name>x</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                * 2d -
                                                <name><name>node</name>.
                                                    <name>x</name>
                                                    <index>[<expr>1</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>node</name>.
                                                    <name>y</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                * 2d -
                                                <name><name>node</name>.
                                                    <name>y</name>
                                                    <index>[<expr>1</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dx2 coordinate missing for 's' at
                                                                            position "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c2</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                +
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dy2 coordinate missing for 's' at
                                                                            position "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c2</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                +
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dx coordinate missing for 's' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dy coordinate missing for 's' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>curveTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c2</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c2</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 's'
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'Q'</expr> :
                                        <comment type="line">// absolute-quadto x1 y1 x y</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"x1 coordinate missing for 'Q' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"y1 coordinate missing for 'Q' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"x coordinate missing for 'Q' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"y coordinate missing for 'Q' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>quadTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'Q'
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'q'</expr> :
                                        <comment type="line">// relative-quadto dx1 dy1 dx dy</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dx1 coordinate missing for 'q' at
                                                                            position "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                +
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dy1 coordinate missing for 'q' at
                                                                            position "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                +
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dx coordinate missing for 'q' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dy coordinate missing for 'q' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>quadTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'q'
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'T'</expr> :
                                        <comment type="line">// absolute-shorthand-quadto x y</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>node</name>
                                                =
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>get</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>path</name>.
                                                                        <name>size</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                - 1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>node</name>.
                                                    <name>x</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                * 2d -
                                                <name><name>node</name>.
                                                    <name>x</name>
                                                    <index>[<expr>1</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>node</name>.
                                                    <name>y</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                * 2d -
                                                <name><name>node</name>.
                                                    <name>y</name>
                                                    <index>[<expr>1</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"x coordinate missing for 'T' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"y coordinate missing for 'T' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>quadTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 'T'
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>

                                    </case>
                                    <case>case <expr>'t'</expr> :
                                        <comment type="line">// relative-shorthand-quadto dx dy</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>node</name>
                                                =
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>get</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>path</name>.
                                                                        <name>size</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                - 1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>x</name>
                                                </name>
                                                =
                                                <name><name>node</name>.
                                                    <name>x</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                * 2d -
                                                <name><name>node</name>.
                                                    <name>x</name>
                                                    <index>[<expr>1</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>c1</name>.
                                                    <name>y</name>
                                                </name>
                                                =
                                                <name><name>node</name>.
                                                    <name>y</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                * 2d -
                                                <name><name>node</name>.
                                                    <name>y</name>
                                                    <index>[<expr>1</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dx coordinate missing for 't' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>x</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>tt</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name><name>StreamPosTokenizer</name>.
                                                        <name>TT_NUMBER</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"dy coordinate missing for 't' at position
                                                                            "+
                                                                            <call>
                                                                                <name><name>tt</name>.
                                                                                    <name>getStartPosition</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" in "+
                                                                            <name>str</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>p</name>.
                                                    <name>y</name>
                                                </name>
                                                +=
                                                <name><name>tt</name>.
                                                    <name>nval</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>quadTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>c1</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>x</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>p</name>.
                                                                    <name>y</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>nextCommand</name>
                                                = 's'
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <break>break;</break>


                                    </case>
                                    <case>case <expr>'A'</expr> :
                                        <block>{
                                            <comment type="line">// absolute-elliptical-arc rx ry x-axis-rotation
                                                large-arc-flag sweep-flag x y
                                            </comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"rx coordinate missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <comment type="line">// If rX or rY have negative signs, these are
                                                dropped;
                                            </comment>
                                            <comment type="line">// the absolute value is used instead.</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>double</name>
                                                    </type>
                                                    <name>rx</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>tt</name>.
                                                                <name>nval</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"ry coordinate missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>double</name>
                                                    </type>
                                                    <name>ry</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>tt</name>.
                                                                <name>nval</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"x-axis-rotation missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>double</name>
                                                    </type>
                                                    <name>xAxisRotation</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>tt</name>.
                                                                <name>nval</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"large-arc-flag missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>boolean</name>
                                                    </type>
                                                    <name>largeArcFlag</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>tt</name>.
                                                                <name>nval</name>
                                                            </name>
                                                            != 0
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"sweep-flag missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>boolean</name>
                                                    </type>
                                                    <name>sweepFlag</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>tt</name>.
                                                                <name>nval</name>
                                                            </name>
                                                            != 0
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"x coordinate missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>p</name>.
                                                        <name>x</name>
                                                    </name>
                                                    =
                                                    <name><name>tt</name>.
                                                        <name>nval</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"y coordinate missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>p</name>.
                                                        <name>y</name>
                                                    </name>
                                                    =
                                                    <name><name>tt</name>.
                                                        <name>nval</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>path</name>.
                                                            <name>arcTo</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>rx</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>ry</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>xAxisRotation</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>largeArcFlag</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>sweepFlag</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>p</name>.
                                                                        <name>x</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>p</name>.
                                                                        <name>y</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <expr_stmt>
                                                <expr>
                                                    <name>nextCommand</name>
                                                    = 'A'
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                            }
                                        </block>
                                    </case>
                                    <case>case <expr>'a'</expr> :
                                        <block>{
                                            <comment type="line">// absolute-elliptical-arc rx ry x-axis-rotation
                                                large-arc-flag sweep-flag x y
                                            </comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"rx coordinate missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <comment type="line">// If rX or rY have negative signs, these are
                                                dropped;
                                            </comment>
                                            <comment type="line">// the absolute value is used instead.</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>double</name>
                                                    </type>
                                                    <name>rx</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>tt</name>.
                                                                <name>nval</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"ry coordinate missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>double</name>
                                                    </type>
                                                    <name>ry</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>tt</name>.
                                                                <name>nval</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"x-axis-rotation missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>double</name>
                                                    </type>
                                                    <name>xAxisRotation</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>tt</name>.
                                                                <name>nval</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"large-arc-flag missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>boolean</name>
                                                    </type>
                                                    <name>largeArcFlag</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>tt</name>.
                                                                <name>nval</name>
                                                            </name>
                                                            != 0
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"sweep-flag missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>boolean</name>
                                                    </type>
                                                    <name>sweepFlag</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>tt</name>.
                                                                <name>nval</name>
                                                            </name>
                                                            != 0
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"x coordinate missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>p</name>.
                                                        <name>x</name>
                                                    </name>
                                                    +=
                                                    <name><name>tt</name>.
                                                        <name>nval</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tt</name>.
                                                                <name>nextToken</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name><name>StreamPosTokenizer</name>.
                                                            <name>TT_NUMBER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>IOException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"y coordinate missing for 'A' at
                                                                                position "+
                                                                                <call>
                                                                                    <name><name>tt</name>.
                                                                                        <name>getStartPosition</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                +" in "+
                                                                                <name>str</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>p</name>.
                                                        <name>y</name>
                                                    </name>
                                                    +=
                                                    <name><name>tt</name>.
                                                        <name>nval</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>path</name>.
                                                            <name>arcTo</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>rx</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>ry</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>xAxisRotation</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>largeArcFlag</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>sweepFlag</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>p</name>.
                                                                        <name>x</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>p</name>.
                                                                        <name>y</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <expr_stmt>
                                                <expr>
                                                    <name>nextCommand</name>
                                                    = 'a'
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                            }
                                        </block>
                                    </case>
                                    <default>default :
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>println</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"SVGInputFormat.toPath aborting after illegal
                                                                        path command: "+<name>command</name>+" found in
                                                                        path "+
                                                                        <name>str</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        <break>break Commands;</break>
                                        <comment type="line">//throw new IOException("Illegal command: "+command);
                                        </comment>
                                    </default>
                                    }
                                </block>
                            </switch>
                            }
                        </block>
                    </while>
                    <if>if
                        <condition>(
                            <expr>
                                <name>path</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>paths</name>.
                                                <name>add</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>path</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>paths</name>.
                                    <name>toArray</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <name>
                                                <name>BezierPath</name>
                                                <index>[
                                                    <expr>
                                                        <call>
                                                            <name><name>paths</name>.
                                                                <name>size</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
