<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\action\PaletteMenuItemUI.java">
    <comment type="block">/*
        * @(#)PaletteMenuItemUI.java 1.1 2006-02-26
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.<name>draw</name>.
            <name>action</name>
        </name>
        ;
    </package>


    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>border</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>plaf</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.<name>swing</name>.<name>plaf</name>.
            <name>basic</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.
            <name>swing</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>event</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>event</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * PaletteMenuItemUI.
        *
        * @author Werner Randelshofer
        * @version 1.1 2006-02-26 Removed antialiasing hint.
        * &lt;br&gt;1.0 25. November 2003 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>PaletteMenuItemUI</name>
        <super>
            <extends>extends <name>javax</name>.<name>swing</name>.<name>plaf</name>.<name>basic</name>.
                <name>BasicMenuItemUI</name>
            </extends>
        </super>
        <block>{
            <comment type="javadoc">/** Creates a new instance. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>PaletteMenuItemUI</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>installDefaults</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>installDefaults</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>defaultTextIconGap</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// Should be from table</comment>
                    <comment type="line">//menuItem.setBorderPainted(false);</comment>
                    <comment type="line">//menuItem.setBorder(null);</comment>
                    <expr_stmt>
                        <expr>
                            <name>arrowIcon</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>checkIcon</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Dimension</name>
                </type>
                <name>getPreferredMenuItemSize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>JComponent</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Icon</name>
                            </type>
                            <name>checkIcon</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Icon</name>
                            </type>
                            <name>arrowIcon</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>defaultTextIconGap</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JMenuItem</name>
                            </type>
                            <name>b</name> =
                            <init>
                                <expr>(<name>JMenuItem</name>)
                                    <name>c</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Icon</name>
                            </type>
                            <name>icon</name> =
                            <init>
                                <expr>(<name>Icon</name>)
                                    <call>
                                        <name><name>b</name>.
                                            <name>getIcon</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>icon</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <call>
                                            <name>Dimension</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>22</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>22</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>Dimension</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>icon</name>.
                                                    <name>getIconWidth</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            + 2
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>icon</name>.
                                                    <name>getIconHeight</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            + 2
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>paint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>JComponent</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JMenuItem</name>
                            </type>
                            <name>b</name> =
                            <init>
                                <expr>(<name>JMenuItem</name>)
                                    <name>c</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Paint background</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>paintBackground</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>g</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>b</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>selectionBackground</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Paint the icon</comment>
                    <comment type="line">//((Graphics2D) g).setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                        RenderingHints.VALUE_ANTIALIAS_ON);
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Icon</name>
                            </type>
                            <name>icon</name> =
                            <init>
                                <expr>(<name>Icon</name>)
                                    <call>
                                        <name><name>b</name>.
                                            <name>getIcon</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>icon</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>icon</name>.
                                                <name>paintIcon</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>b</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>g</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>1</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>1</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
