<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\samples\odg\PathTool.java">
    <comment type="block">/*
        * @(#)PathTool.java 1.0 2007-07-24
        *
        * Copyright (c) 2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.
            <name>odg</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>undo</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.<name>samples</name>.<name>svg</name>.
            <name>figures</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>undo</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>event</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * Tool to scribble a ODGPath
        *
        * @author Werner Randelshofer
        * @version 1.0 2007-06-24 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>PathTool</name>
        <super>
            <extends>extends
                <name>BezierTool</name>
            </extends>
        </super>
        <block>{
            <comment type="javadoc">/**
                * Set this to true to turn on debugging output on System.out.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The path prototype for new figures.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>SVGPathFigure</name>
                    </type>
                    <name>pathPrototype</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Creates a new instance. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>PathTool</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SVGPathFigure</name>
                            </type>
                            <name>pathPrototype</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SVGBezierFigure</name>
                            </type>
                            <name>bezierPrototype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>pathPrototype</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bezierPrototype</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="javadoc">/** Creates a new instance. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>PathTool</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SVGPathFigure</name>
                            </type>
                            <name>pathPrototype</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SVGBezierFigure</name>
                            </type>
                            <name>bezierPrototype</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Map</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bezierPrototype</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>attributes</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>pathPrototype</name>
                            </name>
                            =
                            <name>pathPrototype</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>SVGPathFigure</name>
                </type>
                <name>createPath</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SVGPathFigure</name>
                            </type>
                            <name>f</name> =
                            <init>
                                <expr>(<name>SVGPathFigure</name>)
                                    <call>
                                        <name><name>pathPrototype</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getEditor</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>applyDefaultAttributesTo</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>f</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>attributes</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name><name>Map</name>.
                                                    <name>
                                                        <name>Entry</name>
                                                        <argument_list>&lt;
                                                            <argument>
                                                                <name>AttributeKey</name>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <name>Object</name>
                                                            </argument>
                                                            &gt;
                                                        </argument_list>
                                                    </name>
                                                </name>
                                            </type>
                                            <name>entry</name> :
                                            <range>
                                                <expr>
                                                    <call>
                                                        <name><name>attributes</name>.
                                                            <name>entrySet</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </range>
                                        </decl>
                                    </init>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>entry</name>.
                                                        <name>getKey</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>basicSet</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>f</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>entry</name>.
                                                                        <name>getValue</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>f</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>finishCreation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BezierFigure</name>
                            </type>
                            <name>createdFigure</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>println</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"PathTool.finishCreation "+
                                                    <name>createdFigure</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getDrawing</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>remove</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>createdFigure</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SVGPathFigure</name>
                            </type>
                            <name>createdPath</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>createPath</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>createdPath</name>.
                                    <name>removeAllChildren</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>createdPath</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>createdFigure</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getDrawing</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>createdPath</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getView</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>addToSelection</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>createdPath</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireUndoEvent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>createdPath</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
