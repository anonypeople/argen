<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\PictImageInputFormat.java">
    <comment type="javadoc">/**
        * @(#)PictImageInputFormat.java 1.0 Mar 18, 2008
        *
        * Copyright (c) 2008 Werner Randelshofer
        * Staldenmattweg 2, CH-6405 Immensee, Switzerland
        * All rights reserved.
        *
        * The copyright of this software is owned by Werner Randelshofer.
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * Werner Randelshofer. For details see accompanying license terms.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>datatransfer</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>image</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>io</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>lang</name>.
            <name>reflect</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.
            <name>imageio</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.
            <name>swing</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>filechooser</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.<name>gui</name>.
            <name>datatransfer</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>io</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.<name>util</name>.
            <name>Images</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * An input format for importing drawings using the image/x-pict format from the
        * Mac OS X clipboard.
        * &lt;p&gt;
        * This class uses the prototype design pattern. A ImageHolderFigure figure is used
        * as a prototype for creating a figure that holds the imported image.
        *
        * @author Werner Randelshofer
        *Â @version 1.0 Mar 18, 2008 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>PictImageInputFormat</name>
        <super>
            <implements>implements
                <name>InputFormat</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/**
                * The prototype for creating a figure that holds the imported image.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ImageHolderFigure</name>
                    </type>
                    <name>prototype</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Format description used for the file filter.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>description</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * File name extension used for the file filter.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>fileExtension</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Image IO image format name.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>formatName</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The image type must match the output format, for example, PNG supports
                * BufferedImage.TYPE_INT_ARGB whereas GIF needs BufferedImage.TYPE_
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>imageType</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The image/x-pict data flavor is used by the Mac OS X clipboard.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>DataFlavor</name>
                    </type>
                    <name>PICT_FLAVOR</name>
                </decl>
                ;
            </decl_stmt>

            static
            <block>{
                <try>try
                    <block>{
                        <expr_stmt>
                            <expr>
                                <name>PICT_FLAVOR</name>
                                = new
                                <call>
                                    <name>DataFlavor</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"image/x-pict"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            ;
                        </expr_stmt>
                        }
                    </block>
                    <catch>catch (
                        <param>
                            <decl>
                                <type>
                                    <name>ClassNotFoundException</name>
                                </type>
                                <name>e</name>
                            </decl>
                        </param>
                        )
                        <block>{
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>InternalError</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Unable to create data flavor image/x-pict"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                            }
                        </block>
                    </catch>
                </try>
                }
            </block>

            <comment type="javadoc">/** Creates a new image output format for Portable Network Graphics PNG. */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>PictImageInputFormat</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ImageHolderFigure</name>
                            </type>
                            <name>prototype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>prototype</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"PICT"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"PICT (pct)"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"pct"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>BufferedImage</name>.
                                                <name>TYPE_INT_ARGB</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/** Creates a new image output format for the specified image format.
                *
                * @param formatName The format name for the javax.imageio.ImageIO object.
                * @param description The format description to be used for the file filter.
                * @param fileExtension The file extension to be used for file filter.
                * @param bufferedImageType The BufferedImage type used to produce the image.
                * The value of this parameter must match with the format name.
                */
            </comment>
            <constructor>
                <specifier>private</specifier>
                <name>PictImageInputFormat</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ImageHolderFigure</name>
                            </type>
                            <name>prototype</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>formatName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>description</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>fileExtension</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>bufferedImageType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>prototype</name>
                            </name>
                            =
                            <name>prototype</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>formatName</name>
                            </name>
                            =
                            <name>formatName</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>description</name>
                            </name>
                            =
                            <name>description</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fileExtension</name>
                            </name>
                            =
                            <name>fileExtension</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>imageType</name>
                            </name>
                            =
                            <name>bufferedImageType</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>javax</name>.<name>swing</name>.<name>filechooser</name>.
                        <name>FileFilter</name>
                    </name>
                </type>
                <name>getFileFilter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ExtensionFileFilter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>description</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fileExtension</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getFileExtension</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fileExtension</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JComponent</name>
                </type>
                <name>getInputFormatAccessory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>read</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>File</name>
                            </type>
                            <name>file</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Drawing</name>
                            </type>
                            <name>drawing</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>in</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>in</name>
                                    = new
                                    <call>
                                        <name>BufferedInputStream</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>FileInputStream</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>file</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Image</name>
                                    </type>
                                    <name>img</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getImageFromPictStream</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>in</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>img</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IOException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Couldn't read pict image"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ImageHolderFigure</name>
                                    </type>
                                    <name>figure</name> =
                                    <init>
                                        <expr>(<name>ImageHolderFigure</name>)
                                            <call>
                                                <name><name>prototype</name>.
                                                    <name>clone</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>figure</name>.
                                            <name>setBufferedImage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Images</name>.
                                                            <name>toBufferedImage</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>img</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>figure</name>.
                                            <name>setBounds</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name><name>Point2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name><name>Point2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>figure</name>.
                                                                            <name>getBufferedImage</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>getWidth</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>figure</name>.
                                                                            <name>getBufferedImage</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>getHeight</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>drawing</name>.
                                            <name>basicAdd</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>figure</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <finally>finally
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>in</name>.
                                                <name>close</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </finally>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>read</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>in</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Drawing</name>
                            </type>
                            <name>drawing</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Image</name>
                                    </type>
                                    <name>img</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getImageFromPictStream</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>in</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>img</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IOException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Couldn't read pict image"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ImageHolderFigure</name>
                                    </type>
                                    <name>figure</name> =
                                    <init>
                                        <expr>(<name>ImageHolderFigure</name>)
                                            <call>
                                                <name><name>prototype</name>.
                                                    <name>clone</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>figure</name>.
                                            <name>setBufferedImage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Images</name>.
                                                            <name>toBufferedImage</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>img</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>figure</name>.
                                            <name>setBounds</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name><name>Point2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name><name>Point2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>figure</name>.
                                                                            <name>getBufferedImage</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>getWidth</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>figure</name>.
                                                                            <name>getBufferedImage</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>getHeight</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>drawing</name>.
                                            <name>basicAdd</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>figure</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <finally>finally
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>in</name>.
                                                <name>close</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </finally>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ImageHolderFigure</name>
                </type>
                <name>createImageHolder</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>in</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ImageHolderFigure</name>
                            </type>
                            <name>figure</name> =
                            <init>
                                <expr>(<name>ImageHolderFigure</name>)
                                    <call>
                                        <name><name>prototype</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>setBufferedImage</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Images</name>.
                                                    <name>toBufferedImage</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>getImageFromPictStream</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>in</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>figure</name>.
                                    <name>setBounds</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>figure</name>.
                                                                    <name>getBufferedImage</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>getWidth</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>figure</name>.
                                                                    <name>getBufferedImage</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>getHeight</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>figure</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isDataFlavorSupported</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DataFlavor</name>
                            </type>
                            <name>flavor</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>flavor</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>PICT_FLAVOR</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>read</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Transferable</name>
                            </type>
                            <name>t</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Drawing</name>
                            </type>
                            <name>drawing</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>UnsupportedFlavorException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>data</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>t</name>.
                                            <name>getTransferData</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>PICT_FLAVOR</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>data</name>
                                <name>instanceof</name>
                                <name>InputStream</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>InputStream</name>
                                        </type>
                                        <name>in</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>in</name>
                                                = (<name>InputStream</name>)
                                                <name>data</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Image</name>
                                                </type>
                                                <name>img</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name>getImageFromPictStream</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>in</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>img</name>
                                                    ==
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IOException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Couldn't read pict image"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>ImageHolderFigure</name>
                                                </type>
                                                <name>figure</name> =
                                                <init>
                                                    <expr>(<name>ImageHolderFigure</name>)
                                                        <call>
                                                            <name><name>prototype</name>.
                                                                <name>clone</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>figure</name>.
                                                        <name>setBufferedImage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>Images</name>.
                                                                        <name>toBufferedImage</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>img</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>figure</name>.
                                                        <name>setBounds</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name><name>Point2D</name>.
                                                                        <name>Double</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>0</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>0</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name><name>Point2D</name>.
                                                                        <name>Double</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>figure</name>.
                                                                                        <name>getBufferedImage</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getWidth</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>figure</name>.
                                                                                        <name>getBufferedImage</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getHeight</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>drawing</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>figure</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <finally>finally
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>in</name>.
                                                            <name>close</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </finally>
                                </try>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="block">/*
                * Converts a PICT to an AWT image using QuickTime for Java.
                * This code was contributed by Gord Peters.
                *
                * XXX - This code performs extremly slow. We should replace it by JNI
                * code which directly accesses the native clipboard.
                */
            </comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>Image</name>
                </type>
                <name>getImageFromPictStream</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>is</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ByteArrayOutputStream</name>
                                    </type>
                                    <name>baos</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>ByteArrayOutputStream</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// We need to strip the header from the data because a PICT file
                            </comment>
                            <comment type="line">// has a 512 byte header and then the data, but in our case we only
                            </comment>
                            <comment type="line">// need the data. --GP</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </type>
                                    <name>header</name> =
                                    <init>
                                        <expr>new
                                            <name>
                                                <name>byte</name>
                                                <index>[<expr>512</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </type>
                                    <name>buf</name> =
                                    <init>
                                        <expr>new
                                            <name>
                                                <name>byte</name>
                                                <index>[<expr>4096</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>retval</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                    , <name>size</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>baos</name>.
                                            <name>write</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>header</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>512</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <while>while
                                <condition>(
                                    <expr>(<name>retval</name> =
                                        <call>
                                            <name><name>is</name>.
                                                <name>read</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>buf</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>4096</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ) &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>baos</name>.
                                                    <name>write</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>buf</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>retval</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>baos</name>.
                                            <name>close</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>size</name>
                                    =
                                    <call>
                                        <name><name>baos</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">//IJ.log("size: "+size); IJ.wait(2000);</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>size</name>
                                        &lt;= 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>byte</name>
                                        <index>[]</index>
                                    </type>
                                    <name>imgBytes</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>baos</name>.
                                                    <name>toByteArray</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// Again with the uglyness. Here we need to use the Quicktime</comment>
                            <comment type="line">// for Java code in order to create an Image object from</comment>
                            <comment type="line">// the PICT data we received on the clipboard. However, in</comment>
                            <comment type="line">// order to get this to compile on other platforms, we use</comment>
                            <comment type="line">// the Java reflection API.</comment>
                            <comment type="line">//</comment>
                            <comment type="line">// For reference, here is the equivalent code without</comment>
                            <comment type="line">// reflection:</comment>
                            <comment type="line">//</comment>
                            <comment type="line">//</comment>
                            <comment type="line">// if (QTSession.isInitialized() == false) {</comment>
                            <comment type="line">// QTSession.open();</comment>
                            <comment type="line">// }</comment>
                            <comment type="line">// QTHandle handle= new QTHandle(imgBytes);</comment>
                            <comment type="line">// GraphicsImporter gi=</comment>
                            <comment type="line">// new GraphicsImporter(QTUtils.toOSType("PICT"));</comment>
                            <comment type="line">// gi.setDataHandle(handle);</comment>
                            <comment type="line">// QDRect qdRect= gi.getNaturalBounds();</comment>
                            <comment type="line">// GraphicsImporterDrawer gid= new GraphicsImporterDrawer(gi);
                            </comment>
                            <comment type="line">// QTImageProducer qip= new QTImageProducer(gid,</comment>
                            <comment type="line">// new Dimension(qdRect.getWidth(),</comment>
                            <comment type="line">// qdRect.getHeight()));</comment>
                            <comment type="line">// return(Toolkit.getDefaultToolkit().createImage(qip));</comment>
                            <comment type="line">//</comment>
                            <comment type="line">// --GP</comment>
                            <comment type="line">//IJ.log("quicktime.QTSession");</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Class</name>
                                    </type>
                                    <name>c</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>Class</name>.
                                                    <name>forName</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"quicktime.QTSession"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Method</name>
                                    </type>
                                    <name>m</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>c</name>.
                                                    <name>getMethod</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"isInitialized"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Boolean</name>
                                    </type>
                                    <name>b</name> =
                                    <init>
                                        <expr>(<name>Boolean</name>)
                                            <call>
                                                <name><name>m</name>.
                                                    <name>invoke</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>(
                                                            <name>
                                                                <name>Object</name>
                                                                <index>[]</index>
                                                            </name>
                                                            )
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>b</name>.
                                                <name>booleanValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        == false
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>m</name>
                                                =
                                                <call>
                                                    <name><name>c</name>.
                                                        <name>getMethod</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"open"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>m</name>.
                                                        <name>invoke</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>c</name>
                                    =
                                    <call>
                                        <name><name>Class</name>.
                                            <name>forName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"quicktime.util.QTHandle"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Constructor</name>
                                    </type>
                                    <name>con</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>c</name>.
                                                    <name>getConstructor</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>new
                                                            <name>
                                                                <name>Class</name>
                                                                <index>[]</index>
                                                            </name>
                                                            <block>{
                                                                <expr>
                                                                    <call>
                                                                        <name><name>imgBytes</name>.
                                                                            <name>getClass</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                }
                                                            </block>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>handle</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>con</name>.
                                                    <name>newInstance</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>new
                                                            <name>
                                                                <name>Object</name>
                                                                <index>[]</index>
                                                            </name>
                                                            <block>{
                                                                <expr>
                                                                    <name>imgBytes</name>
                                                                </expr>
                                                                }
                                                            </block>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>s</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>String</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"PICT"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>c</name>
                                    =
                                    <call>
                                        <name><name>Class</name>.
                                            <name>forName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"quicktime.util.QTUtils"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>m</name>
                                    =
                                    <call>
                                        <name><name>c</name>.
                                            <name>getMethod</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"toOSType"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Class</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <call>
                                                                <name><name>s</name>.
                                                                    <name>getClass</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Integer</name>
                                    </type>
                                    <name>type</name> =
                                    <init>
                                        <expr>(<name>Integer</name>)
                                            <call>
                                                <name><name>m</name>.
                                                    <name>invoke</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>new
                                                            <name>
                                                                <name>Object</name>
                                                                <index>[]</index>
                                                            </name>
                                                            <block>{
                                                                <expr>
                                                                    <name>s</name>
                                                                </expr>
                                                                }
                                                            </block>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>c</name>
                                    =
                                    <call>
                                        <name><name>Class</name>.
                                            <name>forName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"quicktime.std.image.GraphicsImporter"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>con</name>
                                    =
                                    <call>
                                        <name><name>c</name>.
                                            <name>getConstructor</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Class</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <name><name>type</name>.
                                                                <name>TYPE</name>
                                                            </name>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>importer</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>con</name>.
                                                    <name>newInstance</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>new
                                                            <name>
                                                                <name>Object</name>
                                                                <index>[]</index>
                                                            </name>
                                                            <block>{
                                                                <expr>
                                                                    <name>type</name>
                                                                </expr>
                                                                }
                                                            </block>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>m</name>
                                    =
                                    <call>
                                        <name><name>c</name>.
                                            <name>getMethod</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"setDataHandle"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Class</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <call>
                                                                <name><name>Class</name>.
                                                                    <name>forName</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"quicktime.util." + "QTHandleRef"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>m</name>.
                                            <name>invoke</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>importer</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Object</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <name>handle</name>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>m</name>
                                    =
                                    <call>
                                        <name><name>c</name>.
                                            <name>getMethod</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"getNaturalBounds"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>rect</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>m</name>.
                                                    <name>invoke</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>importer</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>c</name>
                                    =
                                    <call>
                                        <name><name>Class</name>.
                                            <name>forName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"quicktime.app.view.GraphicsImporterDrawer"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>con</name>
                                    =
                                    <call>
                                        <name><name>c</name>.
                                            <name>getConstructor</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Class</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <call>
                                                                <name><name>importer</name>.
                                                                    <name>getClass</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>iDrawer</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>con</name>.
                                                    <name>newInstance</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>new
                                                            <name>
                                                                <name>Object</name>
                                                                <index>[]</index>
                                                            </name>
                                                            <block>{
                                                                <expr>
                                                                    <name>importer</name>
                                                                </expr>
                                                                }
                                                            </block>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>m</name>
                                    =
                                    <call>
                                        <name><name>rect</name>.
                                            <name>getClass</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getMethod</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"getWidth"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Integer</name>
                                    </type>
                                    <name>width</name> =
                                    <init>
                                        <expr>(<name>Integer</name>)
                                            <call>
                                                <name><name>m</name>.
                                                    <name>invoke</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>rect</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>m</name>
                                    =
                                    <call>
                                        <name><name>rect</name>.
                                            <name>getClass</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getMethod</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"getHeight"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Integer</name>
                                    </type>
                                    <name>height</name> =
                                    <init>
                                        <expr>(<name>Integer</name>)
                                            <call>
                                                <name><name>m</name>.
                                                    <name>invoke</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>rect</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Dimension</name>
                                    </type>
                                    <name>d</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>Dimension</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>width</name>.
                                                                    <name>intValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>height</name>.
                                                                    <name>intValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>c</name>
                                    =
                                    <call>
                                        <name><name>Class</name>.
                                            <name>forName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"quicktime.app.view.QTImageProducer"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>con</name>
                                    =
                                    <call>
                                        <name><name>c</name>.
                                            <name>getConstructor</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Class</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <call>
                                                                <name><name>iDrawer</name>.
                                                                    <name>getClass</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ,
                                                        <expr>
                                                            <call>
                                                                <name><name>d</name>.
                                                                    <name>getClass</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>producer</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>con</name>.
                                                    <name>newInstance</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>new
                                                            <name>
                                                                <name>Object</name>
                                                                <index>[]</index>
                                                            </name>
                                                            <block>{
                                                                <expr>
                                                                    <name>iDrawer</name>
                                                                </expr>
                                                                ,
                                                                <expr>
                                                                    <name>d</name>
                                                                </expr>
                                                                }
                                                            </block>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>producer</name>
                                        <name>instanceof</name>
                                        <name>ImageProducer</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>(
                                                <call>
                                                    <name><name>Toolkit</name>.
                                                        <name>getDefaultToolkit</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>createImage</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>ImageProducer</name>)
                                                                <name>producer</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                )
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>IOException</name>
                                        </type>
                                        <name>error</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>IOException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Couldn't read PICT image"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>error</name>.
                                                <name>initCause</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <throw>throw
                                    <expr>
                                        <name>error</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IOException</name>
                            </type>
                            <name>error</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>IOException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Couldn't read PICT image"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>
                            <name>error</name>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
