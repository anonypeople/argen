<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\apache\batik\ext\awt\RadialGradientPaint.java">
    <comment type="block">/*

        Copyright 2001-2003 The Apache Software Foundation

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>batik</name>.<name>ext</name>.
            <name>awt</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Color</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>PaintContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Rectangle</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>RenderingHints</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>AffineTransform</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>NoninvertibleTransformException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Point2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Rectangle2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>image</name>.
            <name>ColorModel</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * This class provides a way to fill a shape with a circular radial color
        * gradient pattern. The user may specify 2 or more gradient colors, and this
        * paint will provide an interpolation between each color.
        * &lt;p&gt;
        *
        * The user must provide an array of floats specifying how to distribute the
        * colors along the gradient. These values should range from 0.0 to 1.0 and
        * act like keyframes along the gradient (they mark where the gradient should
        * be exactly a particular color).
        *
        * &lt;p&gt;
        * This paint will map the first color of the gradient to a focus point within
        * the circle, and the last color to the perimeter of the circle, interpolating
        * smoothly for any inbetween colors specified by the user. Any line drawn
        * from the focus point to the circumference will span the all the gradient
        * colors. By default the focus is set to be the center of the circle.
        *
        * &lt;p&gt;
        * Specifying a focus point outside of the circle's radius will result in the
        * focus being set to the intersection point of the focus-center line and the
        * perimenter of the circle.
        * &lt;p&gt;
        *
        * Specifying a cycle method allows the user to control the painting behavior
        * outside of the bounds of the circle's radius. See LinearGradientPaint for
        * more details.
        *
        * &lt;p&gt;
        * The following code demonstrates typical usage of RadialGradientPaint:
        * &lt;p&gt;
        * &lt;code&gt;
        * Point2D center = new Point2D.Float(0, 0);&lt;br&gt;
        * float radius = 20;
        * float[] dist = {0.0, 0.2, 1.0};&lt;br&gt;
        * Color[] colors = {Color.red, Color.white, Color.blue};&lt;br&gt;
        * RadialGradientPaint p = new RadialGradientPaint(center, radius,
        * dist, colors);
        * &lt;/code&gt;
        *
        * &lt;p&gt; In the event that the user does not set the first keyframe value equal
        * to 0 and the last keyframe value equal to 1, keyframes will be created at
        * these positions and the first and last colors will be replicated there.
        * So, if a user specifies the following arrays to construct a gradient:&lt;br&gt;
        * {Color.blue, Color.red}, {.3, .7}&lt;br&gt;
        * this will be converted to a gradient with the following keyframes:
        * {Color.blue, Color.blue, Color.red, Color.red}, {0, .3, .7, 1}
        *
        *
        * &lt;p&gt;
        * &lt;img src = "radial.jpg"&gt;
        * &lt;p&gt;
        * This image demonstrates a radial gradient with NO_CYCLE and default focus.
        * &lt;p&gt;
        *
        * &lt;img src = "radial2.jpg"&gt;
        * &lt;p&gt;
        * This image demonstrates a radial gradient with NO_CYCLE and non-centered
        * focus.
        * &lt;p&gt;
        *
        * &lt;img src = "radial3.jpg"&gt;
        * &lt;p&gt;
        * This image demonstrates a radial gradient with REFLECT and non-centered
        * focus.
        *
        * @author Nicholas Talian, Vincent Hardy, Jim Graham, Jerry Evans
        * @author &lt;a href="mailto:vincent.hardy@eng.sun.com"&gt;Vincent Hardy&lt;/a&gt;
        * @version $Id: RadialGradientPaint.java,v 1.6 2004/08/18 07:13:41 vhardy Exp $
        *
        */
    </comment>

    <class>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>RadialGradientPaint</name>
        <super>
            <extends>extends
                <name>MultipleGradientPaint</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/** Focus point which defines the 0% gradient stop x coordinate. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Point2D</name>
                    </type>
                    <name>focus</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Center of the circle defining the 100% gradient stop x coordinate. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Point2D</name>
                    </type>
                    <name>center</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Radius of the outermost circle defining the 100% gradient stop. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>float</name>
                    </type>
                    <name>radius</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;
                *
                * Constructs a &lt;code&gt;RadialGradientPaint&lt;/code&gt;, using the center as the
                * focus point.
                *
                * @param cx the x coordinate in user space of the center point of the
                * circle defining the gradient. The last color of the gradient is mapped
                * to the perimeter of this circle
                *
                * @param cy the y coordinate in user space of the center point of the
                * circle defining the gradient. The last color of the gradient is mapped
                * to the perimeter of this circle
                *
                * @param radius the radius of the circle defining the extents of the
                * color gradient
                *
                * @param fractions numbers ranging from 0.0 to 1.0 specifying the
                * distribution of colors along the gradient
                *
                * @param colors array of colors to use in the gradient. The first color
                * is used at the focus point, the last color around the perimeter of the
                * circle.
                *
                *
                * @throws IllegalArgumentException
                * if fractions.length != colors.length, or if colors is less
                * than 2 in size, or if radius &lt; 0
                *
                *
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>RadialGradientPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>cx</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>cy</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>radius</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>float</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>fractions</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Color</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>colors</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cx</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cy</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>radius</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cx</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cy</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fractions</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>colors</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;
                *
                * Constructs a &lt;code&gt;RadialGradientPaint&lt;/code&gt;, using the center as the
                * focus point.
                *
                * @param center the center point, in user space, of the circle defining
                * the gradient
                *
                * @param radius the radius of the circle defining the extents of the
                * color gradient
                *
                * @param fractions numbers ranging from 0.0 to 1.0 specifying the
                * distribution of colors along the gradient
                *
                * @param colors array of colors to use in the gradient. The first color
                * is used at the focus point, the last color around the perimeter of the
                * circle.
                *
                * @throws NullPointerException if center point is null
                *
                * @throws IllegalArgumentException
                * if fractions.length != colors.length, or if colors is less
                * than 2 in size, or if radius &lt; 0
                *
                *
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>RadialGradientPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Point2D</name>
                            </type>
                            <name>center</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>radius</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>float</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>fractions</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Color</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>colors</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>center</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>radius</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>center</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fractions</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>colors</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;
                *
                * Constructs a &lt;code&gt;RadialGradientPaint&lt;/code&gt;.
                *
                * @param cx the x coordinate in user space of the center point of the
                * circle defining the gradient. The last color of the gradient is mapped
                * to the perimeter of this circle
                *
                * @param cy the y coordinate in user space of the center point of the
                * circle defining the gradient. The last color of the gradient is mapped
                * to the perimeter of this circle
                *
                * @param radius the radius of the circle defining the extents of the
                * color gradient
                *
                * @param fx the x coordinate of the point in user space to which the
                * first color is mapped
                *
                * @param fy the y coordinate of the point in user space to which the
                * first color is mapped
                *
                * @param fractions numbers ranging from 0.0 to 1.0 specifying the
                * distribution of colors along the gradient
                *
                * @param colors array of colors to use in the gradient. The first color
                * is used at the focus point, the last color around the perimeter of the
                * circle.
                *
                * @throws IllegalArgumentException
                * if fractions.length != colors.length, or if colors is less
                * than 2 in size, or if radius &lt; 0
                *
                *
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>RadialGradientPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>cx</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>cy</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>radius</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>fx</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>fy</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>float</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>fractions</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Color</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>colors</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Float</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>cx</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>cy</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>radius</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name><name>Point2D</name>.
                                                    <name>Float</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>fx</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>fy</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fractions</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>colors</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>NO_CYCLE</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>SRGB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;
                *
                * Constructs a &lt;code&gt;RadialGradientPaint&lt;/code&gt;.
                *
                * @param center the center point, in user space, of the circle defining
                * the gradient. The last color of the gradient is mapped to the perimeter
                * of this circle
                *
                * @param radius the radius of the circle defining the extents of the color
                * gradient
                *
                * @param focus the point, in user space, to which the first color is
                * mapped
                *
                * @param fractions numbers ranging from 0.0 to 1.0 specifying the
                * distribution of colors along the gradient
                *
                * @param colors array of colors to use in the gradient. The first color
                * is used at the focus point, the last color around the perimeter of the
                * circle.
                *
                * @throws NullPointerException if one of the points is null
                *
                * @throws IllegalArgumentException
                * if fractions.length != colors.length, or if colors is less
                * than 2 in size, or if radius &lt; 0
                *
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>RadialGradientPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Point2D</name>
                            </type>
                            <name>center</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>radius</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Point2D</name>
                            </type>
                            <name>focus</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>float</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>fractions</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Color</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>colors</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>center</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>radius</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>focus</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fractions</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>colors</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>NO_CYCLE</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>SRGB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;
                *
                * Constructs a &lt;code&gt;RadialGradientPaint&lt;/code&gt;.
                *
                * @param center the center point in user space of the circle defining the
                * gradient. The last color of the gradient is mapped to the perimeter of
                * this circle
                *
                * @param radius the radius of the circle defining the extents of the color
                * gradient
                *
                * @param focus the point in user space to which the first color is mapped
                *
                * @param fractions numbers ranging from 0.0 to 1.0 specifying the
                * distribution of colors along the gradient
                *
                * @param colors array of colors to use in the gradient. The first color is
                * used at the focus point, the last color around the perimeter of the
                * circle.
                *
                * @param cycleMethod either NO_CYCLE, REFLECT, or REPEAT
                *
                * @param colorSpace which colorspace to use for interpolation,
                * either SRGB or LINEAR_RGB
                *
                * @throws NullPointerException if one of the points is null
                *
                * @throws IllegalArgumentException
                * if fractions.length != colors.length, or if colors is less
                * than 2 in size, or if radius &lt; 0
                *
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>RadialGradientPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Point2D</name>
                            </type>
                            <name>center</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>radius</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Point2D</name>
                            </type>
                            <name>focus</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>float</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>fractions</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Color</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>colors</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CycleMethodEnum</name>
                            </type>
                            <name>cycleMethod</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ColorSpaceEnum</name>
                            </type>
                            <name>colorSpace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>center</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>radius</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>focus</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fractions</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>colors</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cycleMethod</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>colorSpace</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AffineTransform</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;
                *
                * Constructs a &lt;code&gt;RadialGradientPaint&lt;/code&gt;.
                *
                * @param center the center point in user space of the circle defining the
                * gradient. The last color of the gradient is mapped to the perimeter of
                * this circle
                *
                * @param radius the radius of the circle defining the extents of the color
                * gradient.
                *
                * @param focus the point in user space to which the first color is mapped
                *
                * @param fractions numbers ranging from 0.0 to 1.0 specifying the
                * distribution of colors along the gradient
                *
                * @param colors array of colors to use in the gradient. The first color is
                * used at the focus point, the last color around the perimeter of the
                * circle.
                *
                * @param cycleMethod either NO_CYCLE, REFLECT, or REPEAT
                *
                * @param colorSpace which colorspace to use for interpolation,
                * either SRGB or LINEAR_RGB
                *
                * @param gradientTransform transform to apply to the gradient
                *
                * @throws NullPointerException if one of the points is null,
                * or gradientTransform is null
                *
                * @throws IllegalArgumentException
                * if fractions.length != colors.length, or if colors is less
                * than 2 in size, or if radius &lt; 0
                *
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>RadialGradientPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Point2D</name>
                            </type>
                            <name>center</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>radius</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Point2D</name>
                            </type>
                            <name>focus</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>float</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>fractions</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Color</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>colors</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CycleMethodEnum</name>
                            </type>
                            <name>cycleMethod</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ColorSpaceEnum</name>
                            </type>
                            <name>colorSpace</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>gradientTransform</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fractions</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>colors</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cycleMethod</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>colorSpace</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>gradientTransform</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Check input arguments</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>center</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NullPointerException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Center point should not be null."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>focus</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NullPointerException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Focus point should not be null."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>radius</name>
                                &lt;= 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"radius should be greater than zero"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//copy parameters</comment>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>center</name>
                            </name>
                            = (<name>Point2D</name>)
                            <call>
                                <name><name>center</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>focus</name>
                            </name>
                            = (<name>Point2D</name>)
                            <call>
                                <name><name>focus</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>radius</name>
                            </name>
                            =
                            <name>radius</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;
                *
                * Constructs a &lt;code&gt;RadialGradientPaint&lt;/code&gt;, the gradient circle is
                * defined by a bounding box.
                *
                * @param gradientBounds the bounding box, in user space, of the circle
                * defining outermost extent of the gradient.
                *
                * @param fractions numbers ranging from 0.0 to 1.0 specifying the
                * distribution of colors along the gradient
                *
                * @param colors array of colors to use in the gradient. The first color
                * is used at the focus point, the last color around the perimeter of the
                * circle.
                *
                * @throws NullPointerException if the gradientBounds is null
                *
                * @throws IllegalArgumentException
                * if fractions.length != colors.length, or if colors is less
                * than 2 in size, or if radius &lt; 0
                *
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>RadialGradientPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>gradientBounds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>float</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>fractions</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Color</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>colors</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">//calculate center point and radius based on bounding box coordinates.
                    </comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>float</name>)
                                            <call>
                                                <name><name>gradientBounds</name>.
                                                    <name>getX</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            ( (<name>float</name>)
                                            <call>
                                                <name><name>gradientBounds</name>.
                                                    <name>getWidth</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            / 2)
                                        </expr>
                                    </argument>
                                    ,

                                    <argument>
                                        <expr>(<name>float</name>)
                                            <call>
                                                <name><name>gradientBounds</name>.
                                                    <name>getY</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            +
                                            ( (<name>float</name>)
                                            <call>
                                                <name><name>gradientBounds</name>.
                                                    <name>getWidth</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            / 2)
                                        </expr>
                                    </argument>
                                    ,

                                    <argument>
                                        <expr>(<name>float</name>)
                                            <call>
                                                <name><name>gradientBounds</name>.
                                                    <name>getWidth</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            / 2
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fractions</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>colors</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>


            <comment type="javadoc">/** &lt;p&gt;
                * Creates and returns a PaintContext used to generate the color pattern,
                * for use by the internal rendering engine.
                *
                * @param cm {@link ColorModel} that receives
                * the &lt;code&gt;Paint&lt;/code&gt; data. This is used only as a hint.
                *
                * @param deviceBounds the device space bounding box of the
                * graphics primitive being rendered
                *
                * @param userBounds the user space bounding box of the
                * graphics primitive being rendered
                *
                * @param transform the {@link AffineTransform} from user
                * space into device space
                *
                * @param hints the hints that the context object uses to choose
                * between rendering alternatives
                *
                * @return the {@link PaintContext} that generates color patterns.
                *
                * @throws IllegalArgumentException if the transform is not invertible
                *
                * @see PaintContext
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>PaintContext</name>
                </type>
                <name>createContext</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ColorModel</name>
                            </type>
                            <name>cm</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle</name>
                            </type>
                            <name>deviceBounds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>userBounds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>transform</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RenderingHints</name>
                            </type>
                            <name>hints</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// Can't modify the transform passed in...</comment>
                    <expr_stmt>
                        <expr>
                            <name>transform</name>
                            = new
                            <call>
                                <name>AffineTransform</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>transform</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// incorporate the gradient transform</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>transform</name>.
                                    <name>concatenate</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>gradientTransform</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <try>try
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>RadialGradientPaintContext</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>cm</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>deviceBounds</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>userBounds</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>transform</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>hints</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>center</name>.
                                                            <name>getX</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>center</name>.
                                                            <name>getY</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>radius</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>focus</name>.
                                                            <name>getX</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>focus</name>.
                                                            <name>getY</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fractions</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>colors</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>cycleMethod</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>colorSpace</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>

                        <catch>catch(
                            <param>
                                <decl>
                                    <type>
                                        <name>NoninvertibleTransformException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"transform should be " +
                                                        "invertible"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a copy of the center point of the radial gradient.
                * @return a {@link Point2D} object that is a copy of the center point
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Point2D</name>
                </type>
                <name>getCenterPoint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>center</name>.
                                                    <name>getX</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>center</name>.
                                                    <name>getY</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Returns a copy of the end point of the gradient axis.
                * @return a {@link Point2D} object that is a copy of the focus point
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Point2D</name>
                </type>
                <name>getFocusPoint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>focus</name>.
                                                    <name>getX</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>focus</name>.
                                                    <name>getY</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Returns the radius of the circle defining the radial gradient.
                * @return the radius of the circle defining the radial gradient
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>float</name>
                </type>
                <name>getRadius</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>radius</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>

</unit>
