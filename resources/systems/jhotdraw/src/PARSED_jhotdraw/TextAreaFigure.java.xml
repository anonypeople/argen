<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\TextAreaFigure.java">
    <comment type="block">/*
        * @(#)TextAreaFigure.java 2.0.3 2007-05-02
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>font</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>text</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>io</name>
        </name>
        .*;
    </import>
    <import>import static
        <name><name>org</name>.<name>jhotdraw</name>.<name>draw</name>.
            <name>AttributeKeys</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.<name>xml</name>.
            <name>DOMInput</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.<name>xml</name>.
            <name>DOMOutput</name>
        </name>
        ;
    </import>
    <comment type="javadoc">/**
        * A TextAreaFigure contains formatted text.&lt;br&gt;
        * It automatically rearranges the text to fit its allocated display area,
        * breaking the lines at word boundaries whenever possible.&lt;br&gt;
        * The text can contain either LF or CRLF sequences to separate paragraphs,
        * as well as tab characters for table like formatting and alignment.&lt;br&gt;
        * Currently the tabs are distributed at regular intervals as determined by
        * the TabSize property. Tabs align correctly with either fixed
        * or variable fonts.&lt;br&gt;
        * If, when resizing, the vertical size of the display box is not enough to
        * display all the text, TextAreaFigure displays a dashed red line at the
        * bottom of the figure to indicate there is hidden text.&lt;br&gt;
        * TextAreFigure uses all standard attributes for the area Rectangle2D.Double,
        * ie: FillColor, PenColor for the border, FontSize, FontStyle, and FontName,
        * as well as four additional attributes LeftMargin, RightMargin, TopMargin,
        * and TabSize.&lt;br&gt;
        * &lt;p&gt;
        * A DrawingEditor should provide the TextAreaTool to create a TextAreaFigure.
        * &lt;p&gt;
        * FIXME - TextAreaFigure should not draw a rectangle on its own but rather
        * rely on a decorator. We probably need a DecoratorConnector for this and we
        * need a way to specify the inner bounds of the decorator. We also need a way
        * to center the text of the TextAreaFigure verticaly and horizontaly.
        *
        * @author Eduardo Francos - InContext (original version),
        * Werner Randelshofer (this derived version)
        * @version 2.0.3 2007-04-05 Made all instance variables protected instead of private.
        * &lt;br&gt;2.0.2 2006-12-11 Implemented more efficient clipping.
        * &lt;br&gt;2.0.1 2006-02-27 Draw UNDERLINE_LOW_ONE_PIXEL instead of UNDERLINE_ON.
        * &lt;br&gt;2.0 2006-01-14 Changed to support double precison coordinates.
        * &lt;br&gt;1.0 5. March 2004 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>TextAreaFigure</name>
        <super>
            <extends>extends
                <name>AbstractAttributedDecoratedFigure</name>
            </extends>
            <implements>implements
                <name>TextHolderFigure</name>
            </implements>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name><name>Rectangle2D</name>.
                            <name>Double</name>
                        </name>
                    </type>
                    <name>bounds</name> =
                    <init>
                        <expr>new
                            <call>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>editable</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>BasicStroke</name>
                    </type>
                    <name>dashes</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>BasicStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>1f</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>BasicStroke</name>.
                                                <name>CAP_BUTT</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>BasicStroke</name>.
                                                <name>JOIN_BEVEL</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0f</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <name>
                                                <name>float</name>
                                                <index>[]</index>
                                            </name>
                                            <block>{<expr>4f</expr>, <expr>4f</expr>}
                                            </block>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0f</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * This is a cached value to improve the performance of method isTextOverflow();
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Boolean</name>
                    </type>
                    <name>isTextOverflow</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Creates a new instance. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>TextAreaFigure</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ResourceBundleUtil</name>.
                                                    <name>getLAFBundle</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"org.jhotdraw.draw.Labels"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getString</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"TextFigure.defaultText"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <constructor>
                <specifier>public</specifier>
                <name>TextAreaFigure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setText</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>text</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">// DRAWING</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>drawText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getText</name>
                                    <argument_list>()</argument_list>
                                </call>
                                != <name>null</name> ||
                                <call>
                                    <name>isEditable</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Font</name>
                                        </type>
                                        <name>font</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getFont</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>isUnderlined</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>FONT_UNDERLINE</name>.
                                                        <name>get</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>this</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name><name>Insets2D</name>.
                                                <name>Double</name>
                                            </name>
                                        </type>
                                        <name>insets</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getInsets</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name><name>Rectangle2D</name>.
                                                <name>Double</name>
                                            </name>
                                        </type>
                                        <name>textRect</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name><name>Rectangle2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>bounds</name>.
                                                                    <name>x</name>
                                                                </name>
                                                                +
                                                                <name><name>insets</name>.
                                                                    <name>left</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>bounds</name>.
                                                                    <name>y</name>
                                                                </name>
                                                                +
                                                                <name><name>insets</name>.
                                                                    <name>top</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>bounds</name>.
                                                                    <name>width</name>
                                                                </name>
                                                                -
                                                                <name><name>insets</name>.
                                                                    <name>left</name>
                                                                </name>
                                                                -
                                                                <name><name>insets</name>.
                                                                    <name>right</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>bounds</name>.
                                                                    <name>height</name>
                                                                </name>
                                                                -
                                                                <name><name>insets</name>.
                                                                    <name>top</name>
                                                                </name>
                                                                -
                                                                <name><name>insets</name>.
                                                                    <name>bottom</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>float</name>
                                        </type>
                                        <name>leftMargin</name> =
                                        <init>
                                            <expr>(<name>float</name>)
                                                <name><name>textRect</name>.
                                                    <name>x</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>float</name>
                                        </type>
                                        <name>rightMargin</name> =
                                        <init>
                                            <expr>(<name>float</name>)
                                                <call>
                                                    <name><name>Math</name>.
                                                        <name>max</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>leftMargin</name>
                                                                + 1
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>textRect</name>.
                                                                    <name>x</name>
                                                                </name>
                                                                +
                                                                <name><name>textRect</name>.
                                                                    <name>width</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>float</name>
                                        </type>
                                        <name>verticalPos</name> =
                                        <init>
                                            <expr>(<name>float</name>)
                                                <name><name>textRect</name>.
                                                    <name>y</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>float</name>
                                        </type>
                                        <name>maxVerticalPos</name> =
                                        <init>
                                            <expr>
                                                <call>(<name>float</name>)
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>textRect</name>.
                                                                    <name>y</name>
                                                                </name>
                                                                +
                                                                <name><name>textRect</name>.
                                                                    <name>height</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>leftMargin</name>
                                            &lt;
                                            <name>rightMargin</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">//float tabWidth = (float) (getTabSize() *
                                                g.getFontMetrics(font).charWidth('m'));
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>float</name>
                                                    </type>
                                                    <name>tabWidth</name> =
                                                    <init>
                                                        <expr>
                                                            <call>(<name>float</name>)
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>getTabSize</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            *
                                                                            <call>
                                                                                <name><name>font</name>.
                                                                                    <name>getStringBounds</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"m"</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>
                                                                                                    getFontRenderContext
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                            .
                                                                            <call>
                                                                                <name>getWidth</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>float</name>
                                                        <index>[]</index>
                                                    </type>
                                                    <name>tabStops</name> =
                                                    <init>
                                                        <expr>new
                                                            <name>
                                                                <name>float</name>
                                                                <index>[
                                                                    <expr>
                                                                        <call>(<name>int</name>)
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>textRect</name>.
                                                                                            <name>width</name>
                                                                                        </name>
                                                                                        /
                                                                                        <name>tabWidth</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name>=
                                                        <init>
                                                            <expr>0</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &lt;
                                                        <name><name>tabStops</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>tabStops</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <call>(<name>float</name>)
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>textRect</name>.
                                                                                <name>x</name>
                                                                            </name>
                                                                            +
                                                                            <call>(<name>int</name>)
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>tabWidth</name>
                                                                                            * (<name>i</name> + 1)
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </for>

                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name>getText</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>Shape</name>
                                                                </type>
                                                                <name>savedClipArea</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>g</name>.
                                                                                <name>getClip</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>g</name>.
                                                                        <name>clip</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>textRect</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>String</name>
                                                                    <index>[]</index>
                                                                </type>
                                                                <name>paragraphs</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>
                                                                            <name>getText</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        .
                                                                        <call>
                                                                            <name>split</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"\n"</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <comment type="line">//Strings.split(getText(), '\n');</comment>
                                                        <for>for (
                                                            <init>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>i</name> =
                                                                    <init>
                                                                        <expr>0</expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </init>
                                                            <condition>
                                                                <expr>
                                                                    <name>i</name>
                                                                    &lt;
                                                                    <name><name>paragraphs</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr><name>i</name>++
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>
                                                                                <name>paragraphs</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <call>
                                                                                <name>length</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            == 0
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>paragraphs</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                                = " "
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                    </then>
                                                                </if>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>AttributedString</name>
                                                                        </type>
                                                                        <name>as</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>AttributedString</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>paragraphs
                                                                                                    </name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>i
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>as</name>.
                                                                                <name>addAttribute</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>TextAttribute</name>
                                                                                            .
                                                                                            <name>FONT</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>font</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>isUnderlined</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>as</name>.
                                                                                            <name>addAttribute</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        TextAttribute</name>
                                                                                                        .
                                                                                                        <name>
                                                                                                            UNDERLINE
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        TextAttribute</name>
                                                                                                        .
                                                                                                        <name>
                                                                                                            UNDERLINE_LOW_ONE_PIXEL
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>int</name>
                                                                        </type>
                                                                        <name>tabCount</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>StringTokenizer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>paragraphs
                                                                                                    </name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>i
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>"\t"</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>countTokens</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                - 1
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>verticalPos</name>
                                                                        =
                                                                        <call>
                                                                            <name>drawParagraph</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>g</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>as</name>.
                                                                                                <name>getIterator</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>verticalPos</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>maxVerticalPos</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>leftMargin</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>rightMargin</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tabStops</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tabCount</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>verticalPos</name>
                                                                            &gt;
                                                                            <name>maxVerticalPos</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <break>break;</break>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </for>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>g</name>.
                                                                        <name>setClip</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>savedClipArea</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws of measures a paragraph of text at the specified y location and returns
                * the y position for the next paragraph.
                *
                * @param g Graphics object. This parameter is null, if we want to
                * measure the size of the paragraph.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>float</name>
                </type>
                <name>drawParagraph</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>AttributedCharacterIterator</name>
                            </type>
                            <name>styledText</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>verticalPos</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>maxVerticalPos</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>leftMargin</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>rightMargin</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>float</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>tabStops</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>tabCount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// This method is based on the code sample given</comment>
                    <comment type="line">// in the class comment of java.awt.font.LineBreakMeasurer,</comment>

                    <comment type="line">// assume styledText is an AttributedCharacterIterator, and the number
                    </comment>
                    <comment type="line">// of tabs in styledText is tabCount</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>tabLocations</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[
                                            <expr><name>tabCount</name>+1
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>char</name>
                                </type>
                                <name>c</name> =
                                <init>
                                    <expr>
                                        <call>
                                            <name><name>styledText</name>.
                                                <name>first</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>c</name>
                                !=
                                <name><name>styledText</name>.
                                    <name>DONE</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>
                                <name>c</name>
                                =
                                <call>
                                    <name><name>styledText</name>.
                                        <name>next</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        == '\t'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>tabLocations</name>
                                                    <index>[
                                                        <expr><name>i</name>++
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                =
                                                <call>
                                                    <name><name>styledText</name>.
                                                        <name>getIndex</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>tabLocations</name>
                                <index>[
                                    <expr>
                                        <name>tabCount</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <call>
                                <name><name>styledText</name>.
                                    <name>getEndIndex</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            - 1
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Now tabLocations has an entry for every tab's offset in</comment>
                    <comment type="line">// the text. For convenience, the last entry is tabLocations</comment>
                    <comment type="line">// is the offset of the last character in the text.</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>LineBreakMeasurer</name>
                            </type>
                            <name>measurer</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>LineBreakMeasurer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>styledText</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getFontRenderContext</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>currentTab</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>measurer</name>.
                                        <name>getPosition</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &lt;
                                <call>
                                    <name><name>styledText</name>.
                                        <name>getEndIndex</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp;
                                <name>verticalPos</name>
                                &lt;=
                                <name>maxVerticalPos</name>
                            </expr>
                            )
                        </condition>
                        <block>{

                            <comment type="line">// Lay out and draw each line. All segments on a line</comment>
                            <comment type="line">// must be computed before any drawing can occur, since</comment>
                            <comment type="line">// we must know the largest ascent on the line.</comment>
                            <comment type="line">// TextLayouts are computed and stored in a List;</comment>
                            <comment type="line">// their horizontal positions are stored in a parallel</comment>
                            <comment type="line">// List.</comment>

                            <comment type="line">// lineContainsText is true after first segment is drawn</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>lineContainsText</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>lineComplete</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>maxAscent</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                    , <name>maxDescent</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>float</name>
                                    </type>
                                    <name>horizontalPos</name> =
                                    <init>
                                        <expr>
                                            <name>leftMargin</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>LinkedList</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>TextLayout</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>layouts</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>
                                                    <name>LinkedList</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>TextLayout</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>LinkedList</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>Float</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>penPositions</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>
                                                    <name>LinkedList</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>Float</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <while>while
                                <condition>(
                                    <expr>!<name>lineComplete</name> &amp;&amp; <name>verticalPos</name> &lt;=
                                        <name>maxVerticalPos</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>float</name>
                                            </type>
                                            <name>wrappingWidth</name> =
                                            <init>
                                                <expr>
                                                    <name>rightMargin</name>
                                                    -
                                                    <name>horizontalPos</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>TextLayout</name>
                                            </type>
                                            <name>layout</name> =
                                            <init>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>layout</name>
                                            =
                                            <call>
                                                <name><name>measurer</name>.
                                                    <name>nextLayout</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>wrappingWidth</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>tabLocations</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>currentTab</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            +1
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>lineContainsText</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <comment type="line">// layout can be null if lineContainsText is true</comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>layout</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>layouts</name>.
                                                                <name>add</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>layout</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>penPositions</name>.
                                                                <name>add</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>horizontalPos</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>horizontalPos</name>
                                                        +=
                                                        <call>
                                                            <name><name>layout</name>.
                                                                <name>getAdvance</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>maxAscent</name>
                                                        =
                                                        <call>
                                                            <name><name>Math</name>.
                                                                <name>max</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>maxAscent</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>layout</name>.
                                                                                <name>getAscent</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>maxDescent</name>
                                                        =
                                                        <call>
                                                            <name><name>Math</name>.
                                                                <name>max</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>maxDescent</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>layout</name>.
                                                                                <name>getDescent</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        +
                                                                        <call>
                                                                            <name><name>layout</name>.
                                                                                <name>getLeading</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>lineComplete</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>

                                    <expr_stmt>
                                        <expr>
                                            <name>lineContainsText</name>
                                            = true
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>measurer</name>.
                                                        <name>getPosition</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                ==
                                                <name>
                                                    <name>tabLocations</name>
                                                    <index>[
                                                        <expr>
                                                            <name>currentTab</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                +1
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr><name>currentTab</name>++
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>measurer</name>.
                                                        <name>getPosition</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                ==
                                                <call>
                                                    <name><name>styledText</name>.
                                                        <name>getEndIndex</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <name>lineComplete</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>tabStops</name>.
                                                            <name>length</name>
                                                        </name>
                                                        == 0 || <name>horizontalPos</name> &gt;=
                                                        <name>
                                                            <name>tabStops</name>
                                                            <index>[
                                                                <expr>
                                                                    <name><name>tabStops</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                    -1
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>lineComplete</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                        </else>
                                    </if>

                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <name>lineComplete</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// move to next tab stop</comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>j</name>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <for>for (
                                                    <init>
                                                        <expr><name>j</name>=0
                                                        </expr>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>horizontalPos</name>
                                                            &gt;=
                                                            <name>
                                                                <name>tabStops</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>j</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>j</name>++
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{}</block>
                                                </for>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>horizontalPos</name>
                                                        =
                                                        <name>
                                                            <name>tabStops</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>j</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </while>

                            <expr_stmt>
                                <expr>
                                    <name>verticalPos</name>
                                    +=
                                    <name>maxAscent</name>
                                </expr>
                                ;
                            </expr_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>TextLayout</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>layoutEnum</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>layouts</name>.
                                                    <name>iterator</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Iterator</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>Float</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>positionEnum</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>penPositions</name>.
                                                    <name>iterator</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// now iterate through layouts and draw them</comment>
                            <while>while
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>layoutEnum</name>.
                                                <name>hasNext</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>TextLayout</name>
                                            </type>
                                            <name>nextLayout</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>layoutEnum</name>.
                                                            <name>next</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>float</name>
                                            </type>
                                            <name>nextPosition</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>positionEnum</name>.
                                                            <name>next</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>g</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>nextLayout</name>.
                                                                <name>draw</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>g</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>nextPosition</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>verticalPos</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </while>

                            <expr_stmt>
                                <expr>
                                    <name>verticalPos</name>
                                    +=
                                    <name>maxDescent</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <return>return
                        <expr>
                            <name>verticalPos</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>drawFill</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g</name>.
                                    <name>fill</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bounds</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>drawStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g</name>.
                                    <name>draw</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bounds</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// SHAPE AND BOUNDS</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBounds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>lead</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>x</name>
                            </name>
                            =
                            <call>
                                <name><name>Math</name>.
                                    <name>min</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>anchor</name>.
                                                <name>x</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>lead</name>.
                                                <name>x</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>y</name>
                            </name>
                            =
                            <call>
                                <name><name>Math</name>.
                                    <name>min</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>anchor</name>.
                                                <name>y</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>lead</name>.
                                                <name>y</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>width</name>
                            </name>
                            =
                            <call>
                                <name><name>Math</name>.
                                    <name>max</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Math</name>.
                                                    <name>abs</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>lead</name>.
                                                                <name>x</name>
                                                            </name>
                                                            -
                                                            <name><name>anchor</name>.
                                                                <name>x</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>height</name>
                            </name>
                            =
                            <call>
                                <name><name>Math</name>.
                                    <name>max</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Math</name>.
                                                    <name>abs</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>lead</name>.
                                                                <name>y</name>
                                                            </name>
                                                            -
                                                            <name><name>anchor</name>.
                                                                <name>y</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>transform</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>tx</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>anchor</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getStartPoint</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>lead</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEndPoint</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBounds</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            )
                                            <call>
                                                <name><name>tx</name>.
                                                    <name>transform</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>anchor</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>anchor</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            )
                                            <call>
                                                <name><name>tx</name>.
                                                    <name>transform</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>lead</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>lead</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>figureContains</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>bounds</name>.
                                    <name>contains</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>Rectangle2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>getBounds</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name><name>Rectangle2D</name>.
                                <name>Double</name>
                            </name>
                            )
                            <call>
                                <name><name>bounds</name>.
                                    <name>getBounds2D</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>restoreTransformTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>geometry</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name> =
                            <init>
                                <expr>(
                                    <name><name>Rectangle2D</name>.
                                        <name>Double</name>
                                    </name>
                                    )
                                    <name>geometry</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>x</name>
                            </name>
                            =
                            <name><name>r</name>.
                                <name>x</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>y</name>
                            </name>
                            =
                            <name><name>r</name>.
                                <name>y</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>width</name>
                            </name>
                            =
                            <name><name>r</name>.
                                <name>width</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>height</name>
                            </name>
                            =
                            <name><name>r</name>.
                                <name>height</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getTransformRestoreData</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>bounds</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// ATTRIBUTES</comment>
            <comment type="javadoc">/**
                * Gets the text shown by the text figure.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getText</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>String</name>)
                            <call>
                                <name>getAttribute</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>TEXT</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns the insets used to draw text.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>Insets2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>getInsets</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>sw</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Math</name>.
                                            <name>ceil</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>STROKE_WIDTH</name>.
                                                            <name>get</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>this</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    / 2
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Insets2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>insets</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Insets2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>4</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>4</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>4</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>4</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name><name>Insets2D</name>.
                                    <name>Double</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>insets</name>.
                                                <name>top</name>
                                            </name>
                                            +
                                            <name>sw</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>insets</name>.
                                                <name>left</name>
                                            </name>
                                            +
                                            <name>sw</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>insets</name>.
                                                <name>bottom</name>
                                            </name>
                                            +
                                            <name>sw</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>insets</name>.
                                                <name>right</name>
                                            </name>
                                            +
                                            <name>sw</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getTabSize</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>8</expr>;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Sets the text shown by the text figure.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>newText</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>TEXT</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newText</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getTextColumns</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <call>
                                <name>getText</name>
                                <argument_list>()</argument_list>
                            </call>
                            == <name>null</name>) ? 4 :
                            <call>
                                <name><name>Math</name>.
                                    <name>max</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getText</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>length</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>4</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getFont</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>AttributeKeys</name>.
                                    <name>getFont</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Color</name>
                </type>
                <name>getTextColor</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>TEXT_COLOR</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Color</name>
                </type>
                <name>getFillColor</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>FILL_COLOR</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFontSize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>size</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>FONT_SIZE</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>Double</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>size</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>float</name>
                </type>
                <name>getFontSize</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>FONT_SIZE</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>floatValue</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// EDITING</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isEditable</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>editable</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setEditable</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>b</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>editable</name>
                            </name>
                            =
                            <name>b</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns a specialized tool for the given coordinate.
                * &lt;p&gt;Returns null, if no specialized tool is available.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Tool</name>
                </type>
                <name>getTool</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isEditable</name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp;
                                <call>
                                    <name>contains</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>p</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>TextAreaTool</name>
                                        </type>
                                        <name>tool</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>TextAreaTool</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>this</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>tool</name>.
                                                <name>setForCreationOnly</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>false</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return
                                    <expr>
                                        <name>tool</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>TextHolderFigure</name>
                </type>
                <name>getLabelFor</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="line">// CONNECTING</comment>
            <comment type="line">// COMPOSITE FIGURES</comment>
            <comment type="line">// CLONING</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>TextAreaFigure</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>TextAreaFigure</name>
                            </type>
                            <name>that</name> =
                            <init>
                                <expr>(<name>TextAreaFigure</name>)
                                    <call>
                                        <name><name>super</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>that</name>.
                                <name>bounds</name>
                            </name>
                            = (
                            <name><name>Rectangle2D</name>.
                                <name>Double</name>
                            </name>
                            )
                            <call>
                                <name><name>this</name>.<name>bounds</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>that</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// EVENT HANDLING</comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>Collection</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Handle</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>createHandles</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>detailLevel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>LinkedList</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Handle</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>handles</name> =
                            <init>
                                <expr>(
                                    <name>
                                        <name>LinkedList</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>Handle</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                    )
                                    <call>
                                        <name><name>super</name>.
                                            <name>createHandles</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>detailLevel</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>detailLevel</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>handles</name>.
                                                <name>add</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>FontSizeHandle</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>handles</name>.
                                                <name>add</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>TextOverflowHandle</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>handles</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>readBounds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DOMInput</name>
                            </type>
                            <name>in</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>x</name>
                            </name>
                            =
                            <call>
                                <name><name>in</name>.
                                    <name>getAttribute</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"x"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0d</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>y</name>
                            </name>
                            =
                            <call>
                                <name><name>in</name>.
                                    <name>getAttribute</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"y"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0d</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>width</name>
                            </name>
                            =
                            <call>
                                <name><name>in</name>.
                                    <name>getAttribute</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"w"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0d</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>bounds</name>.
                                <name>height</name>
                            </name>
                            =
                            <call>
                                <name><name>in</name>.
                                    <name>getAttribute</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"h"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0d</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>writeBounds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DOMOutput</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>out</name>.
                                    <name>addAttribute</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"x"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>bounds</name>.
                                                <name>x</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>out</name>.
                                    <name>addAttribute</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"y"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>bounds</name>.
                                                <name>y</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>out</name>.
                                    <name>addAttribute</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"w"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>bounds</name>.
                                                <name>width</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>out</name>.
                                    <name>addAttribute</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"h"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>bounds</name>.
                                                <name>height</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>read</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DOMInput</name>
                            </type>
                            <name>in</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>readBounds</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>in</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>readAttributes</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>in</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>write</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DOMOutput</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>writeBounds</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>out</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>writeAttributes</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>out</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>invalidate</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>invalidate</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>isTextOverflow</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isTextOverflow</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>isTextOverflow</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>isTextOverflow</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>getText</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            != <name>null</name> ||
                                            <call>
                                                <name>isEditable</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Font</name>
                                                    </type>
                                                    <name>font</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name>getFont</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>boolean</name>
                                                    </type>
                                                    <name>isUnderlined</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>FONT_UNDERLINE</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>this</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name><name>Insets2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                    </type>
                                                    <name>insets</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name>getInsets</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name><name>Rectangle2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                    </type>
                                                    <name>textRect</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name><name>Rectangle2D</name>.
                                                                    <name>Double</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>bounds</name>.
                                                                                <name>x</name>
                                                                            </name>
                                                                            +
                                                                            <name><name>insets</name>.
                                                                                <name>left</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>bounds</name>.
                                                                                <name>y</name>
                                                                            </name>
                                                                            +
                                                                            <name><name>insets</name>.
                                                                                <name>top</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>bounds</name>.
                                                                                <name>width</name>
                                                                            </name>
                                                                            -
                                                                            <name><name>insets</name>.
                                                                                <name>left</name>
                                                                            </name>
                                                                            -
                                                                            <name><name>insets</name>.
                                                                                <name>right</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>bounds</name>.
                                                                                <name>height</name>
                                                                            </name>
                                                                            -
                                                                            <name><name>insets</name>.
                                                                                <name>top</name>
                                                                            </name>
                                                                            -
                                                                            <name><name>insets</name>.
                                                                                <name>bottom</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>float</name>
                                                    </type>
                                                    <name>leftMargin</name> =
                                                    <init>
                                                        <expr>(<name>float</name>)
                                                            <name><name>textRect</name>.
                                                                <name>x</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>float</name>
                                                    </type>
                                                    <name>rightMargin</name> =
                                                    <init>
                                                        <expr>(<name>float</name>)
                                                            <call>
                                                                <name><name>Math</name>.
                                                                    <name>max</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>leftMargin</name>
                                                                            + 1
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>textRect</name>.
                                                                                <name>x</name>
                                                                            </name>
                                                                            +
                                                                            <name><name>textRect</name>.
                                                                                <name>width</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>float</name>
                                                    </type>
                                                    <name>verticalPos</name> =
                                                    <init>
                                                        <expr>(<name>float</name>)
                                                            <name><name>textRect</name>.
                                                                <name>y</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>float</name>
                                                    </type>
                                                    <name>maxVerticalPos</name> =
                                                    <init>
                                                        <expr>
                                                            <call>(<name>float</name>)
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>textRect</name>.
                                                                                <name>y</name>
                                                                            </name>
                                                                            +
                                                                            <name><name>textRect</name>.
                                                                                <name>height</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>leftMargin</name>
                                                        &lt;
                                                        <name>rightMargin</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>float</name>
                                                                </type>
                                                                <name>tabWidth</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>(<name>float</name>)
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>getTabSize</name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                        *
                                                                                        <call>
                                                                                            <name><name>font</name>.
                                                                                                <name>getStringBounds
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>"m"</expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                getFontRenderContext
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                        .
                                                                                        <call>
                                                                                            <name>getWidth</name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>float</name>
                                                                    <index>[]</index>
                                                                </type>
                                                                <name>tabStops</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>float</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <call>(<name>int</name>)
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        textRect</name>.
                                                                                                        <name>width
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    /
                                                                                                    <name>tabWidth
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <for>for (
                                                            <init>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>i</name>=
                                                                    <init>
                                                                        <expr>0</expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </init>
                                                            <condition>
                                                                <expr>
                                                                    <name>i</name>
                                                                    &lt;
                                                                    <name><name>tabStops</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr><name>i</name>++
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>tabStops</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        =
                                                                        <call>(<name>float</name>)
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>textRect</name>.
                                                                                            <name>x</name>
                                                                                        </name>
                                                                                        +
                                                                                        <call>(<name>int</name>)
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>tabWidth
                                                                                                        </name>
                                                                                                        * (<name>i
                                                                                                    </name> + 1)
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </for>

                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name>getText</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>String</name>
                                                                                <index>[]</index>
                                                                            </type>
                                                                            <name>paragraphs</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>getText</name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    .
                                                                                    <call>
                                                                                        <name>split</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>"\n"</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <comment type="line">//Strings.split(getText(),
                                                                        '\n');
                                                                    </comment>
                                                                    <for>for (
                                                                        <init>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>int</name>
                                                                                </type>
                                                                                <name>i</name> =
                                                                                <init>
                                                                                    <expr>0</expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </init>
                                                                        <condition>
                                                                            <expr>
                                                                                <name>i</name>
                                                                                &lt;
                                                                                <name><name>paragraphs</name>.
                                                                                    <name>length</name>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </condition>
                                                                        <incr>
                                                                            <expr><name>i</name>++
                                                                            </expr>
                                                                        </incr>
                                                                        )
                                                                        <block>{
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>paragraphs</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                        .
                                                                                        <call>
                                                                                            <name>length</name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                        == 0
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>
                                                                                                <name>paragraphs</name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name>i</name>
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                            = " "
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                </then>
                                                                            </if>
                                                                            <decl_stmt>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>AttributedString</name>
                                                                                    </type>
                                                                                    <name>as</name> =
                                                                                    <init>
                                                                                        <expr>new
                                                                                            <call>
                                                                                                <name>AttributedString
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                <name>
                                                                                                                    paragraphs
                                                                                                                </name>
                                                                                                                <index>[
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            i
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                    ]
                                                                                                                </index>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </init>
                                                                                </decl>
                                                                                ;
                                                                            </decl_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>as</name>.
                                                                                            <name>addAttribute</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        TextAttribute</name>
                                                                                                        .
                                                                                                        <name>FONT
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>font</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>isUnderlined</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        as</name>.
                                                                                                        <name>
                                                                                                            addAttribute
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        TextAttribute</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        UNDERLINE
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        TextAttribute</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        UNDERLINE_LOW_ONE_PIXEL
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            <decl_stmt>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>int</name>
                                                                                    </type>
                                                                                    <name>tabCount</name> =
                                                                                    <init>
                                                                                        <expr>new
                                                                                            <call>
                                                                                                <name>StringTokenizer
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                <name>
                                                                                                                    paragraphs
                                                                                                                </name>
                                                                                                                <index>[
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            i
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                    ]
                                                                                                                </index>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>"\t"
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                            .
                                                                                            <call>
                                                                                                <name>countTokens</name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                            - 1
                                                                                        </expr>
                                                                                    </init>
                                                                                </decl>
                                                                                ;
                                                                            </decl_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>verticalPos</name>
                                                                                    =
                                                                                    <call>
                                                                                        <name>drawParagraph</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>null</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            as</name>.
                                                                                                            <name>
                                                                                                                getIterator
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>
                                                                                                            ()
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>verticalPos
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        maxVerticalPos
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>leftMargin
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>rightMargin
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>tabStops
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>tabCount
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>verticalPos</name>
                                                                                        &gt;
                                                                                        <name>maxVerticalPos</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <break>break;</break>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            }
                                                                        </block>
                                                                    </for>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>isTextOverflow</name>
                                                                = (<name>leftMargin</name> &gt;= <name>rightMargin
                                                            </name> || <name>verticalPos</name> &gt;
                                                                <name><name>textRect</name>.
                                                                    <name>y</name>
                                                                </name>
                                                                +
                                                                <name><name>textRect</name>.
                                                                    <name>height</name>
                                                                </name>
                                                                )
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>isTextOverflow</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
