<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\TextAreaTool.java">
    <comment type="block">/*
        * @(#)TextAreaTool.java 2.2 2007-11-25
        *
        * Copyright (c) 1996-2007 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>


    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>event</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>event</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * A tool to create new or edit existing figures that implement the TextHolderFigure
        * interface, such as TextAreaFigure. The figure to be created is specified by a
        * prototype.
        * &lt;p&gt;
        * To create a figure using the TextAreaTool, the user does the following mouse
        * gestures on a DrawingView:
        * &lt;ol&gt;
        * &lt;li&gt;Press the mouse button over the DrawingView. This defines the
        * start point of the Figure bounds.&lt;/li&gt;
        * &lt;li&gt;Drag the mouse while keeping the mouse button pressed, and then release
        * the mouse button. This defines the end point of the Figure bounds.&lt;/li&gt;
        * &lt;/ol&gt;
        * When the user has performed these mouse gesture, the TextAreaTool overlays
        * a text area over the drawing where the user can enter the text for the Figure.
        * &lt;p&gt;
        * To edit an existing text figure using the TextAreaTool, the user does the
        * following mouse gesture on a DrawingView:
        * &lt;/p&gt;
        * &lt;ol&gt;
        * &lt;li&gt;Press the mouse button over a Figure on the DrawingView.&lt;/li&gt;
        * &lt;/ol&gt;
        * &lt;p&gt;
        * The TextAreaTool then uses Figure.findFigureInside to find a Figure that
        * implements the TextHolderFigure interface and that is editable. Then it overlays
        * a text area over the drawing where the user can enter the text for the Figure.
        * &lt;/p&gt;
        * &lt;p&gt;
        * XXX - Maybe this class should be split up into a CreateTextAreaTool and
        * a EditTextAreaTool.
        * &lt;/p&gt;
        *
        * @author Werner Randelshofer
        * @version 2.2 2007-11-25 Added variable isForCreationOnly.
        * &lt;br&gt;2.1 2007-08-22 Added support for property 'toolDoneAfterCreation'.
        * &lt;br&gt;2.0 2006-01-14 Changed to support double precison coordinates.
        * &lt;br&gt;1.0 2003-12-01 Derived from JHotDraw 5.4b1.
        * @see TextHolderFigure
        * @see FloatingTextArea
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>TextAreaTool</name>
        <super>
            <extends>extends
                <name>CreationTool</name>
            </extends>
            <implements>implements
                <name>ActionListener</name>
            </implements>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>FloatingTextArea</name>
                    </type>
                    <name>textArea</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>TextHolderFigure</name>
                    </type>
                    <name>typingTarget</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * By default this tool is only used for the creation of new TextAreaFigures.
                * If this variable is set to false, the tool is used to create new
                * TextAreaFigures and edit existing TextAreaFigures.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>isForCreationOnly</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Rubberband color of the tool. When this is null, the tool does not
                * draw a rubberband.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Color</name>
                    </type>
                    <name>rubberbandColor</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Creates a new instance. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>TextAreaTool</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>TextHolderFigure</name>
                            </type>
                            <name>prototype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>prototype</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <constructor>
                <specifier>public</specifier>
                <name>TextAreaTool</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>TextHolderFigure</name>
                            </type>
                            <name>prototype</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Map</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>prototype</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>attributes</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Sets the rubberband color for the tool. Setting this to null, disables
                * the rubberband.
                *
                * @param c Rubberband color or null.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setRubberbandColor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Color</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>rubberbandColor</name>
                            =
                            <name>c</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * By default this tool is used to create a new TextHolderFigure.
                * If this property is set to false, the tool is used to create
                * a new TextHolderFigure or to edit an existing TextHolderFigure.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setForCreationOnly</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>newValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>isForCreationOnly</name>
                            =
                            <name>newValue</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns true, if this tool can be only be used for creation of
                * TextHolderFigures and not for editing existing ones.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isForCreationOnly</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>isForCreationOnly</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>deactivate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DrawingEditor</name>
                            </type>
                            <name>editor</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>endEdit</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>deactivate</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>editor</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates a new figure at the mouse location.
                * If editing is in progress, this finishes editing.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>mousePressed</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>MouseEvent</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>TextHolderFigure</name>
                            </type>
                            <name>textHolder</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>pressedFigure</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getDrawing</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>findFigureInside</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getView</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>viewToDrawing</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>Point</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>e</name>.
                                                                                            <name>getX</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>e</name>.
                                                                                            <name>getY</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>pressedFigure</name>
                                <name>instanceof</name>
                                <name>TextHolderFigure</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>textHolder</name>
                                        = (<name>TextHolderFigure</name>)
                                        <name>pressedFigure</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>textHolder</name>.
                                                    <name>isEditable</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ||
                                            <name>isForCreationOnly</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>textHolder</name>
                                                =
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>textHolder</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>createdFigure</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>beginEdit</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>textHolder</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>typingTarget</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>endEdit</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>isToolDoneAfterCreation</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>fireToolDone</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>super</name>.
                                                <name>mousePressed</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// update view so the created figure is drawn before the floating
                                    text
                                </comment>
                                <comment type="line">// figure is overlaid. (Note, fDamage should be null in
                                    StandardDrawingView
                                </comment>
                                <comment type="line">// when the overlay figure is drawn because a JTextField cannot be
                                    scrolled)
                                </comment>
                                <comment type="line">//view().checkDamage();</comment>
                                <comment type="block">/*
                                    textHolder = (TextHolderFigure)getCreatedFigure();
                                    beginEdit(textHolder);*/
                                </comment>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * This method allows subclasses to do perform additonal user interactions
                * after the new figure has been created.
                * The implementation of this class just invokes fireToolDone.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>creationFinished</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Figure</name>
                            </type>
                            <name>createdFigure</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>beginEdit</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>TextHolderFigure</name>)
                                            <name>createdFigure</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="block">/*
                public void mouseDragged(java.awt.event.MouseEvent e) {
                }
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>draw</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>createdFigure</name>
                                != <name>null</name> &amp;&amp; <name>rubberbandColor</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g</name>.
                                                <name>setColor</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>rubberbandColor</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g</name>.
                                                <name>draw</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>getView</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>drawingToView</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>createdFigure</name>.
                                                                                <name>getBounds</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>beginEdit</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>TextHolderFigure</name>
                            </type>
                            <name>textHolder</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>textArea</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>textArea</name>
                                        = new
                                        <call>
                                            <name>FloatingTextArea</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">//textArea.addActionListener(this);</comment>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>textHolder</name>
                                != <name>typingTarget</name> &amp;&amp; <name>typingTarget</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>endEdit</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>textArea</name>.
                                    <name>createOverlay</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getView</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>textHolder</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>textArea</name>.
                                    <name>setBounds</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getFieldBounds</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>textHolder</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>textHolder</name>.
                                                    <name>getText</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>textArea</name>.
                                    <name>requestFocus</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>typingTarget</name>
                            =
                            <name>textHolder</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>private</specifier>
                    <name><name>Rectangle2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>getFieldBounds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>TextHolderFigure</name>
                            </type>
                            <name>figure</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>figure</name>.
                                            <name>getDrawingArea</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Insets2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>insets</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>figure</name>.
                                            <name>getInsets</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>insets</name>.
                                    <name>subtractTo</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>r</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// FIXME - Find a way to determine the parameters for grow.</comment>
                    <comment type="line">//r.grow(1,2);</comment>
                    <comment type="line">//r.width += 16;</comment>
                    <expr_stmt>
                        <expr>
                            <name><name>r</name>.
                                <name>x</name>
                            </name>
                            -= 1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>r</name>.
                                <name>y</name>
                            </name>
                            -= 2
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>r</name>.
                                <name>width</name>
                            </name>
                            += 18
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>r</name>.
                                <name>height</name>
                            </name>
                            += 4
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>r</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="block">/*
                public void mouseReleased(MouseEvent evt) {
                if (createdFigure != null) {
                TextHolderFigure textHolder = (TextHolderFigure) createdFigure;
                Rectangle2D.Double bounds = createdFigure.getBounds();
                if (bounds.width == 0 &amp;&amp; bounds.height == 0) {
                getDrawing().remove(createdFigure);
                } else {
                if (bounds.width &lt; 5 &amp;&amp; bounds.height &lt; 5) {
                createdFigure.willChange();
                createdFigure.setBounds(new Point2D.Double(bounds.x, bounds.y), new Point2D.Double(bounds.x + 100,
                bounds.y + 100));
                createdFigure.changed();
                }
                getView().addToSelection(createdFigure);
                }
                if (createdFigure instanceof CompositeFigure) {
                ((CompositeFigure) createdFigure).layout();
                }
                createdFigure = null;
                getDrawing().fireUndoableEditHappened(creationEdit);
                beginEdit(textHolder);
                }
                }*/
            </comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>endEdit</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>typingTarget</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>typingTarget</name>.
                                                <name>willChange</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>textArea</name>.
                                                    <name>getText</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>length</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>typingTarget</name>.
                                                            <name>setText</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>textArea</name>.
                                                                            <name>getText</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>createdFigure</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>getDrawing</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                .
                                                                <call>
                                                                    <name>remove</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>(<name>Figure</name>)
                                                                                <call>
                                                                                    <name>getAddedFigure</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <comment type="line">// Fire undoable edit here!!</comment>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>typingTarget</name>.
                                                                        <name>setText</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>""</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <comment type="line">// XXX - implement undo redo behavior here</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>typingTarget</name>.
                                                <name>changed</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>typingTarget</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>textArea</name>.
                                                <name>endOverlay</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// view().checkDamage();</comment>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>actionPerformed</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ActionEvent</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>endEdit</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isToolDoneAfterCreation</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireToolDone</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
