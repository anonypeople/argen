<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\Tool.java">
    <comment type="block">/*
        * @(#)Tool.java 1.0 11. November 2003
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>


    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>event</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>event</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * A tool defines a mode of the drawing view. All input events targeted to the
        * drawing view are forwarded to its current tool.
        * &lt;p&gt;
        * Tools inform listeners when they are done with an interaction by calling
        * the ToolListener's toolDone() method. The Tools are created once and reused.
        * They are initialized/deinitialized with activate()/deactivate().
        * &lt;p&gt;
        * Tools are used for user interaction. Unlike figures, a tool works with
        * the user interface coordinates of the DrawingView. The user interface
        * coordinates are expressed in integer pixels.
        * &lt;p&gt;
        * A Tool forwards UndoableEdit events to the Drawing object onto which it
        * is performing changes.
        *
        * @author Werner Randelshofer
        * @version 1.0 2003-12-01 Derived from JHotDraw 5.4b1.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Tool</name>
        <super>
            <extends>extends <name>MouseListener</name>, <name>MouseMotionListener</name>,
                <name>KeyListener</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Activates the tool for the given editor. This method is called
                * whenever the user switches to this tool.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>activate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DrawingEditor</name>
                            </type>
                            <name>editor</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Deactivates the tool. This method is called whenever the user
                * switches to another tool.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>deactivate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DrawingEditor</name>
                            </type>
                            <name>editor</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a listener for this tool.
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>addToolListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ToolListener</name>
                            </type>
                            <name>l</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Removes a listener for this tool.
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>removeToolListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ToolListener</name>
                            </type>
                            <name>l</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws the tool.
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>draw</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Deletes the selection.
                * Depending on the tool, this could be selected figures, selected points
                * or selected text.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>editDelete</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Cuts the selection into the clipboard.
                * Depending on the tool, this could be selected figures, selected points
                * or selected text.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>editCut</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Copies the selection into the clipboard.
                * Depending on the tool, this could be selected figures, selected points
                * or selected text.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>editCopy</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Duplicates the selection.
                * Depending on the tool, this could be selected figures, selected points
                * or selected text.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>editDuplicate</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Pastes the contents of the clipboard.
                * Depending on the tool, this could be selected figures, selected points
                * or selected text.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>editPaste</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            }
        </block>
    </class>
</unit>
