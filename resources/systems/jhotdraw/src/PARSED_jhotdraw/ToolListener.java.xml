<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\ToolListener.java">
    <comment type="block">/*
        * @(#)ToolListener.java 3.0 2006-02-13
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>


    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * Change event passed to ToolListener's.
        *
        * @author Werner Randelshofer
        * @version 3.0 2003-02-13 Revised to support multiple views.
        * &lt;br&gt;1.0 2003-12-01 Derived from JHotDraw 5.4b1.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>ToolListener</name>
        <super>
            <extends>extends
                <name>EventListener</name>
            </extends>
        </super>
        <block>{
            <comment type="javadoc">/**
                * Informs the listener that a tool has starteds interacting with a
                * specific drawing view.
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>toolStarted</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ToolEvent</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Informs the listener that a tool has done its interaction.
                * This method can be used to switch back to the default tool.
                */
            </comment>
            <function_decl>
                <type>
                    <name>void</name>
                </type>
                <name>toolDone</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ToolEvent</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Sent when an area of the drawing view needs to be repainted.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>areaInvalidated</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ToolEvent</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>
