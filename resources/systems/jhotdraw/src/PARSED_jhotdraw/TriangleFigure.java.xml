<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\TriangleFigure.java">
    <comment type="block">/*
        * @(#)TriangleFigure.java 1.0 2006-03-27
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>


    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>io</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.
            <name>util</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>javax</name>.
            <name>swing</name>
        </name>
        .*;
    </import>
    <import>import static
        <name><name>org</name>.<name>jhotdraw</name>.<name>draw</name>.
            <name>AttributeKeys</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>geom</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * A triangle with same dimensions as its enclosing rectangle,
        * and apex at any of 8 places
        *
        *
        * @author Werner Randelshofer
        * @version 1.0 2006-03-27 Created.
        */
    </comment>

    <class>
        <specifier>public</specifier>
        class <name>TriangleFigure</name>
        <super>
            <extends>extends
                <name>AbstractAttributedFigure</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * The bounds of the triangle figure.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name><name>Rectangle2D</name>.
                            <name>Double</name>
                        </name>
                    </type>
                    <name>rectangle</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Creates a new instance. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>TriangleFigure</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <constructor>
                <specifier>public</specifier>
                <name>TriangleFigure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Orientation</name>
                            </type>
                            <name>direction</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>direction</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <constructor>
                <specifier>public</specifier>
                <name>TriangleFigure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>width</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>height</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>x</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>y</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>width</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>height</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Orientation</name>.
                                                <name>NORTH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <constructor>
                <specifier>public</specifier>
                <name>TriangleFigure</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>width</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>height</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Orientation</name>
                            </type>
                            <name>direction</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>rectangle</name>
                            = new
                            <call>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>x</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>y</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>width</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>height</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="block">/*
                        setFillColor(Color.white);
                        setStrokeColor(Color.black);
                        */
                    </comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>ORIENTATION</name>.
                                    <name>basicSet</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>direction</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">// DRAWING</comment>
            <comment type="line">// SHAPE AND BOUNDS</comment>
            <comment type="line">// ATTRIBUTES</comment>
            <comment type="line">// EDITING</comment>
            <comment type="line">// CONNECTING</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Connector</name>
                </type>
                <name>findConnector</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ConnectionFigure</name>
                            </type>
                            <name>prototype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ChopTriangleConnector</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Connector</name>
                </type>
                <name>findCompatibleConnector</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Connector</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isStartConnector</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ChopTriangleConnector</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns the Figures connector for the specified location.
                * By default a ChopDiamondConnector is returned.
                * @see ChopDiamondConnector
                */
            </comment>
            <comment type="block">/*
                public Connector findConnector(Point2D.Double p, ConnectionFigure prototype) {
                return new ChopTriangleConnector(this);
                }

                public Connector findCompatibleConnector(Connector c, boolean isStart) {
                return new ChopTriangleConnector(this);
                }*/
            </comment>
            <comment type="line">// COMPOSITE FIGURES</comment>
            <comment type="line">// CLONING</comment>
            <comment type="line">// EVENT HANDLING</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>Rectangle2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>getBounds</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>bounds</name> =
                            <init>
                                <expr>(
                                    <name><name>Rectangle2D</name>.
                                        <name>Double</name>
                                    </name>
                                    )
                                    <call>
                                        <name><name>rectangle</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>bounds</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>drawFill</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name> =
                            <init>
                                <expr>(
                                    <name><name>Rectangle2D</name>.
                                        <name>Double</name>
                                    </name>
                                    )
                                    <call>
                                        <name><name>rectangle</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>triangle</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getBezierPath</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>grow</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>AttributeKeys</name>.
                                            <name>getPerpendicularFillGrowth</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>grow</name>
                                != 0d
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>GrowStroke</name>
                                        </type>
                                        <name>gs</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>GrowStroke</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>float</name>)
                                                                <name>grow</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>(<name>float</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>AttributeKeys</name>.
                                                                                        <name>getStrokeTotalWidth</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>this</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                *
                                                                                <call>
                                                                                    <name><name>
                                                                                        STROKE_MITER_LIMIT</name>.
                                                                                        <name>get</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>this</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>triangle</name>
                                        =
                                        <call>
                                            <name><name>gs</name>.
                                                <name>createStrokedShape</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>triangle</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g</name>.
                                    <name>fill</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>triangle</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>drawStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>triangle</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getBezierPath</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>grow</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>AttributeKeys</name>.
                                            <name>getPerpendicularDrawGrowth</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>grow</name>
                                != 0d
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>GrowStroke</name>
                                        </type>
                                        <name>gs</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>GrowStroke</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>float</name>)
                                                                <name>grow</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>(<name>float</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>AttributeKeys</name>.
                                                                                        <name>getStrokeTotalWidth</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>this</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                *
                                                                                <call>
                                                                                    <name><name>
                                                                                        STROKE_MITER_LIMIT</name>.
                                                                                        <name>get</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>this</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>triangle</name>
                                        =
                                        <call>
                                            <name><name>gs</name>.
                                                <name>createStrokedShape</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>triangle</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g</name>.
                                    <name>draw</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>triangle</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>
                        <name>Collection</name>
                        <argument_list>&lt;
                            <argument>
                                <name>Handle</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>createHandles</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>detailLevel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>
                                    <name>LinkedList</name>
                                    <argument_list>&lt;
                                        <argument>
                                            <name>Handle</name>
                                        </argument>
                                        &gt;
                                    </argument_list>
                                </name>
                            </type>
                            <name>handles</name> =
                            <init>
                                <expr>(
                                    <name>
                                        <name>LinkedList</name>
                                        <argument_list>&lt;
                                            <argument>
                                                <name>Handle</name>
                                            </argument>
                                            &gt;
                                        </argument_list>
                                    </name>
                                    )
                                    <call>
                                        <name><name>super</name>.
                                            <name>createHandles</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>detailLevel</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>detailLevel</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>handles</name>.
                                                <name>add</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>TriangleRotationHandler</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>handles</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>BezierPath</name>
                </type>
                <name>getBezierPath</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name> =
                            <init>
                                <expr>(
                                    <name><name>Rectangle2D</name>.
                                        <name>Double</name>
                                    </name>
                                    )
                                    <call>
                                        <name><name>rectangle</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BezierPath</name>
                            </type>
                            <name>triangle</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>BezierPath</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <switch>switch
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>ORIENTATION</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>this</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>NORTH</name>
                                </expr>
                                :
                            </case>
                            <default>default :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>moveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                        / 2
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name><name>r</name>.
                                                            <name>x</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </default>
                            <case>case
                                <expr>
                                    <name>NORTH_EAST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>moveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>EAST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>moveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                        / 2d
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name><name>r</name>.
                                                            <name>x</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_EAST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>moveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>moveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                        / 2
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name><name>r</name>.
                                                            <name>x</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_WEST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>moveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>WEST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>moveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                        / 2
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_WEST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>moveTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>height</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>triangle</name>.
                                                <name>lineTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>x</name>
                                                                        </name>
                                                                        +
                                                                        <name><name>r</name>.
                                                                            <name>width</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>r</name>.
                                                                            <name>y</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>triangle</name>.
                                    <name>setClosed</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>triangle</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Checks if a Point2D.Double is inside the figure.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>contains</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>triangle</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getBezierPath</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>grow</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>AttributeKeys</name>.
                                            <name>getPerpendicularHitGrowth</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>grow</name>
                                != 0d
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>GrowStroke</name>
                                        </type>
                                        <name>gs</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>GrowStroke</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>float</name>)
                                                                <name>grow</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>(<name>float</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>AttributeKeys</name>.
                                                                                        <name>getStrokeTotalWidth</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>this</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                *
                                                                                <call>
                                                                                    <name><name>
                                                                                        STROKE_MITER_LIMIT</name>.
                                                                                        <name>get</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>this</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>triangle</name>
                                        =
                                        <call>
                                            <name><name>gs</name>.
                                                <name>createStrokedShape</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>triangle</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>triangle</name>.
                                    <name>contains</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBounds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>lead</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>rectangle</name>.
                                <name>x</name>
                            </name>
                            =
                            <call>
                                <name><name>Math</name>.
                                    <name>min</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>anchor</name>.
                                                <name>x</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>lead</name>.
                                                <name>x</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>rectangle</name>.
                                <name>y</name>
                            </name>
                            =
                            <call>
                                <name><name>Math</name>.
                                    <name>min</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>anchor</name>.
                                                <name>y</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>lead</name>.
                                                <name>y</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>rectangle</name>.
                                <name>width</name>
                            </name>
                            =
                            <call>
                                <name><name>Math</name>.
                                    <name>max</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0.1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Math</name>.
                                                    <name>abs</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>lead</name>.
                                                                <name>x</name>
                                                            </name>
                                                            -
                                                            <name><name>anchor</name>.
                                                                <name>x</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>rectangle</name>.
                                <name>height</name>
                            </name>
                            =
                            <call>
                                <name><name>Math</name>.
                                    <name>max</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0.1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Math</name>.
                                                    <name>abs</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>lead</name>.
                                                                <name>y</name>
                                                            </name>
                                                            -
                                                            <name><name>anchor</name>.
                                                                <name>y</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>Rectangle2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>getDrawingArea</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>totalStrokeWidth</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>AttributeKeys</name>.
                                            <name>getStrokeTotalWidth</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>width</name> =
                            <init>
                                <expr>0d</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>STROKE_COLOR</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>this</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <switch>switch
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>STROKE_PLACEMENT</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <case>case
                                            <expr>
                                                <name>INSIDE</name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>width</name>
                                                    = 0d
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name>OUTSIDE</name>
                                            </expr>
                                            :
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>STROKE_JOIN</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        ==
                                                        <name><name>BasicStroke</name>.
                                                            <name>JOIN_MITER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>width</name>
                                                                = <name>totalStrokeWidth</name> *
                                                                <call>
                                                                    <name><name>STROKE_MITER_LIMIT</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>this</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>width</name>
                                                                =
                                                                <name>totalStrokeWidth</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name>CENTER</name>
                                            </expr>
                                            :
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>STROKE_JOIN</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        ==
                                                        <name><name>BasicStroke</name>.
                                                            <name>JOIN_MITER</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>width</name>
                                                                = <name>totalStrokeWidth</name> / 2d *
                                                                <call>
                                                                    <name><name>STROKE_MITER_LIMIT</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>this</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>width</name>
                                                                = <name>totalStrokeWidth</name> / 2d
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            <break>break;</break>
                                        </case>
                                        }
                                    </block>
                                </switch>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr><name>width</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getBounds</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>Geom</name>.
                                    <name>grow</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>r</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>width</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>width</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>r</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>chop</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>triangle</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getBezierPath</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>grow</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>AttributeKeys</name>.
                                            <name>getPerpendicularHitGrowth</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>grow</name>
                                != 0d
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>GrowStroke</name>
                                        </type>
                                        <name>gs</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>GrowStroke</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>float</name>)
                                                                <name>grow</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>(<name>float</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>AttributeKeys</name>.
                                                                                        <name>getStrokeTotalWidth</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>this</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                *
                                                                                <call>
                                                                                    <name><name>
                                                                                        STROKE_MITER_LIMIT</name>.
                                                                                        <name>get</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>this</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>triangle</name>
                                        =
                                        <call>
                                            <name><name>gs</name>.
                                                <name>createStrokedShape</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>triangle</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>Geom</name>.
                                    <name>chop</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>triangle</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Moves the Figure to a new location.
                * @param tx the transformation matrix.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>transform</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>AffineTransform</name>
                            </type>
                            <name>tx</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>anchor</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getStartPoint</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>lead</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEndPoint</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBounds</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            )
                                            <call>
                                                <name><name>tx</name>.
                                                    <name>transform</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>anchor</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>anchor</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            )
                                            <call>
                                                <name><name>tx</name>.
                                                    <name>transform</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>lead</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>lead</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>TriangleFigure</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>TriangleFigure</name>
                            </type>
                            <name>that</name> =
                            <init>
                                <expr>(<name>TriangleFigure</name>)
                                    <call>
                                        <name><name>super</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>that</name>.
                                <name>rectangle</name>
                            </name>
                            = (
                            <name><name>Rectangle2D</name>.
                                <name>Double</name>
                            </name>
                            )
                            <call>
                                <name><name>this</name>.<name>rectangle</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>that</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>restoreTransformTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>geometry</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name> =
                            <init>
                                <expr>(
                                    <name><name>Rectangle2D</name>.
                                        <name>Double</name>
                                    </name>
                                    )
                                    <name>geometry</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>rectangle</name>.
                                <name>x</name>
                            </name>
                            =
                            <name><name>r</name>.
                                <name>x</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>rectangle</name>.
                                <name>y</name>
                            </name>
                            =
                            <name><name>r</name>.
                                <name>y</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>rectangle</name>.
                                <name>width</name>
                            </name>
                            =
                            <name><name>r</name>.
                                <name>width</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>rectangle</name>.
                                <name>height</name>
                            </name>
                            =
                            <name><name>r</name>.
                                <name>height</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getTransformRestoreData</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>rectangle</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
