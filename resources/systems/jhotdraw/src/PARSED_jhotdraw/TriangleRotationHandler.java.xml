<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\TriangleRotationHandler.java">
    <comment type="block">/*
        * @(#)TriangleRotationHandler.java 1.0 June 11, 2006
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        ï¿½
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>draw</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>geom</name>
        </name>
        .*;
    </import>

    <import>import static
        <name><name>org</name>.<name>jhotdraw</name>.<name>draw</name>.
            <name>AttributeKeys</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>jhotdraw</name>.
            <name>geom</name>
        </name>
        .*;
    </import>

    <comment type="javadoc">/**
        * A Handle to rotate a TriangleFigure
        * Based on RadiusHandle
        *
        * @author Werner Randelshofer.
        * Original code by Doug Lea (dl at gee, Sun Mar 2 19:15:28 1997)
        * @version 1.0 June 11, 2006 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>TriangleRotationHandler</name>
        <super>
            <extends>extends
                <name>AbstractHandle</name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Rectangle</name>
                    </type>
                    <name>centerBox</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name><name>AttributeKeys</name>.
                            <name>Orientation</name>
                        </name>
                    </type>
                    <name>oldValue</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name><name>AttributeKeys</name>.
                            <name>Orientation</name>
                        </name>
                    </type>
                    <name>newValue</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Creates a new instance. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>TriangleRotationHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>TriangleFigure</name>
                            </type>
                            <name>owner</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>owner</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isCombinableWith</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Handle</name>
                            </type>
                            <name>h</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name><name>Point2D</name>.
                        <name>Double</name>
                    </name>
                </type>
                <name>getLocation</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>r</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getOwner</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>getBounds</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>Point2D</name>.
                                    <name>Double</name>
                                </name>
                            </type>
                            <name>p</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>offset</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getHandlesize</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <switch>switch
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>ORIENTATION</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name>getOwner</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>NORTH</name>
                                </expr>
                                :
                            </case>
                            <default>default :
                                <expr_stmt>
                                    <expr>
                                        <name>p</name>
                                        = new
                                        <call>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>x</name>
                                                        </name>
                                                        +
                                                        <name><name>r</name>.
                                                            <name>width</name>
                                                        </name>
                                                        / 2d
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                        +
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </default>
                            <case>case
                                <expr>
                                    <name>NORTH_EAST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>p</name>
                                        = new
                                        <call>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>x</name>
                                                        </name>
                                                        +
                                                        <name><name>r</name>.
                                                            <name>width</name>
                                                        </name>
                                                        -
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                        +
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>EAST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>p</name>
                                        = new
                                        <call>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>x</name>
                                                        </name>
                                                        +
                                                        <name><name>r</name>.
                                                            <name>width</name>
                                                        </name>
                                                        -
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                        +
                                                        <name><name>r</name>.
                                                            <name>height</name>
                                                        </name>
                                                        / 2d
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_EAST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>p</name>
                                        = new
                                        <call>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>x</name>
                                                        </name>
                                                        +
                                                        <name><name>r</name>.
                                                            <name>width</name>
                                                        </name>
                                                        -
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                        +
                                                        <name><name>r</name>.
                                                            <name>height</name>
                                                        </name>
                                                        -
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>p</name>
                                        = new
                                        <call>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>x</name>
                                                        </name>
                                                        +
                                                        <name><name>r</name>.
                                                            <name>width</name>
                                                        </name>
                                                        / 2d
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                        +
                                                        <name><name>r</name>.
                                                            <name>height</name>
                                                        </name>
                                                        -
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>SOUTH_WEST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>p</name>
                                        = new
                                        <call>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>x</name>
                                                        </name>
                                                        +
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                        +
                                                        <name><name>r</name>.
                                                            <name>height</name>
                                                        </name>
                                                        -
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>WEST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>p</name>
                                        = new
                                        <call>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>x</name>
                                                        </name>
                                                        +
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                        +
                                                        <name><name>r</name>.
                                                            <name>height</name>
                                                        </name>
                                                        / 2d
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>NORTH_WEST</name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>p</name>
                                        = new
                                        <call>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>x</name>
                                                        </name>
                                                        +
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>r</name>.
                                                            <name>y</name>
                                                        </name>
                                                        +
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>
                    <return>return
                        <expr>
                            <name>p</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Rectangle</name>
                </type>
                <name>basicGetBounds</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>p</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>view</name>.
                                            <name>drawingToView</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getLocation</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Rectangle</name>
                            </type>
                            <name>r</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Rectangle</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>p</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>r</name>.
                                    <name>grow</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getHandlesize</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            / 2
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getHandlesize</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            / 2
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>r</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>trackStart</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>modifiersEx</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>oldValue</name>
                            =
                            <call>
                                <name><name>ORIENTATION</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getOwner</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>centerBox</name>
                            =
                            <call>
                                <name><name>view</name>.
                                    <name>drawingToView</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getOwner</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getBounds</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>centerBox</name>.
                                    <name>grow</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>centerBox</name>.
                                                <name>width</name>
                                            </name>
                                            / -3
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>centerBox</name>.
                                                <name>height</name>
                                            </name>
                                            / -3
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>trackStep</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>lead</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>modifiersEx</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Rectangle</name>
                            </type>
                            <name>leadRect</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Rectangle</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>lead</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <switch>switch
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>Geom</name>.
                                        <name>outcode</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>centerBox</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>leadRect</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name><name>Geom</name>.
                                        <name>OUT_TOP</name>
                                    </name>
                                </expr>
                                :
                            </case>
                            <default>default :
                                <expr_stmt>
                                    <expr>
                                        <name>newValue</name>
                                        =
                                        <name><name>AttributeKeys</name>.<name>Orientation</name>.
                                            <name>NORTH</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </default>
                            <case>case
                                <expr>
                                    <name><name>Geom</name>.
                                        <name>OUT_TOP</name>
                                    </name>
                                    |
                                    <name><name>Geom</name>.
                                        <name>OUT_RIGHT</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>newValue</name>
                                        =
                                        <name><name>AttributeKeys</name>.<name>Orientation</name>.
                                            <name>NORTH_EAST</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Geom</name>.
                                        <name>OUT_RIGHT</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>newValue</name>
                                        =
                                        <name><name>AttributeKeys</name>.<name>Orientation</name>.
                                            <name>EAST</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Geom</name>.
                                        <name>OUT_BOTTOM</name>
                                    </name>
                                    |
                                    <name><name>Geom</name>.
                                        <name>OUT_RIGHT</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>newValue</name>
                                        =
                                        <name><name>AttributeKeys</name>.<name>Orientation</name>.
                                            <name>SOUTH_EAST</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Geom</name>.
                                        <name>OUT_BOTTOM</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>newValue</name>
                                        =
                                        <name><name>AttributeKeys</name>.<name>Orientation</name>.
                                            <name>SOUTH</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Geom</name>.
                                        <name>OUT_BOTTOM</name>
                                    </name>
                                    |
                                    <name><name>Geom</name>.
                                        <name>OUT_LEFT</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>newValue</name>
                                        =
                                        <name><name>AttributeKeys</name>.<name>Orientation</name>.
                                            <name>SOUTH_WEST</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Geom</name>.
                                        <name>OUT_LEFT</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>newValue</name>
                                        =
                                        <name><name>AttributeKeys</name>.<name>Orientation</name>.
                                            <name>WEST</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Geom</name>.
                                        <name>OUT_TOP</name>
                                    </name>
                                    |
                                    <name><name>Geom</name>.
                                        <name>OUT_LEFT</name>
                                    </name>
                                </expr>
                                :
                                <expr_stmt>
                                    <expr>
                                        <name>newValue</name>
                                        =
                                        <name><name>AttributeKeys</name>.<name>Orientation</name>.
                                            <name>NORTH_WEST</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>
                    <comment type="line">// FIXME - Add undo redo support</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>ORIENTATION</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getOwner</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newValue</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>updateBounds</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>draw</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>drawDiamond</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>g</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Color</name>.
                                                <name>yellow</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Color</name>.
                                                <name>black</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>trackEnd</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Point</name>
                            </type>
                            <name>lead</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>modifiersEx</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>newValue</name>
                                !=
                                <name>oldValue</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireUndoableEditHappened</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>AttributeChangeEdit</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>getOwner</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>ORIENTATION</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>oldValue</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>newValue</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
